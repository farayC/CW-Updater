

-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	ALL HISTORICAL BATTLE SCRIPTS FROM ROME 2 AND ATTILA CAN BE FOUND IN THIS FILE
--	EACH SCRIPT WILL HAVE A TITLE, EG "C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\an_adrianople\an_cutscenes.lua" SO YOU KNOW WHAT FILE IT CAME FROM
--	THIS IS NOT NECESSARILY THE BEST WAY TO SEARCH, PLEASE ALSO SEE: https://drive.google.com/drive/folders/1v5Fq0EyePylc1BCyYFdY3vbEq4JDzTW8?usp=sharing
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

system.ClearRequiredFiles();
require "lua_scripts.Battle_Script_Header";

-- declare battlemanager object
bm = battle_manager:new(empire_battle:new());

-- get battle name from folder, and print header
battle_name, battle_shortform = get_folder_name_and_shortform();

-- load in other script files associated with this battle
package.path = package.path .. ";data/Script/" .. battle_name .. "/?.lua";

require (battle_shortform .. "_Cutscenes");

gb = generated_battle:new(
	true,                                      -- screen starts black. Should match the prepare_for_fade_in flag in the battle xml
	true,                                      -- prevents deployment. Set to false if you want the player to be able to deploy.
	function() Play_Cutscene_Intro() end,      -- intro cutscene callback. Supply a function that runs your intro cutscene here
	false                                      -- debug mode
);

ga_eastrome_01 = gb:get_army(1, 1);

ga_vandals_01 = gb:get_army(2, 1);


-- fade camera in from black on battle start
gb:fade_in_on_message("cutscene_ended", 0.5);


-- advice on battle start
gb:advice_on_message("cutscene_ended", "Att.HB.AD.001", 5000);

-- make army attack on battle start
ga_vandals_01:defend_on_message("cutscene_ended", 140, 130, 100);


-- advice on player's general dying
ga_eastrome_01:message_on_commander_death("player_general_dies");
gb:advice_on_message("player_general_dies", "Att.HB.AD.004", 5000);


-- advice on enemy general dying
ga_vandals_01:message_on_commander_death("enemy_general_dies");
gb:advice_on_message("enemy_general_dies", "Att.HB.AD.005", 5000);


-- advice on player winning
ga_eastrome_01:message_on_victory("player_wins");
gb:advice_on_message("player_wins", "Att.HB.AD.002");


-- advice on player losing
ga_eastrome_01:message_on_defeat("player_loses");
gb:advice_on_message("player_loses", "Att.HB.AD.003");






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\an_adrianople\an_cutscenes.lua
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	CUTSCENES SCRIPT
--
--	Declare intro and other cutscenes
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------


Cutscene_Intro = cutscene:new(
	"Cutscene_Intro", 							-- unique string name for cutscene
	UC_Vgt_01_All, 								-- unitcontroller over player's army
	39500, 										-- duration of cutscene in ms
	function() Start_Battle() end 				-- what to call when cutscene is finished
);


POS_Cam_Cutscene_Intro_Final = v(-36.6, 470.7, 145.6);
Targ_Cam_Cutscene_Intro_Final = v(-69.8, 420.8, 28.3);

cam = Cutscene_Intro:camera();
subtitles = Cutscene_Intro:subtitles();
subtitles:set_alignment("bottom_centre");
subtitles:clear();

Cutscene_Intro:set_skippable(true, function() Skip_Cutscene_Intro() end);
Cutscene_Intro:set_skip_camera(POS_Cam_Cutscene_Intro_Final, Targ_Cam_Cutscene_Intro_Final);
-- Cutscene_Intro:set_debug();


function Play_Cutscene_Intro()

	local roman_bearing_override = r_to_d(0.33);
	local visi_bearing_override = 3.39;

	SFX_Att_HB_AN_Intro_03 = new_sfx("Play_Att_HB_AN_Intro_03_1");
	SFX_Att_HB_AN_Intro_04 = new_sfx("Play_Att_HB_AN_Intro_04_1");
	SFX_Att_HB_AN_Intro_05 = new_sfx("Play_Att_HB_AN_Intro_05_1");
	SFX_Att_HB_AN_Intro_06 = new_sfx("Play_Att_HB_AN_Intro_06_1");
	
	Cutscene_Intro:action(function() cam:fade(false, 0.5) end, 0);
	
	Cutscene_Intro:action(
		function()
			for i = 1, #SUnits_Rom_All do
				local current_sunit = SUnits_Rom_All[i];
				set_visible(current_sunit, true);
				current_sunit:goto_location_offset(0, 70, false, roman_bearing_override);
			end;
		end,
		0
	);
	
	
	Cutscene_Intro:action(function() cam:move_to(v(-362.2, 380.7, 514.6), v(-368.1, 378.8, 562.1), 0, true, 30, 10) end, 0);
	Cutscene_Intro:action(function() cam:move_to(v(-362.2, 380.7, 514.6), v(-368.1, 378.8, 562.1), 8, true, 28, 10) end, 0);
	
	Cutscene_Intro:action(
		function()
			if not Launched_From_Prologue then
				-- 9th August, AD378
				subtitles:set_text("Att.HB.AN.Intro_01");
			else
				-- Adrianopolis, Thracia.
				subtitles:set_text("Att.HB.AN.Intro_02");
			end;
		end,
		3000
	);
	
	Cutscene_Intro:action(function() subtitles:clear() end, 6000);
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 6000);
		
	-- The Emperor Valens is personally leading a Roman army towards Adrianople in an effort to crush the Goths.
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.AN.Intro_03") end, 7000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Att_HB_AN_Intro_03) end, 7000);
	
	Cutscene_Intro:action(function() cam:move_to(v(-62.7, 347.8, -434.1), v(-101.6, 333.4, -458.3), 0, true, 50, 0) end, 7000);
	Cutscene_Intro:action(function() cam:move_to(v(-62.7, 347.8, -434.1), v(-105.8, 333.4, -449.7), 5, true, 50, 0) end, 7000);
	
	Cutscene_Intro:action(
		function() 	
			local h_camera_bearing = 20;
			local v_camera_bearing = 5;
			local camera_distance = 4;
			local commander_height = 1.1;
			local unit_speed = 1.65;
			
			local tracking_time_offset = 0;
			local tracking_time = 6;
			
			local change_in_terrain_height = 1.2;
			
			-- compute current commander/camera positions and future commander/camera positions
			local current_commander_pos = predict_commander_position(SUnit_Rom_01.unit, unit_speed, tracking_time_offset, commander_height, roman_bearing_override);
			local current_camera_pos = get_tracking_offset(current_commander_pos, SUnit_Rom_01.unit:bearing() + h_camera_bearing, v_camera_bearing, camera_distance);
			
			local future_commander_pos = predict_commander_position(SUnit_Rom_01.unit, unit_speed, tracking_time, commander_height, roman_bearing_override);
			local future_camera_pos = get_tracking_offset(future_commander_pos, SUnit_Rom_01.unit:bearing() + h_camera_bearing, v_camera_bearing, camera_distance);
			
			-- compensate for terrain height change
			future_commander_pos = v_offset(future_commander_pos, 0, change_in_terrain_height, 0);
			future_camera_pos = v_offset(future_camera_pos, 0, change_in_terrain_height, 0);
			
			bm:out("current_commander_pos is " .. v_to_s(current_commander_pos) .. ", current_camera_pos is " .. v_to_s(current_camera_pos));
			bm:out("future_commander_pos is " .. v_to_s(future_commander_pos) .. ", future_camera_pos is " .. v_to_s(future_camera_pos));
						
			cam:move_to(current_camera_pos, current_commander_pos, 0, true, 25);
			cam:move_to(future_camera_pos, future_commander_pos, tracking_time - tracking_time_offset, true, 28);
		end, 
		11000
	);
	
	Cutscene_Intro:action(
		function()
			for i = 2, #SUnits_Vgt_Main do		-- not first unit
				local current_sunit = SUnits_Vgt_Main[i];
				
				if current_sunit.name == "1:1:Vgt_24" or current_sunit.name == "1:1:Vgt_25" then
					current_sunit:teleport_to_start_location_offset(0, -43, visi_bearing_override);
				else
					current_sunit:teleport_to_start_location_offset(0, -15, visi_bearing_override);
				end;
				current_sunit:goto_start_location(true);
			end;
		end,
		13000
	);

	Cutscene_Intro:action(function() subtitles:clear() end, 14000);	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 14000);
	
	-- Outnumbered, the Goths are encamped on top of a hill. Despite marching all day, the Romans have numerical superiority and move to attack.
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.AN.Intro_04") end, 15000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Att_HB_AN_Intro_04) end, 15000);
	
	Cutscene_Intro:action(function() cam:move_to(v(-99.7, 426.7, 85.5), v(-55.8, 420.0, 67.3), 0, true, 45) end, 15000);
	Cutscene_Intro:action(function() cam:move_to(v(-99.7, 426.7, 85.5), v(-60.4, 421.4, 58.6), 3, true, 45) end, 15000);
	
	Cutscene_Intro:action(function() cam:move_to(v(-72.4, 423.0, 40.0), v(-62.3, 420.7, 86.8), 0, true, 30) end, 16700);
	Cutscene_Intro:action(function() cam:move_to(v(-72.4, 423.7, 40.0), v(-62.4, 419.6, 86.7), 6, true, 32) end, 16700);
	
	Cutscene_Intro:action(function() cam:move_to(v(-66.7, 426.0, 58.9), v(-69.1, 416.0, 13.2), 0, true, 35) end, 18500);
	Cutscene_Intro:action(function() cam:move_to(v(-66.7, 431.7, 58.9), v(-69.1, 421.8, 13.2), 6.5, false, 35) end, 18500);

	Cutscene_Intro:action(function() subtitles:clear() end, 24500);	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 24500);
	
	-- Yet unknown to the Romans the Gothic cavalry is not far away. They will surely return to the camp in time.
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.AN.Intro_05") end, 25500);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Att_HB_AN_Intro_05) end, 25500);
	
	Cutscene_Intro:action(function() cam:move_to(v(-87.2, 331.2, -448.7), v(-134.5, 323.0, -448.3), 0, true, 37) end, 25500);
	
	Cutscene_Intro:action(function() Teleport_Visigoths_To_Battle_Start_Position() end, 26000);
	
	Cutscene_Intro:action(function() cam:move_to(v(-149.3, 324.4, -530.7), v(-145.5, 327.4, -483.0), 0, true, 35) end, 29500);
	Cutscene_Intro:action(function() cam:move_to(v(-149.3, 328.8, -530.7), v(-145.5, 331.7, -483.0), 8, true, 35) end, 29500);
	
	Cutscene_Intro:action(function() subtitles:clear() end, 32500);	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 32500);
			
	-- The Goths must hold out against the Roman attack until their mounted reinforcements arrive.
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.AN.Intro_06") end, 33500);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Att_HB_AN_Intro_06) end, 33500);
	
	Cutscene_Intro:action(function() Set_Visigoths_Cheering(true) end, 33500);
	
	Cutscene_Intro:action(function() cam:move_to(v(-200.5, 429.5, 25.0), v(-156.0, 422.6, 41.4), 0, true, 50) end, 33500);	
	Cutscene_Intro:action(function() cam:move_to(POS_Cam_Cutscene_Intro_Final, Targ_Cam_Cutscene_Intro_Final, 4, false, 0) end, 35500);
	
	Cutscene_Intro:action(function() Teleport_Romans_To_Battle_Start_Position() end, 33500);

	Cutscene_Intro:action(function() subtitles:clear() end, 39500);	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 39500);
	
	Cutscene_Intro:start();
end;


function Skip_Cutscene_Intro()

	cam:fade(true, 0);
	
	Teleport_Visigoths_To_Battle_Start_Position();
	Teleport_Romans_To_Battle_Start_Position();
	
	stop_sound(SFX_Att_HB_AN_Intro_02);
	stop_sound(SFX_Att_HB_AN_Intro_03);
	stop_sound(SFX_Att_HB_AN_Intro_04);
	stop_sound(SFX_Att_HB_AN_Intro_05);
		
	bm:callback(function() cam:fade(false, 0.5) end, 1000);
end;





-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	Cavalry Reinforcement Cutscene
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------


Cutscene_Cavalry_Reinforcement = cutscene:new(
	"Cutscene_Cavalry_Reinforcement", 							-- unique string name for cutscene
	UC_Vgt_01_All, 												-- unitcontroller over player's army
	4500, 														-- duration of cutscene in ms
	function() Cavalry_Reinforcement_Cutscene_Complete() end	-- what to call when cutscene is finished
);

Cutscene_Cavalry_Reinforcement:set_close_advisor_on_end(false);
Cutscene_Cavalry_Reinforcement:set_restore_cam(2, v(-139.5, 480.9, 154.4), v(-108.3, 417.0, 5.0));
Cutscene_Cavalry_Reinforcement:set_skippable(true, function() Skip_Cutscene_Cavalry_Reinforcement() end);
-- Cutscene_Cavalry_Reinforcement:set_debug();

function Play_Cavalry_Reinforcement_Cutscene()
	Cutscene_Cavalry_Reinforcement:action(function() cam:fade(false, 0.5) end, 0);
	
	Cutscene_Cavalry_Reinforcement:action(function() cam:move_to(v(-626.7, 369.4, 301.5), v(-730.7, 341.2, 330.3), 0, true, 42) end, 0);
	Cutscene_Cavalry_Reinforcement:action(function() cam:move_to(v(-626.7, 370.4, 301.5), v(-730.7, 336.1, 330.3), 6, true, 45) end, 0);
	
	Cutscene_Cavalry_Reinforcement:action(function() cam:move_to(v(-581.6, 390.7, 321.3), v(-666.0, 360.0, 325.6), 0, true, 50) end, 3500);
			
	Cutscene_Cavalry_Reinforcement:start();
	
	bm:callback(
		function()
			-- "Our cavalry returns, Chieftain! Put them to work against the Romans, quickly!"
			bm:queue_advisor("Att.Pro.Adrianople.AD.003", 6000);
		end,
		1000
	);
end;


function Skip_Cutscene_Cavalry_Reinforcement()
	cam:fade(true, 0);
		
	bm:callback(function() cam:fade(false, 0.5) end, 1000);
end;


-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	Outro Cutscene
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

Cutscene_Victory_Duration = 30000;

Cutscene_Victory = cutscene:new(
	"Cutscene_Victory", 							-- unique string name for cutscene
	UC_Vgt_01_All, 									-- unitcontroller over player's army
	Cutscene_Victory_Duration,						-- duration of cutscene in ms
	function() Cutscene_Victory_Completed() end		-- what to call when cutscene is finished
);

Cutscene_Victory:set_skippable(false);
-- Cutscene_Victory:set_debug();

function Play_Victory_Cutscene()

	bm:out("Play_Victory_Cutscene() called");
	
	SFX_Att_HB_AN_Outro_01 = new_sfx("Play_Att_HB_AN_Outro_01_1");
	SFX_Att_HB_AN_Outro_02 = new_sfx("Play_Att_HB_AN_Outro_02_1");
	SFX_Att_HB_AN_Outro_03 = new_sfx("Play_Att_HB_AN_Outro_03_1");

	Cutscene_Victory:action(function() cam:move_to(v(-107.9, 396.6, -85.7), v(-112.2, 379.9, -129.1), 0, true, 45) end, 0);
	Cutscene_Victory:action(function() cam:move_to(v(-107.9, 396.6, -85.7), v(-114.3, 384.5, -130.6), 6, true, 43) end, 0);
	
	Cutscene_Victory:action(function() cam:fade(false, 0.5) end, 0);
		
	-- The death of Valens and the destruction of his army meant the survival of the Gothic people within the Empire.
	Cutscene_Victory:action(function() subtitles:set_text("Att.HB.AN.Outro_01") end, 500);
	Cutscene_Victory:action(function() Cutscene_Victory:play_sound(SFX_Att_HB_AN_Outro_01) end, 500);
	
	Cutscene_Victory:action(function() cam:move_to(v(-88.0, 434.6, 36.5), v(-95.7, 421.6, -8.0), 0, false, 35) end, 5000);
	Cutscene_Victory:action(function() cam:move_to(v(-88.0, 425.3, 36.5), v(-95.7, 412.2, -8.0), 3, false, 40) end, 6000);
	
	Cutscene_Victory:action(function() subtitles:clear() end, 8000);
	Cutscene_Victory:action(function() Cutscene_Victory:wait_for_vo() end, 8000);
		
	-- The Romans would no longer remain unchallenged within their own borders. The invasion of the Goths would foreshadow a wider migration, driven by the Huns, into Roman lands.
	Cutscene_Victory:action(function() subtitles:set_text("Att.HB.AN.Outro_02") end, 9000);
	Cutscene_Victory:action(function() Cutscene_Victory:play_sound(SFX_Att_HB_AN_Outro_02) end, 9000);
	
	-- Cutscene_Victory:action(function() Move_Visigothic_Cavalry_Cutscene_Battle_Victory_01() end, 3000);
	
	Cutscene_Victory:action(function() cam:move_to(v(-51.0, 420.4, -8.1), v(-42.7, 416.7, 38.0), 0, false, 40) end, 10000);
	
	Cutscene_Victory:action(function() Move_Visigothic_Cavalry_Cutscene_Battle_Victory_02() end, 3500);
	
	Cutscene_Victory:action(function() cam:move_to(v(-183.0, 422.0, -10.5), v(-198.7, 431.1, 102.1), 0, false, 48) end, 12500);
	Cutscene_Victory:action(function() cam:move_to(v(-183.0, 423.2, -10.5), v(-198.7, 427.6, 102.4), 4, true, 50) end, 12500);
	
	Cutscene_Victory:action(function() Move_Visigothic_Cavalry_Cutscene_Battle_Victory_02() end, 13500);	
	
	Cutscene_Victory:action(function() cam:move_to(v(-186.0, 426.3, 6.5), v(-161.4, 394.1, -98.3), 0, false, 45) end, 15000);
	Cutscene_Victory:action(function() cam:move_to(v(-186.0, 429.7, 6.5), v(-161.4, 397.5, -98.3), 8, true, 45) end, 15000);

	Cutscene_Victory:action(function() subtitles:clear() end, 21000);	
	Cutscene_Victory:action(function() Cutscene_Victory:wait_for_vo() end, 21000);
		
	-- These migrations would lead to the sack of Rome and contribute to the collapse of the Western Empire.
	Cutscene_Victory:action(function() subtitles:set_text("Att.HB.AN.Outro_03") end, 22000);
	Cutscene_Victory:action(function() Cutscene_Victory:play_sound(SFX_Att_HB_AN_Outro_03) end, 22000);
	
	Cutscene_Victory:action(function() cam:move_to(v(-139.6, 369.6, -193.2), v(-147.6, 373.1, -146.1), 0, true, 45) end, 22000);
	-- Cutscene_Victory:action(function() cam:move_to(v(-139.6, 369.6, -193.2), v(-147.6, 373.1, -146.1), 4, true, 45) end, 22000);
	
	Cutscene_Victory:action(function() cam:move_to(v(-128.4, 330.5, -439.0), v(-126.9, 334.5, -391.3), 0, true, 45) end, 25500);
	Cutscene_Victory:action(function() cam:move_to(v(-128.4, 335.8, -439.0), v(-126.9, 339.8, -391.3), 8, true, 45) end, 25500);
	
	Cutscene_Victory:action(function() cam:fade(true, 1.5) end, Cutscene_Victory_Duration - 1500);
	
	Cutscene_Victory:action(function() subtitles:clear() end, Cutscene_Victory_Duration);
	Cutscene_Victory:action(function() Cutscene_Victory:wait_for_vo() end, Cutscene_Victory_Duration);
		
	Cutscene_Victory:start();
end;






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\an_adrianople\an_declarations.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	DECLARATIONS SCRIPT
--
--	Declare alliances, armies, convex areas and anything else of note in here
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

cam = bm:camera();
svr = ScriptedValueRegistry:new();
Launched_From_Prologue = svr:LoadBool("Adrianople_Launched_From_Prologue") or false;	-- set to true for debugging

--
-- Army Declarations
--

Alliances = bm:alliances();

Alliance_Vgt = Alliances:item(1);
Army_Vgt_01 = Alliance_Vgt:armies():item(1);

Alliance_Rom = Alliances:item(2); 
Army_Rom_01 = Alliance_Rom:armies():item(1);




--
-- Visigoth Units
--

SUnit_Vgt_01 = script_unit:new(Army_Vgt_01, "Vgt_01");
SUnit_Vgt_02 = script_unit:new(Army_Vgt_01, "Vgt_02");
SUnit_Vgt_03 = script_unit:new(Army_Vgt_01, "Vgt_03");
SUnit_Vgt_04 = script_unit:new(Army_Vgt_01, "Vgt_04");
SUnit_Vgt_05 = script_unit:new(Army_Vgt_01, "Vgt_05");
SUnit_Vgt_06 = script_unit:new(Army_Vgt_01, "Vgt_06");
SUnit_Vgt_07 = script_unit:new(Army_Vgt_01, "Vgt_07");
SUnit_Vgt_08 = script_unit:new(Army_Vgt_01, "Vgt_08");
SUnit_Vgt_09 = script_unit:new(Army_Vgt_01, "Vgt_09");

SUnit_Vgt_20 = script_unit:new(Army_Vgt_01, "Vgt_20");
SUnit_Vgt_21 = script_unit:new(Army_Vgt_01, "Vgt_21");
SUnit_Vgt_22 = script_unit:new(Army_Vgt_01, "Vgt_22");
SUnit_Vgt_23 = script_unit:new(Army_Vgt_01, "Vgt_23");
SUnit_Vgt_24 = script_unit:new(Army_Vgt_01, "Vgt_24");
SUnit_Vgt_25 = script_unit:new(Army_Vgt_01, "Vgt_25");

SUnit_Vgt_30 = script_unit:new(Army_Vgt_01, "Vgt_30");
SUnit_Vgt_31 = script_unit:new(Army_Vgt_01, "Vgt_31");
SUnit_Vgt_32 = script_unit:new(Army_Vgt_01, "Vgt_32");
SUnit_Vgt_33 = script_unit:new(Army_Vgt_01, "Vgt_33");
SUnit_Vgt_34 = script_unit:new(Army_Vgt_01, "Vgt_34");
SUnit_Vgt_35 = script_unit:new(Army_Vgt_01, "Vgt_35");
SUnit_Vgt_36 = script_unit:new(Army_Vgt_01, "Vgt_36");


UC_Vgt_01_All = unitcontroller_from_army(Army_Vgt_01);

SUnits_Vgt_All = {
	SUnit_Vgt_01,
	SUnit_Vgt_02,
	SUnit_Vgt_03,
	SUnit_Vgt_04,
	SUnit_Vgt_05,
	SUnit_Vgt_06,
	SUnit_Vgt_07,
	SUnit_Vgt_08,
	SUnit_Vgt_09,
	SUnit_Vgt_20,
	SUnit_Vgt_21,
	SUnit_Vgt_22,
	SUnit_Vgt_23,
	SUnit_Vgt_24,
	SUnit_Vgt_25,
	SUnit_Vgt_30,
	SUnit_Vgt_31,
	SUnit_Vgt_32,
	SUnit_Vgt_33,
	SUnit_Vgt_34,
	SUnit_Vgt_35,
	SUnit_Vgt_36
};

SUnits_Vgt_Main = {
	SUnit_Vgt_01,
	SUnit_Vgt_02,
	SUnit_Vgt_03,
	SUnit_Vgt_04,
	SUnit_Vgt_05,
	SUnit_Vgt_06,
	SUnit_Vgt_07,
	SUnit_Vgt_08,
	SUnit_Vgt_09,
	SUnit_Vgt_20,
	SUnit_Vgt_21,
	SUnit_Vgt_22,
	SUnit_Vgt_23,
	SUnit_Vgt_24,
	SUnit_Vgt_25
};

SUnits_Vgt_Cav = {
	SUnit_Vgt_30,
	SUnit_Vgt_31,
	SUnit_Vgt_32,
	SUnit_Vgt_33,
	SUnit_Vgt_34,
	SUnit_Vgt_35,
	SUnit_Vgt_36
};

SUnits_Vgt_Cav_Battle_Victory = {
	SUnit_Vgt_30,
	SUnit_Vgt_31,
	SUnit_Vgt_32,
	SUnit_Vgt_33,
	SUnit_Vgt_34,
	SUnit_Vgt_35,
	SUnit_Vgt_36
};

SUnits_Vgt_Ranged = {
	SUnit_Vgt_20,
	SUnit_Vgt_21,
	SUnit_Vgt_22,
	SUnit_Vgt_23,
	SUnit_Vgt_24,
	SUnit_Vgt_25
};

-- cavalry teleport positions
SUnit_Vgt_30.POS_Battle_Start = v(-725.621,351.102)
SUnit_Vgt_30.Orient_Battle_Start = r_to_d(2.07145)
SUnit_Vgt_30.Width_Battle_Start = 26.5842

SUnit_Vgt_31.POS_Battle_Start = v(-672.717,344.84)
SUnit_Vgt_31.Orient_Battle_Start = r_to_d(1.82697)
SUnit_Vgt_31.Width_Battle_Start = 23.5633

SUnit_Vgt_32.POS_Battle_Start = v(-726.598,307.073)
SUnit_Vgt_32.Orient_Battle_Start = r_to_d(2.07471)
SUnit_Vgt_32.Width_Battle_Start = 21.2084

SUnit_Vgt_33.POS_Battle_Start = v(-681.03,373.482)
SUnit_Vgt_33.Orient_Battle_Start = r_to_d(2.07979)
SUnit_Vgt_33.Width_Battle_Start = 26.194

SUnit_Vgt_34.POS_Battle_Start = v(-729.583,282.426)
SUnit_Vgt_34.Orient_Battle_Start = r_to_d(2.23194)
SUnit_Vgt_34.Width_Battle_Start = 22.5936

SUnit_Vgt_35.POS_Battle_Start = v(-673.175,321.919)
SUnit_Vgt_35.Orient_Battle_Start = r_to_d(2.07826)
SUnit_Vgt_35.Width_Battle_Start = 20.7567

SUnit_Vgt_36.POS_Battle_Start = v(-712.332,322.765)
SUnit_Vgt_36.Orient_Battle_Start = r_to_d(2.08804)
SUnit_Vgt_36.Width_Battle_Start = 20.6039


--
-- Roman Units
--


SUnit_Rom_01 = script_unit:new(Army_Rom_01, "Rom_01");
SUnit_Rom_02 = script_unit:new(Army_Rom_01, "Rom_02");
SUnit_Rom_03 = script_unit:new(Army_Rom_01, "Rom_03");
SUnit_Rom_04 = script_unit:new(Army_Rom_01, "Rom_04");
SUnit_Rom_05 = script_unit:new(Army_Rom_01, "Rom_05");

SUnit_Rom_10 = script_unit:new(Army_Rom_01, "Rom_10");
SUnit_Rom_11 = script_unit:new(Army_Rom_01, "Rom_11");
SUnit_Rom_12 = script_unit:new(Army_Rom_01, "Rom_12");
SUnit_Rom_13 = script_unit:new(Army_Rom_01, "Rom_13");
SUnit_Rom_14 = script_unit:new(Army_Rom_01, "Rom_14");
SUnit_Rom_15 = script_unit:new(Army_Rom_01, "Rom_15");
SUnit_Rom_16 = script_unit:new(Army_Rom_01, "Rom_16");
SUnit_Rom_17 = script_unit:new(Army_Rom_01, "Rom_17");
SUnit_Rom_18 = script_unit:new(Army_Rom_01, "Rom_18");
SUnit_Rom_19 = script_unit:new(Army_Rom_01, "Rom_19");
SUnit_Rom_20 = script_unit:new(Army_Rom_01, "Rom_20");
SUnit_Rom_21 = script_unit:new(Army_Rom_01, "Rom_21");
SUnit_Rom_22 = script_unit:new(Army_Rom_01, "Rom_22");
SUnit_Rom_23 = script_unit:new(Army_Rom_01, "Rom_23");
SUnit_Rom_24 = script_unit:new(Army_Rom_01, "Rom_24");
SUnit_Rom_25 = script_unit:new(Army_Rom_01, "Rom_25");
SUnit_Rom_26 = script_unit:new(Army_Rom_01, "Rom_26");
SUnit_Rom_27 = script_unit:new(Army_Rom_01, "Rom_27");

SUnit_Rom_30 = script_unit:new(Army_Rom_01, "Rom_30");
SUnit_Rom_31 = script_unit:new(Army_Rom_01, "Rom_31");
SUnit_Rom_32 = script_unit:new(Army_Rom_01, "Rom_32");
SUnit_Rom_33 = script_unit:new(Army_Rom_01, "Rom_33");
SUnit_Rom_34 = script_unit:new(Army_Rom_01, "Rom_34");
SUnit_Rom_35 = script_unit:new(Army_Rom_01, "Rom_35");

UC_Rom_01_All = unitcontroller_from_army(Army_Rom_01);
UC_Rom_01_All:take_control();

SUnits_Rom_All = {
	SUnit_Rom_01,
	SUnit_Rom_02,
	SUnit_Rom_03,
	SUnit_Rom_04,
	SUnit_Rom_05,
	SUnit_Rom_10,
	SUnit_Rom_11,
	SUnit_Rom_12,
	SUnit_Rom_13,
	SUnit_Rom_14,
	SUnit_Rom_15,
	SUnit_Rom_16,
	SUnit_Rom_17,
	SUnit_Rom_18,
	SUnit_Rom_19,
	SUnit_Rom_20,
	SUnit_Rom_21,
	SUnit_Rom_22,
	SUnit_Rom_23,
	SUnit_Rom_24,
	SUnit_Rom_25,
	SUnit_Rom_26,
	SUnit_Rom_27,
	SUnit_Rom_30,
	SUnit_Rom_31,
	SUnit_Rom_32,
	SUnit_Rom_33,
	SUnit_Rom_34,
	SUnit_Rom_35
};

SUnits_Rom_Ranged = {
	SUnit_Rom_30,
	SUnit_Rom_31,
	SUnit_Rom_32,
	SUnit_Rom_33
};

SUnits_Rom_Main = {
	SUnit_Rom_01,
	SUnit_Rom_02,
	SUnit_Rom_03,
	SUnit_Rom_04,
	SUnit_Rom_05,
	SUnit_Rom_11,
	SUnit_Rom_12,
	SUnit_Rom_13,
	SUnit_Rom_14,
	SUnit_Rom_15,
	SUnit_Rom_16,
	SUnit_Rom_17,
	SUnit_Rom_18,
	SUnit_Rom_19,
	SUnit_Rom_21
};

SUnits_Rom_Add = {
	SUnit_Rom_10,
	SUnit_Rom_20,
	SUnit_Rom_22,
	SUnit_Rom_23,
	SUnit_Rom_24,
	SUnit_Rom_25,
	SUnit_Rom_26,
	SUnit_Rom_27,
	SUnit_Rom_34,
	SUnit_Rom_35
};

SUnits_Rom_Cav = {
	SUnit_Rom_02,
	SUnit_Rom_03,
	SUnit_Rom_04,
	SUnit_Rom_05
};



function Teleport_Visigoths_To_Battle_Start_Position()
	for i = 1, #SUnits_Vgt_Main do
		local current_sunit = SUnits_Vgt_Main[i];
		current_sunit:teleport_to_start_location();
	end;
end;


function Set_Visigoths_Cheering(value)
	if value == nil then
		value = true;
	end;
	
	if value then
		for i = 1, #SUnits_Vgt_Main do
			local current_sunit = SUnits_Vgt_Main[i];
			current_sunit.uc:start_taunting();
		end;
	else
		for i = 1, #SUnits_Vgt_Main do
			local current_sunit = SUnits_Vgt_Main[i];
			current_sunit.uc:halt();
			current_sunit.uc:release_control();
		end;
	end;
end;


function Kill_Visigothic_Cavalry()
	enable(SUnits_Vgt_Cav, true);
	
	for i = 1, #SUnits_Vgt_Cav do
		local current_sunit = SUnits_Vgt_Cav[i];
		current_sunit.uc:kill();
	end;
	
	enable(SUnits_Vgt_Cav, false);
end;


function Teleport_Romans_To_Battle_Start_Position()
	for i = 1, #SUnits_Rom_All do
		local current_sunit = SUnits_Rom_All[i];
		current_sunit:teleport_to_start_location();
	end;
end;


function Modify_Ammo(sunits, modifier)
	for i = 1, #sunits do
		refill_ammo(sunits[i].unit, modifier);
	end;
end;


function Roman_Cav_Rout_On_Casualties(value)
	for i = 1, #SUnits_Rom_Cav do
		SUnits_Rom_Cav[i]:rout_on_casualties(value);
	end;
end;



-- victory cutscene positions

SUnit_Rom_01.POS_Battle_Victory = v(-129.902,-245.146)
SUnit_Rom_01.Orient_Battle_Victory = r_to_d(-2.96145)
SUnit_Rom_01.Width_Battle_Victory = 12.8841

SUnit_Rom_02.POS_Battle_Victory = v(-47.9853,-237.923)
SUnit_Rom_02.Orient_Battle_Victory = r_to_d(-2.26224)
SUnit_Rom_02.Width_Battle_Victory = 15.3814

SUnit_Rom_03.POS_Battle_Victory = v(-104.2801,-154.224)
SUnit_Rom_03.Orient_Battle_Victory = r_to_d(2.97324)
SUnit_Rom_03.Width_Battle_Victory = 10.229

SUnit_Rom_04.POS_Battle_Victory = v(-87.544,-255.652)
SUnit_Rom_04.Orient_Battle_Victory = r_to_d(3.0764)
SUnit_Rom_04.Width_Battle_Victory = 10.957

SUnit_Rom_05.POS_Battle_Victory = v(-179.84,-363.617)
SUnit_Rom_05.Orient_Battle_Victory = r_to_d(-2.93623)
SUnit_Rom_05.Width_Battle_Victory = 8.5216

SUnit_Rom_10.POS_Battle_Victory = v(-34.9304,-187.769)
SUnit_Rom_10.Orient_Battle_Victory = r_to_d(3.07007)
SUnit_Rom_10.Width_Battle_Victory = 12.8816

SUnit_Rom_11.POS_Battle_Victory = v(-73.7362,-102.454)
SUnit_Rom_11.Orient_Battle_Victory = r_to_d(-3.08292)
SUnit_Rom_11.Width_Battle_Victory = 7.9253

SUnit_Rom_12.POS_Battle_Victory = v(-119.132,-336.934)
SUnit_Rom_12.Orient_Battle_Victory = r_to_d(-3.10554)
SUnit_Rom_12.Width_Battle_Victory = 11.1435

SUnit_Rom_13.POS_Battle_Victory = v(-148.1,-101.341)
SUnit_Rom_13.Orient_Battle_Victory = r_to_d(-2.63902)
SUnit_Rom_13.Width_Battle_Victory = 10.5171

SUnit_Rom_14.POS_Battle_Victory = v(-134.632,-92.8154)
SUnit_Rom_14.Orient_Battle_Victory = r_to_d(-2.68878)
SUnit_Rom_14.Width_Battle_Victory = 14.4634

SUnit_Rom_15.POS_Battle_Victory = v(-28.0178,-145.148)
SUnit_Rom_15.Orient_Battle_Victory = r_to_d(-2.94726)
SUnit_Rom_15.Width_Battle_Victory = 10.3777

SUnit_Rom_16.POS_Battle_Victory = v(-144.483,-130.896)
SUnit_Rom_16.Orient_Battle_Victory = r_to_d(-2.93374)
SUnit_Rom_16.Width_Battle_Victory = 12.9198

SUnit_Rom_17.POS_Battle_Victory = v(-173.789,-219.531)
SUnit_Rom_17.Orient_Battle_Victory = r_to_d(-2.95953)
SUnit_Rom_17.Width_Battle_Victory = 13.8895

SUnit_Rom_18.POS_Battle_Victory = v(-103.266,-316.057)
SUnit_Rom_18.Orient_Battle_Victory = r_to_d(2.99423)
SUnit_Rom_18.Width_Battle_Victory = 14.2529

SUnit_Rom_19.POS_Battle_Victory = v(-139.729,-313.134)
SUnit_Rom_19.Orient_Battle_Victory = r_to_d(-3.06432)
SUnit_Rom_19.Width_Battle_Victory = 14.0116

SUnit_Rom_20.POS_Battle_Victory = v(-96.208,-145.233)
SUnit_Rom_20.Orient_Battle_Victory = r_to_d(-3.06154)
SUnit_Rom_20.Width_Battle_Victory = 12.9444

SUnit_Rom_21.POS_Battle_Victory = v(-108.733,-127.688)
SUnit_Rom_21.Orient_Battle_Victory = r_to_d(-2.88168)
SUnit_Rom_21.Width_Battle_Victory = 12.4007

SUnit_Rom_22.POS_Battle_Victory = v(-75.6433,-127.596)
SUnit_Rom_22.Orient_Battle_Victory = r_to_d(3.05521)
SUnit_Rom_22.Width_Battle_Victory = 10.844

SUnit_Rom_23.POS_Battle_Victory = v(-115.001,-81.1249)
SUnit_Rom_23.Orient_Battle_Victory = r_to_d(-3.04179)
SUnit_Rom_23.Width_Battle_Victory = 10.6404

SUnit_Rom_24.POS_Battle_Victory = v(-75.6115,-61.1738)
SUnit_Rom_24.Orient_Battle_Victory = r_to_d(-2.91332)
SUnit_Rom_24.Width_Battle_Victory = 12.0385

SUnit_Rom_25.POS_Battle_Victory = v(-140.4108,-150.3663)
SUnit_Rom_25.Orient_Battle_Victory = r_to_d(-2.90852)
SUnit_Rom_25.Width_Battle_Victory = 11.9301

SUnit_Rom_26.POS_Battle_Victory = v(-122.467,-64.4542)
SUnit_Rom_26.Orient_Battle_Victory = r_to_d(-2.9881)
SUnit_Rom_26.Width_Battle_Victory = 15.5096

SUnit_Rom_27.POS_Battle_Victory = v(-81.601,-113.922)
SUnit_Rom_27.Orient_Battle_Victory = r_to_d(-2.88321)
SUnit_Rom_27.Width_Battle_Victory = 12.4627

SUnit_Rom_30.POS_Battle_Victory = v(-129.042,-196.205)
SUnit_Rom_30.Orient_Battle_Victory = r_to_d(-3.08877)
SUnit_Rom_30.Width_Battle_Victory = 18.2463

SUnit_Rom_31.POS_Battle_Victory = v(-79.0954,-211.81)
SUnit_Rom_31.Orient_Battle_Victory = r_to_d(-2.95061)
SUnit_Rom_31.Width_Battle_Victory = 21.2774

SUnit_Rom_32.POS_Battle_Victory = v(-121.148,-109.239)
SUnit_Rom_32.Orient_Battle_Victory = r_to_d(-2.93144)
SUnit_Rom_32.Width_Battle_Victory = 19.61

SUnit_Rom_33.POS_Battle_Victory = v(-69.5505,-76.7921)
SUnit_Rom_33.Orient_Battle_Victory = r_to_d(-3.09663)
SUnit_Rom_33.Width_Battle_Victory = 18.2192

SUnit_Rom_34.POS_Battle_Victory = v(-64.9878,-167.862)
SUnit_Rom_34.Orient_Battle_Victory = r_to_d(2.95042)
SUnit_Rom_34.Width_Battle_Victory = 15.2698

SUnit_Rom_35.POS_Battle_Victory = v(-135.247,-164.413)
SUnit_Rom_35.Orient_Battle_Victory = r_to_d(-2.76519)
SUnit_Rom_35.Width_Battle_Victory = 14.3373


POS_Roman_Rout_Cutscene_Battle_Victory = v(-150, -900);

function Setup_Romans_Cutscene_Battle_Victory()
	UC_Rom_01_All:morale_behavior_fearless();
	
	bm:callback(
		function()
			SUnit_Rom_01.uc:kill();
		
			for i = 2, #SUnits_Rom_All do
				local current_sunit = SUnits_Rom_All[i];
				current_sunit.uc:teleport_to_location(current_sunit.POS_Battle_Victory, current_sunit.Orient_Battle_Victory, current_sunit.Width_Battle_Victory);
				-- kill_unit_proportion(current_sunit.unit, 0.7, 0.3);
				current_sunit.uc:goto_location(POS_Roman_Rout_Cutscene_Battle_Victory, true);
				current_sunit.uc:take_control();
			end;
			--UC_Rom_01_All:morale_behavior_rout();
		end,
		200
	);
end;


SUnit_Vgt_01.POS_Battle_Victory = v(-87.4421,80.8273)
SUnit_Vgt_01.Orient_Battle_Victory = r_to_d(2.92616)
SUnit_Vgt_01.Width_Battle_Victory = 23.8623

SUnit_Vgt_02.POS_Battle_Victory = v(-0.802261,0.584638)
SUnit_Vgt_02.Orient_Battle_Victory = r_to_d(-2.52206)
SUnit_Vgt_02.Width_Battle_Victory = 24.8589

SUnit_Vgt_03.POS_Battle_Victory = v(-33.0538,8.17289)
SUnit_Vgt_03.Orient_Battle_Victory = r_to_d(-2.82837)
SUnit_Vgt_03.Width_Battle_Victory = 29.3064

SUnit_Vgt_04.POS_Battle_Victory = v(-108.967,55.5244)
SUnit_Vgt_04.Orient_Battle_Victory = r_to_d(-3.10785)
SUnit_Vgt_04.Width_Battle_Victory = 19.108

SUnit_Vgt_05.POS_Battle_Victory = v(-134.149,57.2806)
SUnit_Vgt_05.Orient_Battle_Victory = r_to_d(-3.10391)
SUnit_Vgt_05.Width_Battle_Victory = 19.3123

SUnit_Vgt_06.POS_Battle_Victory = v(-33.8146,33.7261)
SUnit_Vgt_06.Orient_Battle_Victory = r_to_d(-2.84707)
SUnit_Vgt_06.Width_Battle_Victory = 30.924

SUnit_Vgt_07.POS_Battle_Victory = v(-66.2776,43.6068)
SUnit_Vgt_07.Orient_Battle_Victory = r_to_d(-2.8464)
SUnit_Vgt_07.Width_Battle_Victory = 31.1384

SUnit_Vgt_08.POS_Battle_Victory = v(-61.7276,16.0246)
SUnit_Vgt_08.Orient_Battle_Victory = r_to_d(-2.98062)
SUnit_Vgt_08.Width_Battle_Victory = 25.1503

SUnit_Vgt_09.POS_Battle_Victory = v(-87.8662,21.8183)
SUnit_Vgt_09.Orient_Battle_Victory = r_to_d(-2.90315)
SUnit_Vgt_09.Width_Battle_Victory = 25.1798

SUnit_Vgt_20.POS_Battle_Victory = v(37.0036,-10.747)
SUnit_Vgt_20.Orient_Battle_Victory = r_to_d(-2.49617)
SUnit_Vgt_20.Width_Battle_Victory = 35.5191

SUnit_Vgt_21.POS_Battle_Victory = v(6.62445,12.2714)
SUnit_Vgt_21.Orient_Battle_Victory = r_to_d(-2.4955)
SUnit_Vgt_21.Width_Battle_Victory = 35.9516

SUnit_Vgt_22.POS_Battle_Victory = v(28.4195,-61.6222)
SUnit_Vgt_22.Orient_Battle_Victory = r_to_d(-1.82429)
SUnit_Vgt_22.Width_Battle_Victory = 30.2383

SUnit_Vgt_23.POS_Battle_Victory = v(14.0685,-27.8023)
SUnit_Vgt_23.Orient_Battle_Victory = r_to_d(-2.26473)
SUnit_Vgt_23.Width_Battle_Victory = 30.6555

SUnit_Vgt_24.POS_Battle_Victory = v(-56.1525,3.48584)
SUnit_Vgt_24.Orient_Battle_Victory = r_to_d(-2.98052)
SUnit_Vgt_24.Width_Battle_Victory = 51.5074

SUnit_Vgt_25.POS_Battle_Victory = v(-107.508,15.8007)
SUnit_Vgt_25.Orient_Battle_Victory = r_to_d(-2.90632)
SUnit_Vgt_25.Width_Battle_Victory = 39.4378

SUnit_Vgt_30.POS_Battle_Victory = v(-190.403,73.5356)
SUnit_Vgt_30.Orient_Battle_Victory = r_to_d(3.04179)
SUnit_Vgt_30.Width_Battle_Victory = 14.1622

SUnit_Vgt_31.POS_Battle_Victory = v(-205.728,68.9587)
SUnit_Vgt_31.Orient_Battle_Victory = r_to_d(3.05301)
SUnit_Vgt_31.Width_Battle_Victory = 16.1949

SUnit_Vgt_32.POS_Battle_Victory = v(-171.367,100.196)
SUnit_Vgt_32.Orient_Battle_Victory = r_to_d(3.11782)
SUnit_Vgt_32.Width_Battle_Victory = 14.686

SUnit_Vgt_33.POS_Battle_Victory = v(-225.109,110.055)
SUnit_Vgt_33.Orient_Battle_Victory = r_to_d(2.46913)
SUnit_Vgt_33.Width_Battle_Victory = 17.3834

SUnit_Vgt_34.POS_Battle_Victory = v(-202.08,134.071)
SUnit_Vgt_34.Orient_Battle_Victory = r_to_d(-3.01092)
SUnit_Vgt_34.Width_Battle_Victory = 15.966

SUnit_Vgt_35.POS_Battle_Victory = v(-253.989,140.806)
SUnit_Vgt_35.Orient_Battle_Victory = r_to_d(3.13124)
SUnit_Vgt_35.Width_Battle_Victory = 16.3162

SUnit_Vgt_36.POS_Battle_Victory = v(-246.375,105.299)
SUnit_Vgt_36.Orient_Battle_Victory = r_to_d(3.01303)
SUnit_Vgt_36.Width_Battle_Victory = 20.8131


function Setup_Visigoths_Cutscene_Battle_Victory()
	UC_Vgt_01_All:morale_behavior_fearless();
	UC_Vgt_01_All:fire_at_will(false);
	
	bm:callback(
		function()
			for i = 1, #SUnits_Vgt_All do
				local current_sunit = SUnits_Vgt_All[i];
				enable(current_sunit, true);
				current_sunit.uc:teleport_to_location(current_sunit.POS_Battle_Victory, current_sunit.Orient_Battle_Victory, current_sunit.Width_Battle_Victory);
				-- kill_unit_proportion(current_sunit.unit, 0.5, 0.4);
			end;
			Set_Visigoths_Cheering(true);
		end,
		200
	);
end;


SUnit_Vgt_30.POS_Battle_Victory_Move_02 = v(-126.2, -426.76)
SUnit_Vgt_30.Orient_Battle_Victory_Move_02 = r_to_d(3.09)
SUnit_Vgt_30.Width_Battle_Victory_Move_02 = 14

SUnit_Vgt_31.POS_Battle_Victory_Move_02 = v(-139.14, -427.41)
SUnit_Vgt_31.Orient_Battle_Victory_Move_02 = r_to_d(3.09)
SUnit_Vgt_31.Width_Battle_Victory_Move_02 = 9.91

SUnit_Vgt_32.POS_Battle_Victory_Move_02 = v(-152.03, -428.06)
SUnit_Vgt_32.Orient_Battle_Victory_Move_02 = r_to_d(3.09)
SUnit_Vgt_32.Width_Battle_Victory_Move_02 = 9.91

SUnit_Vgt_33.POS_Battle_Victory_Move_02 = v(-97.76, -425.3)
SUnit_Vgt_33.Orient_Battle_Victory_Move_02 = r_to_d(3.09)
SUnit_Vgt_33.Width_Battle_Victory_Move_02 = 15.71

SUnit_Vgt_34.POS_Battle_Victory_Move_02 = v(-112.45, -426.07)
SUnit_Vgt_34.Orient_Battle_Victory_Move_02 = r_to_d(3.09)
SUnit_Vgt_34.Width_Battle_Victory_Move_02 = 11.71

SUnit_Vgt_35.POS_Battle_Victory_Move_02 = v(-97.76, -425.3)
SUnit_Vgt_35.Orient_Battle_Victory_Move_02 = r_to_d(3.09)
SUnit_Vgt_35.Width_Battle_Victory_Move_02 = 11.71

SUnit_Vgt_36.POS_Battle_Victory_Move_02 = v(-112.45, -426.07)
SUnit_Vgt_36.Orient_Battle_Victory_Move_02 = r_to_d(3.09)
SUnit_Vgt_36.Width_Battle_Victory_Move_02 = 16.71


function Move_Visigothic_Cavalry_Cutscene_Battle_Victory_02()
	for i = 1, #SUnits_Vgt_Cav_Battle_Victory do
		local current_sunit = SUnits_Vgt_Cav_Battle_Victory[i];
		current_sunit.uc:goto_location_angle_width(current_sunit.POS_Battle_Victory_Move_02, current_sunit.Orient_Battle_Victory_Move_02, current_sunit.Width_Battle_Victory_Move_02, true);
	end;
end;






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\an_adrianople\an_main.lua


-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	MAIN BATTLE SCRIPT
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------



-- called at start of deployment phase
function Deployment_Phase()
	bm:out("Battle is in deployment phase");
end;



-- end of deployment phase i.e. battle start
function End_Deployment_Phase()

	-- teleport visigoth cavalary away
	for i = 1, #SUnits_Vgt_Cav do
		local current_sunit = SUnits_Vgt_Cav[i];
		current_sunit.uc:teleport_to_location(current_sunit.POS_Battle_Start, current_sunit.Orient_Battle_Start, current_sunit.Width_Battle_Start);
	end;
	
	-- hide player cav
	enable(SUnits_Vgt_Cav, false);
		
	-- launch cutscene, or straight into battle without it
	Play_Cutscene_Intro();
	-- Start_Battle_No_Cutscene();
end;


function Start_Battle_No_Cutscene()
	cam:fade(false, 0.5);
	
	Start_Battle();
end;

Cavalry_Reinforcements_Countdown = 300000;
Roman_Reserves_Countdown = 180000;

if not Launched_From_Prologue then
	Cavalry_Reinforcements_Countdown = Cavalry_Reinforcements_Countdown + 60000;
	Roman_Reserves_Countdown = Roman_Reserves_Countdown + 30000;
end;


-- the interactive battle has started
function Start_Battle()
	bm:out("Battle is Starting");
	
	-- stop player's army cheering
	Set_Visigoths_Cheering(false);
	
	-- give the Visigoths and the Romans more starting ammo
	Modify_Ammo(SUnits_Vgt_Ranged, 2.5);
	Modify_Ammo(SUnits_Rom_Ranged, 1.5);
	
	--start rout manager
	bm:start_rout_manager(1);
	
	-- register victory and defeat VO callbacks
	bm:setup_victory_callback(function() Battle_Is_Ending() end);
	
	-- startup advice
	-- Raise a cheer, soldiers, the Emperor himself comes to claim victory against us! Let us prepare a welcome for him and his men!
	bm:callback(function() bm:queue_advisor("Att.Pro.Adrianople.AD.001", 8000) end, 2000);
	
	-- Word of the Roman attack has been sent to our cavalry forces. They will surely return to the battlefield soon. We must hold out until then!
	bm:callback(function() bm:queue_advisor("Att.Pro.Adrianople.AD.002", 8000) end, 15000);
	
	-- AI attack
	Start_Initial_Roman_Attack();
	
	-- advice on enemy general dying
	bm:watch(
		function()
			return not Army_Rom_01:is_commander_alive()
		end,
		0,
		function()
			-- Word reaches us that Emperor Valens himself has fallen in the fighting! His men will surely flee when they hear!
			bm:stop_advisor_queue();
			bm:queue_advisor("Att.Pro.Adrianople.AD.004", 6000);
		end,
		"General_Health_Monitor"
	);
	
	-- advice on player general dying
	bm:watch(
		function()
			return not Army_Vgt_01:is_commander_alive()
		end,
		0,
		function()
			-- Our general has fallen! Word of his passing will spread amongst the men!
			bm:stop_advisor_queue();
			bm:queue_advisor("Att.Pro.Battle.AD.011", 6000);
		end,
		"General_Health_Monitor"
	);
	
	-- watch for player losing all their troops before the cavalry reinforcements come
	bm:watch(
		function()
			return is_routing_or_dead(SUnits_Vgt_Main)
		end,
		0,
		function()
			Kill_Visigothic_Cavalry();
		end,
		"Pre_Reinforcement_Behaviour"
	);
	
	-- bm:callback(function() rout_all_units(Alliance_Rom) end, 10000);
end;


POS_Rom_Ranged_Tripwire_A = v(10, -125);
POS_Rom_Ranged_Tripwire_B = v(-180, -70);

function Start_Initial_Roman_Attack()
	
	-- send the Roman ranged units up initially
	SAI_Rom_Ranged = script_ai_planner:new("SAI_Rom_Ranged", SUnits_Rom_Ranged);
	SAI_Rom_Ranged:set_debug();
	SAI_Rom_Ranged:defend_position(v(-70, -50), 100);
	
	-- park the Roman main force and additional force initially
	SAI_Rom_Main = script_ai_planner:new("SAI_Rom_Main", SUnits_Rom_Main);
	SAI_Rom_Main:set_debug();
	SAI_Rom_Main:defend_position(v(-117, -315), 100);
	
	SAI_Rom_Add = script_ai_planner:new("SAI_Rom_Add", SUnits_Rom_Add);
	SAI_Rom_Add:set_debug();
	SAI_Rom_Add:defend_position(v(-125, -365), 70);
	
	-- start the main attack when the ranged have engaged
	cache_health(SUnits_Rom_Ranged);
	bm:watch(
		function()
			return has_taken_casualties(SUnits_Rom_Ranged, 0.05) or has_crossed_line(SUnits_Rom_Ranged, POS_Rom_Ranged_Tripwire_A, POS_Rom_Ranged_Tripwire_B, true);
		end,
		5000,
		function()
			Start_Main_Roman_Attack()
		end,
		"Pre_Reinforcement_Behaviour"
	);
	
	-- throw in the Roman reserves after a while
	bm:callback(
		function()
			SAI_Rom_Add:merge_into(SAI_Rom_Main);
		end,
		Roman_Reserves_Countdown
	);
end;


function Start_Main_Roman_Attack()
	bm:out("Start_Main_Roman_Attack() called");

	-- send the Roman main army to attack
	SAI_Rom_Main:attack_force(SUnits_Vgt_Main);
	
	bm:callback(function() SAI_Rom_Ranged:merge_into(SAI_Rom_Main) end, 30000);
	
	-- trigger Visigothic reinforcements after a certain time
	bm:callback(
		function()
			Trigger_Cavalry_Reinforcements()
		end,
		Cavalry_Reinforcements_Countdown
		--16000
	);
end;








BOOL_Cavalry_Reinforcements_Triggered = false;

function Trigger_Cavalry_Reinforcements()
	if BOOL_Cavalry_Reinforcements_Triggered then
		return;
	end;
	
	BOOL_Cavalry_Reinforcements_Triggered = true;
	
	bm:remove_process("Pre_Reinforcement_Behaviour");
	
	bm:stop_advisor_queue();
	
	cam:fade(true, 0.5);
	
	bm:callback(function() Spawn_Cavalry_Reinforcements() end, 500);
end;


function Spawn_Cavalry_Reinforcements()
	enable(SUnits_Vgt_Cav, true, true);
	local bearing_override = 2.08;
	
	-- move cavalry forwards
	for i = 1, #SUnits_Vgt_Cav do
		local current_sunit = SUnits_Vgt_Cav[i];
		current_sunit:goto_location_offset(0, 75, true, bearing_override);
	end;
	
	Play_Cavalry_Reinforcement_Cutscene();
end;


function Cavalry_Reinforcement_Cutscene_Complete()
	-- make the Roman cavalry fragile now
	Roman_Cav_Rout_On_Casualties(0.5);
	
	-- when the Roman cavalry become visible to the enemy, expand their attack pattern
	bm:watch(
		function()
			return is_visible(SUnits_Vgt_Cav, Alliance_Rom);
		end,
		15000,
		function()
			SAI_Rom_Main:attack_force(SUnits_Vgt_All);
		end,
		"Post_Reinforcement_Behaviour"
	);
end;




BOOL_Battle_Is_Ending = false;

-- the game has gone to victory countdown phase, someone has won
function Battle_Is_Ending()
	bm:remove_process("Pre_Reinforcement_Behaviour");
	bm:remove_process("Post_Reinforcement_Behaviour");
	bm:remove_process("General_Health_Monitor");
	
	SAI_Rom_Ranged:release();
	SAI_Rom_Main:release();
	SAI_Rom_Add:release();

	if not BOOL_Battle_Is_Ending then
		BOOL_Battle_Is_Ending = true;
					
		if is_routing_or_dead(Alliance_Vgt) then	
			bm:out("Player has lost, army is routing");
		
			bm:stop_advisor_queue();
			-- This battle is lost, Chieftain! We must leave the field while we still can!
			bm:queue_advisor("Att.Pro.Battle.AD.042", 8000);
							
			bm:callback(function() bm:end_battle() end, 10000);
		else
			bm:out("Player has won !");
		
			bm:stop_advisor_queue();
						
			-- Valens is dead, and his army run for their lives! The future of the Gothic people is secure! Victory is ours!
			bm:queue_advisor("Att.Pro.Adrianople.AD.005", 8000);

			bm:callback(
				function()
					if Launched_From_Prologue then
						Prepare_To_Play_Victory_Cutscene();
					else		
						bm:end_battle();
					end;
				end,
				12000
			);
		end;
	end;
end;


function Prepare_To_Play_Victory_Cutscene()
	bm:out("Prepare_To_Play_Victory_Cutscene() called");
	
	cam:fade(true, 0.5);
	
	bm:callback(function() Setup_Victory_Cutscene() end, 500);
	
	bm:callback(function() Play_Victory_Cutscene() end, 1000);
	
	bm:callback(function() bm:unlock_achievement("ACHIEVEMENT_ATT_COMPLETE_PROLOGUE") end, 2000);
end;


function Setup_Victory_Cutscene()
	Setup_Romans_Cutscene_Battle_Victory();
	Setup_Visigoths_Cutscene_Battle_Victory();
end;


function Cutscene_Victory_Completed()
	UC_Rom_01_All:kill();
	bm:end_battle();
	bm:end_current_battle_phase();
end;







C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\an_adrianople\an_start.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	INITIAL SCRIPT SETUP
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

-- clear out loaded files
system.ClearRequiredFiles();

-- load in battle script library
require "lua_scripts.Battle_Script_Header";

-- declare battlemanager object
bm = battle_manager:new(empire_battle:new());

-- get battle name from folder, and print header
battle_name, battle_shortform = get_folder_name_and_shortform();

bm:out("==============");
bm:out("==============");
bm:out("==============");
bm:out("Script started: Battle of " .. battle_name);
bm:out("==============");

-- load in other script files associated with this battle
package.path = package.path .. ";data/Script/" .. battle_name .. "/?.lua";

require (battle_shortform .. "_Declarations");
require (battle_shortform .. "_Cutscenes");
require (battle_shortform .. "_Main");

-- register functions to be called on phase changes
bm:register_phase_change_callback("Deployment", function() Deployment_Phase() end);			-- optional deployment phase callback
bm:setup_battle(function() End_Deployment_Phase() end);										-- called when battle starts








C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ca_cartagena\ca_cutscenes.lua
function Play_Cutscene_Intro()

	bm:out("Play_Cutscene_Intro() called");

	POS_Cam_Cutscene_Intro_Final = v(0.0, 72.6, -409.1);
	Targ_Cam_Cutscene_Intro_Final = v(0.0, 45.0, -306.9);

	
	
	SFX_Att_HB_CA_Intro_02 = new_sfx("Play_Att_HB_CA_Intro_02_1");
	SFX_Att_HB_CA_Intro_03 = new_sfx("Play_Att_HB_CA_Intro_03_1");
	SFX_Att_HB_CA_Intro_04 = new_sfx("Play_Att_HB_CA_Intro_04_1");
	SFX_Att_HB_CA_Intro_05 = new_sfx("Play_Att_HB_CA_Intro_05_1");


	
	local Cutscene_Intro = cutscene:new(
		"Cutscene_Intro", 							-- unique string name for cutscene
		ga_vandals_01:get_unitcontroller(),			-- unitcontroller over player's army
		38000 										-- duration of cutscene in ms
	);

	

	Cutscene_Intro:set_skippable(true, function() Skip_Cutscene_Intro() end);
	Cutscene_Intro:set_skip_camera(POS_Cam_Cutscene_Intro_Final, Targ_Cam_Cutscene_Intro_Final);
	--Cutscene_Intro:set_debug();



	cam = Cutscene_Intro:camera();
	local subtitles = Cutscene_Intro:subtitles();
	subtitles:set_alignment("bottom_centre");
	subtitles:clear();
	
	
	
	Cutscene_Intro:action(function() cam:fade(false, 0.5) end, 0);
	
	Cutscene_Intro:action(function() ga_vandals_01:teleport_to_start_location_offset(0, -150); end, 0);	
	Cutscene_Intro:action(function() ga_westrome_01:teleport_to_start_location_offset(0, -150); end, 0);		
	Cutscene_Intro:action(function() ga_westrome_01:set_visible_to_all(true); end, 0);
	
	Cutscene_Intro:action(function() ga_vandals_01:goto_start_location(false); end, 0);
	Cutscene_Intro:action(function() ga_westrome_01:goto_start_location(false); end, 0);
	
	
	
	Cutscene_Intro:action(function() cam:move_to(v(-294.1, 28.0, 491.0), v(-365.6, 25.1, 675.8), 0, true, 50, 10) end, 0);
	Cutscene_Intro:action(function() cam:move_to(v(-294.1, 28.0, 491.0), v(-365.6, 25.1, 675.8), 7, true, 48) end, 0);
	
	-- 13 May, AD461
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.CA.Intro_01") end, 3000);
	
	

	Cutscene_Intro:action(function() subtitles:clear() end, 6000);	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 6000);	
	
	Cutscene_Intro:action(function() cam:move_to(v(186.4, 12.7, 121.2), v(44.4, 1.5, 258.9), 0, true, 35) end, 6000);
	Cutscene_Intro:action(function() cam:move_to(v(134.8, 19.8, 102.4), v(57.5, 0.5, 283.8), 20, true, 33) end, 6000);
	
	-- The Roman Emperor Majorian has constructed a fleet with which he plans to invade Vandal-occupied North Africa.
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.CA.Intro_02") end, 7000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Att_HB_CA_Intro_02) end, 7000);
	
	

	Cutscene_Intro:action(function() subtitles:clear() end, 15000);	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 15000);
	
	Cutscene_Intro:action(function() cam:move_to(v(253.2, 14.9, -157.7), v(94.3, 2.1, -275.4), 0, true, 35) end, 15000);
	Cutscene_Intro:action(function() cam:move_to(v(225.4, 14.9, -221.8), v(43.1, -1.1, -297.7), 17, true, 33) end, 15000);
	
	-- Aware of the possibility of attack, the Vandals have struck first, before the Roman fleet becomes unbeatable.
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.CA.Intro_03") end, 16000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Att_HB_CA_Intro_03) end, 16000);
	
	

	Cutscene_Intro:action(function() subtitles:clear() end, 24000);	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 24000);
	
	Cutscene_Intro:action(function() cam:move_to(v(-87.4, 4.3, -207.5), v(-220.0, -6.8, -354.1), 0, true, 35) end, 24000);
	Cutscene_Intro:action(function() cam:move_to(v(-82.4, 6.7, -180.3), v(-189.5, -4.5, -346.6), 15, true, 33) end, 24000);
	
	-- A number of Western Roman captains have been bribed and now fight alongside the Vandals.
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.CA.Intro_04") end, 25000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Att_HB_CA_Intro_04) end, 25000);
	
	

	Cutscene_Intro:action(function() subtitles:clear() end, 31000);	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 31000);
	
	Cutscene_Intro:action(function() ga_vandals_01:halt_movement(); end, 31000);
	Cutscene_Intro:action(function() ga_westrome_01:teleport_to_start_location_offset(); end, 31000);
	Cutscene_Intro:action(function() ga_westrome_01:set_visible_to_all(false); end, 31000);
		
	Cutscene_Intro:action(function() cam:move_to(v(236.0, 51.2, -55.1), v(163.9, 31.7, -130.1), 0, true, 0, 0) end, 31000);	
	Cutscene_Intro:action(function() cam:move_to(POS_Cam_Cutscene_Intro_Final, Targ_Cam_Cutscene_Intro_Final, 2, false, 0) end, 36000);
	
	-- Defeating the Romans at Cartagena would surely end their ambitions of reconquering Africa.
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.CA.Intro_05") end, 32000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Att_HB_CA_Intro_05) end, 32000);
	
	

	Cutscene_Intro:action(function() subtitles:clear() end, 38000);	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 38000);
	
	
	
	Cutscene_Intro:start();
end;


function Skip_Cutscene_Intro()
	
	cam:fade(true, 0);
	
	stop_sound(SFX_Att_HB_CA_Intro_02);
	stop_sound(SFX_Att_HB_CA_Intro_03);
	stop_sound(SFX_Att_HB_CA_Intro_04);
	stop_sound(SFX_Att_HB_CA_Intro_04);
	
	ga_vandals_01:teleport_to_start_location_offset();
	ga_westrome_01:teleport_to_start_location_offset();	
	ga_westrome_01:set_visible_to_all(false);
		
	bm:callback(function() cam:fade(false, 0.5) end, 1000);
end;






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ca_cartagena\ca_start.lua

system.ClearRequiredFiles();
require "lua_scripts.Battle_Script_Header";

-- declare battlemanager object
bm = battle_manager:new(empire_battle:new());

-- get battle name from folder, and print header
battle_name, battle_shortform = get_folder_name_and_shortform();

-- load in other script files associated with this battle
package.path = package.path .. ";data/Script/" .. battle_name .. "/?.lua";

require (battle_shortform .. "_Cutscenes");

gb = generated_battle:new(
	true,                                      -- screen starts black. Should match the prepare_for_fade_in flag in the battle xml
	true,                                      -- prevents deployment. Set to false if you want the player to be able to deploy.
	function() Play_Cutscene_Intro() end,      -- intro cutscene callback. Supply a function that runs your intro cutscene here
	false                                      -- debug mode
);

ga_vandals_01 = gb:get_army(1, 1);

ga_westrome_01 = gb:get_army(2, 1);


-- fade camera in from black on battle start
gb:fade_in_on_message("cutscene_ended", 0.5);


-- advice on battle start
gb:advice_on_message("cutscene_ended", "Att.HB.CA.001", 5000);


-- make army attack on battle start
ga_westrome_01:attack_on_message("cutscene_ended");


-- advice on player winning
ga_vandals_01:message_on_victory("player_wins");
gb:advice_on_message("player_wins", "Att.HB.CA.002");


-- advice on player losing
ga_vandals_01:message_on_defeat("player_loses");
gb:advice_on_message("player_loses", "Att.HB.CA.003");






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\cp_catalaunian_plains\cp_cutscenes.lua

function Play_Cutscene_Intro()

	bm:out("Play_Cutscene_Intro() called");

	POS_Cam_Cutscene_Intro_Final = v(-288.0, 460.3, -442.0);
	Targ_Cam_Cutscene_Intro_Final = v(-288.9, 452.1, -416.5);

	
	
	SFX_Att_HB_CP_Intro_02 = new_sfx("Play_Att_HB_CP_Intro_02_1");
	SFX_Att_HB_CP_Intro_03 = new_sfx("Play_Att_HB_CP_Intro_03_1");
	SFX_Att_HB_CP_Intro_04 = new_sfx("Play_Att_HB_CP_Intro_04_1");
	SFX_Att_HB_CP_Intro_05 = new_sfx("Play_Att_HB_CP_Intro_05_1");


	
	local Cutscene_Intro = cutscene:new(
		"Cutscene_Intro", 							-- unique string name for cutscene
		ga_westrome_01:get_unitcontroller(),		-- unitcontroller over player's army
		34000 										-- duration of cutscene in ms
	);

	

	Cutscene_Intro:set_skippable(true, function() Skip_Cutscene_Intro() end);
	Cutscene_Intro:set_skip_camera(POS_Cam_Cutscene_Intro_Final, Targ_Cam_Cutscene_Intro_Final);
	--Cutscene_Intro:set_debug();



	cam = Cutscene_Intro:camera();
	local subtitles = Cutscene_Intro:subtitles();
	subtitles:set_alignment("bottom_centre");
	subtitles:clear();
	
	
	
	Cutscene_Intro:action(function() cam:fade(false, 0.5) end, 0);	
	
	Cutscene_Intro:action(function() ga_westrome_01:teleport_to_start_location_offset(0, -50); end, 0);	
	Cutscene_Intro:action(function() ga_visigoths_01:teleport_to_start_location_offset(0, -50); end, 0);	
	Cutscene_Intro:action(function() ga_huns_01:teleport_to_start_location_offset(0, -50); end, 0);	
	Cutscene_Intro:action(function() ga_huns_02:teleport_to_start_location_offset(0, -50); end, 0);	
	Cutscene_Intro:action(function() ga_huns_01:set_visible_to_all(true); end, 0);	
	Cutscene_Intro:action(function() ga_huns_02:set_visible_to_all(true); end, 0);	
	
	Cutscene_Intro:action(function() ga_westrome_01:goto_start_location(false); end, 0);
	Cutscene_Intro:action(function() ga_visigoths_01:goto_start_location(false); end, 0);
	Cutscene_Intro:action(function() ga_huns_01:goto_start_location(false); end, 0);
	Cutscene_Intro:action(function() ga_huns_02:goto_start_location(false); end, 0);
	
	
	
	Cutscene_Intro:action(function() cam:move_to(v(-158.6, 453.0, 175.4), v(-309.3, 442.6, 202.2), 0, true, 35) end, 0);
	Cutscene_Intro:action(function() cam:move_to(v(-158.6, 453.0, 175.4), v(-309.3, 442.6, 202.2), 7, true, 33) end, 0);
	
	-- [PH] June 20, 451AD.
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.CP.Intro_01") end, 3000);
	
	

	Cutscene_Intro:action(function() subtitles:clear() end, 6000);	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 6000);	
	
	Cutscene_Intro:action(function() cam:move_to(v(169.6, 491.2, 284.3), v(155.4, 485.6, 327.2), 0, true, 35) end, 6000);
	Cutscene_Intro:action(function() cam:move_to(v(169.3, 490.7, 280.8), v(133.0, 481.7, 429.7), 5, true, 45) end, 6000);
	
	-- [PH] Attila the Hun has begun storming through Gaul, sacking numerous towns.
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.CP.Intro_02") end, 7000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Att_HB_CP_Intro_02) end, 7000);
	
	Cutscene_Intro:action(function() cam:move_to(v(217.3, 497.3, 331.9), v(93.2, 470.1, 245.8), 0, true, 35) end, 9000);
	Cutscene_Intro:action(function() cam:move_to(v(217.3, 497.3, 331.9), v(93.2, 470.1, 245.8), 7, true, 33) end, 9000);
	
	

	Cutscene_Intro:action(function() subtitles:clear() end, 12000);	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 12000);
	
	Cutscene_Intro:action(function() cam:move_to(v(-298.0, 433.3, -324.8), v(-336.8, 403.9, -470.3), 0, true, 35) end, 12000);
	Cutscene_Intro:action(function() cam:move_to(v(-282.8, 439.4, -315.2), v(-382.4, 403.2, -426.1), 24, true, 33) end, 12000);
	
	-- [PH] Fearing an attack on Northen Italy, Magister militum Flavius Aetius has mustered an army in an effort to resist the Hunnic advance.
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.CP.Intro_03") end, 13000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Att_HB_CP_Intro_03) end, 13000);
	
	

	Cutscene_Intro:action(function() subtitles:clear() end, 21000);	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 21000);
	
	Cutscene_Intro:action(function() cam:move_to(v(167.2, 488.4, -370.2), v(36.3, 456.5, -443.4), 0, true, 35) end, 21000);
	Cutscene_Intro:action(function() cam:move_to(v(162.7, 490.3, -365.1), v(121.9, 461.2, -510.1), 24, true, 33) end, 21000);
	
	-- [PH] The Romans have found unlikely allies in the form of Theodoric I, the king of the Visigoths.
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.CP.Intro_04") end, 22000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Att_HB_CP_Intro_04) end, 22000);
	
	

	Cutscene_Intro:action(function() subtitles:clear() end, 28000);	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 28000);
	
	Cutscene_Intro:action(function() ga_westrome_01:teleport_to_start_location_offset(); end, 28000);
	Cutscene_Intro:action(function() ga_visigoths_01:teleport_to_start_location_offset(); end, 28000);
	Cutscene_Intro:action(function() ga_huns_01:teleport_to_start_location_offset(); end, 28000);
	Cutscene_Intro:action(function() ga_huns_02:teleport_to_start_location_offset(); end, 28000);
	Cutscene_Intro:action(function() ga_huns_01:set_visible_to_all(false); end, 28000);
	Cutscene_Intro:action(function() ga_huns_02:set_visible_to_all(false); end, 28000);
		
	Cutscene_Intro:action(function() cam:move_to(v(-230.5, 453.6, -275.5), v(-269.6, 428.6, -334.2), 0, true, 0) end, 28000);	
	Cutscene_Intro:action(function() cam:move_to(POS_Cam_Cutscene_Intro_Final, Targ_Cam_Cutscene_Intro_Final, 2, false, 0) end, 32000);
	
	-- [PH] Intercepting them on the Catalaunian Plains, the two sides meet in battle.
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.CP.Intro_05") end, 29000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Att_HB_CP_Intro_05) end, 29000);
	
	

	Cutscene_Intro:action(function() subtitles:clear() end, 34000);	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 34000);
	
	
	
	Cutscene_Intro:start();
end;


function Skip_Cutscene_Intro()
	
	cam:fade(true, 0);
	
	ga_westrome_01:teleport_to_start_location_offset();
	ga_visigoths_01:teleport_to_start_location_offset();
	ga_huns_01:teleport_to_start_location_offset();
	ga_huns_02:teleport_to_start_location_offset();
	ga_huns_01:set_visible_to_all(false);
	ga_huns_02:set_visible_to_all(false);
	
	stop_sound(SFX_Att_HB_CP_Intro_02);
	stop_sound(SFX_Att_HB_CP_Intro_03);
	stop_sound(SFX_Att_HB_CP_Intro_04);
	stop_sound(SFX_Att_HB_CP_Intro_05);
		
	bm:callback(function() cam:fade(false, 0.5) end, 1000);
end;






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\cp_catalaunian_plains\cp_start.lua

system.ClearRequiredFiles();
require "lua_scripts.Battle_Script_Header";

-- declare battlemanager object
bm = battle_manager:new(empire_battle:new());

-- get battle name from folder, and print header
battle_name, battle_shortform = get_folder_name_and_shortform();

-- load in other script files associated with this battle
package.path = package.path .. ";data/Script/" .. battle_name .. "/?.lua";

require (battle_shortform .. "_Cutscenes");

gb = generated_battle:new(
	true,                                      -- screen starts black. Should match the prepare_for_fade_in flag in the battle xml
	true,                                      -- prevents deployment. Set to false if you want the player to be able to deploy.
	function() Play_Cutscene_Intro() end,      -- intro cutscene callback. Supply a function that runs your intro cutscene here
	false                                      -- debug mode
);

ga_westrome_01 = gb:get_army(1, 1);
ga_visigoths_01 = gb:get_army(1, 2);

ga_huns_01 = gb:get_army(2, 1);                             -- first enemy army  
ga_huns_02 = gb:get_army(2, 2);                             -- second enemy army


-- fade camera in from black on battle start
gb:fade_in_on_message("cutscene_ended", 0.5);


-- advice on battle start
gb:advice_on_message("cutscene_ended", "Att.HB.CP.001", 2000);


-- make armies attack on battle start
ga_visigoths_01:defend_on_message("cutscene_ended", 140, -200, 150);
ga_huns_01:attack_on_message("cutscene_ended");
ga_huns_02:attack_on_message("cutscene_ended");


-- allies attack when the player gets close to enemy
ga_westrome_01:message_on_proximity_to_enemy("enemy_close_to_player", 150);
ga_visigoths_01:attack_on_message("enemy_close_to_player");


-- advice on player's general dying
ga_westrome_01:message_on_commander_death("player_general_dies");
gb:advice_on_message("player_general_dies", "Att.HB.CP.002", 2000);


-- advice on allied general dying
ga_visigoths_01:message_on_commander_death("allied_general_dies");
gb:advice_on_message("allied_general_dies", "Att.HB.CP.003", 2000);


-- advice on enemy general dying
ga_huns_01:message_on_commander_death("enemy_general_dies");
gb:advice_on_message("enemy_general_dies", "Att.HB.CP.004", 2000);


-- advice on player winning
ga_westrome_01:message_on_victory("player_wins");
gb:advice_on_message("player_wins", "Att.HB.CP.005");


-- advice on player losing
ga_westrome_01:message_on_defeat("player_loses");
gb:advice_on_message("player_loses", "Att.HB.CP.006");






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\da_dara\da_cutscenes.lua
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	CUTSCENES SCRIPT
--
--	Declare intro and other cutscenes
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------


Cutscene_Intro = cutscene:new(
	"Cutscene_Intro", 							-- unique string name for cutscene
	UC_Byz_01_All, 								-- unitcontroller over player's army
	58000, 										-- duration of cutscene in ms
	function() Start_Battle() end 				-- what to call when cutscene is finished
);


POS_Cam_Cutscene_Intro_Final = v(-26.5, 812.2, 109.4);
Targ_Cam_Cutscene_Intro_Final = v(-27.3, 769.2, 2.8);

cam = Cutscene_Intro:camera();
subtitles = Cutscene_Intro:subtitles();
subtitles:set_alignment("bottom_centre");
subtitles:clear();

Cutscene_Intro:set_skippable(true, function() Skip_Cutscene_Intro() end);
Cutscene_Intro:set_skip_camera(POS_Cam_Cutscene_Intro_Final, Targ_Cam_Cutscene_Intro_Final);
-- Cutscene_Intro:set_debug();


function Play_Cutscene_Intro()

	SFX_Att_HB_DA_Intro_02 = new_sfx("Play_Att_HB_DA_Intro_02_1");
	SFX_Att_HB_DA_Intro_03 = new_sfx("Play_Att_HB_DA_Intro_03_1");
	SFX_Att_HB_DA_Intro_04 = new_sfx("Play_Att_HB_DA_Intro_04_1");
	SFX_Att_HB_DA_Intro_05 = new_sfx("Play_Att_HB_DA_Intro_05_1");
	SFX_Att_HB_DA_Intro_06 = new_sfx("Play_Att_HB_DA_Intro_06_1");
	SFX_Att_HB_DA_Intro_07 = new_sfx("Play_Att_HB_DA_Intro_07_1");
	SFX_Att_HB_DA_Intro_08 = new_sfx("Play_Att_HB_DA_Intro_08_1");
	
	Set_Sas_Army_Always_Visible(true);
	
	Cutscene_Intro:action(function() cam:move_to(v(347.2, 776.6, -71.7), v(290.0, 777.8, 28.0), 0, true, 22, 10) end, 0);
	Cutscene_Intro:action(function() cam:move_to(v(347.2, 776.6, -71.7), v(290.0, 777.8, 28.0), 8, true, 20, 10) end, 0);
	
	Cutscene_Intro:action(function() cam:fade(false, 0.5) end, 0);
	
	Cutscene_Intro:action(function() Teleport_Byz_Intro_Walkon_01() end, 0);
	
	-- AD530.
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.DA.Intro_01") end, 3000);
	
	Cutscene_Intro:action(function() subtitles:clear() end, 6000);
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 6000);
		
	-- The Roman and Sassanid Empires are at war.
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.DA.Intro_02") end, 7000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Att_HB_DA_Intro_02) end, 7000);
	
	Cutscene_Intro:action(function() cam:move_to(v(39.4, 791.9, 48.3), v(38.0, 791.5, 53.2), 0, true, 43, 10) end, 7000);
	Cutscene_Intro:action(function() cam:move_to(v(29.9, 791.9, 45.6), v(28.5, 791.5, 50.4), 12, true, 42, 10) end, 7000);
		
	Cutscene_Intro:action(function() subtitles:clear() end, 12000);
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 12000);
		
	-- The Roman Emperor, Justinian, has appointed the young Belisarius as commander of his army in the east.
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.DA.Intro_03") end, 13000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Att_HB_DA_Intro_03) end, 13000);
	
	Cutscene_Intro:action(function() cam:move_to(v(5.9, 777.9, 119.0), v(-0.1, 777.6, 166.7), 0, true, 25, 10) end, 13000);
	Cutscene_Intro:action(function() cam:move_to(v(5.9, 777.9, 119.0), v(-2.8, 776.9, 166.2), 12, true, 26, 10) end, 13000);
	
	Cutscene_Intro:action(
		function()
			local tracking_time = 6;
			local tracking_time_offset = 0.5;
			local current_cam, current_targ, future_cam, future_targ = get_track_commander_positions(
				SUnit_Byz_01, 				-- sunit
				-20, 						-- horizontal bearing
				5, 							-- vertical bearing
				4.5, 						-- camera distance
				1.0, 						-- commander height
				1.75, 						-- unit speed
				tracking_time_offset, 		-- tracking time offset
				tracking_time, 				-- tracking time
				0							-- change in terrain height
			)
			
			cam:move_to(current_cam, current_targ, 0, true, 22, 0);
			cam:move_to(future_cam, future_targ, tracking_time - tracking_time_offset, true, 23, 0);
		end, 
		16500
	);

	Cutscene_Intro:action(function() subtitles:clear() end, 21000);
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 21000);
		
	-- Belisarius must reverse the tide of the war, which has been moving against the Romans.
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.DA.Intro_04") end, 22000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Att_HB_DA_Intro_04) end, 22000);
	
	Cutscene_Intro:action(function() cam:move_to(v(13.7, 774.3, 211.9), v(-1.5, 775.6, 257.5), 0, true, 23, 10) end, 22000);
	Cutscene_Intro:action(function() cam:move_to(v(12.5, 774.3, 211.5), v(-2.7, 775.6, 257.1), 5, true, 23, 10) end, 22000);
	
	Cutscene_Intro:action(function() cam:move_to(v(5.8, 780.5, 291.3), v(-7.1, 775.0, 245.3), 0, true, 35, 10) end, 26500);
	Cutscene_Intro:action(function() cam:move_to(v(5.8, 781.0, 291.3), v(-4.3, 776.2, 244.6), 8, true, 32, 10) end, 26500);

	Cutscene_Intro:action(function() subtitles:clear() end, 28000);
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 28000);
		
	-- He is fortifying the city of Dara, which lies close to the enemy border. The Sassanids have sent an army, under Perozes, to stop him.
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.DA.Intro_05") end, 29000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Att_HB_DA_Intro_05) end, 29000);
	
	Cutscene_Intro:action(function() Teleport_Sas_Intro_Walkon_01() end, 29000);
	
	Cutscene_Intro:action(function() cam:move_to(v(344.6, 860.1, -371.0), v(318.2, 854.6, -331.3), 0, true, 33, 0) end, 29000);
	Cutscene_Intro:action(function() cam:move_to(v(344.6, 860.1, -371.0), v(316.7, 853.8, -332.4), 5, true, 32, 0) end, 29000);

	Cutscene_Intro:action(function() cam:move_to(v(170.5, 780.4, -597.2), v(-350.8, 683.1, -1049.3), 0, true, 37, 0) end, 33500);
	Cutscene_Intro:action(function() cam:move_to(v(170.5, 780.4, -597.2), v(-384.9, 683.1, -1006.7), 5, true, 37, 0) end, 33500);

	Cutscene_Intro:action(function() Set_Byz_Army_Invisible(false) end, 34000);
	Cutscene_Intro:action(function() Teleport_Byz_Intro_Walkon_02() end, 34000);
	
	Cutscene_Intro:action(function() cam:move_to(v(68.2, 765.8, -663.9), v(-407.4, 651.4, -1160.3), 0, true, 40, 0) end, 36000);
	Cutscene_Intro:action(function() cam:move_to(v(68.2, 765.8, -663.9), v(-453.8, 648.3, -1110.4), 6, true, 40, 0) end, 36000);
	
	
	Cutscene_Intro:action(function() subtitles:clear() end, 38000);
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 38000);
		
	-- Outnumbered, the Romans have dug a trench before the walls to aid the city's defence.
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.DA.Intro_06") end, 39000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Att_HB_DA_Intro_06) end, 39000);
	
	Cutscene_Intro:action(function() cam:move_to(v(46.7, 783.0, -176.3), v(26.9, 775.4, -133.2), 0, true, 45, 0) end, 39000);
	Cutscene_Intro:action(function() cam:move_to(v(27.0, 783.0, -176.3), v(7.3, 775.4, -133.2), 10, true, 45, 0) end, 39000);
	
	Cutscene_Intro:action(function() cam:move_to(v(171.2, 804.6, -100.8), v(125.4, 790.6, -97.8), 0, true, 40, 0) end, 42500);
	Cutscene_Intro:action(function() cam:move_to(v(117.2, 804.6, -97.2), v(71.4, 790.6, -94.1), 12, true, 40, 0) end, 42500);
	
	Cutscene_Intro:action(function() subtitles:clear() end, 45000);
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 45000);
		
	-- Perozes has sent word to Belisarius that a bath should be prepared for him in the city.
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.DA.Intro_07") end, 46000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Att_HB_DA_Intro_07) end, 46000);
	
	Cutscene_Intro:action(
		function()
			local tracking_time = 6;
			local tracking_time_offset = 0.5;
			local current_cam, current_targ, future_cam, future_targ = get_track_commander_positions(
				SUnit_Sas_01, 				-- sunit
				20, 						-- horizontal bearing
				5, 							-- vertical bearing
				4.5, 						-- camera distance
				1.0, 						-- commander height
				1.75, 						-- unit speed
				tracking_time_offset, 		-- tracking time offset
				tracking_time, 				-- tracking time
				0							-- change in terrain height
			)
			
			cam:move_to(current_cam, current_targ, 0, true, 22, 0);
			cam:move_to(future_cam, future_targ, tracking_time - tracking_time_offset, true, 23, 0);
		end, 
		46000
	);
	
	Cutscene_Intro:action(function() Teleport_Byz_Army_Intro_Battle_Start() end, 49000);
	
	Cutscene_Intro:action(function() cam:move_to(v(141.7, 768.1, -712.1), v(139.2, 767.4, -708.4), 0, true, 40, 0) end, 49000);
	Cutscene_Intro:action(function() cam:move_to(v(141.7, 768.1, -712.1), v(139.6, 767.7, -708.1), 10, true, 40, 0) end, 49000);
	
	Cutscene_Intro:action(function() subtitles:clear() end, 52000);
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 52000);
		
	-- The Romans know, therefore, that battle will soon be upon them.
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.DA.Intro_08") end, 53000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Att_HB_DA_Intro_08) end, 53000);
	
	Cutscene_Intro:action(function() cam:move_to(v(158.9, 795.5, -177.7), v(155.8, 794.5, -174.6), 0, true, 50, 0) end, 53000);
	Cutscene_Intro:action(function() cam:move_to(POS_Cam_Cutscene_Intro_Final, Targ_Cam_Cutscene_Intro_Final, 4, false, 0) end, 54000);

	Cutscene_Intro:action(function() Teleport_Sas_Army_Intro_Battle_Start() end, 54000);
	Cutscene_Intro:action(function() Set_Sas_Army_Always_Visible(false) end, 54000);
	
	Cutscene_Intro:action(function() subtitles:clear() end, 58000);
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 58000);
	
	Cutscene_Intro:start();
end;


function Skip_Cutscene_Intro()
	cam:fade(true, 0);
	
	Set_Byz_Army_Invisible(false);
	
	Teleport_Byz_Army_Intro_Battle_Start();
	Teleport_Sas_Army_Intro_Battle_Start();
	
	Set_Sas_Army_Always_Visible(false);
			
	bm:callback(function() cam:fade(false, 0.5) end, 1000);
end;








C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\da_dara\da_declarations.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	DECLARATIONS SCRIPT
--
--	Declare alliances, armies, convex areas and anything else of note in here
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

cam = bm:camera();
svr = ScriptedValueRegistry:new();

--
-- Army Declarations
--

Alliances = bm:alliances();

Alliance_Byz = Alliances:item(1);
Army_Byz_01 = Alliance_Byz:armies():item(1);

Alliance_Sas = Alliances:item(2); 
Army_Sas_01 = Alliance_Sas:armies():item(1);




--
-- Byzantine Units
--

SUnit_Byz_01 = script_unit:new(Army_Byz_01, "Byz_01");
SUnit_Byz_02 = script_unit:new(Army_Byz_01, "Byz_02");
SUnit_Byz_03 = script_unit:new(Army_Byz_01, "Byz_03");

SUnit_Byz_10 = script_unit:new(Army_Byz_01, "Byz_10");
SUnit_Byz_11 = script_unit:new(Army_Byz_01, "Byz_11");
SUnit_Byz_12 = script_unit:new(Army_Byz_01, "Byz_12");
SUnit_Byz_13 = script_unit:new(Army_Byz_01, "Byz_13");
SUnit_Byz_14 = script_unit:new(Army_Byz_01, "Byz_14");
SUnit_Byz_15 = script_unit:new(Army_Byz_01, "Byz_15");
SUnit_Byz_16 = script_unit:new(Army_Byz_01, "Byz_16");
SUnit_Byz_17 = script_unit:new(Army_Byz_01, "Byz_17");
SUnit_Byz_18 = script_unit:new(Army_Byz_01, "Byz_18");
SUnit_Byz_19 = script_unit:new(Army_Byz_01, "Byz_19");

SUnit_Byz_30 = script_unit:new(Army_Byz_01, "Byz_30");
SUnit_Byz_31 = script_unit:new(Army_Byz_01, "Byz_31");
SUnit_Byz_32 = script_unit:new(Army_Byz_01, "Byz_32");
SUnit_Byz_33 = script_unit:new(Army_Byz_01, "Byz_33");

UC_Byz_01_All = unitcontroller_from_army(Army_Byz_01);





SUnits_Byz_All = script_units:new(
	"Byz_All",
	SUnit_Byz_01,
	SUnit_Byz_02,
	SUnit_Byz_03,
	SUnit_Byz_10,
	SUnit_Byz_11,
	SUnit_Byz_12,
	SUnit_Byz_13,
	SUnit_Byz_14,
	SUnit_Byz_15,
	SUnit_Byz_16,
	SUnit_Byz_17,
	SUnit_Byz_18,
	SUnit_Byz_19,
	SUnit_Byz_30,
	SUnit_Byz_31,
	SUnit_Byz_32,
	SUnit_Byz_33
);

SUnits_Byz_Inf = script_units:new(
	"Byz_Inf",
	SUnit_Byz_01,
	SUnit_Byz_02,
	SUnit_Byz_03,
	SUnit_Byz_10,
	SUnit_Byz_11,
	SUnit_Byz_12,
	SUnit_Byz_13,
	SUnit_Byz_14,
	SUnit_Byz_15,
	SUnit_Byz_16,
	SUnit_Byz_17,
	SUnit_Byz_18,
	SUnit_Byz_19
);

SUnits_Byz_Ranged = script_units:new(
	"Byz_Ranged",
	SUnit_Byz_30,
	SUnit_Byz_31,
	SUnit_Byz_32,
	SUnit_Byz_33
);



--
-- Roman Units
--


SUnit_Sas_01 = script_unit:new(Army_Sas_01, "Sas_01");
SUnit_Sas_02 = script_unit:new(Army_Sas_01, "Sas_02");
SUnit_Sas_03 = script_unit:new(Army_Sas_01, "Sas_03");
SUnit_Sas_04 = script_unit:new(Army_Sas_01, "Sas_04");
SUnit_Sas_05 = script_unit:new(Army_Sas_01, "Sas_05");
SUnit_Sas_06 = script_unit:new(Army_Sas_01, "Sas_06");
SUnit_Sas_07 = script_unit:new(Army_Sas_01, "Sas_07");
SUnit_Sas_08 = script_unit:new(Army_Sas_01, "Sas_08");
SUnit_Sas_09 = script_unit:new(Army_Sas_01, "Sas_09");

SUnit_Sas_10 = script_unit:new(Army_Sas_01, "Sas_10");
SUnit_Sas_11 = script_unit:new(Army_Sas_01, "Sas_11");
SUnit_Sas_12 = script_unit:new(Army_Sas_01, "Sas_12");
SUnit_Sas_13 = script_unit:new(Army_Sas_01, "Sas_13");
SUnit_Sas_14 = script_unit:new(Army_Sas_01, "Sas_14");
SUnit_Sas_15 = script_unit:new(Army_Sas_01, "Sas_15");
SUnit_Sas_16 = script_unit:new(Army_Sas_01, "Sas_16");
SUnit_Sas_17 = script_unit:new(Army_Sas_01, "Sas_17");
SUnit_Sas_18 = script_unit:new(Army_Sas_01, "Sas_18");
SUnit_Sas_19 = script_unit:new(Army_Sas_01, "Sas_19");
SUnit_Sas_20 = script_unit:new(Army_Sas_01, "Sas_20");
SUnit_Sas_21 = script_unit:new(Army_Sas_01, "Sas_21");
SUnit_Sas_22 = script_unit:new(Army_Sas_01, "Sas_22");
SUnit_Sas_23 = script_unit:new(Army_Sas_01, "Sas_23");
SUnit_Sas_24 = script_unit:new(Army_Sas_01, "Sas_24");
SUnit_Sas_25 = script_unit:new(Army_Sas_01, "Sas_25");
SUnit_Sas_26 = script_unit:new(Army_Sas_01, "Sas_26");
SUnit_Sas_27 = script_unit:new(Army_Sas_01, "Sas_27");
SUnit_Sas_28 = script_unit:new(Army_Sas_01, "Sas_28");

SUnit_Sas_30 = script_unit:new(Army_Sas_01, "Sas_30");
SUnit_Sas_31 = script_unit:new(Army_Sas_01, "Sas_31");
SUnit_Sas_32 = script_unit:new(Army_Sas_01, "Sas_32");

UC_Sas_01_All = unitcontroller_from_army(Army_Sas_01);
UC_Sas_01_All:take_control();

SUnits_Sas_All = script_units:new(
	"Sas_All",
	SUnit_Sas_01,
	SUnit_Sas_02,
	SUnit_Sas_03,
	SUnit_Sas_04,
	SUnit_Sas_05,
	SUnit_Sas_06,
	SUnit_Sas_07,
	SUnit_Sas_08,
	SUnit_Sas_09,
	SUnit_Sas_10,
	SUnit_Sas_11,
	SUnit_Sas_12,
	SUnit_Sas_13,
	SUnit_Sas_14,
	SUnit_Sas_15,
	SUnit_Sas_16,
	SUnit_Sas_17,
	SUnit_Sas_18,
	SUnit_Sas_19,
	SUnit_Sas_20,
	SUnit_Sas_21,
	SUnit_Sas_22,
	SUnit_Sas_23,
	SUnit_Sas_24,
	SUnit_Sas_25,
	SUnit_Sas_26,
	SUnit_Sas_27,
	SUnit_Sas_28,
	SUnit_Sas_30,
	SUnit_Sas_31,
	SUnit_Sas_32
);

SUnits_Sas_All_For_Attack_Groups = {	-- this will get destroyed
	-- SUnit_Sas_01,
	SUnit_Sas_02,
	SUnit_Sas_03,
	SUnit_Sas_04,
	SUnit_Sas_05,
	SUnit_Sas_06,
	SUnit_Sas_07,
	SUnit_Sas_10,
	SUnit_Sas_11,
	SUnit_Sas_12,
	SUnit_Sas_13,
	SUnit_Sas_14,
	SUnit_Sas_15,
	SUnit_Sas_16,
	SUnit_Sas_17,
	SUnit_Sas_18,
	SUnit_Sas_19,
	SUnit_Sas_20,
	SUnit_Sas_21,
	SUnit_Sas_22,
	SUnit_Sas_23,
	SUnit_Sas_24,
	SUnit_Sas_25,
	SUnit_Sas_26,
	SUnit_Sas_27,
	SUnit_Sas_28,
	SUnit_Sas_30,
	SUnit_Sas_31,
	SUnit_Sas_32
};

SUnits_Sas_Cav_01 = script_units:new(
	"Sas_Cav_01",
	SUnit_Sas_02,
	SUnit_Sas_05,
	SUnit_Sas_06,
	SUnit_Sas_08,
	SUnit_Sas_09
);

SUnits_Sas_Ranged_Cav = script_units:new(
	"Sas_Ranged_Cav",
	SUnit_Sas_02,
	SUnit_Sas_03,
	SUnit_Sas_07
);

SUnits_Sas_Not_Ranged_Cav = script_units:new(
	"Sas_Not_Ranged_Cav",
	SUnit_Sas_01,
	SUnit_Sas_04,
	SUnit_Sas_05,
	SUnit_Sas_06,
	SUnit_Sas_08,
	SUnit_Sas_09,
	SUnit_Sas_10,
	SUnit_Sas_11,
	SUnit_Sas_12,
	SUnit_Sas_13,
	SUnit_Sas_14,
	SUnit_Sas_15,
	SUnit_Sas_16,
	SUnit_Sas_17,
	SUnit_Sas_18,
	SUnit_Sas_19,
	SUnit_Sas_20,
	SUnit_Sas_21,
	SUnit_Sas_22,
	SUnit_Sas_23,
	SUnit_Sas_24,
	SUnit_Sas_25,
	SUnit_Sas_26,
	SUnit_Sas_27,
	SUnit_Sas_28,
	SUnit_Sas_30,
	SUnit_Sas_31,
	SUnit_Sas_32
);

--
--  Set up the random Sassanid attack groups
--

function Do_Not_Assign_Into_Attack_Group(sunits)
	for i = 1, sunits:num_sunits() do
		sunits:get_sunit(i).do_not_assign_into_attack_group = true;
	end;
end;


function Assign_Attack_Groups(sunits, number_of_groups)
	local attack_groups = {};
	
	for i = 1, number_of_groups do
		table.insert(attack_groups, {});
	end;
	
	sunits = random_sort(sunits);
	
	local current_group_pointer = 0;

	for i = 1, #sunits do
		local current_sunit = sunits[i];
		
		if not current_sunit.do_not_assign_into_attack_group then
			current_group_pointer = current_group_pointer + 1;
			
			if current_group_pointer > number_of_groups then
				current_group_pointer = 1;
			end;
			
			table.insert(attack_groups[current_group_pointer], current_sunit);
		end;
	end;
	
	-- explicitly add the Persian general to the last attack group, otherwise he has a tendency to suicide
	table.insert(attack_groups[#attack_groups], SUnit_Sas_01);
	
	return attack_groups;
end;

Do_Not_Assign_Into_Attack_Group(SUnits_Sas_Cav_01);

Attack_Groups = Assign_Attack_Groups(SUnits_Sas_All_For_Attack_Groups, 5);
Attack_SAI_Planners = {};

--
--  Set up the random attack routes
--


POS_Settlement_Entry_A = v(-20, -30);
POS_Settlement_Entry_B = v(-8, 380);

Attack_Routes = {};

Attack_Route_A = {
	v(250, -290),
	v(230, -140),
	v(125, -55),
	POS_Settlement_Entry_A,
	POS_Settlement_Entry_B
}

Attack_Route_B = {
	v(95, -305),
	v(70, -160),
	v(70, -90),
	POS_Settlement_Entry_A,
	POS_Settlement_Entry_B
}

Attack_Route_C = {
	v(-45, -310),
	v(-40, -165),
	v(-40, -80),
	POS_Settlement_Entry_A,
	POS_Settlement_Entry_B
}

Attack_Route_D = {
	v(-150, -275),
	v(-165, -178),
	v(-150, -90),
	POS_Settlement_Entry_A,
	POS_Settlement_Entry_B
}

Attack_Route_E = {
	v(-240, -290),
	v(-280, -150),
	v(-215, -75),
	POS_Settlement_Entry_A,
	POS_Settlement_Entry_B
}

table.insert(Attack_Routes, Attack_Route_A);
table.insert(Attack_Routes, Attack_Route_A);
table.insert(Attack_Routes, Attack_Route_B);
table.insert(Attack_Routes, Attack_Route_C);
table.insert(Attack_Routes, Attack_Route_D);
table.insert(Attack_Routes, Attack_Route_E);
table.insert(Attack_Routes, Attack_Route_E);

Attack_Group_Interval = 20000;



Area_Trench_Defence = convex_area:new(
	{		
		v(-300, 20),
		v(160, 20),
		v(160, -120),
		v(-300, -120)
	}
);


Area_Settlement = convex_area:new(
	{
		v(205, 0),
		v(-230, -25),
		v(-230, 500),
		v(-10, 650),
		v(205, 480)
	}
);






SUnit_Byz_01.POS_Intro_Walkon_01 = v(-7.1, 188.6);
SUnit_Byz_01.Orient_Intro_Walkon_01 = r_to_d(3.14);
SUnit_Byz_01.Width_Intro_Walkon_01 = 13.5;

SUnit_Byz_02.POS_Intro_Walkon_01 = v(-7.2, 224.6);
SUnit_Byz_02.Orient_Intro_Walkon_01 = r_to_d(3.14);
SUnit_Byz_02.Width_Intro_Walkon_01 = 13.5;

SUnit_Byz_03.POS_Intro_Walkon_01 = v(-7.0, 260.8);
SUnit_Byz_03.Orient_Intro_Walkon_01 = r_to_d(3.14);
SUnit_Byz_03.Width_Intro_Walkon_01 = 13.5;

SUnit_Byz_10.POS_Intro_Walkon_01 = v(-4.6, 298.3);
SUnit_Byz_10.Orient_Intro_Walkon_01 = r_to_d(3.14);
SUnit_Byz_10.Width_Intro_Walkon_01 = 10.1;

SUnit_Byz_11.POS_Intro_Walkon_01 = v(-4.2, 327.5);
SUnit_Byz_11.Orient_Intro_Walkon_01 = r_to_d(3.14);
SUnit_Byz_11.Width_Intro_Walkon_01 = 9.6;

SUnit_Byz_12.POS_Intro_Walkon_01 = v(-3.8, 351.8);
SUnit_Byz_12.Orient_Intro_Walkon_01 = r_to_d(3.14);
SUnit_Byz_12.Width_Intro_Walkon_01 = 13.9;

POS_Intro_Walkon_01_Destination = v(-7.0, 110);

function Teleport_Byz_Intro_Walkon_01()
	for i = 1, SUnits_Byz_All:num_sunits() do
		local current_sunit = SUnits_Byz_All:get_sunit(i);
		
		if current_sunit.POS_Intro_Walkon_01 then
			current_sunit.uc:teleport_to_location(current_sunit.POS_Intro_Walkon_01, current_sunit.Orient_Intro_Walkon_01, current_sunit.Width_Intro_Walkon_01);
			current_sunit.uc:goto_location(POS_Intro_Walkon_01_Destination);
		else
			current_sunit.uc:set_invisible_to_all(true);
		end;
	end;
end;






SUnit_Byz_01.POS_Intro_Walkon_02 = v(67.8312,204.039)
SUnit_Byz_01.Orient_Intro_Walkon_02 = r_to_d(-3.13488)
SUnit_Byz_01.Width_Intro_Walkon_02 = 21.2484
SUnit_Byz_01.Intro_Walkon_02_Should_Not_Move = true


SUnit_Byz_02.POS_Intro_Walkon_02 = v(46.6265,203.915)
SUnit_Byz_02.Orient_Intro_Walkon_02 = r_to_d(3.12597)
SUnit_Byz_02.Width_Intro_Walkon_02 = 19.1256
SUnit_Byz_02.Intro_Walkon_02_Should_Not_Move = true


SUnit_Byz_03.POS_Intro_Walkon_02 = v(26.7878,203.533)
SUnit_Byz_03.Orient_Intro_Walkon_02 = r_to_d(3.09481)
SUnit_Byz_03.Width_Intro_Walkon_02 = 19.4416
SUnit_Byz_03.Intro_Walkon_02_Should_Not_Move = true


SUnit_Byz_10.POS_Intro_Walkon_02 = v(-18.602,-7.89119)
SUnit_Byz_10.Orient_Intro_Walkon_02 = r_to_d(3.09135)
SUnit_Byz_10.Width_Intro_Walkon_02 = 16.5426


SUnit_Byz_11.POS_Intro_Walkon_02 = v(-27.1588,-1.84765)
SUnit_Byz_11.Orient_Intro_Walkon_02 = r_to_d(3.04246)
SUnit_Byz_11.Width_Intro_Walkon_02 = 16.933


SUnit_Byz_12.POS_Intro_Walkon_02 = v(-20.3683,17.637)
SUnit_Byz_12.Orient_Intro_Walkon_02 = r_to_d(-2.92223)
SUnit_Byz_12.Width_Intro_Walkon_02 = 16.0314


SUnit_Byz_13.POS_Intro_Walkon_02 = v(-28.73,6.7617)
SUnit_Byz_13.Orient_Intro_Walkon_02 = r_to_d(-2.9509)
SUnit_Byz_13.Width_Intro_Walkon_02 = 27.9287


SUnit_Byz_14.POS_Intro_Walkon_02 = v(-39.5572,-10.6346)
SUnit_Byz_14.Orient_Intro_Walkon_02 = r_to_d(-2.93939)
SUnit_Byz_14.Width_Intro_Walkon_02 = 14.4619


SUnit_Byz_15.POS_Intro_Walkon_02 = v(-35.0858,19.9724)
SUnit_Byz_15.Orient_Intro_Walkon_02 = r_to_d(-2.89357)
SUnit_Byz_15.Width_Intro_Walkon_02 = 14.7809


SUnit_Byz_16.POS_Intro_Walkon_02 = v(-44.4021,4.76596)
SUnit_Byz_16.Orient_Intro_Walkon_02 = r_to_d(-2.80623)
SUnit_Byz_16.Width_Intro_Walkon_02 = 12.9726


SUnit_Byz_17.POS_Intro_Walkon_02 = v(-29.1505,24.9725)
SUnit_Byz_17.Orient_Intro_Walkon_02 = r_to_d(-3.00794)
SUnit_Byz_17.Width_Intro_Walkon_02 = 12.8579


SUnit_Byz_18.POS_Intro_Walkon_02 = v(-9.0882,47.7506)
SUnit_Byz_18.Orient_Intro_Walkon_02 = r_to_d(-2.92578)
SUnit_Byz_18.Width_Intro_Walkon_02 = 13.1983


SUnit_Byz_19.POS_Intro_Walkon_02 = v(-43.1836,20.514)
SUnit_Byz_19.Orient_Intro_Walkon_02 = r_to_d(-2.96288)
SUnit_Byz_19.Width_Intro_Walkon_02 = 10.8718


SUnit_Byz_30.POS_Intro_Walkon_02 = v(31.6001,195.402)
SUnit_Byz_30.Orient_Intro_Walkon_02 = r_to_d(1.14492)
SUnit_Byz_30.Width_Intro_Walkon_02 = 36.6351
SUnit_Byz_30.Intro_Walkon_02_Should_Not_Move = true


SUnit_Byz_31.POS_Intro_Walkon_02 = v(31.1485,196.493)
SUnit_Byz_31.Orient_Intro_Walkon_02 = r_to_d(1.28548)
SUnit_Byz_31.Width_Intro_Walkon_02 = 33.8113
SUnit_Byz_31.Intro_Walkon_02_Should_Not_Move = true


SUnit_Byz_32.POS_Intro_Walkon_02 = v(31.7835,30.6075)
SUnit_Byz_32.Orient_Intro_Walkon_02 = r_to_d(3.12855)
SUnit_Byz_32.Width_Intro_Walkon_02 = 42.6983


SUnit_Byz_33.POS_Intro_Walkon_02 = v(-96.5945,27.2013)
SUnit_Byz_33.Orient_Intro_Walkon_02 = r_to_d(-3.13296)
SUnit_Byz_33.Width_Intro_Walkon_02 = 48.1228


function Teleport_Byz_Intro_Walkon_02()	
	for i = 1, SUnits_Byz_All:num_sunits() do
		local current_sunit = SUnits_Byz_All:get_sunit(i);
				
		if current_sunit.POS_Intro_Walkon_02 then	
			current_sunit.uc:teleport_to_location(current_sunit.POS_Intro_Walkon_02, current_sunit.Orient_Intro_Walkon_02, current_sunit.Width_Intro_Walkon_02);
			
			if not current_sunit.Intro_Walkon_02_Should_Not_Move then
				current_sunit:goto_start_location(true);
			end;
		end;
	end;
end;


function Teleport_Byz_Army_Intro_Battle_Start()
	SUnits_Byz_All:teleport_to_start_location();
	--[[
	for i = 1, SUnits_Byz_All:num_sunits() do
		local current_sunit = SUnits_Byz_All:get_sunit(i);
				
		current_sunit:teleport_to_start_location();
	end;
	]]
end;


function Set_Byz_Army_Invisible(value)
	SUnits_Byz_All:set_enabled(not value);
	
	
	--[[
	for i = 1, #SUnits_Byz_All:num_sunits() do
		local current_sunit = SUnits_Byz_All[i];
		current_sunit.uc:set_invisible_to_all(value);
	end;
	]]
end;


function Set_Sas_Army_Always_Visible(value)
	SUnits_Sas_All:set_always_visible(value);

	--[[
	if value then
		for i = 1, #SUnits_Sas_All do
			local current_sunit = SUnits_Sas_All[i];
			current_sunit.uc:set_always_visible_to_all(value);
		end;
	end;
	]]
end;


function Teleport_Sas_Intro_Walkon_01()
	SUnits_Sas_All:teleport_to_start_location_offset(0, -100, -0.05);
	SUnits_Sas_All:goto_start_location();
	
	--[[
	for i = 1, #SUnits_Sas_All do
		local current_sunit = SUnits_Sas_All[i];
		current_sunit:teleport_to_start_location_offset(0, -100);
		current_sunit:goto_start_location();
	end;
	]]
end;


function Teleport_Sas_Army_Intro_Battle_Start()
	SUnits_Sas_All:teleport_to_start_location();
	
	--[[
	for i = 1, #SUnits_Sas_All do
		local current_sunit = SUnits_Sas_All[i];
				
		current_sunit:teleport_to_start_location();
	end;
	]]
end;






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\da_dara\da_main.lua


-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	MAIN BATTLE SCRIPT
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------



-- called at start of deployment phase
function Deployment_Phase()
	bm:out("Battle is in deployment phase");
end;



-- end of deployment phase i.e. battle start
function End_Deployment_Phase()
		
	-- launch cutscene, or straight into battle without it
	Play_Cutscene_Intro();
	-- Start_Battle_No_Cutscene();
end;


function Start_Battle_No_Cutscene()
	cam:fade(false, 0.5);
	
	Start_Battle();
end;


-- the interactive battle has started
function Start_Battle()
	bm:out("Battle is Starting");
		
	-- give the player more starting ammo
	SUnits_Byz_Ranged:modify_ammo(1.5);
	
	--start rout manager
	bm:start_rout_manager(1);
	
	-- register victory and defeat VO callbacks
	bm:setup_victory_callback(function() Battle_Is_Ending() end);
	
	-- startup advice
	-- Man the trenches, men! The enemy advance!
	bm:callback(function() bm:queue_advisor("Att.HB.DA.001", 8000) end, 2000);
			
	-- advice on enemy general dying
	bm:watch(
		function()
			return not Army_Sas_01:is_commander_alive()
		end,
		0,
		function()
			-- The enemy general is dead, slain in the midst of battle! His army will surely lose heart!
			bm:stop_advisor_queue();
			bm:queue_advisor("Att.HB.DA.003", 15000);
		end,
		"General_Health_Monitor"
	);
	
	-- advice on player general dying
	bm:watch(
		function()
			return not Army_Byz_01:is_commander_alive()
		end,
		0,
		function()
			-- General Belisarius has been hurt in the fighting and carried from the field! His loss will be keenly felt!
			bm:stop_advisor_queue();
			bm:queue_advisor("Att.HB.DA.004", 15000);
		end,
		"General_Health_Monitor"
	);
	
	Start_Sassanid_Advance();
	
	Watch_For_Player_Retreating_From_Trenches();
	
	-- advice about the enemy entering the city
	bm:watch(
		function() return Area_Settlement:standing_is_in_area(SUnits_Sas_All.sunit_list) end,
		0,
		function()
			-- The enemy have entered the city, commander! They must be stopped!
			bm:queue_advisor("Att.HB.DA.005", 10000);
		end,
		"City_Entry_Advice"
	);
	
	-- bm:callback(function() rout_all_units(Alliance_Sas) end, 10000);
end;


function Start_Sassanid_Advance()
	
	bm:out("Start_Sassanid_Advance() called");
	
	-- send the cavalry to attack the flank
	SAI_Sas_Cav_01 = script_ai_planner:new("SAI_Sas_Cav_01", SUnits_Sas_Cav_01.sunit_list);
	SAI_Sas_Cav_01:set_debug();
	bm:callback(
		function()
			SAI_Sas_Cav_01:patrol(Attack_Route_E, SUnits_Byz_All.sunit_list);
		end,
		20000
	);
	
	Attack_Routes = random_sort(Attack_Routes);
	
	local current_attack_routes_pointer = 0;
	
	for i = 1, #Attack_Groups do
		local current_attack_group = Attack_Groups[i];
		local current_sai = script_ai_planner:new("SAI_Attack_Group_" .. tostring(i), current_attack_group);
		current_sai:set_debug();
		current_sai:set_patrol_waypoint_distance(50);
		current_sai:set_patrol_enemy_distance(75);
		current_sai:set_patrol_defend_radius(40);
		
		table.insert(Attack_SAI_Planners, current_sai);
		
		current_attack_routes_pointer = current_attack_routes_pointer + 1;
		
		if current_attack_routes_pointer > #Attack_Routes then
			current_attack_routes_pointer = 1;
		end;
		
		local current_attack_route = Attack_Routes[current_attack_routes_pointer];
		
		local sunit_str = "";
		local sunit_str_empty = true;
		local route_str = "";
		local route_str_empty = true;
		
		for j = 1, #current_attack_group do
			if sunit_str_empty then
				sunit_str = current_attack_group[j].name;
				sunit_str_empty = false;
			else
				sunit_str = sunit_str .. "|" .. current_attack_group[j].name;
			end;
		end;
		
		for j = 1, #current_attack_route do
			if route_str_empty then
				route_str = v_to_s(current_attack_route[j]);
				route_str_empty = false;
			else
				route_str = route_str .. "|" .. current_attack_group[j].name;
			end;
		end;
		
		local attack_time = (i - 1) * Attack_Group_Interval;
		
		bm:out("\tSending Attack Group containing the sunits [" .. sunit_str .. "] will proceed on route [" .. route_str .. "] in " .. tostring(attack_time) .. "ms");
		
		bm:callback(
			function() 
				current_sai:patrol(current_attack_route, SUnits_Byz_All.sunit_list);
			end,
			attack_time,
			"Attack_Groups_Start_Patrol"
		);
	end;
	
	
	-- if all the Sassanid army are routing (bar ranged cav) and less than 6 of the player's units are, victory is fairly assured for
	-- the player and we should rout the remaining Sassanid cav if they're not in the settlement
	bm:watch(
		function()
			return is_shattered_or_dead(SUnits_Sas_Not_Ranged_Cav.sunit_list) and num_units_shattered(SUnits_Byz_All.sunit_list) < 6;
		end,
		20000,
		function()
			Rout_Sassanid_Ranged_On_Battle_Victory();
		end,
		"Sassanid_Ranged_Watch"
	);
end;


function Rout_Sassanid_Ranged_On_Battle_Victory()
	
	for i = 1, SUnits_Sas_Ranged_Cav:num_sunits() do
		local current_sunit = SUnits_Sas_Ranged_Cav:get_sunit(i);
		
		if not is_routing_or_dead(current_sunit.unit) and not Area_Settlement:is_in_area(current_sunit.unit:position()) then
			bm:out("Rout_Sassanid_Ranged_On_Battle_Victory() is routing [" .. current_sunit.name .. "] at position [" .. v_to_s(current_sunit.unit:position()) .. "]");
			current_sunit.uc:morale_behavior_rout();
		end;
	end;
	
	bm:callback(function() Rout_Sassanid_Ranged_On_Battle_Victory() end, 20000, "Sassanid_Ranged_Watch");	
end;


function Watch_For_Player_Retreating_From_Trenches()
	local num_player_foot_units = SUnits_Byz_Inf:num_sunits();
	local num_enemy_units = SUnits_Sas_All:num_sunits();
	
	bm:watch(
		function()
			-- return true if the Sassanids have more than ten units left and less than half of the player's non-routing infantry are in the combat area
			local num_player_units_standing = num_player_foot_units - num_units_routing(SUnits_Byz_Inf.sunit_list);
			local num_enemy_units_standing = num_enemy_units - num_units_routing(SUnits_Sas_All.sunit_list);
			local retval = (num_enemy_units_standing > 10 and Area_Trench_Defence:number_in_area(SUnits_Byz_Inf.sunit_list) < num_player_units_standing / 2);			
			return retval;
		end,
		5,
		function()
			Player_Is_Retreating_From_Trenches();
		end,
		"Player_Retreating_Watch"
	);
end;


function Player_Is_Retreating_From_Trenches()
	bm:out("*** Player is retreating from trenches! ***");
	
	-- make each of the enemy units fearless until they are down to 20% strength
	for i = 1, SUnits_Sas_All:num_sunits() do
		unit_fearless_until_casualties(SUnits_Sas_All:get_sunit(i), 0.1);
	end;
	
	-- put the whole Sassanid army into a force and tells them to enter the settlement
	SAI_Sas_All = script_ai_planner:new("SAI_Sas_All", SUnits_Sas_All.sunit_list);
	SAI_Sas_All:set_debug();
	SAI_Sas_All:defend_position(POS_Settlement_Entry_B, 200);
end;












BOOL_Battle_Is_Ending = false;

-- the game has gone to victory countdown phase, someone has won
function Battle_Is_Ending()
	bm:remove_process("Sassanid_Ranged_Watch");
	bm:remove_process("Player_Retreating_Watch");
	bm:remove_process("City_Entry_Advice");

	if not BOOL_Battle_Is_Ending then
		BOOL_Battle_Is_Ending = true;
					
		if is_routing_or_dead(Alliance_Byz) then	
			bm:out("Player has lost, army is routing");
		
			bm:stop_advisor_queue();
			-- This battle is lost! Fall back, men! Fall back!
			bm:queue_advisor("Att.HB.DA.007", 8000);
							
			bm:callback(function() bm:end_battle() end, 10000);
		else
			bm:out("Player has won !");
		
			bm:stop_advisor_queue();
						
			-- The enemy retreat in disarray! The battle is ours!
			bm:queue_advisor("Att.HB.DA.006", 8000);

			bm:callback(
				function()
					bm:end_battle();
				end,
				12000
			);
		end;
	end;
end;






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\da_dara\da_start.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	INITIAL SCRIPT SETUP
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

-- clear out loaded files
system.ClearRequiredFiles();

-- load in battle script library
require "lua_scripts.Battle_Script_Header";

-- declare battlemanager object
bm = battle_manager:new(empire_battle:new());

-- get battle name from folder, and print header
battle_name, battle_shortform = get_folder_name_and_shortform();

bm:out("==============");
bm:out("==============");
bm:out("==============");
bm:out("Script started: Battle of " .. battle_name);
bm:out("==============");

-- load in other script files associated with this battle
package.path = package.path .. ";data/Script/" .. battle_name .. "/?.lua";

require (battle_shortform .. "_Declarations");
require (battle_shortform .. "_Cutscenes");
require (battle_shortform .. "_Main");

-- register functions to be called on phase changes
bm:register_phase_change_callback("Deployment", function() Deployment_Phase() end);			-- optional deployment phase callback
bm:setup_battle(function() End_Deployment_Phase() end);										-- called when battle starts








C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\fr_frigidus_river\fr_cutscenes.lua

function Play_Cutscene_Intro()

	bm:out("Play_Cutscene_Intro() called");

	POS_Cam_Cutscene_Intro_Final = v(-61.9, 440.6, 384.0);
	Targ_Cam_Cutscene_Intro_Final = v(-59.1, 385.0, 249.7);

	
	
	SFX_Att_HB_FR_Intro_02 = new_sfx("Play_Att_HB_FR_Intro_02_1");
	SFX_Att_HB_FR_Intro_03 = new_sfx("Play_Att_HB_FR_Intro_03_1");
	SFX_Att_HB_FR_Intro_04 = new_sfx("Play_Att_HB_FR_Intro_04_1");
	SFX_Att_HB_FR_Intro_05 = new_sfx("Play_Att_HB_FR_Intro_05_1");


	
	local Cutscene_Intro = cutscene:new(
		"Cutscene_Intro", 							-- unique string name for cutscene
		ga_eastrome_01:get_unitcontroller(),		-- unitcontroller over player's army
		35000 										-- duration of cutscene in ms
	);

	

	Cutscene_Intro:set_skippable(true, function() Skip_Cutscene_Intro() end);
	Cutscene_Intro:set_skip_camera(POS_Cam_Cutscene_Intro_Final, Targ_Cam_Cutscene_Intro_Final);
	--Cutscene_Intro:set_debug();



	cam = Cutscene_Intro:camera();
	local subtitles = Cutscene_Intro:subtitles();
	subtitles:set_alignment("bottom_centre");
	subtitles:clear();
	
	
	
	Cutscene_Intro:action(function() cam:fade(false, 0.5) end, 0);	
	
	Cutscene_Intro:action(function() ga_eastrome_01:teleport_to_start_location_offset(0, -70); end, 0);	
	Cutscene_Intro:action(function() ga_visigoths_01:teleport_to_start_location_offset(0, -70); end, 0);	
	Cutscene_Intro:action(function() ga_westrome_01:teleport_to_start_location_offset(0, -70); end, 0);	
	Cutscene_Intro:action(function() ga_westrome_01:set_visible_to_all(true); end, 0);
	
	Cutscene_Intro:action(function() ga_eastrome_01:goto_start_location(false); end, 0);
	Cutscene_Intro:action(function() ga_visigoths_01:goto_start_location(false); end, 0);
	Cutscene_Intro:action(function() ga_westrome_01:goto_start_location(false); end, 0);
	
	
	
	Cutscene_Intro:action(function() cam:move_to(v(398.1, 339.6, -21.8), v(396.8, 334.1, -69.7), 0, true, 35) end, 0);
	Cutscene_Intro:action(function() cam:move_to(v(398.1, 339.6, -21.8), v(396.8, 334.1, -69.7), 7, true, 33) end, 0);
	
	-- 6 September, AD394
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.FR.Intro_01") end, 3000);
	
	

	Cutscene_Intro:action(function() subtitles:clear() end, 6000);	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 6000);	
	
	Cutscene_Intro:action(function() cam:move_to(v(41.9, 279.5, -420.6), v(4.9, 273.1, -450.4), 0, true, 35) end, 6000);
	Cutscene_Intro:action(function() cam:move_to(v(41.9, 279.5, -420.6), v(4.9, 273.1, -450.4), 7, true, 33) end, 6000);
	
	-- Pagan-sympathiser Eugenius, leader of the Western Empire, contests the Christianisation of Rome.
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.FR.Intro_02") end, 7000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Att_HB_FR_Intro_02) end, 7000);
	
	Cutscene_Intro:action(function() cam:move_to(v(-42.8, 275.2, -462.2), v(-50.3, 266.0, -508.6), 0, true, 35) end, 9000);
	Cutscene_Intro:action(function() cam:move_to(v(-38.9, 276.5, -461.5), v(-60.3, 264.0, -502.5), 14, true, 33) end, 9000);
	
	

	Cutscene_Intro:action(function() subtitles:clear() end, 14000);	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 14000);
	
	Cutscene_Intro:action(function() cam:move_to(v(30.3, 389.8, 288.9), v(-6.5, 387.8, 319.7), 0, true, 35) end, 14000);
	Cutscene_Intro:action(function() cam:move_to(v(27.9, 391.5, 281.8), v(0.4, 390.2, 321.1), 15, true, 33) end, 14000);
	
	-- The Eastern Emperor Theodosius I, a devout Christian, ahs marched an army from the East to challenge Eugenius.
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.FR.Intro_03") end, 15000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Att_HB_FR_Intro_03) end, 15000);
	
	

	Cutscene_Intro:action(function() subtitles:clear() end, 21000);	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 21000);
	
	Cutscene_Intro:action(function() cam:move_to(v(5.4, 404.0, 409.6), v(-1.6, 403.4, 406.5), 0, true, 35) end, 21000);
	Cutscene_Intro:action(function() cam:move_to(v(5.0, 404.7, 413.4), v(-0.0, 403.8, 407.7), 14, true, 33) end, 21000);
	
	-- Theodosius' legions are bolstered by his Visigothic allies, led by their chieftain Alaric.
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.FR.Intro_04") end, 22000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Att_HB_FR_Intro_04) end, 22000);
	
	

	Cutscene_Intro:action(function() subtitles:clear() end, 27000);	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 27000);
	
	Cutscene_Intro:action(function() ga_westrome_01:teleport_to_start_location_offset(); end, 27000);	
	Cutscene_Intro:action(function() ga_eastrome_01:teleport_to_start_location_offset(); end, 27000);
	Cutscene_Intro:action(function() ga_visigoths_01:teleport_to_start_location_offset(); end, 27000);
	Cutscene_Intro:action(function() ga_eastrome_01:set_visible_to_all(false); end, 27000);
	Cutscene_Intro:action(function() ga_visigoths_01:set_visible_to_all(false); end, 27000);
		
	Cutscene_Intro:action(function() cam:move_to(v(30.9, 423.3, 215.1), v(16.8, 416.7, 232.3), 0, true, 0) end, 27000);	
	Cutscene_Intro:action(function() cam:move_to(POS_Cam_Cutscene_Intro_Final, Targ_Cam_Cutscene_Intro_Final, 2, false, 0) end, 33000);
	
	-- The two sides finally clash on the banks of the Frigidus River. The future of the Empire will be decided on this battlefield.
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.FR.Intro_05") end, 28000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Att_HB_FR_Intro_05) end, 28000);
	
	

	Cutscene_Intro:action(function() subtitles:clear() end, 35000);	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 35000);
	
	
	
	Cutscene_Intro:start();
end;


function Skip_Cutscene_Intro()
	
	cam:fade(true, 0);
	
	ga_eastrome_01:teleport_to_start_location_offset();
	ga_visigoths_01:teleport_to_start_location_offset();
	ga_westrome_01:teleport_to_start_location_offset();
	ga_westrome_01:set_visible_to_all(false);
	
	stop_sound(SFX_Att_HB_FR_Intro_02);
	stop_sound(SFX_Att_HB_FR_Intro_03);
	stop_sound(SFX_Att_HB_FR_Intro_04);
	stop_sound(SFX_Att_HB_FR_Intro_05);
		
	bm:callback(function() cam:fade(false, 0.5) end, 1000);
end;






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\fr_frigidus_river\fr_start.lua

system.ClearRequiredFiles();
require "lua_scripts.Battle_Script_Header";

-- declare battlemanager object
bm = battle_manager:new(empire_battle:new());

-- get battle name from folder, and print header
battle_name, battle_shortform = get_folder_name_and_shortform();

-- load in other script files associated with this battle
package.path = package.path .. ";data/Script/" .. battle_name .. "/?.lua";

require (battle_shortform .. "_Cutscenes");

gb = generated_battle:new(
	true,                                      -- screen starts black. Should match the prepare_for_fade_in flag in the battle xml
	true,                                      -- prevents deployment. Set to false if you want the player to be able to deploy.
	function() Play_Cutscene_Intro() end,      -- intro cutscene callback. Supply a function that runs your intro cutscene here
	false                                      -- debug mode
);

ga_eastrome_01 = gb:get_army(1, 1);
ga_visigoths_01 = gb:get_army(1, 2);

ga_westrome_01 = gb:get_army(2, 1);


-- fade camera in from black on battle start
gb:fade_in_on_message("cutscene_ended", 0.5);


-- advice on battle start
gb:advice_on_message("cutscene_ended", "Att.HB.FR.001", 5000);


-- make army attack on battle start
ga_westrome_01:attack_on_message("cutscene_ended");
ga_visigoths_01:attack_on_message("cutscene_ended");


-- advice on player's general dying
ga_eastrome_01:message_on_commander_death("player_general_dies");
gb:advice_on_message("player_general_dies", "Att.HB.FR.003", 5000);


-- advice on enemy general dying
ga_eastrome_01:message_on_commander_death("enemy_general_dies");
gb:advice_on_message("enemy_general_dies", "Att.HB.FR.002", 5000);


-- advice on player winning
ga_eastrome_01:message_on_victory("player_wins");
gb:advice_on_message("player_wins", "Att.HB.FR.004");


-- advice on player losing
ga_eastrome_01:message_on_defeat("player_loses");
gb:advice_on_message("player_loses", "Att.HB.FR.005");






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\po_prologue_olbia\po_cutscenes.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	CUTSCENES SCRIPT
--
--	Declare intro and other cutscenes
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------



POS_Cam_Cutscene_Intro_Final = v(249.0, 40.6, -15.8);
Targ_Cam_Cutscene_Intro_Final = v(169.2, 9.8, -14.6);

SFX_Att_Pro_Olbia_Intro_02 = new_sfx("Play_Att_Pro_Olbia_Intro_02_1");
SFX_Att_Pro_Olbia_Intro_03 = new_sfx("Play_Att_Pro_Olbia_Intro_03_1");
SFX_Att_Pro_Olbia_Intro_04 = new_sfx("Play_Att_Pro_Olbia_Intro_04_1");
SFX_Att_Pro_Olbia_Intro_05 = new_sfx("Play_Att_Pro_Olbia_Intro_05_1");


Cutscene_Intro_Duration = 33000;

Cutscene_Intro = cutscene:new(
	"Cutscene_Intro", 							-- unique string name for cutscene
	UC_Vgt_01_All, 								-- unitcontroller over player's army
	Cutscene_Intro_Duration, 					-- duration of cutscene in ms
	function() Start_Battle() end 				-- what to call when cutscene is finished
);



-- Cutscene_Intro:set_debug();
Cutscene_Intro:set_skip_camera(POS_Cam_Cutscene_Intro_Final, Targ_Cam_Cutscene_Intro_Final);
Cutscene_Intro:set_skippable(true, function() Cutscene_Intro_Skipped() end);
Cutscene_Intro:set_should_release_players_army(false);

function Play_Cutscene_Intro()

	Cutscene_Intro:action(function() cam:fade(false, 0.5) end, 0);
	Cutscene_Intro:action(function() cam:move_to(v(286.9, 25.2, -365.5), v(193.3, 20.3, -318.8), 0, true, 40) end, 0);
	Cutscene_Intro:action(function() cam:move_to(v(286.9, 25.2, -365.5), v(193.3, 20.3, -318.8), 6, true, 38) end, 0);
	
	Cutscene_Intro:action(function() Teleport_Visigoth_Units_Cutscene_Intro_Start() end, 0);
	Cutscene_Intro:action(function() Move_Visigoth_Units_Cutscene_Intro_Start() end, 500);
	
	-- 370AD
	Cutscene_Intro:action(function() subtitles:set_text("Att.Pro.Olbia.Intro_01") end, 500);
	
	Cutscene_Intro:action(function() subtitles:clear() end, 4500);
	
	-- Olbia, on the Black Sea coast, is the principle settlement of the Visigothic people.
	Cutscene_Intro:action(function() subtitles:set_text("Att.Pro.Olbia.Intro_02") end, 5000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Att_Pro_Olbia_Intro_02) end, 5000);
	
	Cutscene_Intro:action(function() cam:move_to(v(244.0, 42.3, -433.9), v(194.9, 30.2, -342.1), 0, true, 40) end, 5000);
	Cutscene_Intro:action(function() cam:move_to(v(176.5, 42.3, -307.8), v(127.4, 30.2, -216.0), 16, true, 40) end, 5000);
	
	Cutscene_Intro:action(function() cam:move_to(v(-22.1, 10.8, -60.8), v(19.2, 10.2, 36.5), 0, true, 30) end, 8000);
	Cutscene_Intro:action(function() cam:move_to(v(-22.1, 10.8, -60.8), v(19.2, 10.2, 36.5), 4, true, 28) end, 8000);
	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 11000);
	Cutscene_Intro:action(function() subtitles:clear() end, 11000);
	
	-- The Visigothic soldiers are on full alert. The latest battle of a long civil war is looming.
	Cutscene_Intro:action(function() subtitles:set_text("Att.Pro.Olbia.Intro_03") end, 11500);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Att_Pro_Olbia_Intro_03) end, 11500);
	
	Cutscene_Intro:action(function() cam:move_to(v(-40.1, 11.2, -43.2), v(63.5, 4.1, -56.9), 0, true, 30) end, 11500);
	Cutscene_Intro:action(function() cam:move_to(v(-40.1, 12.7, -43.2), v(63.0, -0.1, -56.5), 3, true, 30) end, 11500);
	
	Cutscene_Intro:action(function() cam:move_to(v(-76.3, 10.3, -126.1), v(-19.4, 14.4, -168.7), 0, true, 35) end, 14500);
	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 18000);
	Cutscene_Intro:action(function() subtitles:clear() end, 18000);
	
	-- The Ostrogoths, a rival faction of the Gothic peoples, are attacking once again.
	Cutscene_Intro:action(function() subtitles:set_text("Att.Pro.Olbia.Intro_04") end, 18500);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Att_Pro_Olbia_Intro_04) end, 18500);
	
	Cutscene_Intro:action(function() Ostrogoth_Units_Cheer_Cutscene_Intro() end, 18500);
	
	Cutscene_Intro:action(function() cam:move_to(v(35.6, 18.7, -164.1), v(-62.6, 14.4, -127.6), 0, true, 30) end, 18500);
	Cutscene_Intro:action(function() cam:move_to(v(25.4, 18.7, -160.3), v(-72.9, 17.4, -123.8), 6, true, 30) end, 18500);
	
	Cutscene_Intro:action(function() cam:move_to(v(-373.8, 34.1, 6.2), v(-431.3, 31.6, -5.7), 0, true, 30) end, 21000);
	Cutscene_Intro:action(function() cam:move_to(v(-385.8, 34.1, 3.7), v(-443.3, 31.6, -8.2), 4, true, 30) end, 21000);
	
	Cutscene_Intro:action(function() cam:move_to(v(-825.2, 35.9, -59.4), v(-860.7, 29.9, -105.9), 0, true, 35) end, 23500);
	Cutscene_Intro:action(function() cam:move_to(v(-824.9, 35.0, -65.0), v(-860.3, 29.0, -111.5), 7, true, 35) end, 23500);
	
	Cutscene_Intro:action(function() Teleport_Visigoth_Units_Cutscene_Intro_End() end, 23500);
	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 25500);
	Cutscene_Intro:action(function() subtitles:clear() end, 25500);
	
	-- Olbia's defences must hold against the Ostrogoth attack if the Visigoths are to survive.
	Cutscene_Intro:action(function() subtitles:set_text("Att.Pro.Olbia.Intro_05") end, 26000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Att_Pro_Olbia_Intro_05) end, 26000);
	
	Cutscene_Intro:action(function() cam:move_to(v(-729.5, 44.8, -61.3), v(-787.3, 40.8, -71.1), 0, true, 50) end, 27000);
	Cutscene_Intro:action(function() cam:move_to(v(-729.5, 44.8, -61.3), v(-787.3, 40.8, -71.1), 2, true, 52) end, 27000);
	Cutscene_Intro:action(function() cam:move_to(POS_Cam_Cutscene_Intro_Final, Targ_Cam_Cutscene_Intro_Final, 5, false, 0) end, 28000);
	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, Cutscene_Intro_Duration);
	Cutscene_Intro:action(function() subtitles:clear() end, Cutscene_Intro_Duration);
	
	Cutscene_Intro:start();
end;


function Cutscene_Intro_Skipped()
	cam:fade(true, 0);
	
	Teleport_Visigoth_Units_Cutscene_Intro_End();
	
	bm:callback(function() cam:fade(false, 0.5) end, 500);
end;





















Cutscene_Visigoth_Intel = cutscene:new(
	"Cutscene_Visigoth_Intel", 					-- unique string name for cutscene
	UC_Vgt_01_All, 								-- unitcontroller over player's army
	8000, 										-- duration of cutscene in ms
	function() Visigoth_Intel_Delivered() end	-- what to call when cutscene is finished
);

Cutscene_Visigoth_Intel:set_restore_cam_time(2);
Cutscene_Visigoth_Intel:set_close_advisor_on_end(false);
Cutscene_Visigoth_Intel:set_should_release_players_army(false);
--Cutscene_Visigoth_Intel:set_debug();

function Play_Cutscene_Visigoth_Intel()
	bm:remove_ping_icon(POS_Marker_Visigoth:get_x(), POS_Marker_Visigoth:get_y(), POS_Marker_Visigoth:get_z());
	Camera_Objective_Completed();
	
	show_advisor_progress_button(false);
	Add_Units_Infotext();
	
	Cutscene_Visigoth_Intel:action(function() Visigoth_Units_Cheer_Cutscene_Visigoths() end, 0);
	Cutscene_Visigoth_Intel:action(function() cam:move_to(v(-112.7, 6.5, 73.6), v(-5.8, -7.6, -63.1), 2, false, 0) end, 0);
	
	Cutscene_Visigoth_Intel:action(function() cam:move_to(v(-120.2, 6.2, 1.7), v(-89.6, 4.8, 0.4), 0, false, 35) end, 3000);
	Cutscene_Visigoth_Intel:action(function() cam:move_to(v(-120.6, 6.2, -7.1), v(-90.0, 4.8, -8.4), 12, false, 35) end, 3000);
	
	-- Our forces are ready, Chieftain. They have sworn to a man that no Ostrogoth shall set foot in Olbia!
	Cutscene_Visigoth_Intel:action(function() bm:queue_advisor("Att.Pro.Olbia.AD.002", 6000) end, 500);
	
	Cutscene_Visigoth_Intel:start();
end;














Cutscene_Ostrogoth_Intel = cutscene:new(
	"Cutscene_Ostrogoth_Intel", 				-- unique string name for cutscene
	UC_Vgt_01_All, 								-- unitcontroller over player's army
	7000, 										-- duration of cutscene in ms
	function() Ostrogoth_Intel_Delivered() end	-- what to call when cutscene is finished
);

Cutscene_Ostrogoth_Intel:set_restore_cam_time(2);
Cutscene_Ostrogoth_Intel:set_close_advisor_on_end(false);
Cutscene_Ostrogoth_Intel:set_should_release_players_army(false);
--Cutscene_Ostrogoth_Intel:set_debug();

function Play_Cutscene_Ostrogoth_Intel()
	bm:remove_ping_icon(POS_Marker_Ostrogoth:get_x(), POS_Marker_Ostrogoth:get_y(), POS_Marker_Ostrogoth:get_z());
	Camera_Objective_Completed();
	
	show_advisor_progress_button(false);
	Add_Units_Infotext();
	
	Cutscene_Ostrogoth_Intel:action(function() Ostrogoth_Units_Cheer_Cutscene_Intro() end, 0);
	Cutscene_Ostrogoth_Intel:action(function() cam:move_to(v(-826.6, 39.3, -31.5), v(-866.7, 26.7, -96.2), 2, false, 45) end, 0);
	
	-- Our enemy attack with swords and spears. They mean to sack our town, but they come on foot. It will be a short while before they are upon us.
	Cutscene_Ostrogoth_Intel:action(function() bm:queue_advisor("Att.Pro.Olbia.AD.003", 6000) end, 500);
	
	Cutscene_Ostrogoth_Intel:action(function() cam:move_to(v(-827.2, 36.9, -46.7), v(-904.3, 32.9, -48.8), 0, false, 25) end, 3000);
	Cutscene_Ostrogoth_Intel:action(function() cam:move_to(v(-827.2, 36.8, -48.5), v(-904.2, 32.7, -50.7), 5, true, 25) end, 3000);
	
	Cutscene_Ostrogoth_Intel:start();
end;














POS_Cam_Cutscene_Ostrogoth_Battle_Start_Final = v(-28.7, 36.1, -5.4);
Targ_Cam_Cutscene_Ostrogoth_Battle_Start_Final = v(-100.0, 9.0, 2.8);


Cutscene_Ostrogoth_Battle_Start = cutscene:new(
	"Cutscene_Ostrogoth_Battle_Start", 				-- unique string name for cutscene
	UC_Vgt_01_All, 									-- unitcontroller over player's army
	6000, 											-- duration of cutscene in ms
	function() Start_Ostrogoth_Battle() end			-- what to call when cutscene is finished
);

Cutscene_Ostrogoth_Battle_Start:set_close_advisor_on_end(false);
Cutscene_Ostrogoth_Battle_Start:set_skip_camera(POS_Cam_Cutscene_Ostrogoth_Battle_Start_Final, Targ_Cam_Cutscene_Ostrogoth_Battle_Start_Final);
--Cutscene_Ostrogoth_Battle_Start:set_debug();

function Play_Cutscene_Ostrogoth_Battle_Start()
	show_advisor_progress_button(false);
	
	Cutscene_Ostrogoth_Battle_Start:action(function() cam:move_to(POS_Cam_Cutscene_Ostrogoth_Battle_Start_Final, Targ_Cam_Cutscene_Ostrogoth_Battle_Start_Final, 5, false, 0) end, 0);	
	
	Cutscene_Ostrogoth_Battle_Start:start();
end;











SFX_Att_Pro_Olbia_Ostrogoth_Victory_01 = new_sfx("Play_Att_Pro_Olbia_Ostrogoth_Victory_01_1");

Cutscene_Ostrogoth_Battle_Victory_Duration = 7000;

Cutscene_Ostrogoth_Battle_Victory = cutscene:new(
	"Cutscene_Ostrogoth_Battle_Victory", 				-- unique string name for cutscene
	UC_Vgt_01_All, 										-- unitcontroller over player's army
	Cutscene_Ostrogoth_Battle_Victory_Duration,			-- duration of cutscene in ms
	function() End_Ostrogoth_Battle() end				-- what to call when cutscene is finished
);

Cutscene_Ostrogoth_Battle_Victory:set_close_advisor_on_end(false);
Cutscene_Ostrogoth_Battle_Victory:set_skippable(true, function() Cutscene_Ostrogoth_Battle_Victory_Skipped() end);
Cutscene_Ostrogoth_Battle_Victory:set_call_end_callback_when_skipped(false);
--Cutscene_Ostrogoth_Battle_Victory:set_debug();

function Play_Cutscene_Ostrogoth_Battle_Victory()
	show_advisor_progress_button(false);

	local cam_target = v_offset(centre_point_table(SUnits_Vgt_Initial), 0, 0, 0);
	
	-- offset from camera target to camera
	local target_to_cam_x = 41;
	local target_to_cam_y = 15;
	local target_to_cam_z = 60;
	
	local cam_pos = v_offset(cam_target, target_to_cam_x, target_to_cam_y, target_to_cam_z);

	-- offset from camera target to final camera target
	local target_to_final_target_x = -21;
	local target_to_final_target_y = 9.5;
	local target_to_final_target_z = 15;
	
	local cam_final_targ = v_offset(cam_target, target_to_final_target_x, target_to_final_target_y, target_to_final_target_z);
	
	
	Cutscene_Ostrogoth_Battle_Victory:action(function() cam:fade(false, 0.5) end, 0);
	
	Cutscene_Ostrogoth_Battle_Victory:action(function() cam:move_to(cam_pos, cam_target, 0, false, 30) end, 0);
	Cutscene_Ostrogoth_Battle_Victory:action(function() cam:move_to(cam_pos, cam_final_targ, 12, true, 30) end, 0);
	
	-- The Ostrogoths run for their lives! Victory is ours!
	Cutscene_Ostrogoth_Battle_Victory:action(function() subtitles:set_text("Att.Pro.Olbia.Ostrogoth_Victory_01") end, 500);
	Cutscene_Ostrogoth_Battle_Victory:action(function() Cutscene_Ostrogoth_Battle_Victory:play_sound(SFX_Att_Pro_Olbia_Ostrogoth_Victory_01) end, 500);
	
	Cutscene_Ostrogoth_Battle_Victory:action(function() Cutscene_Ostrogoth_Battle_Victory:wait_for_vo() end, 6000);
	Cutscene_Ostrogoth_Battle_Victory:action(function() subtitles:clear() end, 6000);
	
	Cutscene_Ostrogoth_Battle_Victory:action(function() Enable_Initial_Hunnic_Attack() end, Cutscene_Ostrogoth_Battle_Victory_Duration - 1000);
	
	Cutscene_Ostrogoth_Battle_Victory:action(function() cam:fade(true, 0.5) end, Cutscene_Ostrogoth_Battle_Victory_Duration - 500);
	
	Cutscene_Ostrogoth_Battle_Victory:start();
end;


function Cutscene_Ostrogoth_Battle_Victory_Skipped()
	cam:fade(true, 0);
	
	Enable_Initial_Hunnic_Attack();
	
	bm:callback(function() Play_Cutscene_First_Hunnic_Attack() end, 1000);
end;

















SFX_Att_Pro_Olbia_First_Hunnic_Attack_01 = new_sfx("Play_Att_Pro_Olbia_First_Hunnic_Attack_01_1");


Cutscene_First_Hunnic_Attack = cutscene:new(
	"Cutscene_First_Hunnic_Attack", 					-- unique string name for cutscene
	UC_Vgt_01_All, 										-- unitcontroller over player's army
	19000, 												-- duration of cutscene in ms
	function() Start_First_Hunnic_Attack() end			-- what to call when cutscene is finished
);

Cutscene_First_Hunnic_Attack:set_close_advisor_on_end(false);
Cutscene_First_Hunnic_Attack:set_post_cutscene_fade_time(0);
Cutscene_First_Hunnic_Attack:set_skippable(true, function() Cutscene_First_Hunnic_Attack_Skipped() end);
-- Cutscene_First_Hunnic_Attack:set_debug();

function Play_Cutscene_First_Hunnic_Attack()
	show_advisor_progress_button(false);

	Cutscene_First_Hunnic_Attack:action(function() cam:fade(false, 0.5) end, 0);
	Cutscene_First_Hunnic_Attack:action(function() cam:move_to(v(-93.8, 19.3, 485.1), v(-74.8, 17.7, 402.2), 0, false, 40) end, 0);
	
	-- Chieftain! Another attack has been sighted!
	Cutscene_First_Hunnic_Attack:action(function() subtitles:set_text("Att.Pro.Olbia.First_Hunnic_Attack_01") end, 6000);
	Cutscene_First_Hunnic_Attack:action(function() Cutscene_First_Hunnic_Attack:play_sound(SFX_Att_Pro_Olbia_First_Hunnic_Attack_01) end, 6000);
	
	Cutscene_First_Hunnic_Attack:action(function() cam:move_to(v(-12.7, 14.7, 509.1), v(-113.2, 9.5, 563.1), 0, false, 35) end, 6000);
	Cutscene_First_Hunnic_Attack:action(function() cam:move_to(v(-12.7, 14.7, 509.1), v(-118.9, 8.8, 550.6), 4, false, 35) end, 6000);
	
	Cutscene_First_Hunnic_Attack:action(function() enable(SUnits_Hun_Initial_Cav, false) end, 7000);
	Cutscene_First_Hunnic_Attack:action(function() set_visible(SUnits_Hun_Initial_Cav, false) end, 7000);
	
	Cutscene_First_Hunnic_Attack:action(function() cam:move_to(v(-38.7, 15.3, 527.7), v(-7.8, -0.8, 418.3), 0, false, 35) end, 9000);
	Cutscene_First_Hunnic_Attack:action(function() cam:move_to(v(-38.7, 27.4, 527.7), v(-7.6, 17.0, 417.7), 10, false, 35) end, 9000);
	
	Cutscene_First_Hunnic_Attack:action(function() cam:fade(true, 0.5) end, 18500);
	
	Cutscene_First_Hunnic_Attack:action(function() subtitles:clear() end, 18000);
	
	Cutscene_First_Hunnic_Attack:start();
end;



function Cutscene_First_Hunnic_Attack_Skipped()
	cam:fade(true, 0);
end;











Cutscene_Town_Defenders = cutscene:new(
	"Cutscene_Town_Defenders", 							-- unique string name for cutscene
	UC_Vgt_01_All, 										-- unitcontroller over player's army
	4000, 												-- duration of cutscene in ms
	function() Town_Defenders_Advice_Issued() end		-- what to call when cutscene is finished
);

Cutscene_Town_Defenders:set_close_advisor_on_end(false);
Cutscene_Town_Defenders:set_restore_cam_time(2);
Cutscene_Town_Defenders:set_skippable(true);
-- Cutscene_Town_Defenders:set_debug();

function Play_Cutscene_Town_Defenders()
	show_advisor_progress_button(false);

	Cutscene_Town_Defenders:action(function() cam:move_to(v(146.6, 14.3, -19.3), v(212.9, 9.7, -40.5), 2, false, 50) end, 0);
		
	Cutscene_Town_Defenders:action(function() Issue_Town_Defence_Advice() end, 1000);
	
	Cutscene_Town_Defenders:start();
end;





















Cutscene_Naval_Reinforcements = cutscene:new(
	"Cutscene_Naval_Reinforcements", 							-- unique string name for cutscene
	UC_Vgt_01_All, 												-- unitcontroller over player's army
	3500, 														-- duration of cutscene in ms
	function() Naval_Reinforcements_Cutscene_Complete() end		-- what to call when cutscene is finished
);

Cutscene_Naval_Reinforcements:set_close_advisor_on_end(false);
Cutscene_Naval_Reinforcements:set_restore_cam_time(3);
Cutscene_Naval_Reinforcements:set_skippable(true, function() Cutscene_Naval_Reinforcements_Skipped() end);
-- Cutscene_Naval_Reinforcements:set_debug();

function Play_Cutscene_Naval_Reinforcements()	
	show_advisor_progress_button(false);

	Cutscene_Naval_Reinforcements:action(function() cam:fade(false, 0.5) end, 1000);
	
	Cutscene_Naval_Reinforcements:action(function() cam:move_to(v(358.8, 6.5, -508.2), v(251.4, 4.9, -602.3), 0, false, 42) end, 0);
	Cutscene_Naval_Reinforcements:action(function() cam:move_to(v(358.8, 6.5, -508.2), v(245.1, 4.9, -594.7), 6, true, 40) end, 0);
	
	Cutscene_Naval_Reinforcements:action(function() Deliver_Naval_Reinforcement_Advice() end, 1000);
		
	Cutscene_Naval_Reinforcements:start();
end;


function Cutscene_Naval_Reinforcements_Skipped()
	cam:fade(true, 0);
	
	Deliver_Naval_Reinforcement_Advice();
end;
























Cutscene_Forest_Hunnic_Attack_Duration = 15000;

Cutscene_Forest_Hunnic_Attack = cutscene:new(
	"Cutscene_Forest_Hunnic_Attack", 						-- unique string name for cutscene
	UC_Vgt_01_All, 											-- unitcontroller over player's army
	Cutscene_Forest_Hunnic_Attack_Duration, 				-- duration of cutscene in ms
	function() Start_Forest_Hunnic_Attack() end				-- what to call when cutscene is finished
);

Cutscene_Forest_Hunnic_Attack:set_restore_cam_time(0);
Cutscene_Forest_Hunnic_Attack:set_post_cutscene_fade_time(0.5);
Cutscene_Forest_Hunnic_Attack:set_close_advisor_on_end(false);
Cutscene_Forest_Hunnic_Attack:set_skippable(true, function() Cutscene_Forest_Hunnic_Attack_Skipped() end);
-- Cutscene_Forest_Hunnic_Attack:set_debug();

function Play_Cutscene_Forest_Hunnic_Attack()
	show_advisor_progress_button(false);

	Enable_Forest_Hunnic_Attack();
	
	Cutscene_Forest_Hunnic_Attack:action(function() cam:fade(false, 0.5) end, 0);
	
	Cutscene_Forest_Hunnic_Attack:action(function() cam:move_to(v(843.2, 19.6, 257.7), v(744.2, 10.5, 200.1), 0, false, 35) end, 0);
	
	Cutscene_Forest_Hunnic_Attack:action(function() cam:move_to(v(787.9, 20.1, 165.0), v(849.8, 9.8, 261.2), 0, false, 40) end, 5500);
	Cutscene_Forest_Hunnic_Attack:action(function() cam:move_to(v(787.9, 20.1, 165.0), v(818.4, 6.5, 274.9), 6, false, 42) end, 5500);
		
	Cutscene_Forest_Hunnic_Attack:action(function() cam:move_to(v(752.7, 16.3, 116.1), v(802.8, 12.8, 155.0), 0, false, 50) end, 9500);
	Cutscene_Forest_Hunnic_Attack:action(function() cam:move_to(v(715.1, 16.3, 164.6), v(765.2, 12.8, 203.5), 15, true, 50) end, 9500);
		
	Cutscene_Forest_Hunnic_Attack:action(function() cam:fade(true, 0.5) end, Cutscene_Forest_Hunnic_Attack_Duration - 500);
	
	Cutscene_Forest_Hunnic_Attack:start();
end;



function Cutscene_Forest_Hunnic_Attack_Skipped()
	bm:out("Cutscene_Forest_Hunnic_Attack_Skipped() called");

	cam:fade(true, 0);
end;
























C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\po_prologue_olbia\po_declarations.lua




-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	DECLARATIONS SCRIPT
--
--	Declare alliances, armies, convex areas and anything else of note in here
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

cam = bm:camera();
eh = event_handler:new(AddEventCallBack);
subtitles = bm:subtitles();
bm:set_close_queue_advice(false);	-- advisor doesn't close after advice finishes

--
-- Army Declarations
--

Alliances = bm:alliances();

Alliance_01 = Alliances:item(1);
Army_Vgt_01 = Alliance_01:armies():item(1);

Alliance_02 = Alliances:item(2); 
Army_Ogt_01 = Alliance_02:armies():item(1);
Army_Hun_01 = Alliance_02:armies():item(2);


--
-- Script Unit Declarations [GOTHS]
--

SUnit_Vgt_01 = script_unit:new(Army_Vgt_01, "Vgt_01");
SUnit_Vgt_02 = script_unit:new(Army_Vgt_01, "Vgt_02");
SUnit_Vgt_03 = script_unit:new(Army_Vgt_01, "Vgt_03");
SUnit_Vgt_04 = script_unit:new(Army_Vgt_01, "Vgt_04");
SUnit_Vgt_05 = script_unit:new(Army_Vgt_01, "Vgt_05");
SUnit_Vgt_06 = script_unit:new(Army_Vgt_01, "Vgt_06");

SUnit_Vgt_10 = script_unit:new(Army_Vgt_01, "Vgt_10");
SUnit_Vgt_11 = script_unit:new(Army_Vgt_01, "Vgt_11");

SUnit_Vgt_20 = script_unit:new(Army_Vgt_01, "Vgt_20");
SUnit_Vgt_21 = script_unit:new(Army_Vgt_01, "Vgt_21");
SUnit_Vgt_22 = script_unit:new(Army_Vgt_01, "Vgt_22");

UC_Vgt_01_All = unitcontroller_from_army(Army_Vgt_01);


SUnits_Vgt_All = {
	SUnit_Vgt_01,
	SUnit_Vgt_02,
	SUnit_Vgt_03,
	SUnit_Vgt_04,
	SUnit_Vgt_05,
	SUnit_Vgt_06,
	SUnit_Vgt_10,
	SUnit_Vgt_11,
	SUnit_Vgt_20,
	SUnit_Vgt_21,
	SUnit_Vgt_22
};


SUnits_Vgt_Initial = {
	SUnit_Vgt_01,
	SUnit_Vgt_02,
	SUnit_Vgt_03,
	SUnit_Vgt_04,
	SUnit_Vgt_05,
	SUnit_Vgt_06
};


SUnits_Vgt_Town = {
	SUnit_Vgt_10,
	SUnit_Vgt_11
};


SUnits_Vgt_Initial_And_Town = {
	SUnit_Vgt_01,
	SUnit_Vgt_02,
	SUnit_Vgt_03,
	SUnit_Vgt_04,
	SUnit_Vgt_05,
	SUnit_Vgt_06,
	SUnit_Vgt_10,
	SUnit_Vgt_11
};


SUnits_Vgt_Navy = {
	SUnit_Vgt_20,
	SUnit_Vgt_21,
	SUnit_Vgt_22
};


-- teleport positions for first hunnic attack
SUnit_Vgt_01.POS_Initial_Hunnic_Attack = v(-382.299,38.0823)
SUnit_Vgt_01.Orient_Initial_Hunnic_Attack = r_to_d(1.1269)
SUnit_Vgt_01.Width_Initial_Hunnic_Attack = 15.583

SUnit_Vgt_02.POS_Initial_Hunnic_Attack = v(-386.62,54.2206)
SUnit_Vgt_02.Orient_Initial_Hunnic_Attack = r_to_d(1.17551)
SUnit_Vgt_02.Width_Initial_Hunnic_Attack = 16.2628

SUnit_Vgt_03.POS_Initial_Hunnic_Attack = v(-402.731,85.4492)
SUnit_Vgt_03.Orient_Initial_Hunnic_Attack = r_to_d(1.11472)
SUnit_Vgt_03.Width_Initial_Hunnic_Attack = 16.1235

SUnit_Vgt_04.POS_Initial_Hunnic_Attack = v(-371.763,23.6347)
SUnit_Vgt_04.Orient_Initial_Hunnic_Attack = r_to_d(1.16535)
SUnit_Vgt_04.Width_Initial_Hunnic_Attack = 16.0023

SUnit_Vgt_05.POS_Initial_Hunnic_Attack = v(-391.719,71.6291)
SUnit_Vgt_05.Orient_Initial_Hunnic_Attack = r_to_d(1.17896)
SUnit_Vgt_05.Width_Initial_Hunnic_Attack = 15.9646

SUnit_Vgt_06.POS_Initial_Hunnic_Attack = v(-359.689,10.6327)
SUnit_Vgt_06.Orient_Initial_Hunnic_Attack = r_to_d(1.14828)
SUnit_Vgt_06.Width_Initial_Hunnic_Attack = 14.9098



-- teleport positions for forest hunnic attack
SUnit_Vgt_01.POS_Forest_Hunnic_Attack = v(54.988,-24.473)
SUnit_Vgt_01.Orient_Forest_Hunnic_Attack = r_to_d(-0.26)
SUnit_Vgt_01.Width_Forest_Hunnic_Attack = 12.8

SUnit_Vgt_02.POS_Forest_Hunnic_Attack = v(68.699, -20.779)
SUnit_Vgt_02.Orient_Forest_Hunnic_Attack = r_to_d(-0.26)
SUnit_Vgt_02.Width_Forest_Hunnic_Attack = 11.6

SUnit_Vgt_03.POS_Forest_Hunnic_Attack = v(81.831,-17.24)
SUnit_Vgt_03.Orient_Forest_Hunnic_Attack = r_to_d(-0.26)
SUnit_Vgt_03.Width_Forest_Hunnic_Attack = 11.6

SUnit_Vgt_04.POS_Forest_Hunnic_Attack = v(94.96, -13.7)
SUnit_Vgt_04.Orient_Forest_Hunnic_Attack = r_to_d(-0.26)
SUnit_Vgt_04.Width_Forest_Hunnic_Attack = 11.6

SUnit_Vgt_05.POS_Forest_Hunnic_Attack = v(108.095,-10.17)
SUnit_Vgt_05.Orient_Forest_Hunnic_Attack = r_to_d(-0.26)
SUnit_Vgt_05.Width_Forest_Hunnic_Attack = 11.6

SUnit_Vgt_06.POS_Forest_Hunnic_Attack = v(120.84,-6.7)
SUnit_Vgt_06.Orient_Forest_Hunnic_Attack = r_to_d(-0.26)
SUnit_Vgt_06.Width_Forest_Hunnic_Attack = 11.6









--
-- Script Unit Declarations [OSTROGOTHS]
--

SUnit_Ogt_01 = script_unit:new(Army_Ogt_01, "Ogt_01");
SUnit_Ogt_02 = script_unit:new(Army_Ogt_01, "Ogt_02");
SUnit_Ogt_03 = script_unit:new(Army_Ogt_01, "Ogt_03");
SUnit_Ogt_04 = script_unit:new(Army_Ogt_01, "Ogt_04");
SUnit_Ogt_05 = script_unit:new(Army_Ogt_01, "Ogt_05");
SUnit_Ogt_06 = script_unit:new(Army_Ogt_01, "Ogt_06");

UC_Ogt_01_All = unitcontroller_from_army(Army_Ogt_01);
UC_Ogt_01_All:take_control();


SUnits_Ogt_All = {
	SUnit_Ogt_01,
	SUnit_Ogt_02,
	SUnit_Ogt_03,
	SUnit_Ogt_04,
	SUnit_Ogt_05,
	SUnit_Ogt_06
};



--
-- Script Unit Declarations [HUNS]
--

SUnit_Hun_01 = script_unit:new(Army_Hun_01, "Hun_01");
SUnit_Hun_02 = script_unit:new(Army_Hun_01, "Hun_02");
SUnit_Hun_03 = script_unit:new(Army_Hun_01, "Hun_03");
SUnit_Hun_04 = script_unit:new(Army_Hun_01, "Hun_04");
SUnit_Hun_05 = script_unit:new(Army_Hun_01, "Hun_05");
SUnit_Hun_06 = script_unit:new(Army_Hun_01, "Hun_06");
SUnit_Hun_07 = script_unit:new(Army_Hun_01, "Hun_07");
SUnit_Hun_08 = script_unit:new(Army_Hun_01, "Hun_08");
SUnit_Hun_09 = script_unit:new(Army_Hun_01, "Hun_09");

SUnit_Hun_10 = script_unit:new(Army_Hun_01, "Hun_10");
SUnit_Hun_11 = script_unit:new(Army_Hun_01, "Hun_11");
SUnit_Hun_12 = script_unit:new(Army_Hun_01, "Hun_12");
SUnit_Hun_13 = script_unit:new(Army_Hun_01, "Hun_13");
SUnit_Hun_14 = script_unit:new(Army_Hun_01, "Hun_14");
SUnit_Hun_15 = script_unit:new(Army_Hun_01, "Hun_15");
SUnit_Hun_16 = script_unit:new(Army_Hun_01, "Hun_16");

SUnit_Hun_20 = script_unit:new(Army_Hun_01, "Hun_20");
SUnit_Hun_21 = script_unit:new(Army_Hun_01, "Hun_21");

UC_Hun_01_All = unitcontroller_from_army(Army_Hun_01);
UC_Hun_01_All:take_control();


SUnits_Hun_All = {
	SUnit_Hun_01,
	SUnit_Hun_02,
	SUnit_Hun_03,
	SUnit_Hun_04,
	SUnit_Hun_05,
	SUnit_Hun_06,
	SUnit_Hun_07,
	SUnit_Hun_08,
	SUnit_Hun_09,

	SUnit_Hun_10,
	SUnit_Hun_11,
	SUnit_Hun_12,
	SUnit_Hun_13,
	SUnit_Hun_14,
	SUnit_Hun_15,
	SUnit_Hun_16,

	SUnit_Hun_20,
	SUnit_Hun_21
};


SUnits_Hun_Initial = {
	SUnit_Hun_01,
	SUnit_Hun_02,
	SUnit_Hun_03,
	SUnit_Hun_04,
	SUnit_Hun_05,
	SUnit_Hun_06,
	SUnit_Hun_07,
	SUnit_Hun_08,
	SUnit_Hun_09
};


SUnits_Hun_Initial_Cav = {
	SUnit_Hun_01,
	SUnit_Hun_02,
	SUnit_Hun_03,
	SUnit_Hun_04
};


SUnits_Hun_Initial_West = {
	SUnit_Hun_05,
	SUnit_Hun_06,
	SUnit_Hun_07,
	SUnit_Hun_08,
	SUnit_Hun_09
};


SUnits_Hun_Initial_East = {
	SUnit_Hun_01,
	SUnit_Hun_02,
	SUnit_Hun_03,
	SUnit_Hun_04
};


SUnits_Hun_Initial_East_Melee = {
	SUnit_Hun_01,
	SUnit_Hun_02,
	SUnit_Hun_03
};


SUnits_Hun_Forest = {
	SUnit_Hun_10,
	SUnit_Hun_11,
	SUnit_Hun_12,
	SUnit_Hun_13,
	SUnit_Hun_14,
	SUnit_Hun_15,
	SUnit_Hun_16
};


SUnits_Hun_Additional = {
	SUnit_Hun_20,
	SUnit_Hun_21
};














Area_Ostrogoth_Battle = convex_area:new(
	{		
		v(350, 220),
		v(350, -1000),
		v(-1000, -1000),
		v(-1000, 300)
	}
);


Area_Town_Boundaries = convex_area:new(
	{
		v(-45, -400),
		v(0, 60),
		v(350, 75),
		v(410, -400)
	}
);












SUnit_Vgt_01.POS_Intro_Walkon = v(-18.7146,-145.041)
SUnit_Vgt_01.Orient_Intro_Walkon = r_to_d(-1.52823)
SUnit_Vgt_01.Width_Intro_Walkon = 13.5393

SUnit_Vgt_02.POS_Intro_Walkon = v(-40.2982,-144.806)
SUnit_Vgt_02.Orient_Intro_Walkon = r_to_d(-1.51979)
SUnit_Vgt_02.Width_Intro_Walkon = 13.6633

SUnit_Vgt_03.POS_Intro_Walkon = v(-13.812,-45.969)
SUnit_Vgt_03.Orient_Intro_Walkon = r_to_d(-1.48969)
SUnit_Vgt_03.Width_Intro_Walkon = 6.65805

SUnit_Vgt_04.POS_Intro_Walkon = v(5.432,-46.711)
SUnit_Vgt_04.Orient_Intro_Walkon = r_to_d(-1.51653)
SUnit_Vgt_04.Width_Intro_Walkon = 6.45942

SUnit_Vgt_05.POS_Intro_Walkon = v(6.9181,-146.251)
SUnit_Vgt_05.Orient_Intro_Walkon = r_to_d(-1.52823)
SUnit_Vgt_05.Width_Intro_Walkon = 13.7743

SUnit_Vgt_06.POS_Intro_Walkon = v(21.3173,-145.528)
SUnit_Vgt_06.Orient_Intro_Walkon = r_to_d(-1.57396)
SUnit_Vgt_06.Width_Intro_Walkon = 8.6257


function Teleport_Visigoth_Units_Cutscene_Intro_Start()
	for i = 1, #SUnits_Vgt_Initial do
		local current_sunit = SUnits_Vgt_Initial[i];
		current_sunit.uc:teleport_to_location(current_sunit.POS_Intro_Walkon, current_sunit.Orient_Intro_Walkon, current_sunit.Width_Intro_Walkon);
	end;
end;


function Move_Visigoth_Units_Cutscene_Intro_Start()
	for i = 1, #SUnits_Vgt_Initial do
		local current_sunit = SUnits_Vgt_Initial[i];
		current_sunit:goto_location_offset(0, 50);
	end;
end;


function Ostrogoth_Units_Cheer_Cutscene_Intro()
	for i = 1, #SUnits_Ogt_All do
		local current_sunit = SUnits_Ogt_All[i];
		current_sunit.uc:start_taunting();
	end;
end;


function Teleport_Visigoth_Units_Cutscene_Intro_End()
	for i = 1, #SUnits_Vgt_Initial do
		local current_sunit = SUnits_Vgt_Initial[i];
		current_sunit:teleport_to_start_location();
	end;
end;


function Visigoth_Units_Cheer_Cutscene_Visigoths()
	for i = 1, #SUnits_Vgt_Initial do
		local current_sunit = SUnits_Vgt_Initial[i];
		current_sunit.uc:start_taunting();
	end;
end;







C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\po_prologue_olbia\po_forest_hunnic_attack.lua




-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	FOREST HUNNIC ATTACK SCRIPT
--
--	Script for the last section of the battle where the Huns emerge from the
--	forest
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------





function Init_Battle_Forest_Hunnic_Attack()
	cam:fade(true, 0);
	
	-- register victory and defeat VO callbacks
	bm:setup_victory_callback(function() Battle_Is_Ending() end);
	
	-- enable and move the Huns
	Enable_Forest_Hunnic_Attack();
	
	-- start rout manager
	bm:start_rout_manager(1);
	
	-- listen for hyperlink clicks
	Listen_For_Advice_Hyperlink_Clicks();
		
	-- kill the Ostrogoths
	for i = 1, #SUnits_Ogt_All do
		local current_sunit = SUnits_Ogt_All[i];
		current_sunit.uc:kill();
	end;
	
	-- kill the Initial Huns
	for i = 1, #SUnits_Hun_Initial do
		local current_sunit = SUnits_Hun_Initial[i];
		current_sunit.uc:kill();
	end;
	
	-- teleport the player's units to where they might feasibly be and kill a proportion of them
	for i = 1, #SUnits_Vgt_Initial do
		local current_sunit = SUnits_Vgt_Initial[i];
		current_sunit.uc:teleport_to_location(current_sunit.POS_Forest_Hunnic_Attack, current_sunit.Orient_Forest_Hunnic_Attack, current_sunit.Width_Forest_Hunnic_Attack);
		kill_unit_proportion(current_sunit.unit, 0.5);
	end;
	
	-- enable the town defenders
	enable(SUnits_Vgt_Town, true, true);
	
	-- prevent the player's units from routing (hopefully we won't need this eventually)
	Prevent_Players_Units_Routing();
	
	bm:stop_advisor_queue();
	
	bm:callback(function() Enqueue_Forest_Cutscene_Advice() end, 1000);
end;





BOOL_Forest_Hunnic_Attack_Enabled = false;

function Enable_Forest_Hunnic_Attack()
	if BOOL_Forest_Hunnic_Attack_Enabled then
		return;
	end;
	
	BOOL_Forest_Hunnic_Attack_Enabled = true;

	enable(SUnits_Hun_Forest, true);
	
	-- set the max casualty rate of the player's army
	SUnits_Max_Casualties(SUnits_Vgt_All, 0.4, true);
	
	for i = 1, #SUnits_Hun_Forest do
		local current_sunit = SUnits_Hun_Forest[i];
		current_sunit.uc:set_always_visible_to_all(true);
	end;
	
	-- make the Hunnic units run forward
	for i = 1, #SUnits_Hun_Forest do
		local current_sunit = SUnits_Hun_Forest[i];
		
		current_sunit:goto_location_offset(0, 200, true);
	end;
end;







function Start_Forest_Hunnic_Attack()
	-- remove listeners from previous cutscene
	eh:remove_listener("Cutscene_Skirmishers_Advice_Dismissed");
	
	show_advisor_progress_button(true);
	
	-- monitor for if the player doesn't attempt to defend the town
	Start_Town_Control_Monitor_System();
	
	-- set the Huns to rout after taking a certain number of casualties
	for i = 1, #SUnits_Hun_Forest do
		local current_sunit = SUnits_Hun_Forest[i];
		current_sunit:rout_on_casualties(0.7);
	end;

	Set_Up_Hunnic_Script_AI_Controllers();
	
	SAI_Forest_Hunnic:set_debug();
	SAI_Forest_Hunnic:defend_position(v(260, 20), 300);
	
	Ensure_SUnits_Dont_Tire_Before_Engaging_Enemy(SUnits_Hun_Forest, SUnits_Vgt_All);
	
	BOOL_Forest_Hunnic_Attack_Active = true;
	
	bm:callback(function() Deliver_Fatigue_Advice() end, 5000);
end;




function Deliver_Fatigue_Advice()
	-- The Ostrogoths must have deep pockets to buy all this support. Our warriors begin to tire. Be sure to rest them when you can!
	bm:queue_advisor(
		"Att.Pro.Olbia.AD.202", 
		20000, 
		false, 
		function() 
			add_infotext(1, "Att.Pro.Olbia.Info.130", "Att.Pro.Olbia.Info.131", "Att.Pro.Olbia.Info.132", "Att.Pro.Olbia.Info.133", "Att.Pro.Olbia.Info.134");
		end
	);
	
	bm:callback(function() Watch_For_Forest_Hunnic_Forces_Engaging() end, 20000);
end;








function Watch_For_Forest_Hunnic_Forces_Engaging()
	bm:watch(
		function()
			return distance_between_forces(SUnits_Vgt_All, SUnits_Hun_Forest) < 250
		end,
		0,
		function()
			Issue_Cavalry_Advice()
		end,
		"Hunnic_Battle"
	);
end;



function Issue_Cavalry_Advice()
	-- The enemy attack mainly on horseback, Chieftain! Catch and engage them with spearmen!
	bm:queue_advisor(
		"Att.Pro.Olbia.AD.104", 
		20000, 
		false, 
		function() 
			add_infotext(1, "Att.Pro.Olbia.Info.100", "Att.Pro.Olbia.Info.101", "Att.Pro.Olbia.Info.102", "Att.Pro.Olbia.Info.103");
		end
	);
	
	Enable_Additional_Hunnic_Reinforcements();
end;




function Enable_Additional_Hunnic_Reinforcements()
	bm:out("Enable_Additional_Hunnic_Reinforcements() called");

	enable(SUnits_Hun_Additional, true);
	
	local Hunnic_Additional_Waypoint_List = {
		v(400, 475),
		v(390, 220)
	}
	
	SAI_Hunnic_Additional:set_debug();
	SAI_Hunnic_Additional:patrol(Hunnic_Additional_Waypoint_List, SUnits_Vgt_All, function() Additional_Hunnic_Attackers_Completed_Approach_Patrol() end);
end;


function Additional_Hunnic_Attackers_Completed_Approach_Patrol()
	-- force the additional attackers to be visible
	set_visible(SUnits_Hun_Additional, value)
	
	-- set the Huns to rout after taking a certain number of casualties
	for i = 1, #SUnits_Hun_Additional do
		local current_sunit = SUnits_Hun_Additional[i];
		current_sunit:rout_on_casualties(0.7);
	end;
	
	SAI_Hunnic_Additional:defend_position(v(100, 0), 300);
	
	-- More attackers! To the north!
	bm:queue_advisor("Att.Pro.Olbia.AD.204", 10000);
end;





function Player_Has_Won()
	bm:out("Player_Has_Won() called");
	
	eh:remove_listener("Unit_Disembark_Listener");
	
	-- The Huns are driven off, Olbia is saved! The Ostrogoths shall pay for the damage they've done, but tonight we celebrate!
	bm:queue_advisor("Att.Pro.Olbia.AD.206", 11000);
	
	-- informs the next campaign section that this battle has just been completed
	svr = ScriptedValueRegistry:new();
	svr:SaveBool("SBOOL_Prologue_Should_Play_Preamble_Cutscene", false);
	svr:SaveBool("SBOOL_Prologue_Olbia_Just_Completed", true);
	
	bm:callback(function() bm:end_battle() end, 11000);
end;






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\po_prologue_olbia\po_initial_hunnic_attack.lua




-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	INITIAL HUNNIC ATTACK SCRIPT
--
--	Script for when the Huns first attack
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------


function Init_Battle_Initial_Hunnic_Attack()
	cam:fade(true, 0);
	
	-- register victory and defeat VO callbacks
	bm:setup_victory_callback(function() Battle_Is_Ending() end);
	
	-- enable and move the Huns
	Enable_Initial_Hunnic_Attack();
	
	-- start rout manager
	bm:start_rout_manager(1);
	
	-- listen for hyperlink clicks
	Listen_For_Advice_Hyperlink_Clicks();
	
	Reposition_Visigoths_Initial_Hunnic_Attack(true);
	
	-- kill the Ostrogoths
	for i = 1, #SUnits_Ogt_All do
		local current_sunit = SUnits_Ogt_All[i];
		current_sunit.uc:kill();
	end;
		
	bm:callback(function() Play_Cutscene_First_Hunnic_Attack() end, 1000);
end;


function Reposition_Visigoths_Initial_Hunnic_Attack(should_kill)
	-- teleport the player's units to where they might feasibly be and maybe kill a proportion of them
	for i = 1, #SUnits_Vgt_Initial do
		local current_sunit = SUnits_Vgt_Initial[i];
		current_sunit.uc:teleport_to_location(current_sunit.POS_Initial_Hunnic_Attack, current_sunit.Orient_Initial_Hunnic_Attack, current_sunit.Width_Initial_Hunnic_Attack);
		if should_kill then
			kill_unit_proportion(current_sunit.unit, 0.25);
		end;
		current_sunit.uc:release_control();
	end;
end;


POS_Visigoth_Reposition_Line_Initial_Hunnic_Attack_A = v(-470, 100);
POS_Visigoth_Reposition_Line_Initial_Hunnic_Attack_B = v(-410, -10);

function Reposition_Visigoths_Initial_Hunnic_Attack_If_Appropriate()
	bm:out("Reposition_Visigoths_Initial_Hunnic_Attack_If_Appropriate() called");
	for i = 1, #SUnits_Vgt_Initial do
		local current_sunit = SUnits_Vgt_Initial[i];
		if has_crossed_line(current_sunit.unit, POS_Visigoth_Reposition_Line_Initial_Hunnic_Attack_A, POS_Visigoth_Reposition_Line_Initial_Hunnic_Attack_B) then
			bm:out("\trepositioning units, found unit " .. current_sunit.name .. " far away from town at " .. v_to_s(current_sunit.unit:position()));
			Reposition_Visigoths_Initial_Hunnic_Attack(false);
			return;
		end;
	end;
	bm:out("\tnot repositioning units");
end;



BOOL_Initial_Hunnic_Attack_Enabled = false;

function Enable_Initial_Hunnic_Attack()
	if BOOL_Initial_Hunnic_Attack_Enabled then
		return;
	end;
	
	BOOL_Initial_Hunnic_Attack_Enabled = true;

	enable(SUnits_Hun_Initial, true);
	
	set_visible(SUnits_Hun_Initial, true);
	
	-- make the Hunnic units run forward
	for i = 1, #SUnits_Hun_Initial do
		local current_sunit = SUnits_Hun_Initial[i];
		
		current_sunit:goto_location_offset(0, 150, true, 3.00);
	end;
end;


BOOL_Hunnic_Script_AI_Controllers_Set_Up = false;

function Set_Up_Hunnic_Script_AI_Controllers()
	if BOOL_Hunnic_Script_AI_Controllers_Set_Up then
		return;
	end;
	
	BOOL_Hunnic_Script_AI_Controllers_Set_Up = true;
	
	SAI_First_Hunnic_West = script_ai_planner:new("SAI_First_Hunnic_West", SUnits_Hun_Initial_West);
	SAI_First_Hunnic_West:set_debug();
	
	SAI_First_Hunnic_East = script_ai_planner:new("SAI_First_Hunnic_East", SUnits_Hun_Initial_East);
	SAI_Forest_Hunnic = script_ai_planner:new("SAI_Forest_Hunnic", SUnits_Hun_Forest);
	
	SAI_Hunnic_Additional = script_ai_planner:new("SAI_Hunnic_Additional", SUnits_Hun_Additional);
end;






function Start_First_Hunnic_Attack()
	bm:out("Start_First_Hunnic_Attack() called");
	
	BOOL_First_Hunnic_Attack_Active = true;
	
	enable(SUnits_Hun_Initial_Cav, true);
	set_visible(SUnits_Hun_Initial_Cav, true);
	
	-- show advice progress button
	show_advisor_progress_button(true);
	
	-- set the max casualty rate of the player's army
	SUnits_Max_Casualties(SUnits_Vgt_All, 0.55, true);
	
	-- set the Huns to attack under AI control
	Set_Up_Hunnic_Script_AI_Controllers();
	
	-- monitor for if the player doesn't attempt to defend the town
	Start_Town_Control_Monitor_System();
	
	local First_Hunnic_West_Waypoint_List = {
		v(90, -20),
		v(180, -25)
	};
	
	SAI_First_Hunnic_West:patrol(First_Hunnic_West_Waypoint_List, SUnits_Vgt_Initial_And_Town, function() SAI_First_Hunnic_West:attack_closest_unit(SUnits_Vgt_Initial_And_Town, true) end);
	
	-- ensure that the Hunnic infantry don't tire before engaging the player
	Ensure_SUnits_Dont_Tire_Before_Engaging_Enemy(SUnits_Hun_Initial_West, SUnits_Vgt_All);
	
	local First_Hunnic_East_Waypoint_List_Initial = {
		v(220, 280)
	};
			
	SAI_First_Hunnic_East:set_debug();
	
	-- start the cavalry attack on the town once the cavalry have approached and also when the naval reinforcements have arrived
	SAI_First_Hunnic_East:patrol(First_Hunnic_East_Waypoint_List_Initial, SUnits_Vgt_Initial_And_Town, function() First_Hunnic_East_Approach_To_Town_Complete() end);
	
	-- set the Huns horse to rout after taking a certain number of casualties
	for i = 1, #SUnits_Hun_Initial_Cav do
		local current_sunit = SUnits_Hun_Initial_Cav[i];
		current_sunit:rout_on_casualties(0.5);
	end;
		
	Position_Camera_At_Players_Army_First_Hunnic_Attack();
	
	cam:fade(false, 0.5);
	
	-- reduce the player unit's fatigue
	for i = 1, #SUnits_Vgt_Initial do
		local current_sunit = SUnits_Vgt_Initial[i];
		current_sunit.uc:change_fatigue_amount(0.5);
		current_sunit.uc:release_control();
	end;
	
	-- Pull back, men, pull back! The Ostrogoths have flanked us and are attacking the town! Defend your homes!
	bm:callback(function() bm:queue_advisor("Att.Pro.Olbia.AD.101", 10000) end, 1000);
	
	-- objective
	bm:callback(function() set_objective("Att.Pro.Olbia.Objective_04") end, 2000);
	
	-- enable the town defenders	
	enable(SUnits_Vgt_Town, true, true);
	
	-- start watching for the player setting off back towards town
	bm:callback(function() Start_Player_Movement_Watch_First_Hunnic_Battle() end, 1000);
	
	-- watch for player being defeated
	bm:watch(function() return is_routing_or_dead(SUnits_Vgt_All) end, 0, function() Player_Has_Lost_First_Hunnic_Battle() end, "Hunnic_Battle");
	
	-- if the Hunnic melee cavalry all rout, make the ranged cavalry rout when it receives a few casualties
	bm:watch(
		function() 
			return is_routing_or_dead(SUnits_Hun_Initial_East_Melee)
		end,
		10000,
		function()
			SUnit_Hun_04:rout_on_casualties(0.8);
		end
	);
end;


function Position_Camera_At_Players_Army_First_Hunnic_Attack()
	-- position the camera target above the centrepoint of the player's army
	local centre_point_of_army = centre_point_table(SUnits_Vgt_Initial);
	local cam_targ = v_offset(centre_point_of_army, 0, 5, 0);
		
	-- position the camera away from the camera target
	local cam_targ_to_cam_x = -60;
	local cam_targ_to_cam_y = 35;
	local cam_targ_to_cam_z = -40;
	
	local cam_pos = v_offset(cam_targ, cam_targ_to_cam_x, cam_targ_to_cam_y, cam_targ_to_cam_z);
	
	cam:move_to(cam_pos, cam_targ, 0, false, 0);
end;


BOOL_Should_Play_Town_Defenders_Cutscene = true;

function Start_Player_Movement_Watch_First_Hunnic_Battle()
	-- cache positions of player units
	cache_position(SUnits_Vgt_Initial_And_Town);
	
	-- watch for the player moving their units
	bm:watch(function() return has_moved(SUnits_Vgt_Initial) end, 5000, function() Attempt_To_Play_Town_Defenders_Cutscene() end, "town defenders cutscene");
	bm:callback(function() Attempt_To_Play_Town_Defenders_Cutscene() end, 30000, "town defenders cutscene");	-- failsafe
	
	-- if the player moves the units in town, don't play the cutscene
	bm:watch(function() return has_moved(SUnits_Vgt_Town) end, 0, function() BOOL_Should_Play_Town_Defenders_Cutscene = false end);
end;


function Attempt_To_Play_Town_Defenders_Cutscene()
	bm:remove_process("town defenders cutscene");
	
	if not BOOL_Should_Play_Town_Defenders_Cutscene then
		bm:out("Attempt_To_Play_Town_Defenders_Cutscene() called, not playing cutscene");
		Issue_Town_Defence_Advice();
		Town_Defenders_Advice_Issued();
	else
		bm:out("Attempt_To_Play_Town_Defenders_Cutscene() called, playing cutscene");
		Play_Cutscene_Town_Defenders();
	end;
end;


function Issue_Town_Defence_Advice()
	-- The town defenders are now under your control, Chieftain! Unite your forces and drive out the invaders! Do not let the town fall!
	bm:queue_advisor(
		"Att.Pro.Olbia.AD.102", 
		20000, 
		false, 
		function() 
			add_infotext(1, "Att.Pro.Olbia.Info.080", "Att.Pro.Olbia.Info.081", "Att.Pro.Olbia.Info.082", "Att.Pro.Olbia.Info.083");
		end
	);
end;


function Town_Defenders_Advice_Issued()
	bm:out("Town_Defenders_Advice_Issued() called");
	
	show_advisor_progress_button(true);
	
	bm:callback(function() Issue_Troop_Positioning_Advice() end, 20000);
end;






function Issue_Troop_Positioning_Advice()
	-- Be sure to position your troops accurately in battle, Chieftain! Have each unit cover the flank of the next!
	bm:queue_advisor(
		"Att.Pro.Olbia.AD.106", 
		20000, 
		false, 
		function() 
			add_infotext(1, "Att.Pro.Olbia.Info.085", "Att.Pro.Olbia.Info.086", "Att.Pro.Olbia.Info.087", "Att.Pro.Olbia.Info.088", "Att.Pro.Olbia.Info.089");
		end
	);
	
	bm:callback(function() Prepare_To_Start_Naval_Reinforcements_Cutscene() end, 40000);
end;











function Prepare_To_Start_Naval_Reinforcements_Cutscene()
	bm:out("Prepare_To_Start_Naval_Reinforcements_Cutscene() called");
	
	cam:fade(true, 0.5);
	
	bm:callback(function() Enable_Naval_Reinforcements() end, 500);
	bm:callback(function() Play_Cutscene_Naval_Reinforcements() end, 1000);
end;


function Enable_Naval_Reinforcements()
	enable(SUnits_Vgt_Navy, true, true);
	
	-- make the naval units move forward (and give them lots of ammo)
	for i = 1, #SUnits_Vgt_Navy do
		local current_sunit = SUnits_Vgt_Navy[i];
		
		refill_ammo(current_sunit.unit, 3);
		current_sunit.uc:change_shot_type("small_arm_default");
		current_sunit:goto_location_offset(0, 50, true);
	end;
end;


BOOL_Naval_Reinforcement_Advice_Delivered = false;

function Deliver_Naval_Reinforcement_Advice()
	if BOOL_Naval_Reinforcement_Advice_Delivered then
		return;
	end;
	
	BOOL_Naval_Reinforcement_Advice_Delivered = true;

	-- Reinforcements arrive by sea, Chieftain! Direct them to land on shore, they will be needed at once!
	bm:queue_advisor(
		"Att.Pro.Olbia.AD.201",
		20000, 
		false, 
		function() 
			add_infotext(1, "Att.Pro.Olbia.Info.120", "Att.Pro.Olbia.Info.121", "Att.Pro.Olbia.Info.122", "Att.Pro.Olbia.Info.123");
		end
	);
end;


function Naval_Reinforcements_Cutscene_Complete()
	show_advisor_progress_button(true);

	set_objective("Att.Pro.Olbia.Objective_05");
	
	-- try and start the Hunnic East attack on town
	BOOL_Naval_Reinforcements_Summoned = true;
	Attempt_To_Start_First_Hunnic_East_Attack_On_Town();
	
	Watch_For_Naval_Disembarkment();
	
	bm:callback(function() Watch_For_Hunnic_Forces_Closing() end, 25000, "Hunnic_Battle");
end;













BOOL_First_Hunnic_East_Approach_To_Town_Complete = false;

function First_Hunnic_East_Approach_To_Town_Complete()
	bm:out("First_Hunnic_East_Approach_To_Town_Complete() called");

	BOOL_First_Hunnic_East_Approach_To_Town_Complete = true;

	Attempt_To_Start_First_Hunnic_East_Attack_On_Town();
end;



function Attempt_To_Start_First_Hunnic_East_Attack_On_Town()
	if BOOL_First_Hunnic_East_Approach_To_Town_Complete and BOOL_Naval_Reinforcements_Summoned then
		bm:callback(function() Start_Hunnic_Cavalry_Attack_On_Town() end, 5000);
	end;
end;


function Start_Hunnic_Cavalry_Attack_On_Town()
	bm:out("Start_Hunnic_Cavalry_Attack_On_Town() called");

	local First_Hunnic_East_Waypoint_List = {
		v(240, 20),
		v(170, -40)
	};

	SAI_First_Hunnic_East:patrol(First_Hunnic_East_Waypoint_List, SUnits_Vgt_Initial_And_Town, function() SAI_First_Hunnic_East:attack_closest_unit(SUnits_Vgt_Initial_And_Town) end);
end;















function Watch_For_Naval_Disembarkment()
	eh:add_listener(
		"Unit_Disembark_Listener",
		"UnitDisembarkCompleted",
		true,
		function() Player_Has_Disembarked_Navy() end,
		false
	);
end;


function Player_Has_Disembarked_Navy()
	complete_objective("Att.Pro.Olbia.Objective_05");
	bm:callback(function() remove_objective("Att.Pro.Olbia.Objective_05") end, 5000);
	
	-- Our reinforcements carry missiles to lob at the enemy. Keep them protected, and put them where they can do the most damage!
	bm:queue_advisor(
		"Att.Pro.Olbia.AD.203", 
		20000, 
		false, 
		function() 
			add_infotext(1, "Att.Pro.Olbia.Info.140", "Att.Pro.Olbia.Info.141", "Att.Pro.Olbia.Info.142", "Att.Pro.Olbia.Info.143");
		end
	);
end;















function Watch_For_Hunnic_Forces_Closing()
	bm:watch(
		function()
			return distance_between_forces(SUnits_Vgt_Initial_And_Town, SUnits_Hun_Initial) < 150
		end,
		0,
		function()
			Issue_Infantry_Advice()
		end,
		"Hunnic_Battle"
	);
end;



function Issue_Infantry_Advice()
	-- Chieftain! Word reaches us that these raiders are Huns, a people from the east, no doubt in the pay of the Ostrogoths! Let us show them our fighting skills: the Huns will rue the day they made a pact against us!
	bm:queue_advisor(
		"Att.Pro.Olbia.AD.103", 
		20000, 
		false, 
		function() 
			add_infotext(1, "Att.Pro.Olbia.Info.090", "Att.Pro.Olbia.Info.091", "Att.Pro.Olbia.Info.092", "Att.Pro.Olbia.Info.093");
		end
	);
	
	bm:watch(function() return is_routing_or_dead(SUnits_Hun_Initial) end, 0, function() First_Hun_Attack_Defeated() end, "Hunnic_Battle");
end;







function First_Hun_Attack_Defeated()
	bm:out("First_Hun_Attack_Defeated() called");
	
	bm:callback(
		function()
			-- halt player's army
			for i = 1, #SUnits_Vgt_Initial_And_Town do
				local current_sunit = SUnits_Vgt_Initial_And_Town[i];
				
				current_sunit.uc:halt();
				current_sunit.uc:release_control();
			end;
			
			Enqueue_Forest_Cutscene_Advice();
		end, 
		1000
	);
end;


function Enqueue_Forest_Cutscene_Advice()
	-- kick off the Forest cutscene
	-- Another attack! The Huns advance under cover of forest! Ready your weapons once again, men!
	bm:queue_advisor(
		"Att.Pro.Olbia.AD.200",
		20000, 
		false, 
		function()
			cam:fade(true, 0.5);
			
			bm:callback(function() Play_Cutscene_Forest_Hunnic_Attack() end, 1000);
			bm:callback(function() add_infotext(1, "Att.Pro.Olbia.Info.110", "Att.Pro.Olbia.Info.111", "Att.Pro.Olbia.Info.112") end, 5500);
		end,
		0,
		4500
	);
end;




function Player_Has_Lost_First_Hunnic_Battle()
	bm:out("Player_Has_Lost_First_Hunnic_Battle() called");
	
	clear_infotext();
	bm:stop_advisor_queue();
	
	bm:remove_process("Hunnic_Battle");
	eh:remove_listener("Unit_Disembark_Listener");
	
	-- Olbia has fallen, we have failed! What shall become of us now?
	bm:queue_advisor("Att.Pro.Olbia.AD.105", 10000);
	
	bm:callback(function() Lose_Battle() end, 10000);
end;






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\po_prologue_olbia\po_main.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	MAIN BATTLE SCRIPT
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

START_AT_BEGINNING = 0;
START_AT_INITIAL_HUNNIC_ATTACK = 1;
START_AT_FOREST_HUNNIC_ATTACK = 2;

Starting_Position = START_AT_BEGINNING;

BOOL_First_Hunnic_Attack_Active = false;
BOOL_Forest_Hunnic_Attack_Active = false;

-- called at start of deployment phase
function Deployment_Phase()
	bm:out("Battle is in deployment phase");
	
	-- force the ostrogoths to be visible
	set_visible(SUnits_Ogt_All, true);
		
	-- disable units not meant to be visible at battle start
	enable(SUnits_Vgt_Town, false);
	enable(SUnits_Vgt_Navy, false);
	enable(SUnits_Hun_All, false);
end;


-- end of deployment phase i.e. battle start
-- here we decide which section to start the battle on
function End_Deployment_Phase()

	if Starting_Position == START_AT_BEGINNING then
		bm:out("Initialising battle at beginning");
		Init_Battle_Beginning();
		return;
	elseif Starting_Position == START_AT_INITIAL_HUNNIC_ATTACK then
		bm:out("Initialising battle at initial Hunnic attack");
		Init_Battle_Initial_Hunnic_Attack();
		return;
	elseif Starting_Position == START_AT_FOREST_HUNNIC_ATTACK then
		bm:out("Initialising battle at forest Hunnic attack");
		Init_Battle_Forest_Hunnic_Attack();
		return;
	end;
	
	bm:out("Couldn't determine startpos " .. tostring(startpos) .. ", initialising at beginning");
	Init_Battle_Beginning();
end;



-- instantly loses the battle for the player
function Lose_Battle()
	enable(SUnits_Vgt_All);

	UC_Vgt_01_All:morale_behavior_rout();
	
	bm:end_battle();
end;



function Get_Non_Routing_Scriptunit(sunits)
	for i = 1, #sunits do
		local current_sunit = sunits[i];
		
		if not is_routing_or_dead(current_sunit) then
			return current_sunit;
		end;
	end;
	
	return nil;
end;



function SUnits_Max_Casualties(sunits, casualty_rate, release)
	for i = 1, #sunits do
		local current_sunit = sunits[i];
		
		unit_max_casualties(current_sunit, casualty_rate, true);
		
		if release then
			current_sunit.uc:release_control();
		end;
	end;
end;





function Prevent_Players_Units_Routing()
	for i = 1, #SUnits_Vgt_All do
		local current_sunit = SUnits_Vgt_All[i];
		current_sunit.uc:morale_behavior_fearless();
	end;
end;



BOOL_Town_Control_Monitor_Started = false;

-- monitors how many enemies versus how many allies are in the town's boundaries - if the player
-- is deemed to have evacuated the town, they lose the battle
function Start_Town_Control_Monitor_System()
	if BOOL_Town_Control_Monitor_System_Started then
		return;
	end;
	
	BOOL_Town_Control_Monitor_System_Started = true;
	
	Start_Town_Control_Monitor("system is starting");
end;


function Stop_Town_Control_Monitor_System()
	BOOL_Town_Control_Monitor_System_Started = false;
	bm:remove_process("Town_Control_Monitor");
end;


	
	
function Start_Town_Control_Monitor(reason)
	bm:out("Start_Town_Control_Monitor() called, reason is: " .. tostring(reason));

	bm:watch(
		function() return Area_Town_Boundaries:is_in_area(SUnits_Hun_All, true) and not Area_Town_Boundaries:is_in_area(SUnits_Vgt_All, true) end,
		0,
		function() Start_Town_Control_Monitor_Countdown() end,
		"Town_Control_Monitor"		
	);
end;


function Start_Town_Control_Monitor_Countdown()
	bm:out("Start_Town_Control_Monitor_Countdown() called");

	-- if the player moves back in to town or the Huns move out of town before the
	-- countdown elapses, cancel it and restart the monitor
	bm:watch(
		function() return Area_Town_Boundaries:is_in_area(SUnits_Vgt_All, true) or not Area_Town_Boundaries:is_in_area(SUnits_Hun_All, true) end,
		0,
		function() 
			bm:remove_process("Town_Control_Monitor");
			Start_Town_Control_Monitor("town control countdown halted");
		end,
		"Town_Control_Monitor"
	);
	
	-- if this doesn't get cancelled in 20 seconds, the player loses
	bm:callback(
		function() 
			Player_Has_Left_Battle() 
		end, 
		20000, 
		"Town_Control_Monitor"
	);
end;



function Ensure_SUnits_Dont_Tire_Before_Engaging_Enemy(sunits, enemy_sunits)
	for i = 1, #sunits do
		local current_sunit = sunits[i];
		bm:out("Ensuring " .. current_sunit.name .. " doesn't tire before reaching the enemy");
		Ensure_SUnit_Doesnt_Tire_Before_Engaging_Enemy(current_sunit, enemy_sunits)
	end;
end;


function Ensure_SUnit_Doesnt_Tire_Before_Engaging_Enemy(sunit, enemy_sunits)
	if not standing_is_close_to_position(enemy_sunits, sunit.unit:position(), 150) then
		sunit.uc:change_fatigue_amount(0.1);
		sunit.uc:release_control();
		bm:callback(function() Ensure_SUnit_Doesnt_Tire_Before_Engaging_Enemy(sunit, enemy_sunits) end, 5000);
	else
		bm:out(sunit.name .. " has closed with the enemy, allowing them to tire");
	end;
end;


function Listen_For_Advice_Hyperlink_Clicks()
	-- output_uicomponent_on_click();

	eh:add_listener(
		"hyperlink_click_listener",
		"ComponentLinkClicked",
		true,
		function(context)
			local url = context.string;
			-- no idea why we have to delay this callback, some environment issue ...
			bm:callback(function() Check_Advice_Hyperlink_Click(url) end, 200);
		end,
		true
	);
end;


function Check_Advice_Hyperlink_Click(url)
	bm:out("Check_Advice_Hyperlink_Click() called, url is " .. tostring(url));
	
	if url == "script_link_unit_cards" then
		Highlight_Unit_Cards();
	elseif url == "script_link_run_button" then
		Highlight_Run_Button();
	elseif url == "script_link_force_tabs" then
		Highlight_Force_Tabs();
	end;
end;








function Is_Unit_Card_Panel_Visible()
	local uic_card_panel = bm:ui_component("card_panel_docker");
	-- local uic_layout = bm:ui_component("layout");
	-- local uic_card_panel = find_uicomponent_by_table(uic_layout, Path_To_Review_DY);
	
	if not is_uicomponent(uic_card_panel) then
		script_error("WARNING: Is_Unit_Card_Panel_Visible() couldn't find uic_card_panel");
		return false;
	end;
	
	return uic_card_panel:Visible(true);
end;



function Show_Unit_Card_Panel()
	local uic_button_show_cards = bm:ui_component("button_toggle_cards");
	
	if not is_uicomponent(uic_button_show_cards) then
		script_error("WARNING: Show_Unit_Card_Panel() couldn't find uic_button_show_cards");
		return false;
	end;
	
	uic_button_show_cards:SimulateClick();
end;





Path_To_Review_DY = {"battle_orders", "review_DY"};
Path_To_Dummy_Component = "UI/Campaign UI/script_dummy";

function Highlight_Unit_Cards()
	
	if not Is_Unit_Card_Panel_Visible() then
		Show_Unit_Card_Panel();
		bm:callback(function() Highlight_Unit_Cards() end, 300);
		return;
	end;
	
	local uic_layout = bm:ui_component("layout");
	
	if not is_uicomponent(uic_layout) then
		script_error("WARNING: Highlight_Unit_Cards() couldn't find uic_layout, using failsafe");
		Highlight_Unit_Cards_Failsafe();
		return;
	end;
	
	if not uic_layout:Find("all_cards_highlight", false) then
		-- component over all cards does not exist, so we should create it
		uic_layout:CreateComponent("all_cards_highlight", Path_To_Dummy_Component);
	end;
	
	
	local uic_dummy = bm:ui_component("all_cards_highlight");
	
	if not is_uicomponent(uic_dummy) then
		script_error("WARNING: Highlight_Unit_Cards() couldn't find uic_dummy, using failsafe");
		Highlight_Unit_Cards_Failsafe();
		return;
	end;

				--[[
				uic_root = UIComponent(uic_layout:Parent())
				bm:out("uic_root is " .. tostring(uic_root));
				bm:out("uic_layout:Parent() is " .. tostring(uic_layout:Parent()));
	
				-- local test1 = bm:ui_component("battle_orders");
				-- bm:out("test1 is " .. tostring(test1));
				
				-- local test2 = find_single_uicomponent(uic_layout, "review_DY");
				-- local test2 = bm:ui_component("review_DY");
				-- bm:out("test2 is " .. tostring(test2));
				
				local test3 = uic_root:Find("battle_orders");

				bm:out("test3 is " .. tostring(test3));
				
				--local test4 = find_single_uicomponent(uic_root, "layout");
				-- bm:out("test4 is " .. tostring(test4));
				]]
	

	local uic_review_dy = find_uicomponent_by_table(uic_layout, Path_To_Review_DY);
	
	if not is_uicomponent(uic_review_dy) then
		script_error("WARNING: Highlight_Unit_Cards() couldn't find uic_review_dy, using failsafe");
		Highlight_Unit_Cards_Failsafe();
		return;
	end;
	
	local childcount = uic_review_dy:ChildCount();
	
	if childcount == 0 then
		Highlight_Unit_Cards_Failsafe();
		return;
	end;
	
	local first_pos_x = 5000000;
	local first_pos_y = 5000000;
	local last_pos_x = -1;
	local last_pos_y = -1;
	local last_size_x = 0;
	local last_size_y = 0;
	
	for i = 0, childcount - 1 do
		local uic_child = UIComponent(uic_review_dy:Find(i));
		
		local pos_x, pos_y = uic_child:Position();
		
		if pos_x < first_pos_x then
			first_pos_x = pos_x;
			first_pos_y = pos_y;
		end;
		
		if pos_x > last_pos_x then
			last_pos_x = pos_x;
			last_pos_y = pos_y;
			last_size_x, last_size_y = uic_child:Dimensions();
		end;
	end;
	
	uic_dummy:Resize(last_pos_x + last_size_x - first_pos_x, last_pos_y + last_size_y - first_pos_y);
	uic_dummy:MoveTo(first_pos_x, first_pos_y);

	highlight_component_with_duration("all_cards_highlight", true, "layout", 2000);
end;


function Highlight_Unit_Cards_Failsafe()
	highlight_component_with_duration("review_DY", true, "battle_orders_pane", 2000);
end;





function Highlight_Run_Button()
	highlight_component_with_duration("button_movespeed", false, "layout", 2000);
end;






Path_To_Card_Filters = {"battle_orders", "battle_orders_pane", "cards_panel", "card_filters"};

function Highlight_Force_Tabs()

	if not Is_Unit_Card_Panel_Visible() then
		Show_Unit_Card_Panel();
		bm:callback(function() Highlight_Force_Tabs() end, 300);
		return;
	end;
	
	local uic_layout = bm:ui_component("layout");
	
	if not is_uicomponent(uic_layout) then
		script_error("WARNING: Highlight_Force_Tabs() couldn't find uic_layout, using failsafe");
		Highlight_Force_Tabs_Failsafe();
		return;
	end;
	
	if not uic_layout:Find("all_tabs_highlight", false) then
		-- component over all tabs does not exist, so we should create it
		uic_layout:CreateComponent("all_tabs_highlight", Path_To_Dummy_Component);
	end;
	
	
	local uic_dummy = bm:ui_component("all_tabs_highlight");
	
	if not is_uicomponent(uic_dummy) then
		script_error("WARNING: Highlight_Force_Tabs() couldn't find uic_dummy, using failsafe");
		Highlight_Force_Tabs_Failsafe();
		return;
	end;
	
	local uic_card_filters = find_uicomponent_by_table(uic_layout, Path_To_Card_Filters);
	
	if not is_uicomponent(uic_card_filters) then
		script_error("WARNING: Highlight_Force_Tabs() couldn't find uic_card_filters, using failsafe");
		Highlight_Force_Tabs_Failsafe();
		return;
	end;
	
	local childcount = uic_card_filters:ChildCount();
	
	if childcount == 0 then
		Highlight_Force_Tabs_Failsafe();
		return;
	end;
	
	local first_pos_x = 5000000;
	local first_pos_y = 5000000;
	local last_pos_x = -1;
	local last_pos_y = -1;
	local last_size_x = 0;
	local last_size_y = 0;
	
	local tab_visible = false;
	
	for i = 0, childcount - 1 do
		local uic_child = UIComponent(uic_card_filters:Find(i));
		
		if uic_child:Visible(true) then
			tab_visible = true;
			
			local pos_x, pos_y = uic_child:Position();
			
			if pos_x < first_pos_x then
				first_pos_x = pos_x;
				first_pos_y = pos_y;
			end;
			
			if pos_x > last_pos_x then
				last_pos_x = pos_x;
				last_pos_y = pos_y;
				last_size_x, last_size_y = uic_child:Dimensions();
			end;
		end;
	end;
	
	if not tab_visible then
		script_error("Highlight_Force_Tabs() called but no tabs seem to be visible");
		return;
	end;
	
	local dummy_size_x = last_pos_x + last_size_x - first_pos_x;
	local dummy_size_y = last_pos_y + last_size_y - first_pos_y;
	
	uic_dummy:Resize(dummy_size_x, dummy_size_y);
	uic_dummy:MoveTo(first_pos_x, first_pos_y);
	
	bm:out("uic_dummy resized to [" .. tostring(dummy_size_x) .. ", " .. tostring(dummy_size_y) .. "] and moved to [" .. tostring(first_pos_x) .. ", " .. tostring(first_pos_y) .. "]");

	highlight_component_with_duration("all_tabs_highlight", true, "layout", 2000);
end;




function Highlight_Force_Tabs_Failsafe()
	highlight_component_with_duration("cf_land", true, "battle_orders_pane", 2000);
end;

















BOOL_Battle_Is_Ending = false;

-- the game has gone to victory countdown phase, someone has won
function Battle_Is_Ending()
	if not BOOL_Battle_Is_Ending then
		BOOL_Battle_Is_Ending = true;
		
		bm:stop_advisor_queue();
		
		bm:remove_process("Goth_Battle");
		bm:remove_process("Hunnic_Battle");
		
		if BOOL_Forest_Hunnic_Attack_Active then

			-- if all of the enemy units are routing then we've won, else we've lost
			if is_routing_or_dead(SUnits_Hun_All) then
				-- all the enemy units are routing, so the player has won
				Player_Has_Won();
				return;
				
			else
				-- We are beaten, Olbia is lost to the Huns! Gather your possessions and run!
				bm:queue_advisor("Att.Pro.Olbia.AD.205", 10000);
				fail_objective("Att.Pro.Olbia.Objective_04");
			end;
		else
			-- the player has definitely lost
			-- Olbia has fallen, we have failed! What shall become of us now?
			bm:queue_advisor("Att.Pro.Olbia.AD.105", 10000);
			fail_objective("Att.Pro.Olbia.Objective_04");
		end;
		
		bm:callback(function() bm:end_battle() end, 10000);
	end;
end;







C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\po_prologue_olbia\po_opening_battle.lua




-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	OPENING BATTLE
--
--	Script for the opening battle against the Ostrogothi
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------




function Init_Battle_Beginning()
	--Start_Battle_No_Cutscene();
	Play_Cutscene_Intro();
end;



function Start_Battle_No_Cutscene()
	cam:fade(false, 0.5);
	Start_Battle();
end;


-- the interactive battle has started
function Start_Battle()
	bm:out("Battle is Starting");
				
	-- start rout manager
	bm:start_rout_manager(1);
	
	-- register victory and defeat VO callbacks
	bm:setup_victory_callback(function() Battle_Is_Ending() end);
		
	-- disable pausing
	bm:disable_shortcut("toggle_pause", true);
	
	-- disable tactical map
	bm:disable_shortcut("show_tactical_map", true);
	
	-- hide user interface
	bm:ui_component("battle_orders"):TriggerAnimation("tut_hide");
	bm:ui_component("radar_holder"):TriggerAnimation("tut_hide");
	bm:ui_component("BOP_frame"):TriggerAnimation("tut_hide");
	
	-- set the max casualty rate of the player's army
	-- SUnits_Max_Casualties(SUnits_Vgt_Initial, 0.6);		-- if this gets reinstated it needs fixing, it will release control of units otherwise
	
	-- prevent the player's units from routing (hopefully we won't need this eventually)
	-- Prevent_Players_Units_Routing();
	
	-- listen for hyperlink clicks
	Listen_For_Advice_Hyperlink_Clicks();
		
	Issue_Camera_Objective_Advice();
end;












--
-- CAMERA OBJECTIVE
--

Camera_Objective_Str = "Camera_Objective_Str";
BOOL_Skip_Camera_Objective = false;

function Issue_Camera_Objective_Advice()

	-- The Ostrogoths present themselves, Chieftain! Their warriors are too numerous to count - see for yourself!
	bm:stop_advisor_queue();
	bm:queue_advisor(
		"Att.Pro.Olbia.AD.001", 
		6000, 
		false, 
		function() 
			if not BOOL_Skip_Camera_Objective then
				add_infotext(1, "Att.Pro.Olbia.Info.001", "Att.Pro.Olbia.Info.002", "Att.Pro.Olbia.Info.003", "Att.Pro.Olbia.Info.004", "Att.Pro.Olbia.Info.005", function() activate_objective_chain(Camera_Objective_Str, "Att.Pro.Olbia.Objective_01", Num_Camera_Objectives_Completed, Num_Camera_Objectives) end)
			end;
		end
	);
	show_advisor_progress_button(true);
	
	if BOOL_Skip_Camera_Objective then
		bm:callback(function() Skip_Camera_Objective_Monitors() end, 5000);
		return;
	else
		bm:callback(function() Start_Camera_Objective_Monitors() end, 3000, "Camera_Objective_Monitors_Start");
	end;
	
	eh:add_listener(
		"Camera_Objective_Monitors_Start",
		"AdviceDismissed",
		true,
		function() Start_Camera_Objective_Monitors() end,
		false
	);
end;


BOOL_Visigoth_Intel_Delivered = false;
BOOL_Ostrogoth_Intel_Delivered = false;

POS_Marker_Visigoth = v(-112, 7, 9);
POS_Marker_Ostrogoth = v(-830, 31, -85);


function Skip_Camera_Objective_Monitors()
	All_Intel_Delivered();
end;


Num_Camera_Objectives_Completed = 0;
Num_Camera_Objectives = 2;


function Start_Camera_Objective_Monitors()
	eh:remove_listener("Camera_Objective_Monitors_Start");
	bm:remove_process("Camera_Objective_Monitors_Start");

	-- show markers
	bm:add_ping_icon(POS_Marker_Visigoth:get_x(), POS_Marker_Visigoth:get_y(), POS_Marker_Visigoth:get_z(), 3, false);
	bm:add_ping_icon(POS_Marker_Ostrogoth:get_x(), POS_Marker_Ostrogoth:get_y(), POS_Marker_Ostrogoth:get_z(), 3, false);

	-- start watching camera position
	bm:watch(function() return Should_Trigger_Intel(cam, POS_Marker_Visigoth) end, 0, function() Play_Cutscene_Visigoth_Intel() end, Camera_Objective_Str);
	bm:watch(function() return Should_Trigger_Intel(cam, POS_Marker_Ostrogoth) end, 0, function() Play_Cutscene_Ostrogoth_Intel() end, Camera_Objective_Str);
end;



-- should we trigger a given intel cutscene
function Should_Trigger_Intel(cam, pos)
	local cam_distance = cam:position():distance(pos);
	
	if cam_distance < 180 and cam:target():distance(pos) < cam_distance then
		local cam_pos = cam:position();
		local cam_target = cam:target();
		local v_cam_to_targ	= v_subtract(cam_target, cam_pos);
		local v_cam_to_intel_pos = v_subtract(pos, cam_pos);
			
		if dot3d(v_cam_to_targ, v_cam_to_intel_pos) > 0 then
			return true;
		end;
	end;
	
	return false;
end;




BOOL_Units_Infotext_Added = false;

function Add_Units_Infotext()
	if BOOL_Units_Infotext_Added then
		return;
	end;
	
	BOOL_Units_Infotext_Added = true;
	add_infotext(1, "Att.Pro.Olbia.Info.010", "Att.Pro.Olbia.Info.011", "Att.Pro.Olbia.Info.012");
end;





function Camera_Objective_Completed()
	-- increment the camera objective count
	Num_Camera_Objectives_Completed = Num_Camera_Objectives_Completed + 1;
		
	-- update objective on UI
	update_objective_chain(Camera_Objective_Str, "Att.Pro.Olbia.Objective_01", Num_Camera_Objectives_Completed, Num_Camera_Objectives);
	
	if Num_Camera_Objectives_Completed >= Num_Camera_Objectives then
		complete_objective("Att.Pro.Olbia.Objective_01");
	end;
end;






-- disable pausing (seems to be re-enabled in cutscene)
function Disable_Pausing()
	bm:modify_battle_speed(1);
	bm:disable_shortcut("toggle_pause", true);
end;



function Visigoth_Intel_Delivered()
	Disable_Pausing();
	
	show_advisor_progress_button(true);
	
	Check_All_Intel_Delivered();
end;


function Ostrogoth_Intel_Delivered()
	Disable_Pausing();
	
	show_advisor_progress_button(true);
	
	Check_All_Intel_Delivered();
end;



function Check_All_Intel_Delivered()
	-- watch for all cutscenes delivered
	if Num_Camera_Objectives_Completed >= Num_Camera_Objectives then
		All_Intel_Delivered();
	end;
end;



function All_Intel_Delivered()
	bm:out("All_Intel_Delivered() called");
	
	clear_infotext();
	
	-- pan camera back to player's army
	bm:callback(function() Play_Cutscene_Ostrogoth_Battle_Start() end, 1000);
	
	-- The Ostrogoths seem content to sit outside the town, mocking us. Let us go to them before they change their minds and attack!
	bm:callback(
		function() 	
			bm:queue_advisor(
				"Att.Pro.Olbia.AD.004", 
				6000, 
				false, 
				function() 
					add_infotext(1, "Att.Pro.Olbia.Info.020", "Att.Pro.Olbia.Info.021", "Att.Pro.Olbia.Info.022", "Att.Pro.Olbia.Info.023")
				end
			);
		end, 
		2000
	);
end;





function Start_Ostrogoth_Battle()
	bm:out("Start_Ostrogoth_Battle() called");
	
	show_advisor_progress_button(true);
	
	-- add ping marker
	bm:callback(function() bm:add_ping_icon(POS_Marker_Hill:get_x(), POS_Marker_Hill:get_y(), POS_Marker_Hill:get_z(), 3, false) end, 2000);
		
	-- objective
	remove_objective("Att.Pro.Olbia.Objective_01");
	bm:callback(function() set_objective("Att.Pro.Olbia.Objective_02") end, 2000);
	
	-- cache current positions of player units
	cache_position(SUnits_Vgt_Initial);
	
	-- watch for the player moving their units
	bm:watch(function() return has_moved(SUnits_Vgt_Initial) end, 0, function() Show_UI_As_Player_Has_Moved_Army() end, "Goth_Battle");
	bm:callback(function() Player_Has_Moved_Army() end, 45000);		-- failsafe
end;


function Show_UI_As_Player_Has_Moved_Army()

	-- re-enable UI
	bm:callback(
		function()
			bm:ui_component("battle_orders"):TriggerAnimation("tut_show");
			bm:ui_component("radar_holder"):TriggerAnimation("tut_show");
			bm:ui_component("BOP_frame"):TriggerAnimation("tut_show");
		end,
		1000
	);
	
	if not BOOL_Ostrogoth_Advance_Infotext_Shown then
		-- add unit card infotext
		add_infotext("Att.Pro.Olbia.Info.024");
	end;
	
	Player_Has_Moved_Army();
end;



BOOL_Player_Has_Moved_Army = false;

function Player_Has_Moved_Army()
	if BOOL_Player_Has_Moved_Army then
		return;
	end;
	
	BOOL_Player_Has_Moved_Army = true;
	
	bm:callback(function() Start_Ostrogoth_Advance() end, 10000);
	
	-- watch for the player closing on the target position
	bm:watch(
		function()
			local unit, distance = get_closest_unit(SUnits_Vgt_Initial, POS_Marker_Hill);
			return distance < 70
		end,
		0,
		function() Remove_Hill_Ping_Icon() end,
		"Goth_Battle"	
	);	
	
	-- start watch for the player evacuating the area of battle
	bm:watch(
		function() return Area_Ostrogoth_Battle:standing_not_in_area(SUnits_Vgt_Initial) end,
		0,
		function() Player_Has_Left_Battle() end,
		"Goth_Battle"
	);
end;


Ostrogoth_Patrol = {
	v(-420, 50),
	v(90, -20)
};

function Start_Ostrogoth_Advance()
	SAI_Ostrogoths = script_ai_planner:new("SAI_Ostrogoths", SUnits_Ogt_All);
	SAI_Ostrogoths:patrol(Ostrogoth_Patrol, SUnits_Vgt_Initial, function() Player_Has_Left_Battle() end);
	
	-- set the Ostrogoths to rout after taking a certain number of casualties
	for i = 1, #SUnits_Ogt_All do
		local current_sunit = SUnits_Ogt_All[i];
		current_sunit:rout_on_casualties(0.6);
	end;
	
	
	bm:callback(function() Notify_Player_Of_Ostrogoth_Advance() end, 5000);
	
	-- watch for player being defeated
	bm:watch(function() return is_routing_or_dead(SUnits_Vgt_Initial) end, 0, function() Player_Has_Lost_Ostrogoth_Battle() end, "Goth_Battle");
end;


POS_Marker_Hill = v(-402, 27, 62);
BOOL_Ostrogoth_Advance_Infotext_Shown = false;

function Notify_Player_Of_Ostrogoth_Advance()
	BOOL_Ostrogoth_Advance_Infotext_Shown = true;

	-- The Ostrogoths are advancing! Hurry to meet them on high ground, Chieftain. Fighting downhill will aid our defence.
	bm:queue_advisor(
		"Att.Pro.Olbia.AD.005", 
		20000, 
		false, 
		function() 
			add_infotext(1, "Att.Pro.Olbia.Info.030", "Att.Pro.Olbia.Info.031", "Att.Pro.Olbia.Info.040", "Att.Pro.Olbia.Info.041", "Att.Pro.Olbia.Info.042", "Att.Pro.Olbia.Info.043")
		end
	);
	
	-- watch for the two forces closing together
	bm:watch(
		function()
			return distance_between_forces(SUnits_Vgt_Initial, SUnits_Ogt_All) < 150
		end,
		0,
		function()
			Ostrogoth_Army_Closes_On_Player()
		end,
		"Goth_Battle"
	);
	
	-- watch for the player's units running
	bm:watch(
		function() return Are_Any_Units_Running(SUnits_Vgt_Initial) end,
		20000,
		function() Issue_Help_System_Advice() end,
		"Issue_Help_System_Advice"
	);
	
	-- trigger help system advice even if the player doesn't run after a while
	bm:callback(
		function()
			Issue_Help_System_Advice();
		end,
		60000,
		"Issue_Help_System_Advice"
	)
end;


function Are_Any_Units_Running(sunits)
	for i = 1, #sunits do
		local current_sunit = sunits[i];
		if current_sunit.unit:is_moving_fast() then
			return true;
		end;	
	end;
	
	return false;
end;


function Issue_Help_System_Advice()
	bm:remove_process("Issue_Help_System_Advice");

	-- Remember that help and advice is available as we advance into battle, Chieftain. Learn to rely upon it.
	bm:queue_advisor(
		"Att.Pro.Olbia.AD.013", 
		20000, 
		false, 
		function() 
			add_infotext(1, "Att.Pro.Olbia.Info.025", "Att.Pro.Olbia.Info.026", "Att.Pro.Olbia.Info.027", "Att.Pro.Olbia.Info.028", "Att.Pro.Olbia.Info.029");
		end
	);
end;


function Ostrogoth_Army_Closes_On_Player()
	bm:out("Ostrogoth_Army_Closes_On_Player() called");
	
	-- Warriors, draw your swords! Ten solidus to the man who brings in the head of the enemy commander!
	bm:queue_advisor(
		"Att.Pro.Olbia.AD.006", 
		6000, 
		false, 
		function() 
			add_infotext(1, "Att.Pro.Olbia.Info.050", "Att.Pro.Olbia.Info.051", "Att.Pro.Olbia.Info.052", "Att.Pro.Olbia.Info.053")
		end
	);
	
	Remove_Hill_Ping_Icon()
	
	bm:callback(
		function()
			remove_objective("Att.Pro.Olbia.Objective_02");
			set_objective("Att.Pro.Olbia.Objective_03");
		end,
		4000
	);
	
	-- watch for the player engaging the ostrogoths at close range
	bm:callback(function() Watch_For_Player_Engaging_Ostrogoths() end, 20000, "Goth_Battle");
end;


BOOL_Hill_Ping_Icon_Removed = false;

function Remove_Hill_Ping_Icon()
	if BOOL_Hill_Ping_Icon_Removed then
		return;
	end;
	
	BOOL_Hill_Ping_Icon_Removed = true;
	
	bm:remove_ping_icon(POS_Marker_Hill:get_x(), POS_Marker_Hill:get_y(), POS_Marker_Hill:get_z());
	
	-- objectives
	complete_objective("Att.Pro.Olbia.Objective_02");
end;


function Watch_For_Player_Engaging_Ostrogoths()
	bm:watch(
		function()
			return distance_between_forces(SUnits_Vgt_Initial, SUnits_Ogt_All) < 20
		end,
		0,
		function()
			Deliver_Flanking_Advice()
		end,
		"Goth_Battle"
	);
end;


function Deliver_Flanking_Advice()
	-- Chieftain, try to maintain a battle line! Do not let them surround us, our warriors fight best with the enemy to the front!
	bm:queue_advisor(
		"Att.Pro.Olbia.AD.007", 
		20000, 
		false, 
		function() 
			add_infotext(1, "Att.Pro.Olbia.Info.060", "Att.Pro.Olbia.Info.061", "Att.Pro.Olbia.Info.062");
		end
	);
	
	-- order the Ostrogoths to attack
	bm:callback(function() SAI_Ostrogoths:attack_force(SUnits_Vgt_Initial) end, 20000);
		
	-- watch for any of the player's visigoth units routing
	bm:watch(
		function()
			return num_units_routing(SUnits_Vgt_Initial) > 0
		end,
		0,
		function()
			Deliver_Morale_Warning(true);
		end,
		"Goth_Battle"
	);
	
	-- watch for any of the ostrogoths routing
	bm:watch(
		function()
			return num_units_routing(SUnits_Ogt_All) > 0
		end,
		0,
		function()
			Deliver_Morale_Warning(false);
		end,
		"Goth_Battle"
	);
	
	-- watch for player winning
	bm:watch(function() return is_routing_or_dead(SUnits_Ogt_All) end, 0, function() Player_Has_Won_Ostrogoth_Battle() end, "Goth_Battle");
end;


BOOL_Morale_Infotext_Added = false;

function Deliver_Morale_Warning(is_player)
	local advice_key = "Att.Pro.Olbia.AD.009";
	
	if is_player then
		advice_key = "Att.Pro.Olbia.AD.010";
	end;
	
	bm:queue_advisor(
		advice_key, 
		20000, 
		false, 
		function()
			if not BOOL_Morale_Infotext_Added then
				BOOL_Morale_Infotext_Added = true;
				add_infotext(1, "Att.Pro.Olbia.Info.070", "Att.Pro.Olbia.Info.071", "Att.Pro.Olbia.Info.072", "Att.Pro.Olbia.Info.073", "Att.Pro.Olbia.Info.074", "Att.Pro.Olbia.Info.075");
			end;
		end
	);
end;


function Player_Has_Left_Battle()
	bm:out("Player_Has_Left_Battle() called");
	
	clear_infotext();
	bm:stop_advisor_queue();
	
	fail_objective("Att.Pro.Olbia.Objective_03");
	
	bm:remove_process("Goth_Battle");
	
	-- You abandoned our position, and for what? To defend some barren hilltop while the enemy burn our houses? What kind of strategy is this? We are lost!
	bm:queue_advisor("Att.Pro.Olbia.AD.012", 10000);
	
	bm:callback(function() Lose_Battle() end, 10000);
end;


function Player_Has_Lost_Ostrogoth_Battle()
	bm:out("Player_Has_Lost_Ostrogoth_Battle() called");

	clear_infotext();
	bm:stop_advisor_queue();
	
	fail_objective("Att.Pro.Olbia.Objective_03");
	
	bm:remove_process("Goth_Battle");
	
	-- We are beaten, fall back to the town! Let us hope the enemy show us mercy!
	bm:queue_advisor("Att.Pro.Olbia.AD.011", 10000);
	
	bm:callback(function() Lose_Battle() end, 10000);
end;


function Prepare_For_Player_Winning_Ostrogoth_Battle()
	Army_Ogt_01:units():kill_commander();

	bm:callback(function() Player_Has_Won_Ostrogoth_Battle() end, 5000);
end;


function Player_Has_Won_Ostrogoth_Battle()
	bm:out("Player_Has_Won_Ostrogoth_Battle() called");
	
	clear_infotext();
	bm:stop_advisor_queue();
	
	complete_objective("Att.Pro.Olbia.Objective_03");
	
	bm:remove_process("Goth_Battle");
	
	-- halt all of player's units
	halt(SUnits_Vgt_Initial, true);
	
	bm:callback(
		function()
			cam:fade(true, 0.5);
			bm:callback(
				function() 
					remove_objective("Att.Pro.Olbia.Objective_03");
					Play_Cutscene_Ostrogoth_Battle_Victory()
				end, 
				700
			);
		end,
		1000
	);
end;


function End_Ostrogoth_Battle()
	Reposition_Visigoths_Initial_Hunnic_Attack_If_Appropriate();
	Play_Cutscene_First_Hunnic_Attack();
end;








C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\po_prologue_olbia\po_start.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	INITIAL SCRIPT SETUP
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

-- clear out loaded files
system.ClearRequiredFiles();

-- load in battle script library
require "lua_scripts.Battle_Script_Header";

-- declare battlemanager object
bm = battle_manager:new(empire_battle:new());

-- get battle name from folder, and print header
battle_name, battle_shortform = get_folder_name_and_shortform();

bm:out("==============");
bm:out("==============");
bm:out("==============");
bm:out("Script started: Battle of " .. battle_name);
bm:out("==============");

-- load in other script files associated with this battle
package.path = package.path .. ";data/Script/" .. battle_name .. "/?.lua";

require (battle_shortform .. "_Declarations");
require (battle_shortform .. "_Cutscenes");
require (battle_shortform .. "_Main");
require (battle_shortform .. "_Opening_Battle");
require (battle_shortform .. "_Initial_Hunnic_Attack");
require (battle_shortform .. "_Forest_Hunnic_Attack");

-- register functions to be called on phase changes
bm:register_phase_change_callback("Deployment", function() Deployment_Phase() end);			-- optional deployment phase callback
bm:setup_battle(function() End_Deployment_Phase() end);										-- called when battle starts








C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ra_ravenna\ra_cutscenes.lua

function Play_Cutscene_Intro()

	bm:out("Play_Cutscene_Intro() called");
	
	POS_Cam_Cutscene_Intro_Final = v(82.8, 58.8, -223.8);
	Targ_Cam_Cutscene_Intro_Final = v(104.3, 26.9, -282.4);
	
	SFX_Att_HB_RA_Intro_02 = new_sfx("Play_Att_HB_RA_Intro_02_1");
	SFX_Att_HB_RA_Intro_03 = new_sfx("Play_Att_HB_RA_Intro_03_1");
	SFX_Att_HB_RA_Intro_04 = new_sfx("Play_Att_HB_RA_Intro_04_1");

	
	local Cutscene_Intro = cutscene:new(
		"Cutscene_Intro", 							-- unique string name for cutscene
		ga_westrome_01:get_unitcontroller(),		-- unitcontroller over player's army
		28000 										-- duration of cutscene in ms
	);

	

	Cutscene_Intro:set_skippable(true, function() Skip_Cutscene_Intro() end);
	Cutscene_Intro:set_skip_camera(POS_Cam_Cutscene_Intro_Final, Targ_Cam_Cutscene_Intro_Final);
	-- Cutscene_Intro:set_debug();



	cam = Cutscene_Intro:camera();
	local subtitles = Cutscene_Intro:subtitles();
	subtitles:set_alignment("bottom_centre");
	subtitles:clear();
	
	Cutscene_Intro:action(function() cam:fade(false, 0.5) end, 0);
	
	Cutscene_Intro:action(function() ga_germans_01:set_visible_to_all(true); end, 0);
	
	Cutscene_Intro:action(function() cam:move_to(v(472.0, 14.7, -459.4), v(402.1, 16.8, -455.7), 0, true, 22, 10) end, 0);
	Cutscene_Intro:action(function() cam:move_to(v(472.0, 14.7, -459.4), v(402.1, 16.8, -455.7), 7, true, 20) end, 0);
	
	-- 2 September, AD476
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.RA.Intro_01") end, 3000);
	
	Cutscene_Intro:action(function() subtitles:clear() end, 5000);
	
	-- The Heruli, a foederatus of the Western Roman Empire, have revolted. They are led by their king, Odoacer.
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.RA.Intro_02") end, 6000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Att_HB_RA_Intro_02) end, 6000);
	
	Cutscene_Intro:action(function() cam:move_to(v(-395.1, 39.7, -349.6), v(-430.2, 35.4, -382.1), 0, true, 45) end, 6000);
	Cutscene_Intro:action(function() cam:move_to(v(-445.5, 39.7, -396.1), v(-480.6, 35.4, -428.5), 8, true, 43) end, 6000);
	
	Cutscene_Intro:action(function() cam:move_to(v(-720.4, 34.7, -615.4), v(-681.4, 29.8, -587.9), 0, true, 35, 0) end, 10500);
	Cutscene_Intro:action(function() cam:move_to(v(-717.8, 34.7, -619.1), v(-678.7, 29.8, -591.6), 8, true, 35, 0) end, 10500);
	
	Cutscene_Intro:action(function() subtitles:clear() end, 14000);	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 14000);
		
	-- The remnants of Italy's Roman army now gather to defend the capital of Ravenna.
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.RA.Intro_03") end, 15000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Att_HB_RA_Intro_03) end, 15000);
	
	Cutscene_Intro:action(function() cam:move_to(v(-440.1, 11.9, -401.6), v(-410.6, 10.3, -363.8), 0, true, 30) end, 15000);
	Cutscene_Intro:action(function() cam:move_to(v(-441.5, 11.9, -399.7), v(-412.0, 10.3, -361.9), 8, true, 30) end, 15000);
	
	Cutscene_Intro:action(function() cam:move_to(v(-424.3, 27.5, -459.9), v(-397.3, 21.6, -420.7), 0, true, 25) end, 18500);
	Cutscene_Intro:action(function() cam:move_to(v(-427.1, 27.5, -457.3), v(-400.0, 21.6, -418.1), 9, true, 25) end, 18500);

	Cutscene_Intro:action(function() subtitles:clear() end, 22000);	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 22000);
	
	Cutscene_Intro:action(function() ga_germans_01:set_visible_to_all(false); end, 22000);
		
	Cutscene_Intro:action(function() cam:move_to(v(113.0, 12.1, -281.5), v(100.9, 9.4, -212.6), 0, true, 45, 0) end, 22000);
	Cutscene_Intro:action(function() cam:move_to(POS_Cam_Cutscene_Intro_Final, Targ_Cam_Cutscene_Intro_Final, 5, false, 0) end, 23000);
	
	-- The fall of Ravenna would mark the end of Roman rule over Italy.
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.RA.Intro_04") end, 23000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Att_HB_RA_Intro_04) end, 23000);
	
	Cutscene_Intro:action(function() subtitles:clear() end, 28000);	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 28000);

	Cutscene_Intro:start();
end;


function Skip_Cutscene_Intro()
	
	cam:fade(true, 0);
	
	stop_sound(SFX_Att_HB_RA_Intro_02);
	stop_sound(SFX_Att_HB_RA_Intro_03);
	stop_sound(SFX_Att_HB_RA_Intro_04);
	
	ga_germans_01:set_visible_to_all(false);
		
	bm:callback(function() cam:fade(false, 0.5) end, 1000);
end;






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ra_ravenna\ra_start.lua

system.ClearRequiredFiles();
require "lua_scripts.Battle_Script_Header";

-- declare battlemanager object
bm = battle_manager:new(empire_battle:new());

-- get battle name from folder, and print header
battle_name, battle_shortform = get_folder_name_and_shortform();

-- load in other script files associated with this battle
package.path = package.path .. ";data/Script/" .. battle_name .. "/?.lua";

require (battle_shortform .. "_Cutscenes");

gb = generated_battle:new(
	true,                                      	-- screen starts black. Should match the prepare_for_fade_in flag in the battle xml
	true,                                      	-- prevents deployment. Set to false if you want the player to be able to deploy.
	function() Play_Cutscene_Intro() end,     	-- intro cutscene callback. Supply a function that runs your intro cutscene here
	false                                      	-- debug mode
);

gb:set_cutscene_during_deployment(true);

ga_westrome_01 = gb:get_army(1, 1);

ga_germans_01 = gb:get_army(2, 1);


-- fade camera in from black on battle start
gb:fade_in_on_message("battle_started", 0.5);


-- advice on battle start
gb:advice_on_message("battle_started", "Att.HB.RA.001", 5000);


-- let the AI do whatever once the cutscene has ended
ga_germans_01:release_on_message("cutscene_ended");


-- advice on player's general dying
ga_westrome_01:message_on_commander_death("player_general_dies");
gb:advice_on_message("player_general_dies", "Att.HB.RA.002", 5000);


-- advice on enemy general dying
ga_germans_01:message_on_commander_death("enemy_general_dies");
gb:advice_on_message("enemy_general_dies", "Att.HB.RA.003", 5000);


-- advice on player winning
ga_westrome_01:message_on_victory("player_wins");
gb:advice_on_message("player_wins", "Att.HB.RA.004");


-- advice on player losing
ga_westrome_01:message_on_defeat("player_loses");
gb:advice_on_message("player_loses", "Att.HB.RA.005");






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\sa_samarra\sa_cutscenes.lua

function Play_Cutscene_Intro()

	bm:out("Play_Cutscene_Intro() called");

	POS_Cam_Cutscene_Intro_Final = v(0, 555.4, -359.6);
	Targ_Cam_Cutscene_Intro_Final = v(0, 500.8, -211.4);

	
	
	SFX_Att_HB_SA_Intro_02 = new_sfx("Play_Att_HB_SA_Intro_02_1");
	SFX_Att_HB_SA_Intro_03 = new_sfx("Play_Att_HB_SA_Intro_03_1");
	SFX_Att_HB_SA_Intro_04 = new_sfx("Play_Att_HB_SA_Intro_04_1");
	SFX_Att_HB_SA_Intro_05 = new_sfx("Play_Att_HB_SA_Intro_05_1");


	
	local Cutscene_Intro = cutscene:new(
		"Cutscene_Intro", 							-- unique string name for cutscene
		ga_sassanids_01:get_unitcontroller(),		-- unitcontroller over player's army
		38000 										-- duration of cutscene in ms
	);

	

	Cutscene_Intro:set_skippable(true, function() Skip_Cutscene_Intro() end);
	Cutscene_Intro:set_skip_camera(POS_Cam_Cutscene_Intro_Final, Targ_Cam_Cutscene_Intro_Final);
	--Cutscene_Intro:set_debug();



	cam = Cutscene_Intro:camera();
	local subtitles = Cutscene_Intro:subtitles();
	subtitles:set_alignment("bottom_centre");
	subtitles:clear();
	
	
	
	Cutscene_Intro:action(function() cam:fade(false, 0.5) end, 0);	
	
	Cutscene_Intro:action(function() ga_sassanids_01:teleport_to_start_location_offset(0, -70); end, 0);	
	Cutscene_Intro:action(function() ga_eastrome_01:teleport_to_start_location_offset(0, -70); end, 0);	
	Cutscene_Intro:action(function() ga_eastrome_01:set_visible_to_all(true); end, 0);	
	
	Cutscene_Intro:action(function() ga_sassanids_01:goto_start_location(false); end, 0);
	Cutscene_Intro:action(function() ga_eastrome_01:goto_start_location(false); end, 0);
	
	
	
	Cutscene_Intro:action(function() cam:move_to(v(26.8, 540.8, 667.2), v(-10.7, 537.5, 637.2), 0, true, 35) end, 0);
	Cutscene_Intro:action(function() cam:move_to(v(26.8, 540.8, 667.2), v(-10.7, 537.5, 637.2), 7, true, 33) end, 0);
	
	-- 26 June, AD363
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.SA.Intro_01") end, 3000);
	
	

	Cutscene_Intro:action(function() subtitles:clear() end, 6000);
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 6000);
	
	Cutscene_Intro:action(function() cam:move_to(v(30.6, 507.4, 304.1), v(19.0, 503.3, 350.5), 0, true, 35) end, 6000);
	Cutscene_Intro:action(function() cam:move_to(v(39.2, 515.1, 269.6), v(26.8, 503.3, 314.7), 25, true, 33) end, 6500);
	
	-- Emperor Julian of the Eastern Roman Empire has led an expedition into Persia.
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.SA.Intro_02") end, 7000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Att_HB_SA_Intro_02) end, 7000);
	
	

	Cutscene_Intro:action(function() subtitles:clear() end, 13000);
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 13000);
	
	Cutscene_Intro:action(function() cam:move_to(v(181.3, 524.2, 250.9), v(136.2, 518.0, 266.1), 0, true, 35) end, 13000);
	Cutscene_Intro:action(function() cam:move_to(v(181.3, 524.2, 250.9), v(136.2, 518.0, 266.1), 7, true, 33) end, 13000);
	
	-- Unable to capture the Sassanid capital, Ctesiphon, Julian has pulled his forces back to the north.
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.SA.Intro_03") end, 14000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Att_HB_SA_Intro_03) end, 14000);
	
	Cutscene_Intro:action(function() cam:move_to(v(65.8, 510.2, 305.6), v(35.1, 502.0, 269.5), 0, true, 35) end, 17000);
	Cutscene_Intro:action(function() cam:move_to(v(65.8, 510.2, 305.6), v(38.5, 503.7, 266.6), 7, true, 33) end, 17000);
	
	

	Cutscene_Intro:action(function() subtitles:clear() end, 21000);	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 21000);
	
	Cutscene_Intro:action(function() cam:move_to(v(101.1, 503.4, -264.8), v(58.6, 498.2, -286.4), 0, true, 35) end, 21000);
	Cutscene_Intro:action(function() cam:move_to(v(101.1, 503.4, -264.8), v(56.5, 498.2, -281.8), 7, true, 33) end, 21000);
	
	-- In an effort to demoralise and starve out the Romans, the Sassanids have sent multiple skirmishes to harrass them.
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.SA.Intro_04") end, 22000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Att_HB_SA_Intro_04) end, 22000);
	
	Cutscene_Intro:action(function() cam:move_to(v(34.2, 504.9, -273.0), v(-13.7, 502.5, -276.2), 0, true, 35) end, 25500);
	Cutscene_Intro:action(function() cam:move_to(v(34.2, 504.9, -273.0), v(-13.7, 502.5, -276.2), 7, true, 33) end, 25500);
	
	

	Cutscene_Intro:action(function() subtitles:clear() end, 30000);
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 30000);
	
	Cutscene_Intro:action(function() ga_sassanids_01:teleport_to_start_location_offset(); end, 30000);
	Cutscene_Intro:action(function() ga_eastrome_01:teleport_to_start_location_offset(); end, 30000);
	Cutscene_Intro:action(function() ga_eastrome_01:set_visible_to_all(false); end, 30000);
		
	Cutscene_Intro:action(function() cam:move_to(v(86.8, 534.2, -146.6), v(2.8, 491.7, -273.4), 0, true, 0) end, 30000);	
	Cutscene_Intro:action(function() cam:move_to(POS_Cam_Cutscene_Intro_Final, Targ_Cam_Cutscene_Intro_Final, 2, false, 0) end, 34000);
	
	-- The Sassanid army now attacks in Samarra in an effort to end to the war.
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.SA.Intro_05") end, 31000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Att_HB_SA_Intro_05) end, 31000);
	
	

	Cutscene_Intro:action(function() subtitles:clear() end, 38000);	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 38000);
	
	
	
	Cutscene_Intro:start();
end;


function Skip_Cutscene_Intro()
	
	cam:fade(true, 0);
	
	ga_sassanids_01:teleport_to_start_location_offset();
	ga_eastrome_01:teleport_to_start_location_offset();
	ga_eastrome_01:set_visible_to_all(false);
	
	stop_sound(SFX_Att_HB_SA_Intro_02);
	stop_sound(SFX_Att_HB_SA_Intro_03);
	stop_sound(SFX_Att_HB_SA_Intro_04);
	stop_sound(SFX_Att_HB_SA_Intro_05);
		
	bm:callback(function() cam:fade(false, 0.5) end, 1000);
end;






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\sa_samarra\sa_start.lua

system.ClearRequiredFiles();
require "lua_scripts.Battle_Script_Header";

-- declare battlemanager object
bm = battle_manager:new(empire_battle:new());

-- get battle name SA.m folder, and print header
battle_name, battle_shortform = get_folder_name_and_shortform();

-- load in other script files associated with this battle
package.path = package.path .. ";data/Script/" .. battle_name .. "/?.lua";

require (battle_shortform .. "_Cutscenes");

gb = generated_battle:new(
	true,                                      -- screen starts black. Should match the prepare_for_fade_in flag in the battle xml
	true,                                      -- prevents deployment. Set to false if you want the player to be able to deploy.
	function() Play_Cutscene_Intro() end,	   -- intro cutscene callback. Supply a function that runs your intro cutscene here
	false                                      -- debug mode
);

ga_sassanids_01 = gb:get_army(1, 1);

ga_eastrome_01 = gb:get_army(2, 1);


-- fade camera in from black on battle start
gb:fade_in_on_message("cutscene_ended", 0.5);


-- advice on battle start
gb:advice_on_message("cutscene_ended", "Att.HB.SA.001", 5000);


-- make army attack on battle start
ga_eastrome_01:attack_on_message("cutscene_ended");


-- advice on player's general dying
ga_sassanids_01:message_on_commander_death("player_general_dies");
gb:advice_on_message("player_general_dies", "Att.HB.SA.005", 5000);


-- advice on enemy general dying
ga_eastrome_01:message_on_commander_death("enemy_general_dies");
gb:advice_on_message("enemy_general_dies", "Att.HB.SA.004", 5000);


-- advice on player winning
ga_sassanids_01:message_on_victory("player_wins");
gb:advice_on_message("player_wins", "Att.HB.SA.002");


-- advice on player losing
ga_sassanids_01:message_on_defeat("player_loses");
gb:advice_on_message("player_loses", "Att.HB.SA.003");






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\so_soissons\so_cutscenes.lua

function Play_Cutscene_Intro()

	bm:out("Play_Cutscene_Intro() called");

	POS_Cam_Cutscene_Intro_Final = v(-9.8, 301.2, -342.7);
	Targ_Cam_Cutscene_Intro_Final = v(-13.7, 276.8, -273.5);

	
	
	SFX_Att_HB_SO_Intro_02 = new_sfx("Play_Att_HB_SO_Intro_02_1");
	SFX_Att_HB_SO_Intro_03 = new_sfx("Play_Att_HB_SO_Intro_03_1");
	SFX_Att_HB_SO_Intro_04 = new_sfx("Play_Att_HB_SO_Intro_04_1");


	
	local Cutscene_Intro = cutscene:new(
		"Cutscene_Intro", 							-- unique string name for cutscene
		ga_franks_01:get_unitcontroller(),			-- unitcontroller over player's army
		31000 										-- duration of cutscene in ms
	);

	

	Cutscene_Intro:set_skippable(true, function() Skip_Cutscene_Intro() end);
	Cutscene_Intro:set_skip_camera(POS_Cam_Cutscene_Intro_Final, Targ_Cam_Cutscene_Intro_Final);
	--Cutscene_Intro:set_debug();



	cam = Cutscene_Intro:camera();
	local subtitles = Cutscene_Intro:subtitles();
	subtitles:set_alignment("bottom_centre");
	subtitles:clear();
	
	
	
	Cutscene_Intro:action(function() cam:fade(false, 0.5) end, 0);	
	
	Cutscene_Intro:action(function() ga_franks_01:teleport_to_start_location_offset(0, -50); end, 0);	
	Cutscene_Intro:action(function() ga_soissons_01:teleport_to_start_location_offset(0, -50); end, 0);	
	Cutscene_Intro:action(function() ga_soissons_01:set_visible_to_all(true); end, 0);	
	
	Cutscene_Intro:action(function() ga_franks_01:goto_start_location(false); end, 0);
	Cutscene_Intro:action(function() ga_soissons_01:goto_start_location(false); end, 0);
	
	
	
	Cutscene_Intro:action(function() cam:move_to(v(-325.3, 251.2, -456.5), v(-360.7, 248.7, -488.8), 0, true, 45) end, 0);
	Cutscene_Intro:action(function() cam:move_to(v(-325.3, 251.2, -456.5), v(-360.7, 248.7, -488.8), 7, true, 43) end, 0);
	
	-- AD486
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.SO.Intro_01") end, 3000);
	
	

	Cutscene_Intro:action(function() subtitles:clear() end, 6000);	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 6000);	
	
	Cutscene_Intro:action(function() cam:move_to(v(3.6, 272.0, 255.9), v(-16.4, 267.1, 299.3), 0, true, 35) end, 6000);
	Cutscene_Intro:action(function() cam:move_to(v(0.5, 274.2, 251.1), v(-0.9, 267.1, 298.6), 15, true, 33) end, 6000);
	
	-- The Western Roman Empire has collapsed. A rump state, the Domain of Soissons, remains in Gaul, led by Syagrius.
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.SO.Intro_02") end, 7000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Att_HB_SO_Intro_02) end, 7000);
	
	Cutscene_Intro:action(function() cam:move_to(v(49.6, 277.2, 217.0), v(15.2, 270.0, 249.8), 0, true, 35) end, 10000);
	Cutscene_Intro:action(function() cam:move_to(v(69.2, 281.5, 239.5), v(22.7, 273.7, 249.1), 18, true, 33) end, 10000);
	
	

	Cutscene_Intro:action(function() subtitles:clear() end, 15000);	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 15000);
	
	Cutscene_Intro:action(function() cam:move_to(v(89.7, 275.4, -214.2), v(48.6, 265.3, -237.1), 0, true, 35) end, 15000);
	Cutscene_Intro:action(function() cam:move_to(v(94.8, 275.4, -235.2), v(48.1, 267.1, -242.8), 17, true, 33) end, 15000);
	
	-- However, Syagrius' lands are coveted by the neighbouring Franks. The Frankish king Clovis I has challenged him to battle.
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.SO.Intro_03") end, 16000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Att_HB_SO_Intro_03) end, 16000);
	
	Cutscene_Intro:action(function() cam:move_to(v(0.3, 264.7, -224.5), v(-13.6, 255.1, -269.5), 0, true, 35) end, 19500);
	Cutscene_Intro:action(function() cam:move_to(v(4.2, 265.8, -224.7), v(-22.0, 255.3, -263.7), 14, true, 33) end, 19500);
	
	

	Cutscene_Intro:action(function() subtitles:clear() end, 25000);	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 25000);
	
	Cutscene_Intro:action(function() ga_franks_01:teleport_to_start_location_offset(); end, 25000);	
	Cutscene_Intro:action(function() ga_soissons_01:teleport_to_start_location_offset(); end, 25000);
	Cutscene_Intro:action(function() ga_soissons_01:set_visible_to_all(false); end, 25000);
		
	Cutscene_Intro:action(function() cam:move_to(v(63.6, 289.1, -166.4), v(31.7, 277.2, -208.0), 0, true, 0) end, 25000);	
	Cutscene_Intro:action(function() cam:move_to(POS_Cam_Cutscene_Intro_Final, Targ_Cam_Cutscene_Intro_Final, 2, false, 0) end, 29000);
	
	-- The capture of Soissons would double the size of the nascent Frankish kingdom.
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.SO.Intro_04") end, 26000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Att_HB_SO_Intro_04) end, 26000);
	
	

	Cutscene_Intro:action(function() subtitles:clear() end, 31000);	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 31000);
	
	
	
	Cutscene_Intro:start();
end;


function Skip_Cutscene_Intro()
	
	cam:fade(true, 0);
	
	ga_franks_01:teleport_to_start_location_offset();
	ga_soissons_01:teleport_to_start_location_offset();
	ga_soissons_01:set_visible_to_all(false);
	
	stop_sound(SFX_Att_HB_SO_Intro_02);
	stop_sound(SFX_Att_HB_SO_Intro_03);
	stop_sound(SFX_Att_HB_SO_Intro_04);
		
	bm:callback(function() cam:fade(false, 0.5) end, 1000);
end;






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\so_soissons\so_start.lua

system.ClearRequiredFiles();
require "lua_scripts.Battle_Script_Header";

-- declare battlemanager object
bm = battle_manager:new(empire_battle:new());

-- get battle name from folder, and print header
battle_name, battle_shortform = get_folder_name_and_shortform();

-- load in other script files associated with this battle
package.path = package.path .. ";data/Script/" .. battle_name .. "/?.lua";

require (battle_shortform .. "_Cutscenes");

gb = generated_battle:new(
	true,                                      -- screen starts black. Should match the prepare_for_fade_in flag in the battle xml
	true,                                      -- prevents deployment. Set to false if you want the player to be able to deploy.
	function() Play_Cutscene_Intro() end,      -- intro cutscene callback. Supply a function that runs your intro cutscene here
	false                                      -- debug mode
);

ga_franks_01 = gb:get_army(1, 1);

ga_soissons_01 = gb:get_army(2, 1);


-- fade camera in from black on battle start
gb:fade_in_on_message("cutscene_ended", 0.5);


-- advice on battle start
gb:advice_on_message("cutscene_ended", "Att.HB.SO.002", 6000);


-- make army attack on battle start
ga_soissons_01:attack_on_message("cutscene_ended");


-- advice on player's general dying
ga_franks_01:message_on_commander_death("player_general_dies");
gb:advice_on_message("player_general_dies", "Att.HB.SO.004", 5000);


-- advice on enemy general dying
ga_soissons_01:message_on_commander_death("enemy_general_dies");
gb:advice_on_message("enemy_general_dies", "Att.HB.SO.005", 5000);


-- advice on player winning
ga_franks_01:message_on_victory("player_wins");
gb:advice_on_message("player_wins", "Att.HB.SO.001");


-- advice on player losing
ga_franks_01:message_on_defeat("player_loses");
gb:advice_on_message("player_loses", "Att.HB.SO.003");






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ut_utus\ut_cutscenes.lua

function Play_Cutscene_Intro()

	bm:out("Play_Cutscene_Intro() called");

	POS_Cam_Cutscene_Intro_Final = v(0, 354.8, -280.3);
	Targ_Cam_Cutscene_Intro_Final = v(0, 336.8, -239.7);

	
	
	SFX_Att_HB_UT_Intro_02 = new_sfx("Play_Att_HB_UT_Intro_02_1");
	SFX_Att_HB_UT_Intro_03 = new_sfx("Play_Att_HB_UT_Intro_03_1");
	SFX_Att_HB_UT_Intro_04 = new_sfx("Play_Att_HB_UT_Intro_04_1");
	SFX_Att_HB_UT_Intro_05 = new_sfx("Play_Att_HB_UT_Intro_05_1");


	
	local Cutscene_Intro = cutscene:new(
		"Cutscene_Intro", 							-- unique string name for cutscene
		ga_huns_01:get_unitcontroller(),			-- unitcontroller over player's army
		38000 										-- duration of cutscene in ms
	);

	

	Cutscene_Intro:set_skippable(true, function() Skip_Cutscene_Intro() end);
	Cutscene_Intro:set_skip_camera(POS_Cam_Cutscene_Intro_Final, Targ_Cam_Cutscene_Intro_Final);
	--Cutscene_Intro:set_debug();



	cam = Cutscene_Intro:camera();
	local subtitles = Cutscene_Intro:subtitles();
	subtitles:set_alignment("bottom_centre");
	subtitles:clear();
	
	
	
	Cutscene_Intro:action(function() cam:fade(false, 0.5) end, 0);	
	
	Cutscene_Intro:action(function() ga_huns_01:teleport_to_start_location_offset(0, -50); end, 0);	
	Cutscene_Intro:action(function() ga_eastrome_01:teleport_to_start_location_offset(0, -50); end, 0);	
	Cutscene_Intro:action(function() ga_eastrome_01:set_visible_to_all(true); end, 0);	
	
	Cutscene_Intro:action(function() ga_huns_01:goto_start_location(false); end, 0);
	Cutscene_Intro:action(function() ga_eastrome_01:goto_start_location(false); end, 0);
	
	
	
	Cutscene_Intro:action(function() cam:move_to(v(289.5, 328.5, -48), v(313.2, 323.0, -6.5), 0, true, 35) end, 0);
	Cutscene_Intro:action(function() cam:move_to(v(289.5, 328.5, -48), v(313.2, 323.0, -6.5), 7, true, 33) end, 0);
	
	-- AD447
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.UT.Intro_01") end, 3000);
	
	

	Cutscene_Intro:action(function() subtitles:clear() end, 6000);
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 6000);
	
	Cutscene_Intro:action(function() cam:move_to(v(68.8, 320.7, -232.3), v(35.0, 315.2, -266.0), 0, true, 35) end, 6000);
	Cutscene_Intro:action(function() cam:move_to(v(68.8, 320.7, -232.3), v(31.9, 315.5, -262.6), 7, true, 30) end, 6000);
	
	-- Hostilities have been declared between the Huns and the Eastern Roman Empire following the cancellation of an annual tribute of gold.
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.UT.Intro_02") end, 7000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Att_HB_UT_Intro_02) end, 7000);
	
	Cutscene_Intro:action(function() cam:move_to(v(201.4, 326.7, -267.9), v(156.6, 319.2, -252.1), 0, true, 35) end, 9500);
	Cutscene_Intro:action(function() cam:move_to(v(204.5, 329.6, -279.6), v(163.2, 321.6, -256.2), 16, true, 33) end, 9500);
	
	

	Cutscene_Intro:action(function() subtitles:clear() end, 15000);	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 15000);
	
	Cutscene_Intro:action(function() cam:move_to(v(0.6, 320.1, -232.2), v(-9.4, 315.4, -278.9), 0, true, 35) end, 15000);
	Cutscene_Intro:action(function() cam:move_to(v(0.8, 320.1, -226.8), v(-4.5, 314.8, -274.0), 7, true, 45) end, 15000);
	
	-- The Hunnic king Attila and his army have stormed the Balkan regions that belong to the Eastern Empire.
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.UT.Intro_03") end, 16000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Att_HB_UT_Intro_03) end, 16000);
	
	Cutscene_Intro:action(function() cam:move_to(v(-66.6, 338.9, -261.2), v(-100.6, 324.0, -230.8), 0, true, 45) end, 18000);
	Cutscene_Intro:action(function() cam:move_to(v(-66.6, 338.9, -261.2), v(-97.2, 326.8, -226.3), 7, true, 43) end, 18000);
	
	

	Cutscene_Intro:action(function() subtitles:clear() end, 23000);	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 23000);
	
	Cutscene_Intro:action(function() cam:move_to(v(124.7, 299.0, 292.3), v(115.5, 289.4, 338.8), 0, true, 35) end, 23000);
	Cutscene_Intro:action(function() cam:move_to(v(124.7, 299.0, 292.3), v(115.5, 289.4, 338.8), 7, true, 33) end, 23000);
	
	-- The Roman general Arnegisclus has amassed a great force in an effort to stop Attila.
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.UT.Intro_04") end, 24000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Att_HB_UT_Intro_04) end, 24000);
	
	Cutscene_Intro:action(function() cam:move_to(v(34.7, 322.9, 190.1), v(21.5, 310.3, 234.7), 0, true, 35) end, 27000);
	Cutscene_Intro:action(function() cam:move_to(v(34.7, 322.9, 190.1), v(21.5, 310.3, 234.7), 7, true, 33) end, 27000);
	
	

	Cutscene_Intro:action(function() subtitles:clear() end, 32000);	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 32000);
	
	Cutscene_Intro:action(function() ga_huns_01:teleport_to_start_location_offset(); end, 32000);	
	Cutscene_Intro:action(function() ga_eastrome_01:teleport_to_start_location_offset(); end, 32000);
	Cutscene_Intro:action(function() ga_eastrome_01:set_visible_to_all(false); end, 32000);
		
	Cutscene_Intro:action(function() cam:move_to(v(118.2, 352.5, -102.7), v(88.4, 342.1, -133.9), 0, true, 0) end, 32000);	
	Cutscene_Intro:action(function() cam:move_to(POS_Cam_Cutscene_Intro_Final, Targ_Cam_Cutscene_Intro_Final, 2, false, 0) end, 36000);
	
	-- The two armies meet in combat on the banks of the Utus river.
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.UT.Intro_05") end, 33000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Att_HB_UT_Intro_05) end, 33000);
	
	

	Cutscene_Intro:action(function() subtitles:clear() end, 38000);	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 38000);
	
	
	
	Cutscene_Intro:start();
end;


function Skip_Cutscene_Intro()
	
	cam:fade(true, 0);
	
	ga_huns_01:teleport_to_start_location_offset();
	ga_eastrome_01:teleport_to_start_location_offset();
	ga_eastrome_01:set_visible_to_all(false);
	
	stop_sound(SFX_Att_HB_UT_Intro_02);
	stop_sound(SFX_Att_HB_UT_Intro_03);
	stop_sound(SFX_Att_HB_UT_Intro_04);
	stop_sound(SFX_Att_HB_UT_Intro_05);
		
	bm:callback(function() cam:fade(false, 0.5) end, 1000);
end;






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ut_utus\ut_start.lua

system.ClearRequiredFiles();
require "lua_scripts.Battle_Script_Header";

-- declare battlemanager object
bm = battle_manager:new(empire_battle:new());

-- get battle name from folder, and print header
battle_name, battle_shortform = get_folder_name_and_shortform();

-- load in other script files associated with this battle
package.path = package.path .. ";data/Script/" .. battle_name .. "/?.lua";

require (battle_shortform .. "_Cutscenes");

gb = generated_battle:new(
	true,                                      -- screen starts black. Should match the prepare_for_fade_in flag in the battle xml
	true,                                      -- prevents deployment. Set to false if you want the player to be able to deploy.
	function() Play_Cutscene_Intro() end,      -- intro cutscene callback. Supply a function that runs your intro cutscene here
	false                                      -- debug mode
);

ga_huns_01 = gb:get_army(1, 1);

ga_eastrome_01 = gb:get_army(2, 1);


-- fade camera in from black on battle start
gb:fade_in_on_message("cutscene_ended", 0.5);


-- advice on battle start
gb:advice_on_message("cutscene_ended", "Att.HB.UT.001", 5000);


-- make army attack on battle start
ga_eastrome_01:attack_on_message("cutscene_ended");


-- advice on player's general dying
ga_huns_01:message_on_commander_death("player_general_dies");
gb:advice_on_message("player_general_dies", "Att.HB.UT.002", 5000);


-- advice on enemy general dying
ga_eastrome_01:message_on_commander_death("enemy_general_dies");
gb:advice_on_message("enemy_general_dies", "Att.HB.UT.003", 5000);


-- advice on player winning
ga_huns_01:message_on_victory("player_wins");
gb:advice_on_message("player_wins", "Att.HB.UT.004");


-- advice on player losing
ga_huns_01:message_on_defeat("player_loses");
gb:advice_on_message("player_loses", "Att.HB.UT.005");






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ambush_valley\ambush_valley_attacker.lua
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-- Battle of Ambush_Valley -- Elliott Lock
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

battle_name = "Ambush_Valley"
battle = empire_battle:new();

system.ClearRequiredFiles();

package.path = package.path .. ";data/Script/" .. battle_name .. "/?.lua"

require "Scripting_Library_Header";

bm = battle_manager:new(battle, true); --set to true to enable debug output

subtitles = battle:subtitles();
subtitles:set_alignment("mid_centre");
subtitles:begin("bottom_centre");
subtitles:clear();

bm:out("==============");
bm:out("==============");
bm:out("==============");
bm:out("Script started: Battle of " .. battle_name);
bm:out("==============");


-----------------------------------------------------------
-- Army Declarations
-----------------------------------------------------------
Alliances = battle:alliances();

Alliance_Chosokabe = Alliances:item(1);
Armies_Chosokabe = Alliance_Chosokabe:armies();
Army_Chosokabe = Armies_Chosokabe:item(1);
Units_Chosokabe = Army_Chosokabe:units();

Alliance_Hojo = Alliances:item(2);
Armies_Hojo = Alliance_Hojo:armies();
Army_Hojo = Armies_Hojo:item(1);
Units_Hojo = Army_Hojo:units();

-----------------------------------------------------------
-- Declare units and individual unitcontrollers
-----------------------------------------------------------

Attacker_01 = Units_Chosokabe:item(01);
Unitcontroller_Chosokabe_Inf_01 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_01:add_units(Attacker_01);

Attacker_02 = Units_Chosokabe:item(02);
Unitcontroller_Chosokabe_Inf_02 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_02:add_units(Attacker_02);

Attacker_03 = Units_Chosokabe:item(03);
Unitcontroller_Chosokabe_Inf_03 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_03:add_units(Attacker_03);

Attacker_04 = Units_Chosokabe:item(04);
Unitcontroller_Chosokabe_Inf_04 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_04:add_units(Attacker_04);

Attacker_05 = Units_Chosokabe:item(05);
Unitcontroller_Chosokabe_Inf_05 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_05:add_units(Attacker_05);

Attacker_06 = Units_Chosokabe:item(06);
Unitcontroller_Chosokabe_Inf_06 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_06:add_units(Attacker_06);

Attacker_07 = Units_Chosokabe:item(07);
Unitcontroller_Chosokabe_Inf_07 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_07:add_units(Attacker_07);

Attacker_08 = Units_Chosokabe:item(08);
Unitcontroller_Chosokabe_Inf_08 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_08:add_units(Attacker_08);

Attacker_09 = Units_Chosokabe:item(09);
Unitcontroller_Chosokabe_Inf_09 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_09:add_units(Attacker_09);

Attacker_10 = Units_Chosokabe:item(10);
Unitcontroller_Chosokabe_Inf_10 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_10:add_units(Attacker_10);

Attacker_11 = Units_Chosokabe:item(11);
Unitcontroller_Chosokabe_Inf_11 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_11:add_units(Attacker_11);

Attacker_12 = Units_Chosokabe:item(12);
Unitcontroller_Chosokabe_Inf_12 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_12:add_units(Attacker_12);

Attacker_13 = Units_Chosokabe:item(13);
Unitcontroller_Chosokabe_Inf_13 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_13:add_units(Attacker_13);

Attacker_14 = Units_Chosokabe:item(14);
Unitcontroller_Chosokabe_Inf_14 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_14:add_units(Attacker_14);

Attacker_15 = Units_Chosokabe:item(15);
Unitcontroller_Chosokabe_Inf_15 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_15:add_units(Attacker_15);

Attacker_16 = Units_Chosokabe:item(16);
Unitcontroller_Chosokabe_Inf_16 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_16:add_units(Attacker_16);

Attacker_17 = Units_Chosokabe:item(17);
Unitcontroller_Chosokabe_Inf_17 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_17:add_units(Attacker_17);

Defender_01 = Units_Hojo:item(01);
Unitcontroller_Hojo_Inf_01 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_01:add_units(Defender_01);

Defender_02 = Units_Hojo:item(02);
Unitcontroller_Hojo_Inf_02 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_02:add_units(Defender_02);

Defender_03 = Units_Hojo:item(03);
Unitcontroller_Hojo_Inf_03 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_03:add_units(Defender_03);

Defender_04 = Units_Hojo:item(04);
Unitcontroller_Hojo_Inf_04 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_04:add_units(Defender_04);

Defender_05 = Units_Hojo:item(05);
Unitcontroller_Hojo_Inf_05 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_05:add_units(Defender_05);

Defender_06 = Units_Hojo:item(06);
Unitcontroller_Hojo_Inf_06 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_06:add_units(Defender_06);

Defender_07 = Units_Hojo:item(07);
Unitcontroller_Hojo_Inf_07 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_07:add_units(Defender_07);

Defender_08 = Units_Hojo:item(08);
Unitcontroller_Hojo_Inf_08 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_08:add_units(Defender_08);

Defender_09 = Units_Hojo:item(09);
Unitcontroller_Hojo_Inf_09 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_09:add_units(Defender_09);

Defender_10 = Units_Hojo:item(10);
Unitcontroller_Hojo_Inf_10 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_10:add_units(Defender_10);

Defender_11 = Units_Hojo:item(11);
Unitcontroller_Hojo_Inf_11 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_11:add_units(Defender_11);

Defender_12 = Units_Hojo:item(12);
Unitcontroller_Hojo_Inf_12 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_12:add_units(Defender_12);

Defender_13 = Units_Hojo:item(13);
Unitcontroller_Hojo_Inf_13 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_13:add_units(Defender_13);

Defender_14 = Units_Hojo:item(14);
Unitcontroller_Hojo_Inf_14 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_14:add_units(Defender_14);

Defender_15 = Units_Hojo:item(15);
Unitcontroller_Hojo_Inf_15 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_15:add_units(Defender_15);

Defender_16 = Units_Hojo:item(16);
Unitcontroller_Hojo_Inf_16 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_16:add_units(Defender_16);

Defender_17 = Units_Hojo:item(17);
Unitcontroller_Hojo_Inf_17 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_17:add_units(Defender_17);

Defender_18 = Units_Hojo:item(18);
Unitcontroller_Hojo_Inf_18 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_18:add_units(Defender_18);

Defender_19 = Units_Hojo:item(19);
Unitcontroller_Hojo_Inf_19 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_19:add_units(Defender_19);

Defender_20 = Units_Hojo:item(20);
Unitcontroller_Hojo_Inf_20 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_20:add_units(Defender_20);

Defender_21 = Units_Hojo:item(21);
Unitcontroller_Hojo_Inf_21 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_21:add_units(Defender_21);

Defender_22 = Units_Hojo:item(22);
Unitcontroller_Hojo_Inf_22 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_22:add_units(Defender_22);

Defender_23 = Units_Hojo:item(23);
Unitcontroller_Hojo_Inf_23 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_23:add_units(Defender_23);

Defender_24 = Units_Hojo:item(24);
Unitcontroller_Hojo_Inf_24 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_24:add_units(Defender_24);

Defender_25 = Units_Hojo:item(25);
Unitcontroller_Hojo_Inf_25 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_25:add_units(Defender_25);

Defender_26 = Units_Hojo:item(26);
Unitcontroller_Hojo_Inf_26 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_26:add_units(Defender_26);

Defender_27 = Units_Hojo:item(27);
Unitcontroller_Hojo_Inf_27 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_27:add_units(Defender_27);

Defender_28 = Units_Hojo:item(28);
Unitcontroller_Hojo_Inf_28 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_28:add_units(Defender_28);

Defender_29 = Units_Hojo:item(29);
Unitcontroller_Hojo_Inf_29 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_29:add_units(Defender_29);

Defender_30 = Units_Hojo:item(30);
Unitcontroller_Hojo_Inf_30 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_30:add_units(Defender_30);

-----------------------------------------------------------
-- Create an army-wide unitcontroller for each of the 
-- AI armies, and use them to mind-control them 
-- before they get a chance to deploy
-----------------------------------------------------------

Unitcontroller_Chosokabe_All = Army_Chosokabe:create_unit_controller();

for i = 1, Units_Chosokabe:count() do
	Unitcontroller_Chosokabe_All:add_units(Units_Chosokabe:item(i));
end;

Unitcontroller_Chosokabe_All:take_control();

Unitcontroller_Hojo_All = Army_Hojo:create_unit_controller();

for i = 1, Units_Hojo:count() do
	Unitcontroller_Hojo_All:add_units(Units_Hojo:item(i));
end;

Unitcontroller_Hojo_All:take_control();

-----------------------------------------------------------
-- Declare Sound Effects
-----------------------------------------------------------

POS_Play_Sound = v(0,0);
cam = bm:camera();

-----------------------------------------------------------
-- Intro Cutscene
-----------------------------------------------------------

Cutscene_Intro = cutscene:new(
								bm, 
								Unitcontroller_Chosokabe_All, 
								function() Start_Battle() end, 
								8000, 
								"Cutscene_Intro", 
								true, 
								true,
								nil,
								nil,
								true,
								function() Cutscene_Intro_Skipped() end
							);
							
Cutscene_Intro:set_music("music_now_and_zen_alt", 0, 2);
Cutscene_Intro:register_subtitles(subtitles);
Cutscene_Intro:set_cinematic_bars(true);
Cutscene_Intro:suppress_unit_voices(true);
							
--Cutscene_Intro:set_debug(true);
--Cutscene_Intro:set_hide_debug_ui(true);

function Play_Cutscene_Intro()
	-- Cutscene_Intro:action(function() cam:change_height_range(0, 100) end, 0);
	Cutscene_Intro:action(function() subtitles:begin("bottom_centre") end, 0);
	Cutscene_Intro:action(function() subtitles:set_alignment("bottom_centre") end, 0);
	--Cutscene_Intro:action(function() subtitles:push_back_subtitle_entry(00000,8000,"The Ambush is set sir. Timing will decide the battle. We're ready to strike on your command.")  end, 0);
	Cutscene_Intro:action(function() cam:move_to(v(-54.2, -18.0, 224.5), v(16.4, 14.5, 113.2), 0, true, 70) end, 0);
	Cutscene_Intro:action(function() cam:move_to(v(-13.8, -20.5, 135.4), v(69.4, 39.7, 46.6), 8, true, 70) end, 0);

	--Take control of units
	Unitcontroller_Chosokabe_All:take_control();
	Unitcontroller_Hojo_All:take_control();

	-- Hojo unit orders
	Unitcontroller_Chosokabe_All:fire_at_will(false)

	-- Chosokabe unit orders
	Unitcontroller_Hojo_Inf_01:goto_location_angle_width(v(-31.07, -404.01), r_to_d(3.22), 10.98);
	Unitcontroller_Hojo_Inf_02:goto_location_angle_width(v(-28.55, -379.09), r_to_d(3.32), 15.10);
	Unitcontroller_Hojo_Inf_03:goto_location_angle_width(v(-45.38, -376.10), r_to_d(3.32), 15.10);
	Unitcontroller_Hojo_Inf_04:goto_location_angle_width(v(-11.71, -382.09), r_to_d(3.32), 15.10);
	Unitcontroller_Hojo_Inf_05:goto_location_angle_width(v(-8.86, -344.13), r_to_d(3.27), 13.90);
	Unitcontroller_Hojo_Inf_06:goto_location_angle_width(v(-40.61, -340.14), r_to_d(3.27), 12.70);
	Unitcontroller_Hojo_Inf_07:goto_location_angle_width(v(-25.03, -342.10), r_to_d(3.27), 12.70);
	Unitcontroller_Hojo_Inf_08:goto_location_angle_width(v(-30.74, -303.92), r_to_d(3.28), 19.90);
	Unitcontroller_Hojo_Inf_09:goto_location_angle_width(v(-9.04, -306.85), r_to_d(3.28), 19.90);
	Unitcontroller_Hojo_Inf_10:goto_location_angle_width(v(-10.79, -368.73), r_to_d(3.30), 13.90);
	Unitcontroller_Hojo_Inf_11:goto_location_angle_width(v(-26.49, -366.19), r_to_d(3.30), 13.90);
	Unitcontroller_Hojo_Inf_12:goto_location_angle_width(v(-42.18, -363.65), r_to_d(3.30), 13.90);
	Unitcontroller_Hojo_Inf_13:goto_location_angle_width(v(-23.06, -329.48), r_to_d(3.28), 12.70);
	Unitcontroller_Hojo_Inf_14:goto_location_angle_width(v(-38.62, -327.38), r_to_d(3.28), 12.70);
	Unitcontroller_Hojo_Inf_15:goto_location_angle_width(v(-7.50, -331.59), r_to_d(3.28), 12.70);
	Unitcontroller_Hojo_Inf_16:goto_location_angle_width(v(-7.87, -297.88), r_to_d(3.27), 18.70);
	Unitcontroller_Hojo_Inf_17:goto_location_angle_width(v(-29.39, -295.02), r_to_d(3.27), 18.70);
	Unitcontroller_Hojo_Inf_18:goto_location_angle_width(v(-40.78, -352.36), r_to_d(3.28), 12.70);
	Unitcontroller_Hojo_Inf_19:goto_location_angle_width(v(-25.23, -354.53), r_to_d(3.28), 12.70);
	Unitcontroller_Hojo_Inf_20:goto_location_angle_width(v(-9.68, -356.70), r_to_d(3.28), 12.70);
	Unitcontroller_Hojo_Inf_21:goto_location_angle_width(v(-5.83, -319.32), r_to_d(3.26), 12.70);
	Unitcontroller_Hojo_Inf_22:goto_location_angle_width(v(-36.99, -315.50), r_to_d(3.26), 12.70);
	Unitcontroller_Hojo_Inf_23:goto_location_angle_width(v(-21.41, -317.41), r_to_d(3.26), 12.70);
	Unitcontroller_Hojo_Inf_24:goto_location_angle_width(v(-7.55, -288.46), r_to_d(3.28), 18.70);
	Unitcontroller_Hojo_Inf_25:goto_location_angle_width(v(-28.46, -285.58), r_to_d(3.28), 17.50);
	Unitcontroller_Hojo_Inf_26:goto_location_angle_width(v(1.11, -277.43), r_to_d(3.29), 15.00);
	Unitcontroller_Hojo_Inf_27:goto_location_angle_width(v(-16.71, -274.85), r_to_d(3.29), 15.00);
	Unitcontroller_Hojo_Inf_28:goto_location_angle_width(v(-34.52, -272.27), r_to_d(3.29), 15.00);
	Unitcontroller_Hojo_Inf_29:goto_location_angle_width(v(-38.20, -389.85), r_to_d(3.29), 15.00);
	Unitcontroller_Hojo_Inf_30:goto_location_angle_width(v(-21.38, -392.30), r_to_d(3.29), 15.00);

	Cutscene_Intro:start();
end;


function Cutscene_Intro_Skipped()
	subtitles:clear();
	cam:move_to(v(-13.8, -20.5, 135.4), v(69.4, 39.7, 46.6), 0, true, 70)
	cam:fade(false, 0.5);

	cam:change_height_range(-1, -1);
end;

-----------------------------------------------------------
-- Script Start
-----------------------------------------------------------

bm:setup_battle(function() End_Deployment_Phase() end);

function End_Deployment_Phase()
		
	-- launch cutscene, or straight into battle without it
	--cam:fade(false, 0.5);
	Play_Cutscene_Intro();
	-- Start_Battle_No_Cutscene();
end;

function Start_Battle()
	Unitcontroller_Chosokabe_All:release_control();
	
	bm:watch(function() return Attacker_01:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_02:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_03:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_04:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_05:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_06:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_07:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_08:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_09:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_10:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_11:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_12:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_13:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_14:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_15:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_16:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_17:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");

	bm:watch(function() return Defender_01:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_02:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_03:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_04:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_05:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_06:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_07:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_08:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_09:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_10:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_11:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_12:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_13:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_14:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_15:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_16:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_17:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_18:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_19:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_20:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_21:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_22:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_23:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_24:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_25:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_26:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_27:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_28:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_29:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_30:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");

end;

function Movement_Ambush_Is_Launched()
	bm:remove_process("AmbushWatch");
	Unitcontroller_Hojo_All:release_control();
	Unitcontroller_Chosokabe_All:take_control();
	Unitcontroller_Chosokabe_All:fire_at_will(true)
	Unitcontroller_Chosokabe_All:release_control();
	subtitles:end_subtitles();
	subtitles:clear();

	--subtitles:begin("mid_centre")
	--subtitles:set_alignment("mid_centre")
	--subtitles:push_back_subtitle_entry(00000,4000,"WE'VE BEEN SPOTTED GENERAL!!!")
	
	bm:show_advisor_message("", "GENERAL, WE'VE BEEN SPOTTED!!!");
end;

function Attack_Ambush_Is_Launched()
	bm:remove_process("AmbushWatch");
	Unitcontroller_Hojo_All:release_control();
	Unitcontroller_Chosokabe_All:take_control();
	Unitcontroller_Chosokabe_All:fire_at_will(true)
	Unitcontroller_Chosokabe_All:release_control();
end;






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ambush_valley\ambush_valley_defender.lua
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-- Battle of Ambush_Valley -- Elliott Lock
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

battle_name = "Ambush_Valley"
battle = empire_battle:new();

system.ClearRequiredFiles();

package.path = package.path .. ";data/Script/" .. battle_name .. "/?.lua"

require "Scripting_Library_Header";

bm = battle_manager:new(battle, true); --set to true to enable debug output

subtitles = battle:subtitles();
subtitles:set_alignment("mid_centre");
subtitles:begin("bottom_centre");
subtitles:clear();

bm:out("==============");
bm:out("==============");
bm:out("==============");
bm:out("Script started: Battle of " .. battle_name);
bm:out("==============");


-----------------------------------------------------------
-- Army Declarations
-----------------------------------------------------------
Alliances = battle:alliances();

Alliance_Chosokabe = Alliances:item(1);
Armies_Chosokabe = Alliance_Chosokabe:armies();
Army_Chosokabe = Armies_Chosokabe:item(1);
Units_Chosokabe = Army_Chosokabe:units();

Alliance_Hojo = Alliances:item(2);
Armies_Hojo = Alliance_Hojo:armies();
Army_Hojo = Armies_Hojo:item(1);
Units_Hojo = Army_Hojo:units();

-----------------------------------------------------------
-- Declare units and individual unitcontrollers
-----------------------------------------------------------

Attacker_01 = Units_Hojo:item(01);
Unitcontroller_Hojo_Inf_01 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_01:add_units(Attacker_01);

Attacker_02 = Units_Hojo:item(02);
Unitcontroller_Hojo_Inf_02 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_02:add_units(Attacker_02);

Attacker_03 = Units_Hojo:item(03);
Unitcontroller_Hojo_Inf_03 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_03:add_units(Attacker_03);

Attacker_04 = Units_Hojo:item(04);
Unitcontroller_Hojo_Inf_04 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_04:add_units(Attacker_04);

Attacker_05 = Units_Hojo:item(05);
Unitcontroller_Hojo_Inf_05 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_05:add_units(Attacker_05);

Attacker_06 = Units_Hojo:item(06);
Unitcontroller_Hojo_Inf_06 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_06:add_units(Attacker_06);

Attacker_07 = Units_Hojo:item(07);
Unitcontroller_Hojo_Inf_07 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_07:add_units(Attacker_07);

Attacker_08 = Units_Hojo:item(08);
Unitcontroller_Hojo_Inf_08 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_08:add_units(Attacker_08);

Attacker_09 = Units_Hojo:item(09);
Unitcontroller_Hojo_Inf_09 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_09:add_units(Attacker_09);

Attacker_10 = Units_Hojo:item(10);
Unitcontroller_Hojo_Inf_10 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_10:add_units(Attacker_10);

Attacker_11 = Units_Hojo:item(11);
Unitcontroller_Hojo_Inf_11 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_11:add_units(Attacker_11);

Attacker_12 = Units_Hojo:item(12);
Unitcontroller_Hojo_Inf_12 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_12:add_units(Attacker_12);

Attacker_13 = Units_Hojo:item(13);
Unitcontroller_Hojo_Inf_13 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_13:add_units(Attacker_13);

Attacker_14 = Units_Hojo:item(14);
Unitcontroller_Hojo_Inf_14 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_14:add_units(Attacker_14);

Attacker_15 = Units_Hojo:item(15);
Unitcontroller_Hojo_Inf_15 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_15:add_units(Attacker_15);

Attacker_16 = Units_Hojo:item(16);
Unitcontroller_Hojo_Inf_16 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_16:add_units(Attacker_16);

Attacker_17 = Units_Hojo:item(17);
Unitcontroller_Hojo_Inf_17 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_17:add_units(Attacker_17);

Defender_01 = Units_Chosokabe:item(01);
Unitcontroller_Chosokabe_Inf_01 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_01:add_units(Defender_01);

Defender_02 = Units_Chosokabe:item(02);
Unitcontroller_Chosokabe_Inf_02 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_02:add_units(Defender_02);

Defender_03 = Units_Chosokabe:item(03);
Unitcontroller_Chosokabe_Inf_03 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_03:add_units(Defender_03);

Defender_04 = Units_Chosokabe:item(04);
Unitcontroller_Chosokabe_Inf_04 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_04:add_units(Defender_04);

Defender_05 = Units_Chosokabe:item(05);
Unitcontroller_Chosokabe_Inf_05 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_05:add_units(Defender_05);

Defender_06 = Units_Chosokabe:item(06);
Unitcontroller_Chosokabe_Inf_06 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_06:add_units(Defender_06);

Defender_07 = Units_Chosokabe:item(07);
Unitcontroller_Chosokabe_Inf_07 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_07:add_units(Defender_07);

Defender_08 = Units_Chosokabe:item(08);
Unitcontroller_Chosokabe_Inf_08 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_08:add_units(Defender_08);

Defender_09 = Units_Chosokabe:item(09);
Unitcontroller_Chosokabe_Inf_09 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_09:add_units(Defender_09);

Defender_10 = Units_Chosokabe:item(10);
Unitcontroller_Chosokabe_Inf_10 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_10:add_units(Defender_10);

Defender_11 = Units_Chosokabe:item(11);
Unitcontroller_Chosokabe_Inf_11 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_11:add_units(Defender_11);

Defender_12 = Units_Chosokabe:item(12);
Unitcontroller_Chosokabe_Inf_12 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_12:add_units(Defender_12);

Defender_13 = Units_Chosokabe:item(13);
Unitcontroller_Chosokabe_Inf_13 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_13:add_units(Defender_13);

Defender_14 = Units_Chosokabe:item(14);
Unitcontroller_Chosokabe_Inf_14 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_14:add_units(Defender_14);

Defender_15 = Units_Chosokabe:item(15);
Unitcontroller_Chosokabe_Inf_15 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_15:add_units(Defender_15);

Defender_16 = Units_Chosokabe:item(16);
Unitcontroller_Chosokabe_Inf_16 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_16:add_units(Defender_16);

Defender_17 = Units_Chosokabe:item(17);
Unitcontroller_Chosokabe_Inf_17 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_17:add_units(Defender_17);

Defender_18 = Units_Chosokabe:item(18);
Unitcontroller_Chosokabe_Inf_18 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_18:add_units(Defender_18);

Defender_19 = Units_Chosokabe:item(19);
Unitcontroller_Chosokabe_Inf_19 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_19:add_units(Defender_19);

Defender_20 = Units_Chosokabe:item(20);
Unitcontroller_Chosokabe_Inf_20 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_20:add_units(Defender_20);

Defender_21 = Units_Chosokabe:item(21);
Unitcontroller_Chosokabe_Inf_21 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_21:add_units(Defender_21);

Defender_22 = Units_Chosokabe:item(22);
Unitcontroller_Chosokabe_Inf_22 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_22:add_units(Defender_22);

Defender_23 = Units_Chosokabe:item(23);
Unitcontroller_Chosokabe_Inf_23 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_23:add_units(Defender_23);

Defender_24 = Units_Chosokabe:item(24);
Unitcontroller_Chosokabe_Inf_24 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_24:add_units(Defender_24);

Defender_25 = Units_Chosokabe:item(25);
Unitcontroller_Chosokabe_Inf_25 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_25:add_units(Defender_25);

Defender_26 = Units_Chosokabe:item(26);
Unitcontroller_Chosokabe_Inf_26 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_26:add_units(Defender_26);

Defender_27 = Units_Chosokabe:item(27);
Unitcontroller_Chosokabe_Inf_27 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_27:add_units(Defender_27);

Defender_28 = Units_Chosokabe:item(28);
Unitcontroller_Chosokabe_Inf_28 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_28:add_units(Defender_28);

Defender_29 = Units_Chosokabe:item(29);
Unitcontroller_Chosokabe_Inf_29 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_29:add_units(Defender_29);

Defender_30 = Units_Chosokabe:item(30);
Unitcontroller_Chosokabe_Inf_30 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_30:add_units(Defender_30);

-----------------------------------------------------------
-- Create an army-wide unitcontroller for each of the 
-- AI armies, and use them to mind-control them 
-- before they get a chance to deploy
-----------------------------------------------------------

Unitcontroller_Chosokabe_All = Army_Chosokabe:create_unit_controller();

for i = 1, Units_Chosokabe:count() do
	Unitcontroller_Chosokabe_All:add_units(Units_Chosokabe:item(i));
end;

Unitcontroller_Chosokabe_All:take_control();

Unitcontroller_Hojo_All = Army_Hojo:create_unit_controller();

for i = 1, Units_Hojo:count() do
	Unitcontroller_Hojo_All:add_units(Units_Hojo:item(i));
end;

Unitcontroller_Hojo_All:take_control();

-----------------------------------------------------------
-- Declare Sound Effects
-----------------------------------------------------------

POS_Play_Sound = v(0,0);
cam = bm:camera();

-----------------------------------------------------------
-- Intro Cutscene
-----------------------------------------------------------

Cutscene_Intro = cutscene:new(
								bm, 
								Unitcontroller_Hojo_All, 
								function() Start_Battle() end, 
								8000, 
								"Cutscene_Intro", 
								true, 
								true,
								nil,
								nil,
								true,
								function() Cutscene_Intro_Skipped() end
							);
							
Cutscene_Intro:set_music("music_now_and_zen_alt", 0, 2);
Cutscene_Intro:register_subtitles(subtitles);
Cutscene_Intro:set_cinematic_bars(true);
Cutscene_Intro:suppress_unit_voices(true);
							
--Cutscene_Intro:set_debug(true);
--Cutscene_Intro:set_hide_debug_ui(true);

function Play_Cutscene_Intro()
	-- Cutscene_Intro:action(function() cam:change_height_range(0, 100) end, 0);
	Cutscene_Intro:action(function() subtitles:begin("bottom_centre") end, 0);
	Cutscene_Intro:action(function() subtitles:set_alignment("bottom_centre") end, 0);
	--Cutscene_Intro:action(function() subtitles:push_back_subtitle_entry(00000,8000,"The Ambush is set sir. Timing will decide the battle. We're ready to strike on your command.")  end, 0);
	Cutscene_Intro:action(function() cam:move_to(v(-54.2, -18.0, 224.5), v(16.4, 14.5, 113.2), 0, true, 70) end, 0);
	Cutscene_Intro:action(function() cam:move_to(v(-13.8, -20.5, 135.4), v(69.4, 39.7, 46.6), 8, true, 70) end, 0);

	--Take control of units
	Unitcontroller_Hojo_All:take_control();
	Unitcontroller_Chosokabe_All:take_control();

	-- Hojo unit orders
	Unitcontroller_Hojo_All:fire_at_will(false)

	-- Chosokabe unit orders
	Unitcontroller_Chosokabe_Inf_01:goto_location_angle_width(v(-31.07, -404.01), r_to_d(3.22), 10.98);
	Unitcontroller_Chosokabe_Inf_02:goto_location_angle_width(v(-28.55, -379.09), r_to_d(3.32), 15.10);
	Unitcontroller_Chosokabe_Inf_03:goto_location_angle_width(v(-45.38, -376.10), r_to_d(3.32), 15.10);
	Unitcontroller_Chosokabe_Inf_04:goto_location_angle_width(v(-11.71, -382.09), r_to_d(3.32), 15.10);
	Unitcontroller_Chosokabe_Inf_05:goto_location_angle_width(v(-8.86, -344.13), r_to_d(3.27), 13.90);
	Unitcontroller_Chosokabe_Inf_06:goto_location_angle_width(v(-40.61, -340.14), r_to_d(3.27), 12.70);
	Unitcontroller_Chosokabe_Inf_07:goto_location_angle_width(v(-25.03, -342.10), r_to_d(3.27), 12.70);
	Unitcontroller_Chosokabe_Inf_08:goto_location_angle_width(v(-30.74, -303.92), r_to_d(3.28), 19.90);
	Unitcontroller_Chosokabe_Inf_09:goto_location_angle_width(v(-9.04, -306.85), r_to_d(3.28), 19.90);
	Unitcontroller_Chosokabe_Inf_10:goto_location_angle_width(v(-10.79, -368.73), r_to_d(3.30), 13.90);
	Unitcontroller_Chosokabe_Inf_11:goto_location_angle_width(v(-26.49, -366.19), r_to_d(3.30), 13.90);
	Unitcontroller_Chosokabe_Inf_12:goto_location_angle_width(v(-42.18, -363.65), r_to_d(3.30), 13.90);
	Unitcontroller_Chosokabe_Inf_13:goto_location_angle_width(v(-23.06, -329.48), r_to_d(3.28), 12.70);
	Unitcontroller_Chosokabe_Inf_14:goto_location_angle_width(v(-38.62, -327.38), r_to_d(3.28), 12.70);
	Unitcontroller_Chosokabe_Inf_15:goto_location_angle_width(v(-7.50, -331.59), r_to_d(3.28), 12.70);
	Unitcontroller_Chosokabe_Inf_16:goto_location_angle_width(v(-7.87, -297.88), r_to_d(3.27), 18.70);
	Unitcontroller_Chosokabe_Inf_17:goto_location_angle_width(v(-29.39, -295.02), r_to_d(3.27), 18.70);
	Unitcontroller_Chosokabe_Inf_18:goto_location_angle_width(v(-40.78, -352.36), r_to_d(3.28), 12.70);
	Unitcontroller_Chosokabe_Inf_19:goto_location_angle_width(v(-25.23, -354.53), r_to_d(3.28), 12.70);
	Unitcontroller_Chosokabe_Inf_20:goto_location_angle_width(v(-9.68, -356.70), r_to_d(3.28), 12.70);
	Unitcontroller_Chosokabe_Inf_21:goto_location_angle_width(v(-5.83, -319.32), r_to_d(3.26), 12.70);
	Unitcontroller_Chosokabe_Inf_22:goto_location_angle_width(v(-36.99, -315.50), r_to_d(3.26), 12.70);
	Unitcontroller_Chosokabe_Inf_23:goto_location_angle_width(v(-21.41, -317.41), r_to_d(3.26), 12.70);
	Unitcontroller_Chosokabe_Inf_24:goto_location_angle_width(v(-7.55, -288.46), r_to_d(3.28), 18.70);
	Unitcontroller_Chosokabe_Inf_25:goto_location_angle_width(v(-28.46, -285.58), r_to_d(3.28), 17.50);
	Unitcontroller_Chosokabe_Inf_26:goto_location_angle_width(v(1.11, -277.43), r_to_d(3.29), 15.00);
	Unitcontroller_Chosokabe_Inf_27:goto_location_angle_width(v(-16.71, -274.85), r_to_d(3.29), 15.00);
	Unitcontroller_Chosokabe_Inf_28:goto_location_angle_width(v(-34.52, -272.27), r_to_d(3.29), 15.00);
	Unitcontroller_Chosokabe_Inf_29:goto_location_angle_width(v(-38.20, -389.85), r_to_d(3.29), 15.00);
	Unitcontroller_Chosokabe_Inf_30:goto_location_angle_width(v(-21.38, -392.30), r_to_d(3.29), 15.00);

	Cutscene_Intro:start();
end;


function Cutscene_Intro_Skipped()
	subtitles:clear();
	cam:move_to(v(-13.8, -20.5, 135.4), v(69.4, 39.7, 46.6), 0, true, 70)
	cam:fade(false, 0.5);

	cam:change_height_range(-1, -1);
end;

-----------------------------------------------------------
-- Script Start
-----------------------------------------------------------

bm:setup_battle(function() End_Deployment_Phase() end);

function End_Deployment_Phase()
		
	-- launch cutscene, or straight into battle without it
	--cam:fade(false, 0.5);
	Play_Cutscene_Intro();
	-- Start_Battle_No_Cutscene();
end;

function Start_Battle()
	Unitcontroller_Hojo_All:release_control();
	Unitcontroller_Chosokabe_Inf_01:release_control();
	
	bm:watch(function() return Attacker_01:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_02:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_03:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_04:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_05:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_06:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_07:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_08:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_09:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_10:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_11:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_12:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_13:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_14:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_15:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_16:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_17:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");

	bm:watch(function() return Defender_01:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_02:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_03:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_04:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_05:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_06:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_07:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_08:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_09:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_10:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_11:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_12:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_13:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_14:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_15:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_16:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_17:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_18:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_19:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_20:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_21:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_22:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_23:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_24:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_25:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_26:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_27:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_28:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_29:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_30:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");

end;

function Movement_Ambush_Is_Launched()
	bm:remove_process("AmbushWatch");
	Unitcontroller_Chosokabe_All:release_control();
	Unitcontroller_Hojo_All:take_control();
	Unitcontroller_Hojo_All:fire_at_will(true)
	Unitcontroller_Hojo_All:release_control();
	subtitles:end_subtitles();
	subtitles:clear();

	--subtitles:begin("mid_centre")
	--subtitles:set_alignment("mid_centre")
	--subtitles:push_back_subtitle_entry(00000,4000,"WE'VE BEEN SPOTTED GENERAL!!!")
	
	bm:show_advisor_message("", "GENERAL, WE'VE BEEN SPOTTED!!!");
end;

function Attack_Ambush_Is_Launched()
	bm:remove_process("AmbushWatch");
	Unitcontroller_Chosokabe_All:release_control();
	Unitcontroller_Hojo_All:take_control();
	Unitcontroller_Hojo_All:fire_at_will(true)
	Unitcontroller_Hojo_All:release_control();
end;






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\bm_benchmark\bm_cutscenes.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	CUTSCENES SCRIPT
--
--	Declare intro and other cutscenes
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------


Cutscene_Intro = cutscene:new(
	"Cutscene_Intro", 							-- unique string name for cutscene
	UC_Rom_01_All, 								-- unitcontroller over player's army
	1000, 										-- duration of cutscene in ms
	function() Start_Battle() end 				-- what to call when cutscene is finished
);


function Play_Cutscene_Intro()

	--Cutscene_Intro:action(function() cam:fade(false, 0.5) end, 0);
	--Cutscene_Intro:action(function() cam:move_to(v(-156.7, 20.7, -682.8), v(-150, 21.1, -744.9), 0, true, 25) end, 2000);
	
	Cutscene_Intro:start();
end;










C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\bm_benchmark\bm_declarations.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	DECLARATIONS SCRIPT
--
--	Declare alliances, armies, convex areas and anything else of note in here
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

cam = bm:camera();

--
-- Army Declarations
--

Alliances = bm:alliances();

Alliance_Rom = Alliances:item(1);
Army_Rom_01 = Alliance_Rom:armies():item(1);

Alliance_Ger = Alliances:item(2); 
Army_Ger_01 = Alliance_Ger:armies():item(1);




--
-- Script Unit Declarations
--

SUnit_Rom_Cav_01 = script_unit:new(Army_Rom_01, "Rom_Cav_01");
SUnit_Rom_Cav_02 = script_unit:new(Army_Rom_01, "Rom_Cav_02");
SUnit_Rom_Cav_03 = script_unit:new(Army_Rom_01, "Rom_Cav_03");
SUnit_Rom_Cav_04 = script_unit:new(Army_Rom_01, "Rom_Cav_04");
SUnit_Rom_Cav_05 = script_unit:new(Army_Rom_01, "Rom_Cav_05");
SUnit_Rom_Cav_06 = script_unit:new(Army_Rom_01, "Rom_Cav_06");
SUnit_Rom_Cav_07 = script_unit:new(Army_Rom_01, "Rom_Cav_07");
SUnit_Rom_Cav_08 = script_unit:new(Army_Rom_01, "Rom_Cav_08");
SUnit_Rom_Cav_09 = script_unit:new(Army_Rom_01, "Rom_Cav_09");
SUnit_Rom_Inf_01 = script_unit:new(Army_Rom_01, "Rom_Inf_01");
SUnit_Rom_Inf_02 = script_unit:new(Army_Rom_01, "Rom_Inf_02");
SUnit_Rom_Inf_03 = script_unit:new(Army_Rom_01, "Rom_Inf_03");
SUnit_Rom_Inf_04 = script_unit:new(Army_Rom_01, "Rom_Inf_04");
SUnit_Rom_Inf_05 = script_unit:new(Army_Rom_01, "Rom_Inf_05");
SUnit_Rom_Inf_06 = script_unit:new(Army_Rom_01, "Rom_Inf_06");
SUnit_Rom_Inf_07 = script_unit:new(Army_Rom_01, "Rom_Inf_07");
SUnit_Rom_Inf_08 = script_unit:new(Army_Rom_01, "Rom_Inf_08");
SUnit_Rom_Inf_09 = script_unit:new(Army_Rom_01, "Rom_Inf_09");
SUnit_Rom_Inf_10 = script_unit:new(Army_Rom_01, "Rom_Inf_10");
SUnit_Rom_Inf_11 = script_unit:new(Army_Rom_01, "Rom_Inf_11");
SUnit_Rom_Inf_12 = script_unit:new(Army_Rom_01, "Rom_Inf_12");
SUnit_Rom_Inf_13 = script_unit:new(Army_Rom_01, "Rom_Inf_13");
SUnit_Rom_Inf_14 = script_unit:new(Army_Rom_01, "Rom_Inf_14");
SUnit_Rom_Inf_15 = script_unit:new(Army_Rom_01, "Rom_Inf_15");
SUnit_Rom_Inf_16 = script_unit:new(Army_Rom_01, "Rom_Inf_16");
SUnit_Rom_Rng_01 = script_unit:new(Army_Rom_01, "Rom_Rng_01");
SUnit_Rom_Rng_02 = script_unit:new(Army_Rom_01, "Rom_Rng_02");
SUnit_Rom_Rng_03 = script_unit:new(Army_Rom_01, "Rom_Rng_03");
SUnit_Rom_Rng_04 = script_unit:new(Army_Rom_01, "Rom_Rng_04");
SUnit_Rom_Rng_05 = script_unit:new(Army_Rom_01, "Rom_Rng_05");
SUnit_Rom_Art_01 = script_unit:new(Army_Rom_01, "Rom_Art_01");
SUnit_Rom_Art_02 = script_unit:new(Army_Rom_01, "Rom_Art_02");

UC_Rom_01_All = unitcontroller_from_army(Army_Rom_01);

Rom_Sunits = {
	SUnit_Rom_Cav_01,
	SUnit_Rom_Cav_02,
	SUnit_Rom_Cav_03,
	SUnit_Rom_Cav_04,
	SUnit_Rom_Cav_05,
	SUnit_Rom_Cav_06,
	SUnit_Rom_Cav_07,
	SUnit_Rom_Cav_08,
	SUnit_Rom_Cav_09,
	SUnit_Rom_Inf_01,
	SUnit_Rom_Inf_02,
	SUnit_Rom_Inf_03,
	SUnit_Rom_Inf_04,
	SUnit_Rom_Inf_05,
	SUnit_Rom_Inf_06,
	SUnit_Rom_Inf_07,
	SUnit_Rom_Inf_08,
	SUnit_Rom_Inf_09,
	SUnit_Rom_Inf_10,
	SUnit_Rom_Inf_11,
	SUnit_Rom_Inf_12,
	SUnit_Rom_Inf_13,
	SUnit_Rom_Inf_14,
	SUnit_Rom_Inf_15,
	SUnit_Rom_Inf_16,
	SUnit_Rom_Rng_01,
	SUnit_Rom_Rng_02,
	SUnit_Rom_Rng_03,
	SUnit_Rom_Rng_04,
	SUnit_Rom_Rng_05,
	SUnit_Rom_Art_01,
	SUnit_Rom_Art_02
};

AI_Rom = Alliance_Rom:create_ai_unit_planner();









SUnit_Ger_Cav_01 = script_unit:new(Army_Ger_01, "Ger_Cav_01");
SUnit_Ger_Cav_02 = script_unit:new(Army_Ger_01, "Ger_Cav_02");
SUnit_Ger_Cav_03 = script_unit:new(Army_Ger_01, "Ger_Cav_03");
SUnit_Ger_Cav_04 = script_unit:new(Army_Ger_01, "Ger_Cav_04");
SUnit_Ger_Cav_05 = script_unit:new(Army_Ger_01, "Ger_Cav_05");
SUnit_Ger_Cav_06 = script_unit:new(Army_Ger_01, "Ger_Cav_06");
SUnit_Ger_Cav_07 = script_unit:new(Army_Ger_01, "Ger_Cav_07");
SUnit_Ger_Cav_08 = script_unit:new(Army_Ger_01, "Ger_Cav_08");
SUnit_Ger_Cav_09 = script_unit:new(Army_Ger_01, "Ger_Cav_09");
SUnit_Ger_Cav_10 = script_unit:new(Army_Ger_01, "Ger_Cav_10");
SUnit_Ger_Cav_11 = script_unit:new(Army_Ger_01, "Ger_Cav_11");
SUnit_Ger_Cav_12 = script_unit:new(Army_Ger_01, "Ger_Cav_12");
SUnit_Ger_Inf_01 = script_unit:new(Army_Ger_01, "Ger_Inf_01");
SUnit_Ger_Inf_02 = script_unit:new(Army_Ger_01, "Ger_Inf_02");
SUnit_Ger_Inf_03 = script_unit:new(Army_Ger_01, "Ger_Inf_03");
SUnit_Ger_Inf_04 = script_unit:new(Army_Ger_01, "Ger_Inf_04");
SUnit_Ger_Inf_05 = script_unit:new(Army_Ger_01, "Ger_Inf_05");
SUnit_Ger_Inf_06 = script_unit:new(Army_Ger_01, "Ger_Inf_06");
SUnit_Ger_Inf_07 = script_unit:new(Army_Ger_01, "Ger_Inf_07");
SUnit_Ger_Inf_08 = script_unit:new(Army_Ger_01, "Ger_Inf_08");
SUnit_Ger_Inf_09 = script_unit:new(Army_Ger_01, "Ger_Inf_09");
SUnit_Ger_Inf_10 = script_unit:new(Army_Ger_01, "Ger_Inf_10");
SUnit_Ger_Inf_11 = script_unit:new(Army_Ger_01, "Ger_Inf_11");
SUnit_Ger_Inf_12 = script_unit:new(Army_Ger_01, "Ger_Inf_12");
SUnit_Ger_Inf_13 = script_unit:new(Army_Ger_01, "Ger_Inf_13");
SUnit_Ger_Inf_14 = script_unit:new(Army_Ger_01, "Ger_Inf_14");
SUnit_Ger_Inf_15 = script_unit:new(Army_Ger_01, "Ger_Inf_15");
SUnit_Ger_Inf_16 = script_unit:new(Army_Ger_01, "Ger_Inf_16");
SUnit_Ger_Inf_17 = script_unit:new(Army_Ger_01, "Ger_Inf_17");
SUnit_Ger_Rng_01 = script_unit:new(Army_Ger_01, "Ger_Rng_01");
SUnit_Ger_Rng_02 = script_unit:new(Army_Ger_01, "Ger_Rng_02");
SUnit_Ger_Rng_03 = script_unit:new(Army_Ger_01, "Ger_Rng_03");
SUnit_Ger_Rng_04 = script_unit:new(Army_Ger_01, "Ger_Rng_04");
SUnit_Ger_Rng_05 = script_unit:new(Army_Ger_01, "Ger_Rng_05");
SUnit_Ger_Rng_06 = script_unit:new(Army_Ger_01, "Ger_Rng_06");

UC_Ger_01_All = unitcontroller_from_army(Army_Ger_01);
UC_Ger_01_All:take_control();

Ger_Sunits = {
	SUnit_Ger_Cav_01,
	SUnit_Ger_Cav_02,
	SUnit_Ger_Cav_03,
	SUnit_Ger_Cav_04,
	SUnit_Ger_Cav_05,
	SUnit_Ger_Cav_06,
	SUnit_Ger_Cav_07,
	SUnit_Ger_Cav_08,
	SUnit_Ger_Cav_09,
	SUnit_Ger_Cav_10,
	SUnit_Ger_Cav_11,
	SUnit_Ger_Cav_12,
	SUnit_Ger_Inf_01,
	SUnit_Ger_Inf_02,
	SUnit_Ger_Inf_03,
	SUnit_Ger_Inf_04,
	SUnit_Ger_Inf_05,
	SUnit_Ger_Inf_06,
	SUnit_Ger_Inf_07,
	SUnit_Ger_Inf_08,
	SUnit_Ger_Inf_09,
	SUnit_Ger_Inf_10,
	SUnit_Ger_Inf_11,
	SUnit_Ger_Inf_12,
	SUnit_Ger_Inf_13,
	SUnit_Ger_Inf_14,
	SUnit_Ger_Inf_15,
	SUnit_Ger_Inf_16,
	SUnit_Ger_Inf_17,
	SUnit_Ger_Rng_01,
	SUnit_Ger_Rng_02,
	SUnit_Ger_Rng_03,
	SUnit_Ger_Rng_04,
	SUnit_Ger_Rng_05,
	SUnit_Ger_Rng_06
};

AI_Ger = Alliance_Ger:create_ai_unit_planner();


--
-- Buildings
--

-- Building_01 = get_building_near(bm, 0, 0);









--
-- Convex Areas
--

--[[
Area_01 = convex_area:new(
	{
		v(-500, -500),
		v(-500, 0),
		v(0, 0),
		v(0, -500)
	}
);
]]





--
-- Patrol_Managers
--

--PM_Car_01 = patrol_manager:new("Car_01", SUnit_Car_01, Alliance_Rom:armies(), 100);
--PM_Car_01:add_waypoint(v(120, 70), false, 5000);









C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\bm_benchmark\bm_main.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	MAIN BATTLE SCRIPT
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------



-- called at start of deployment phase
function Deployment_Phase()
	bm:out("Battle is in deployment phase");
end;



-- end of deployment phase i.e. battle start
function End_Deployment_Phase()
		
	-- launch cutscene, or straight into battle without it
	-- Play_Cutscene_Intro();
	Start_Battle_No_Cutscene();
end;


function Start_Battle_No_Cutscene()
	cam:fade(false, 0.5);
	
	Start_Battle();
end;



-- the interactive battle has started
function Start_Battle()
	bm:out("Battle is Starting");

	-- cindy scene
	bm:cindy_playback("Script\\BM_Benchmark\\Benchmark_Battle.CindySceneManager", true)
	
	--start rout manager
	bm:start_rout_manager(1);
	
	-- register victory and defeat VO callbacks
	bm:setup_victory_callback(function() Battle_Is_Ending() end);
	
	-- set up Roman defence
	for i = 1, #Rom_Sunits do
		AI_Rom:add_units(Rom_Sunits[i].unit);
	end;
	
	-- Romans defend the current position of their general
	AI_Rom:defend_position(SUnit_Rom_Cav_01.unit:position(), 200);
	
	-- set up Roman defence
	for i = 1, #Ger_Sunits do
		AI_Ger:add_units(Ger_Sunits[i].unit);
	end;
	
	-- Germans attack Roman general
	AI_Ger:attack_unit(SUnit_Rom_Cav_01.unit);
end;








BOOL_Battle_Is_Ending = false;

-- the game has gone to victory countdown phase, someone has won
function Battle_Is_Ending()
	if not BOOL_Battle_Is_Ending then
		BOOL_Battle_Is_Ending = true;
					
		if is_routing_or_dead(Alliance_Rom) then	
			bm:out("Player has lost, army is routing");
							
			bm:callback(function() bm:end_battle() end, 10000);
		else
			bm:out("Player has won !");
			
			bm:callback(function() bm:end_battle() end, 10000);
		end;
	end;
end;







C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\bm_benchmark\bm_start.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	INITIAL SCRIPT SETUP
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

-- clear out loaded files
system.ClearRequiredFiles();

-- load in battle script library
require "lua_scripts.Battle_Script_Header";

-- declare battlemanager object
bm = battle_manager:new(empire_battle:new());

-- get battle name from folder, and print header
battle_name, battle_shortform = get_folder_name_and_shortform();

bm:out("==============");
bm:out("==============");
bm:out("==============");
bm:out("Script started: Battle of " .. battle_name);
bm:out("==============");

-- load in other script files associated with this battle
package.path = package.path .. ";data/Script/" .. battle_name .. "/?.lua";

require (battle_shortform .. "_Declarations");
require (battle_shortform .. "_Cutscenes");
require (battle_shortform .. "_Main");

-- register functions to be called on phase changes
bm:register_phase_change_callback("Deployment", function() Deployment_Phase() end);			-- optional deployment phase callback
bm:setup_battle(function() End_Deployment_Phase() end);										-- called when battle starts








C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\cn_cannae_test\cn_cutscenes.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	CUTSCENES SCRIPT
--
--	Declare intro and other cutscenes
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

POS_Cam_Cutscene_Intro_Final = v(518.9, 257, 181.3);
Targ_Cam_Cutscene_Intro_Final = v(442.8, 222.9, 138.9);

SFX_Rom_HB_CN_Intro_02 = new_sfx("Play_Rom_HB_CN_Intro_02_1");
SFX_Rom_HB_CN_Intro_03 = new_sfx("Play_Rom_HB_CN_Intro_03_1");
SFX_Rom_HB_CN_Intro_04 = new_sfx("Play_Rom_HB_CN_Intro_04_1");
SFX_Rom_HB_CN_Intro_05 = new_sfx("Play_Rom_HB_CN_Intro_05_1");
SFX_Rom_HB_CN_Intro_06 = new_sfx("Play_Rom_HB_CN_Intro_06_1");


Cutscene_Intro = cutscene:new(
	"Cutscene_Intro", 					-- unique string name for cutscene
	UC_Car_01_All, 						-- unitcontroller over player's army
	52000, 								-- duration of cutscene in ms
	function() Start_Battle() end 		-- what to call when cutscene is finished
);

Cutscene_Intro:set_skippable(true, function() Skip_Cutscene_Intro() end);
Cutscene_Intro:set_skip_camera(POS_Cam_Cutscene_Intro_Final, Targ_Cam_Cutscene_Intro_Final);
--Cutscene_Intro:set_debug(true);

BOOL_Car_Army_In_Start_Position = false;
BOOL_Rom_Army_In_Start_Position = false;


function Play_Cutscene_Intro()

	local subtitles = Cutscene_Intro:subtitles();
	subtitles:set_alignment("bottom_centre");
	
	Teleport_Car_Army_Intro_Start();
	
	
	Teleport_Rom_Army_Intro_Start();
	
	Cutscene_Intro:action(function() cam:move_to(v(-1.1, 217.4, 622.4), v(-21, 212.9, 544.6), 0, true, 35) end, 0);
	Cutscene_Intro:action(function() cam:move_to(v(-1.1, 217.4, 622.4), v(-21, 212.9, 544.6), 7, true, 33) end, 0);
	Cutscene_Intro:action(function() cam:fade(false, 0.5) end, 0);
	
	-- August 2nd, 216 BC
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.CN.Intro_01") end, 2000);

	Cutscene_Intro:action(function() subtitles:clear() end, 5000);

	-- After two days of skirmishing, Roman and Carthaginian forces finally meet on the banks of the Aufidus River. 8
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.CN.Intro_02") end, 6000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Rom_HB_CN_Intro_02) end, 6000);
	
	Cutscene_Intro:action(function() cam:move_to(v(999.4, 237.3, -221.4), v(629.6, 198, -46.1), 0, true, 40) end, 6000);
	Cutscene_Intro:action(function() cam:move_to(v(670.3, 237.3, -387.5), v(337.3, 194, -150.4), 10, true, 40) end, 6500);
          
	Cutscene_Intro:action(function() subtitles:clear() end, 14000);
	
	-- Start moving armies
	Cutscene_Intro:action (function() Move_Car_Army_Intro_Start() end, 13000);
	Cutscene_Intro:action (function() Move_Rom_Army_Intro_Start() end, 13000);
	
	-- Rome has brought what it hopes will be an overwhelming force to the field. 5
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.CN.Intro_03") end, 15000);           
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Rom_HB_CN_Intro_03) end, 15000);
	
	Cutscene_Intro:action(function() cam:move_to(v(3.7, 236.3, -46.3), v(-109.7, 226.7, -43.7), 0, true, 35) end, 15000);
	Cutscene_Intro:action(function() cam:move_to(v(45.8, 236.3, -133.2), v(-67.6, 226.7, -130.6), 8, true, 35) end, 15500);
	
	Cutscene_Intro:action(function() subtitles:clear() end, 20000);
      
	-- Although inferior in number, Hannibal's army is highly manouevrable, with superior cavalry.7
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.CN.Intro_04") end, 21000);           
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Rom_HB_CN_Intro_04) end, 21000);
	
	Cutscene_Intro:action(function() cam:move_to(v(639.7, 233.8, 135.3), v(528, 220, 118.7), 0, true, 35) end, 21000);
	Cutscene_Intro:action(function() cam:move_to(v(639.7, 233.8, 135.3), v(528, 220, 118.7), 2, true, 33) end, 21000);
	Cutscene_Intro:action(function() cam:move_to(v(664.8, 228.9, 87.2), v(607.6, 209.5, -9.2), 4.5, true, 35) end, 23000);
	
	Cutscene_Intro:action(function() subtitles:clear() end, 28000);
	
	-- The Roman army is relying on brute strength to smash through the Carthaginians. Hannibal could use this relentless push against them. 10
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.CN.Intro_05") end, 29000);           
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Rom_HB_CN_Intro_05) end, 29000);
	
	Cutscene_Intro:action(function() cam:move_to(v(-60.8, 216.3, -106.4), v(-216.3, 213.3, -122.5), 0, true, 40) end, 29000);
	Cutscene_Intro:action(function() cam:move_to(v(-60.8, 216.3, -106.4), v(-216.3, 213.3, -122.5), 8, true, 48) end, 29500);
	
	Cutscene_Intro:action(function() Teleport_Car_Army_Battle_Start(); BOOL_Car_Army_In_Start_Position = true end, 31500);
			
	Cutscene_Intro:action(function() subtitles:clear() end, 39000);
	
	-- If Hannibal's line can hold, and his cavalry can dominate the flanks, then he can control the Legion's advance. The Roman numbers will mean nothing. 12
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.CN.Intro_06") end, 40000);	
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Rom_HB_CN_Intro_06) end, 40000);
	
	Cutscene_Intro:action(function() cam:move_to(v(363.2, 231.8, 105.6), v(433.4, 201.5, 241.7), 0, true, 50) end, 40000);
	Cutscene_Intro:action(function() cam:move_to(v(401.5, 231.8, 40.3), v(471.7, 201.5, 176.4), 8, true, 50) end, 40500);
	
	Cutscene_Intro:action(function() Teleport_Rom_Army_Battle_Start(); BOOL_Rom_Army_In_Start_Position = true end, 42500);
	
	Cutscene_Intro:action(function() cam:move_to(POS_Cam_Cutscene_Intro_Final, Targ_Cam_Cutscene_Intro_Final, 4, false, 0) end, 48000);
	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 52000);	
	Cutscene_Intro:action(function() subtitles:clear() end, 52000);           
	
	Cutscene_Intro:start();
end;



function Skip_Cutscene_Intro()
	cam:fade(true, 0);
	
	stop_sound(SFX_Rom_HB_CN_Intro_02);
	stop_sound(SFX_Rom_HB_CN_Intro_03);
	stop_sound(SFX_Rom_HB_CN_Intro_04);
	stop_sound(SFX_Rom_HB_CN_Intro_05);
	stop_sound(SFX_Rom_HB_CN_Intro_06);
	
	if not BOOL_Car_Army_In_Start_Position then
		Teleport_Car_Army_Battle_Start();
	end;
	
	if not BOOL_Rom_Army_In_Start_Position then
		Teleport_Rom_Army_Battle_Start();
	end;
	
	bm:callback(function() cam:fade(false, 0.5) end, 1000);
end;






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\cn_cannae_test\cn_declarations.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	DECLARATIONS SCRIPT
--
--	Declare alliances, armies, convex areas and anything else of note in here
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

cam = bm:camera();

--
-- Army Declarations
--

Alliances = bm:alliances();

Alliance_Car = Alliances:item(1);
Army_Car_01 = Alliance_Car:armies():item(1);

Alliance_Rom = Alliances:item(2); 
Army_Rom_01 = Alliance_Rom:armies():item(1);




--
-- Carthage Units
--

SUnit_Car_01 = script_unit:new(Army_Car_01, "Car_01");
SUnit_Car_02 = script_unit:new(Army_Car_01, "Car_02");
SUnit_Car_03 = script_unit:new(Army_Car_01, "Car_03");
SUnit_Car_04 = script_unit:new(Army_Car_01, "Car_04");
SUnit_Car_05 = script_unit:new(Army_Car_01, "Car_05");
SUnit_Car_06 = script_unit:new(Army_Car_01, "Car_06");
SUnit_Car_07 = script_unit:new(Army_Car_01, "Car_07");
SUnit_Car_08 = script_unit:new(Army_Car_01, "Car_08");
SUnit_Car_09 = script_unit:new(Army_Car_01, "Car_09");
SUnit_Car_10 = script_unit:new(Army_Car_01, "Car_10");
SUnit_Car_11 = script_unit:new(Army_Car_01, "Car_11");
SUnit_Car_12 = script_unit:new(Army_Car_01, "Car_12");
SUnit_Car_13 = script_unit:new(Army_Car_01, "Car_13");
SUnit_Car_14 = script_unit:new(Army_Car_01, "Car_14");
SUnit_Car_15 = script_unit:new(Army_Car_01, "Car_15");
SUnit_Car_16 = script_unit:new(Army_Car_01, "Car_16");
SUnit_Car_17 = script_unit:new(Army_Car_01, "Car_17");
SUnit_Car_18 = script_unit:new(Army_Car_01, "Car_18");
SUnit_Car_19 = script_unit:new(Army_Car_01, "Car_19");
SUnit_Car_20 = script_unit:new(Army_Car_01, "Car_20");
SUnit_Car_21 = script_unit:new(Army_Car_01, "Car_21");
SUnit_Car_22 = script_unit:new(Army_Car_01, "Car_22");
SUnit_Car_23 = script_unit:new(Army_Car_01, "Car_23");

UC_Car_01_All = unitcontroller_from_army(Army_Car_01);

Car_Sunits = {
	SUnit_Car_01,
	SUnit_Car_02,
	SUnit_Car_03,
	SUnit_Car_04,
	SUnit_Car_05,
	SUnit_Car_06,
	SUnit_Car_07,
	SUnit_Car_08,
	SUnit_Car_09,
	SUnit_Car_10,
	SUnit_Car_11,
	SUnit_Car_12,
	SUnit_Car_13,
	SUnit_Car_14,
	SUnit_Car_15,
	SUnit_Car_16,
	SUnit_Car_17,
	SUnit_Car_18,
	SUnit_Car_19,
	SUnit_Car_20,
	SUnit_Car_21,
	SUnit_Car_22,
	SUnit_Car_23
};

Car_Main_Sunits = {
	SUnit_Car_01,
	SUnit_Car_02,
	SUnit_Car_03,
	SUnit_Car_04,
	SUnit_Car_05,
	SUnit_Car_06,
	SUnit_Car_07,
	SUnit_Car_08,
	SUnit_Car_09,
	SUnit_Car_10,
	SUnit_Car_11,
	SUnit_Car_12,
	SUnit_Car_13,
	SUnit_Car_14,
	SUnit_Car_15,
	SUnit_Car_16,
	SUnit_Car_17
};

SUnit_Car_01.POS_Intro_Start = v(605.985,228.83)
SUnit_Car_01.Orient_Intro_Start = r_to_d(-2.06809)
SUnit_Car_01.Width_Intro_Start = 26.4701

SUnit_Car_02.POS_Intro_Start = v(588.899,176.694)
SUnit_Car_02.Orient_Intro_Start = r_to_d(-2.02227)
SUnit_Car_02.Width_Intro_Start = 19.1032

SUnit_Car_03.POS_Intro_Start = v(580.64,195.124)
SUnit_Car_03.Orient_Intro_Start = r_to_d(-2.02735)
SUnit_Car_03.Width_Intro_Start = 18.0139

SUnit_Car_04.POS_Intro_Start = v(643.792,116.956)
SUnit_Car_04.Orient_Intro_Start = r_to_d(-2.0168)
SUnit_Car_04.Width_Intro_Start = 17.9496

SUnit_Car_05.POS_Intro_Start = v(576.131,257.99)
SUnit_Car_05.Orient_Intro_Start = r_to_d(-2.02802)
SUnit_Car_05.Width_Intro_Start = 16.7091

SUnit_Car_06.POS_Intro_Start = v(633.74,134.05)
SUnit_Car_06.Orient_Intro_Start = r_to_d(-2.02399)
SUnit_Car_06.Width_Intro_Start = 17.9283

SUnit_Car_07.POS_Intro_Start = v(566.536,274.068)
SUnit_Car_07.Orient_Intro_Start = r_to_d(-2.02351)
SUnit_Car_07.Width_Intro_Start = 16.9286

SUnit_Car_08.POS_Intro_Start = v(625.816,151.661)
SUnit_Car_08.Orient_Intro_Start = r_to_d(-2.02131)
SUnit_Car_08.Width_Intro_Start = 16.9324

SUnit_Car_09.POS_Intro_Start = v(570.57,212.125)
SUnit_Car_09.Orient_Intro_Start = r_to_d(-2.02255)
SUnit_Car_09.Width_Intro_Start = 17.9308

SUnit_Car_10.POS_Intro_Start = v(561.965,229.934)
SUnit_Car_10.Orient_Intro_Start = r_to_d(-2.02409)
SUnit_Car_10.Width_Intro_Start = 17.8992

SUnit_Car_11.POS_Intro_Start = v(558.551,290.542)
SUnit_Car_11.Orient_Intro_Start = r_to_d(-2.02466)
SUnit_Car_11.Width_Intro_Start = 15.9169

SUnit_Car_12.POS_Intro_Start = v(617.636,168.555)
SUnit_Car_12.Orient_Intro_Start = r_to_d(-2.0215)
SUnit_Car_12.Width_Intro_Start = 16.9643

SUnit_Car_13.POS_Intro_Start = v(550.826,306.533)
SUnit_Car_13.Orient_Intro_Start = r_to_d(-2.02265)
SUnit_Car_13.Width_Intro_Start = 15.9465

SUnit_Car_14.POS_Intro_Start = v(584.333,138.778)
SUnit_Car_14.Orient_Intro_Start = r_to_d(-2.0262)
SUnit_Car_14.Width_Intro_Start = 37.8638

SUnit_Car_15.POS_Intro_Start = v(567,174.613)
SUnit_Car_15.Orient_Intro_Start = r_to_d(-2.02351)
SUnit_Car_15.Width_Intro_Start = 37.7518

SUnit_Car_16.POS_Intro_Start = v(549.547,210.198)
SUnit_Car_16.Orient_Intro_Start = r_to_d(-2.0215)
SUnit_Car_16.Width_Intro_Start = 37.5443

SUnit_Car_17.POS_Intro_Start = v(532.33,245.875)
SUnit_Car_17.Orient_Intro_Start = r_to_d(-2.02131)
SUnit_Car_17.Width_Intro_Start = 37.6166

SUnit_Car_18.POS_Intro_Start = v(692.537,12.4774)
SUnit_Car_18.Orient_Intro_Start = r_to_d(-1.9982)
SUnit_Car_18.Width_Intro_Start = 30.1044

SUnit_Car_19.POS_Intro_Start = v(524.413,370.533)
SUnit_Car_19.Orient_Intro_Start = r_to_d(-1.95956)
SUnit_Car_19.Width_Intro_Start = 30.3137

SUnit_Car_20.POS_Intro_Start = v(680.153,40.6651)
SUnit_Car_20.Orient_Intro_Start = r_to_d(-1.99044)
SUnit_Car_20.Width_Intro_Start = 30.5577

SUnit_Car_21.POS_Intro_Start = v(512.297,398.781)
SUnit_Car_21.Orient_Intro_Start = r_to_d(-1.96215)
SUnit_Car_21.Width_Intro_Start = 29.6536

SUnit_Car_22.POS_Intro_Start = v(670.258,70.3248)
SUnit_Car_22.Orient_Intro_Start = r_to_d(-1.94029)
SUnit_Car_22.Width_Intro_Start = 31.3345

SUnit_Car_23.POS_Intro_Start = v(542.015,345.668)
SUnit_Car_23.Orient_Intro_Start = r_to_d(-1.95324)
SUnit_Car_23.Width_Intro_Start = 27.8987


function Teleport_Car_Army_Intro_Start()
	for i = 1, #Car_Sunits do
		local current_sunit = Car_Sunits[i];
		current_sunit.uc:teleport_to_location(current_sunit.POS_Intro_Start, current_sunit.Orient_Intro_Start, current_sunit.Width_Intro_Start);
	end;
end;

function Move_Car_Army_Intro_Start()
	for i = 1, #Car_Sunits do
		local current_sunit = Car_Sunits[i];
		current_sunit:goto_start_location();
	end;
end;

function Teleport_Car_Army_Battle_Start()
	for i = 1, #Car_Sunits do
		local current_sunit = Car_Sunits[i];
		current_sunit:teleport_to_start_location();
	end;
	bm:out("Teleporting Carthage army to start pos...");
end;


--
-- Roman Units
--


SUnit_Rom_01 = script_unit:new(Army_Rom_01, "Rom_01");
SUnit_Rom_02 = script_unit:new(Army_Rom_01, "Rom_02");
SUnit_Rom_03 = script_unit:new(Army_Rom_01, "Rom_03");
SUnit_Rom_04 = script_unit:new(Army_Rom_01, "Rom_04");
SUnit_Rom_05 = script_unit:new(Army_Rom_01, "Rom_05");
SUnit_Rom_06 = script_unit:new(Army_Rom_01, "Rom_06");
SUnit_Rom_07 = script_unit:new(Army_Rom_01, "Rom_07");
SUnit_Rom_08 = script_unit:new(Army_Rom_01, "Rom_08");
SUnit_Rom_09 = script_unit:new(Army_Rom_01, "Rom_09");
SUnit_Rom_10 = script_unit:new(Army_Rom_01, "Rom_10");
SUnit_Rom_11 = script_unit:new(Army_Rom_01, "Rom_11");
SUnit_Rom_12 = script_unit:new(Army_Rom_01, "Rom_12");
SUnit_Rom_13 = script_unit:new(Army_Rom_01, "Rom_13");
SUnit_Rom_14 = script_unit:new(Army_Rom_01, "Rom_14");
SUnit_Rom_15 = script_unit:new(Army_Rom_01, "Rom_15");
SUnit_Rom_16 = script_unit:new(Army_Rom_01, "Rom_16");
SUnit_Rom_17 = script_unit:new(Army_Rom_01, "Rom_17");
SUnit_Rom_18 = script_unit:new(Army_Rom_01, "Rom_18");
SUnit_Rom_19 = script_unit:new(Army_Rom_01, "Rom_19");
SUnit_Rom_20 = script_unit:new(Army_Rom_01, "Rom_20");
SUnit_Rom_21 = script_unit:new(Army_Rom_01, "Rom_21");
SUnit_Rom_22 = script_unit:new(Army_Rom_01, "Rom_22");
SUnit_Rom_23 = script_unit:new(Army_Rom_01, "Rom_23");
SUnit_Rom_24 = script_unit:new(Army_Rom_01, "Rom_24");
SUnit_Rom_25 = script_unit:new(Army_Rom_01, "Rom_25");
SUnit_Rom_26 = script_unit:new(Army_Rom_01, "Rom_26");

UC_Rom_01_All = unitcontroller_from_army(Army_Rom_01);
UC_Rom_01_All:take_control();

Rom_Sunits = {
	SUnit_Rom_01,
	SUnit_Rom_02,
	SUnit_Rom_03,
	SUnit_Rom_04,
	SUnit_Rom_05,
	SUnit_Rom_06,
	SUnit_Rom_07,
	SUnit_Rom_08,
	SUnit_Rom_09,
	SUnit_Rom_10,
	SUnit_Rom_11,
	SUnit_Rom_12,
	SUnit_Rom_13,
	SUnit_Rom_14,
	SUnit_Rom_15,
	SUnit_Rom_16,
	SUnit_Rom_17,
	SUnit_Rom_18,
	SUnit_Rom_19,
	SUnit_Rom_20,
	SUnit_Rom_21,
	SUnit_Rom_22,
	SUnit_Rom_23,
	SUnit_Rom_24,
	SUnit_Rom_25,
	SUnit_Rom_26
};

Rom_Sunits_Inf = {
	SUnit_Rom_01,
	SUnit_Rom_02,
	SUnit_Rom_03,
	SUnit_Rom_04,
	SUnit_Rom_05,
	SUnit_Rom_06,
	SUnit_Rom_07,
	SUnit_Rom_08,
	SUnit_Rom_09,
	SUnit_Rom_10,
	SUnit_Rom_11,
	SUnit_Rom_12,
	SUnit_Rom_13,
	SUnit_Rom_14,
	SUnit_Rom_15,
	SUnit_Rom_16,
	SUnit_Rom_17,
	SUnit_Rom_18,
	SUnit_Rom_19,
	SUnit_Rom_20,
	SUnit_Rom_21
};

UC_Rom_Main = Army_Rom_01:create_unit_controller();
UC_Rom_Main_Attack = Army_Rom_01:create_unit_controller();

UC_Rom_Main:add_group(
	SUnit_Rom_01.unit,
	SUnit_Rom_02.unit,
	SUnit_Rom_03.unit,
	SUnit_Rom_04.unit,
	SUnit_Rom_05.unit,
	SUnit_Rom_06.unit,
	SUnit_Rom_07.unit,
	SUnit_Rom_08.unit,
	SUnit_Rom_09.unit,
	SUnit_Rom_10.unit,
	SUnit_Rom_11.unit,
	SUnit_Rom_12.unit,
	SUnit_Rom_13.unit,
	SUnit_Rom_14.unit,
	SUnit_Rom_15.unit,
	SUnit_Rom_16.unit,
	SUnit_Rom_17.unit,
	SUnit_Rom_18.unit,
	SUnit_Rom_19.unit,
	SUnit_Rom_20.unit,
	SUnit_Rom_21.unit
);

-- Left cav (river)
Rom_SUnits_Cav_One = {
	SUnit_Rom_22,
	SUnit_Rom_23,
	SUnit_Rom_24
}

-- Right cav
Rom_SUnits_Cav_Two = {
	SUnit_Rom_25,
	SUnit_Rom_26
}

SUnit_Rom_01.POS_Intro_Start = v(-186.226,-131.0656)
SUnit_Rom_01.Orient_Intro_Start = r_to_d(1.16554)
SUnit_Rom_01.Width_Intro_Start = 26.4452

SUnit_Rom_02.POS_Intro_Start = v(-155.033,-27.0768)
SUnit_Rom_02.Orient_Intro_Start = r_to_d(1.14071)
SUnit_Rom_02.Width_Intro_Start = 15.9699

SUnit_Rom_03.POS_Intro_Start = v(-128.436,-35.4733)
SUnit_Rom_03.Orient_Intro_Start = r_to_d(1.13764)
SUnit_Rom_03.Width_Intro_Start = 15.9558

SUnit_Rom_04.POS_Intro_Start = v(-147.225,-44.1562)
SUnit_Rom_04.Orient_Intro_Start = r_to_d(1.14051)
SUnit_Rom_04.Width_Intro_Start = 15.9003

SUnit_Rom_05.POS_Intro_Start = v(-120.957,-51.6524)
SUnit_Rom_05.Orient_Intro_Start = r_to_d(1.14234)
SUnit_Rom_05.Width_Intro_Start = 15.921

SUnit_Rom_06.POS_Intro_Start = v(-139.75,-60.3168)
SUnit_Rom_06.Orient_Intro_Start = r_to_d(1.13917)
SUnit_Rom_06.Width_Intro_Start = 15.9235

SUnit_Rom_07.POS_Intro_Start = v(-113.497,-67.8258)
SUnit_Rom_07.Orient_Intro_Start = r_to_d(1.13965)
SUnit_Rom_07.Width_Intro_Start = 15.88

SUnit_Rom_08.POS_Intro_Start = v(-132.3,-76.4948)
SUnit_Rom_08.Orient_Intro_Start = r_to_d(1.13936)
SUnit_Rom_08.Width_Intro_Start = 15.9283

SUnit_Rom_09.POS_Intro_Start = v(-106.019,-83.9719)
SUnit_Rom_09.Orient_Intro_Start = r_to_d(1.14272)
SUnit_Rom_09.Width_Intro_Start = 15.9639

SUnit_Rom_10.POS_Intro_Start = v(-124.83,-92.6486)
SUnit_Rom_10.Orient_Intro_Start = r_to_d(1.13946)
SUnit_Rom_10.Width_Intro_Start = 15.9306

SUnit_Rom_11.POS_Intro_Start = v(-98.5854,-100.148)
SUnit_Rom_11.Orient_Intro_Start = r_to_d(1.14004)
SUnit_Rom_11.Width_Intro_Start = 15.9239

SUnit_Rom_12.POS_Intro_Start = v(-117.368,-108.836)
SUnit_Rom_12.Orient_Intro_Start = r_to_d(1.1408)
SUnit_Rom_12.Width_Intro_Start = 15.8984

SUnit_Rom_13.POS_Intro_Start = v(-91.1169,-116.311)
SUnit_Rom_13.Orient_Intro_Start = r_to_d(1.14282)
SUnit_Rom_13.Width_Intro_Start = 15.9466

SUnit_Rom_14.POS_Intro_Start = v(-109.927,-124.97)
SUnit_Rom_14.Orient_Intro_Start = r_to_d(1.13917)
SUnit_Rom_14.Width_Intro_Start = 15.914

SUnit_Rom_15.POS_Intro_Start = v(-83.6651,-132.471)
SUnit_Rom_15.Orient_Intro_Start = r_to_d(1.14282)
SUnit_Rom_15.Width_Intro_Start = 15.876

SUnit_Rom_16.POS_Intro_Start = v(-102.46,-141.141)
SUnit_Rom_16.Orient_Intro_Start = r_to_d(1.13984)
SUnit_Rom_16.Width_Intro_Start = 15.9467

SUnit_Rom_17.POS_Intro_Start = v(-76.2021,-148.63)
SUnit_Rom_17.Orient_Intro_Start = r_to_d(1.13908)
SUnit_Rom_17.Width_Intro_Start = 15.9365

SUnit_Rom_18.POS_Intro_Start = v(-94.9844,-157.302)
SUnit_Rom_18.Orient_Intro_Start = r_to_d(1.13793)
SUnit_Rom_18.Width_Intro_Start = 15.9275

SUnit_Rom_19.POS_Intro_Start = v(-68.7634,-164.789)
SUnit_Rom_19.Orient_Intro_Start = r_to_d(1.14157)
SUnit_Rom_19.Width_Intro_Start = 15.9098

SUnit_Rom_20.POS_Intro_Start = v(-87.5743,-173.464)
SUnit_Rom_20.Orient_Intro_Start = r_to_d(1.13869)
SUnit_Rom_20.Width_Intro_Start = 15.9167

SUnit_Rom_21.POS_Intro_Start = v(-135.873,-19.3183)
SUnit_Rom_21.Orient_Intro_Start = r_to_d(1.14147)
SUnit_Rom_21.Width_Intro_Start = 15.9226

SUnit_Rom_22.POS_Intro_Start = v(-68.3674,-203.72)
SUnit_Rom_22.Orient_Intro_Start = r_to_d(1.19459)
SUnit_Rom_22.Width_Intro_Start = 28.3889

SUnit_Rom_23.POS_Intro_Start = v(-57.2867,-230.505)
SUnit_Rom_23.Orient_Intro_Start = r_to_d(1.19075)
SUnit_Rom_23.Width_Intro_Start = 28.5612

SUnit_Rom_24.POS_Intro_Start = v(-46.2048,-257.671)
SUnit_Rom_24.Orient_Intro_Start = r_to_d(1.18193)
SUnit_Rom_24.Width_Intro_Start = 28.5259

SUnit_Rom_25.POS_Intro_Start = v(-175.461,46.2357)
SUnit_Rom_25.Orient_Intro_Start = r_to_d(1.18836)
SUnit_Rom_25.Width_Intro_Start = 28.3796

SUnit_Rom_26.POS_Intro_Start = v(-164.378,19.3704)
SUnit_Rom_26.Orient_Intro_Start = r_to_d(1.18347)
SUnit_Rom_26.Width_Intro_Start = 28.3877


function Teleport_Rom_Army_Intro_Start()
	for i = 1, #Rom_Sunits do
		local current_sunit = Rom_Sunits[i];
		current_sunit.uc:teleport_to_location(current_sunit.POS_Intro_Start, current_sunit.Orient_Intro_Start, current_sunit.Width_Intro_Start);
	end;
end;

function Move_Rom_Army_Intro_Start()
	for i = 1, #Rom_Sunits do
		local current_sunit = Rom_Sunits[i];
		current_sunit:goto_start_location();
	end;
end;

function Teleport_Rom_Army_Battle_Start()
	for i = 1, #Rom_Sunits do
		local current_sunit = Rom_Sunits[i];
		current_sunit:teleport_to_start_location();
	end;
	bm:out("Teleporting Roman army to start pos...");
end;






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\cn_cannae_test\cn_main.lua
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	MAIN BATTLE SCRIPT
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------



-- called at start of deployment phase
function Deployment_Phase()
	bm:out("Battle is in deployment phase");
end;



-- end of deployment phase i.e. battle start
function End_Deployment_Phase()
		
	-- launch cutscene, or straight into battle without it
	Play_Cutscene_Intro();
	-- Start_Battle_No_Cutscene();
end;


function Start_Battle_No_Cutscene()
	cam:fade(false, 0.5);
	
	Start_Battle();
end;


Roman_Attack_Timeout = 600000; -- 10 mins
Roman_Attempt_To_Reacquire_Target_Time = 15000;
Prox_Detect_Scan_Time = 5000;
Car_To_Centre_Min_Range = 100;
Army_Engagement_Range = 65;
Reorder_Offset = 40;


POS_Last_Dest = v(2000, 2000);


-- the interactive battle has started

function Start_Battle()
	--start rout manager
	-- bm:start_rout_manager(1);
	
	-- register victory and defeat VO callbacks
	bm:setup_victory_callback(function() Battle_Is_Ending() end);
	
	-- Watch_For_Roman_Army_Engagement()
	-- Watch_For_Roman_Cav_Approach()
	
	bm:callback(
		function()
			--"The Romans Advance, all pomp and spectacle! Let us show them how a real army fights. Smash them into the river!
			bm:queue_advisor("Rom.HB.CN.001", 8000);
		end,
		2000
	);
	
	-- objective
	bm:callback(function() set_objective("Rom.HB.CN.Objective_01") end, 5000);

	bm:watch(
		function()
            --returns true if the commander of Army_Car is dead
			return not Army_Car_01:is_commander_alive() 
		end, 
		0, 
		function()
            --???Hannibal has been knocked from his horse and carried from the field! His presence no longer rallies the men, they are disheartened!???
			bm:stop_advisor_queue();
			bm:queue_advisor("Rom.HB.CN.007", 6000);
		end, 
		"Allied_Commander_Watch"
	);

	bm:watch(
		function()
            --returns true if the commander of Army_Rom is dead
			return not Army_Rom_01:is_commander_alive() 
		end, 
		0, 
		function()
            --???Varro is dead! Press his men back! Back into the river!???
			bm:stop_advisor_queue();
			bm:queue_advisor("Rom.HB.CN.006", 6000);
		end, 
		"Allied_Commander_Watch"
	);
	
	-- set the Romans off towards Carth army, reacquiring every so often
	-- Roman_Main_Advance();
	-- bm:repeat_callback(function() Check_Main_Army_Proximity() end, Prox_Detect_Scan_Time, "Roman_Advance");
	-- bm:repeat_callback(function() Roman_Main_Advance() end, Roman_Attempt_To_Reacquire_Target_Time, "Roman_Advance");
	-- set the Romans to attack regardless after a certain timeout
	-- bm:callback(function() Romans_Attack("Timeout") end, Roman_Attack_Timeout,"Roman_Advance");
	
	-- create a script planner for the first cavalry group and set them off towards the first Carthaginian Cavalry
	SAI_Rom_Cav_One = script_ai_planner:new("SAI_Rom_Cav_One", Rom_SUnits_Cav_One);
	SAI_Rom_Cav_One:set_debug_all();
	SAI_Rom_Cav_One:defend_position_of_sunit(SUnit_Car_18, 100);

	-- create a script planner for the second cavalry and set them off towards the second Carthaginian Cavalry
	SAI_Rom_Cav_Two = script_ai_planner:new("SAI_Rom_Cav_Two", Rom_SUnits_Cav_Two);
	--SAI_Rom_Cav_Two:defend_position_of_sunit(SUnit_Car_21, 100);
	--SAI_Rom_Cav_Two:patrol({v(188, 243), v(360, 300)}, Car_Sunits, function() SAI_Rom_Cav_Two:defend_position_of_sunit(SUnit_Car_21, 100) end);
	SAI_Rom_Cav_Two:defend_position(v(-60, 350), 100);

	-- prevent SAI_Rom_Cav_Two reordering
	-- bm:callback(function() bm:remove_process(SAI_Rom_Cav_Two.name) end, 1000);
end;

	

function Check_Main_Army_Proximity()
	--if distance_between_forces(Car_Main_Sunits, Rom_Sunits_Inf, true) < Army_Engagement_Range then
	if distance_between_forces(Car_Sunits, Rom_Sunits_Inf, true) < Army_Engagement_Range then
		Romans_Attack("Roman army is close to Carthaginian army");
	end;
end;


function Roman_Main_Advance()
	local centre_pos = Find_Centre_Point_Of_Army(Car_Main_Sunits);
	
	-- should Roman advance
	if not is_close_to_position(Car_Main_Sunits, centre_pos, Car_To_Centre_Min_Range) then
		bm:out("Stopping Roman advance as no Carthaginian unit is within " .. Car_To_Centre_Range .. "m of Carthaginian centre position " .. v_to_s(centre_pos) .. " - is player trying to kite the Romans?");
		Romans_Attack("No Car units close to centre pos");
	elseif centre_pos:distance_xz(POS_Last_Dest) > Reorder_Offset then
		bm:out("Romans attacking, now training on " .. v_to_s(centre_pos))
		UC_Rom_Main:goto_location(centre_pos);
		POS_Last_Dest = centre_pos;
	end;
end;



function Find_Centre_Point_Of_Army(sunit_list)
	local t = {};
	
	-- build a list of Carthaginian unit positions
	for i = 1, #sunit_list do
		t[i] = sunit_list[i].unit:position();
	end;
	
	return centre_point_table(t);
end;



BOOL_Romans_Are_Attacking = false;

function Romans_Attack(reason)
	if BOOL_Romans_Are_Attacking then
		return false;
	end;
	
	BOOL_Romans_Are_Attacking = true;

	-- TO MAKE BETTER
	bm:out("Romans are attacking, reason: " .. tostring(reason));
	bm:remove_process("Roman_Advance");
	
	UC_Rom_Main:clear_all();
	
	-- wait a bit
	bm:callback(
		function()
			for i = 1, #Rom_Sunits_Inf do
				bm:callback(
					function() 
						UC_Rom_Main_Attack:add_units(Rom_Sunits_Inf[i].unit);
						UC_Rom_Main_Attack:release_control();
					end, 
					(i - 1) * 200
				);
			end;
		end,
		500
	);
end;





BOOL_Battle_Is_Ending = false;

-- the game has gone to victory countdown phase, someone has won
function Battle_Is_Ending()
	if not BOOL_Battle_Is_Ending then
		BOOL_Battle_Is_Ending = true;
		
         bm:remove_process("Roman_Army_Watch");
		
		if is_routing_or_dead(Alliance_Car) then	
			bm:out("Player has lost, army is routing");
			
			bm:stop_advisor_queue();
            bm:queue_advisor("Rom.HB.CN.008", 8000);
			fail_objective("Rom.HB.CN.Objective_01")
							
			bm:callback(function() bm:end_battle() end, 10000);
		else
			bm:out("Player has won !");
			
			bm:stop_advisor_queue();
            bm:queue_advisor("Rom.HB.CN.009", 8000);
			complete_objective("Rom.HB.CN.Objective_01");

			--  achievement
			local difficulty = Army_Car_01:army_handicap();
	
			if difficulty <= 0 then			-- difficulty is "normal" or harder
				bm:unlock_achievement("ACHIEVEMENT_HISTORICAL_BATTLE_3");
			end;
			
			bm:callback(function() bm:end_battle() end, 10000);
		end;
	end;
end;

-------------------------------------------------------
--
--	ROMAN CAV BEHAVIOUR WATCHES
--
-------------------------------------------------------

-- the distance in m the Roman cav will trigger their approach warning 
Roman_Cav_Approach_Threshold = 250;

function Watch_For_Roman_Cav_Approach()
	-- Roman right/player's left
	bm:watch(
		function()
			return distance_between_forces(Rom_SUnits_Cav_One, Car_Sunits, true) < Roman_Cav_Approach_Threshold
		end,
		0,
		function()
			bm:out("Roman right wing cavalry have approached to within " .. Roman_Cav_Approach_Threshold .. " of Carthaginian army, warning player");
			bm:queue_advisor("Rom.HB.CN.003", 8000);
			Roman_Cav_Wing_Has_Approached_Player();
		end,
		"Roman_Army_Watch"
	);
	
	-- Roman left/player's right
	bm:watch(
		function()
			return distance_between_forces(Rom_SUnits_Cav_Two, Car_Sunits, true) < Roman_Cav_Approach_Threshold
		end,
		0,
		function()
			bm:out("Roman left wing cavalry have approached to within " .. Roman_Cav_Approach_Threshold .. " of Carthaginian army, warning player");
			bm:queue_advisor("Rom.HB.CN.004", 8000);
			Roman_Cav_Wing_Has_Approached_Player();
		end,
		"Roman_Army_Watch"
	);
end;


Count_Roman_Cav_Approached = 0;

function Roman_Cav_Wing_Has_Approached_Player()
	Count_Roman_Cav_Approached = Count_Roman_Cav_Approached + 1;
	
	if Count_Roman_Cav_Approached > 1 then
		Watch_For_Roman_Cav_Routing();
	end;
end;


function Watch_For_Roman_Cav_Routing()
	bm:watch(
		function()
			return is_routing_or_dead(Rom_SUnits_Cav_One) and is_routing_or_dead(Rom_SUnits_Cav_Two)
		end,
		0,
		function()
			bm:out("Roman cavalry are routing, informing player");
			bm:queue_advisor("Rom.HB.CN.005");
		end,
		"Roman_Army_Watch"
	);
end;





-------------------------------------------------------
--
--	ROMAN ARMY BEHAVIOUR WATCH
--
-------------------------------------------------------

-- the distance in m from the Roman main force to the player's main force at which the engagement timer will start ticking down 
Roman_Main_Approach_Dist_Threshold = 50;

-- the time in ms after the Roman army approaches the player's army that advice will be delivered 
Roman_Main_Approach_Countdown = 60000;

function Watch_For_Roman_Army_Engagement()
	bm:watch(
		function()
			return distance_between_forces(Car_Main_Sunits, Rom_Sunits_Inf, true) < Roman_Main_Approach_Dist_Threshold
		end,
		Roman_Main_Approach_Countdown,
		function()
			bm:out("Delivering Romans pressing centre advice");
			bm:queue_advisor("Rom.HB.CN.002");
		end,
		"Roman_Army_Watch"
	);
end;








C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\cn_cannae_test\cn_start.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	INITIAL SCRIPT SETUP
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

-- clear out loaded files
system.ClearRequiredFiles();

-- load in battle script library
require "lua_scripts.Battle_Script_Header";

-- declare battlemanager object
bm = battle_manager:new(empire_battle:new());

-- get battle name from folder, and print header
battle_name, battle_shortform = get_folder_name_and_shortform();

bm:out("==============");
bm:out("==============");
bm:out("==============");
bm:out("Script started: Battle of " .. battle_name);
bm:out("==============");

-- load in other script files associated with this battle
package.path = package.path .. ";data/Script/" .. battle_name .. "/?.lua";

require (battle_shortform .. "_Declarations");
require (battle_shortform .. "_Cutscenes");
require (battle_shortform .. "_Main");

-- register functions to be called on phase changes
bm:register_phase_change_callback("Deployment", function() Deployment_Phase() end);			-- optional deployment phase callback
bm:setup_battle(function() End_Deployment_Phase() end);										-- called when battle starts








C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\e3_carthage\e3_armies.lua
-----------------------------------------------------------
-- Army Declarations
-----------------------------------------------------------

Alliances = bm:alliances();

Alliance_Rom = Alliances:item(1);
Armies_Rom = Alliance_Rom:armies();

Army_Rom_01 = Armies_Rom:item(1);
Units_Rom_01 = Army_Rom_01:units();

Army_Rom_02 = Armies_Rom:item(2);
Units_Rom_02 = Army_Rom_02:units();

Alliance_Car = Alliances:item(2); 
Armies_Car = Alliance_Car:armies();

Army_Car = Armies_Car:item(1);
Units_Car = Army_Car:units();

-----------------------------------------------------------
-- Declare units and individual unitcontrollers
-----------------------------------------------------------

--
-- Roman army #1 :: Main landing force
--

SUnit_Rom_Main_01 = script_unit:new(Army_Rom_01, "Rom_Main_01_Mid_St_01");
SUnit_Rom_Main_02 = script_unit:new(Army_Rom_01, "Rom_Main_02_Main_St_02");
SUnit_Rom_Main_03 = script_unit:new(Army_Rom_01, "Rom_Main_03_Main_St_01");
SUnit_Rom_Main_04 = script_unit:new(Army_Rom_01, "Rom_Main_04_Mid_St_02");
SUnit_Rom_Main_05 = script_unit:new(Army_Rom_01, "Rom_Main_05_Dock_St_01");
SUnit_Rom_Main_06 = script_unit:new(Army_Rom_01, "Rom_Main_06_Dock_St_03");
SUnit_Rom_Main_07 = script_unit:new(Army_Rom_01, "Rom_Main_07_Dock_St_05");
SUnit_Rom_Main_08 = script_unit:new(Army_Rom_01, "Rom_Main_08_Dock_St_06");
SUnit_Rom_Main_09 = script_unit:new(Army_Rom_01, "Rom_Main_09_Dock_St_04");
SUnit_Rom_Main_10 = script_unit:new(Army_Rom_01, "Rom_Main_10_Main_St_05");
SUnit_Rom_Main_11 = script_unit:new(Army_Rom_01, "Rom_Main_11_Mid_St_04");
SUnit_Rom_Main_12 = script_unit:new(Army_Rom_01, "Rom_Main_12_Dock_St_07");
SUnit_Rom_Main_13 = script_unit:new(Army_Rom_01, "Rom_Main_13_Dock_St_02");
SUnit_Rom_Main_14 = script_unit:new(Army_Rom_01, "Rom_Main_14_Main_St_03");
SUnit_Rom_Main_15 = script_unit:new(Army_Rom_01, "Rom_Main_15_Main_St_04");
SUnit_Rom_Beach_01 = script_unit:new(Army_Rom_01, "Rom_Beach_01_Dock_St_Arch_01");
SUnit_Rom_Beach_02 = script_unit:new(Army_Rom_01, "Rom_Beach_02_Mid_St_Arch_01");
SUnit_Rom_Beach_03 = script_unit:new(Army_Rom_01, "Rom_Beach_03");
SUnit_Rom_Beach_04 = script_unit:new(Army_Rom_01, "Rom_Beach_04_Mid_St_03");
SUnit_Rom_Beach_05 = script_unit:new(Army_Rom_01, "Rom_Beach_05_Main_St_Arch_01");
SUnit_Rom_Beach_06 = script_unit:new(Army_Rom_01, "Rom_Beach_06");

Unitcontroller_Rom_01_All = unitcontroller_from_army(Army_Rom_01);
Unitcontroller_Rom_01_All:take_control();

-- unitcontroller for nearly everyone

Unitcontroller_Rom_01_Nearly_All = Army_Rom_01:create_unit_controller();

for i = 2, Units_Rom_01:count() do
	Unitcontroller_Rom_01_Nearly_All:add_units(Units_Rom_01:item(i));
end;

Unitcontroller_Rom_01_Nearly_All:take_control();

--
-- Roman army #2 :: land units
--

SUnit_Rom_West_01 = script_unit:new(Army_Rom_02, "Rom_West_01");
SUnit_Rom_West_02 = script_unit:new(Army_Rom_02, "Rom_West_02");
SUnit_Rom_West_03 = script_unit:new(Army_Rom_02, "Rom_West_03");
SUnit_Rom_West_05 = script_unit:new(Army_Rom_02, "Rom_West_05");
SUnit_Rom_West_06 = script_unit:new(Army_Rom_02, "Rom_West_06");
SUnit_Rom_West_08 = script_unit:new(Army_Rom_02, "Rom_West_08");
SUnit_Rom_West_10 = script_unit:new(Army_Rom_02, "Rom_West_10");
SUnit_Rom_West_11 = script_unit:new(Army_Rom_02, "Rom_West_11");
SUnit_Rom_West_12 = script_unit:new(Army_Rom_02, "Rom_West_12");
SUnit_Rom_West_13 = script_unit:new(Army_Rom_02, "Rom_West_13");
SUnit_Rom_West_14 = script_unit:new(Army_Rom_02, "Rom_West_14");
SUnit_Rom_West_15 = script_unit:new(Army_Rom_02, "Rom_West_15");
SUnit_Rom_West_16 = script_unit:new(Army_Rom_02, "Rom_West_16");
SUnit_Rom_West_Art_01 = script_unit:new(Army_Rom_02, "Rom_West_Art_01");
SUnit_Rom_West_Art_03 = script_unit:new(Army_Rom_02, "Rom_West_Art_03");
SUnit_Rom_Harbour_01 = script_unit:new(Army_Rom_02, "Rom_Harbour_01");
SUnit_Rom_Harbour_02 = script_unit:new(Army_Rom_02, "Rom_Harbour_02");
SUnit_Rom_Harbour_03 = script_unit:new(Army_Rom_02, "Rom_Harbour_03");

Unitcontroller_Rom_02_All = unitcontroller_from_army(Army_Rom_02);
Unitcontroller_Rom_02_All:take_control();


--
-- Carthaginian army
--

SUnit_Car_Dock_01 = script_unit:new(Army_Car, "Car_Dock_01");
SUnit_Car_Dock_02 = script_unit:new(Army_Car, "Car_Dock_02");
SUnit_Car_Dock_03 = script_unit:new(Army_Car, "Car_Dock_03");
SUnit_Car_Dock_04 = script_unit:new(Army_Car, "Car_Dock_04");
SUnit_Car_Dock_05 = script_unit:new(Army_Car, "Car_Dock_05");
SUnit_Car_Dock_06 = script_unit:new(Army_Car, "Car_Dock_06");
SUnit_Car_Mid_01 = script_unit:new(Army_Car, "Car_Mid_01");
SUnit_Car_Mid_02 = script_unit:new(Army_Car, "Car_Mid_02");
SUnit_Car_Mid_03 = script_unit:new(Army_Car, "Car_Mid_03");
SUnit_Car_Mid_04 = script_unit:new(Army_Car, "Car_Mid_04");
SUnit_Car_Main_01 = script_unit:new(Army_Car, "Car_Main_01");
SUnit_Car_Main_02 = script_unit:new(Army_Car, "Car_Main_02");
SUnit_Car_Main_03 = script_unit:new(Army_Car, "Car_Main_03");
SUnit_Car_Main_04 = script_unit:new(Army_Car, "Car_Main_04");
SUnit_Car_Main_05 = script_unit:new(Army_Car, "Car_Main_05");
SUnit_Car_Wall_01 = script_unit:new(Army_Car, "Car_Wall_01");
SUnit_Car_Wall_02 = script_unit:new(Army_Car, "Car_Wall_02");
SUnit_Car_Wall_03 = script_unit:new(Army_Car, "Car_Wall_03");
SUnit_Car_Wall_04 = script_unit:new(Army_Car, "Car_Wall_04");
SUnit_Car_Wall_05 = script_unit:new(Army_Car, "Car_Wall_05");
SUnit_Car_Wall_06 = script_unit:new(Army_Car, "Car_Wall_06");
SUnit_Car_Wall_07 = script_unit:new(Army_Car, "Car_Wall_07");
SUnit_Car_Wall_08 = script_unit:new(Army_Car, "Car_Wall_08");
SUnit_Car_Wall_09 = script_unit:new(Army_Car, "Car_Wall_09");
SUnit_Car_Wall_10 = script_unit:new(Army_Car, "Car_Wall_10");
SUnit_Car_Wall_11 = script_unit:new(Army_Car, "Car_Wall_11");
SUnit_Car_Art_01 = script_unit:new(Army_Car, "Car_Art_01");
SUnit_Car_Art_02 = script_unit:new(Army_Car, "Car_Art_02");
SUnit_Car_Art_03 = script_unit:new(Army_Car, "Car_Art_03");
SUnit_Car_Art_04 = script_unit:new(Army_Car, "Car_Art_04");
SUnit_Car_Ele_01 = script_unit:new(Army_Car, "Car_Ele_01");

-- All Carthaginian units

Unitcontroller_Car_All = unitcontroller_from_army(Army_Car);
Unitcontroller_Car_All:take_control();

Unitcontroller_Car_Nearly_All = Army_Car:create_unit_controller();

for i = 1, Units_Car:count()-1 do
	Unitcontroller_Car_Nearly_All:add_units(Units_Car:item(i));
end;

Unitcontroller_Car_Nearly_All:take_control();

--
-- Buildings
--

Building_Wall_Breach_Point_01 = get_building_near(35, -245);
Building_Wall_Breach_Point_02 = get_building_near(-5, -207);
Building_Wall_Breach_Point_03 = get_building_near(-810, -180);		-- West script

Building_Wall_Dock_Point_Main = get_building_near(-240, -150);
Building_Wall_Dock_Point_East = get_building_near(-120, -150);
Building_Wall_Dock_Point_Mid = get_building_near(-492, -267);
Building_Wall_Dock_Point_6 = get_building_near(-608, -324);
Building_Wall_Dock_Point_5 = get_building_near(-680, -324); 
--Building_Wall_Dock_Point_5 = get_building_near(-700, -324); 

Building_Carthaginian_Tower = get_building_near(-122, 50);

Building_Rom_Boat_Target_Wall_01 = get_building_near(-370, -150);
Building_Rom_Boat_Target_Wall_02 = get_building_near(-330, -150);
Building_Rom_Boat_Target_Wall_03 = get_building_near(-180, -150);
Building_Rom_Boat_Target_Wall_04 = get_building_near(-70, -150);

Rom_Boat_Targets_Wall = {
	Building_Rom_Boat_Target_Wall_01:position(),
	Building_Rom_Boat_Target_Wall_02:position(),
	Building_Rom_Boat_Target_Wall_03:position(),
	Building_Rom_Boat_Target_Wall_04:position()
};

Building_Rom_Boat_Target_Int_01_01 = get_building_near(-253, -65);
Building_Rom_Boat_Target_Int_01_02 = get_building_near(-210, -80);
Building_Rom_Boat_Target_Int_01_03 = get_building_near(-180, -30);
Building_Rom_Boat_Target_Int_01_04 = get_building_near(-38, -108);
Building_Rom_Boat_Target_Int_01_05 = get_building_near(5, -122);
Building_Rom_Boat_Target_Int_01_06 = get_building_near(5, -97);

Rom_Boat_Targets_Int_01 = {
	Building_Rom_Boat_Target_Int_01_01:position(),
	Building_Rom_Boat_Target_Int_01_02:position(),
	Building_Rom_Boat_Target_Int_01_03:position(),
	Building_Rom_Boat_Target_Int_01_04:position(),
	Building_Rom_Boat_Target_Int_01_05:position(),
	Building_Rom_Boat_Target_Int_01_06:position()
};

Building_Rom_Boat_Target_Int_02_01 = get_building_near(-253, -20);
Building_Rom_Boat_Target_Int_02_02 = get_building_near(-250, 10);
Building_Rom_Boat_Target_Int_02_03 = get_building_near(-200, 15);
Building_Rom_Boat_Target_Int_02_04 = get_building_near(-105, -12);
Building_Rom_Boat_Target_Int_02_05 = get_building_near(-12, -12);
Building_Rom_Boat_Target_Int_02_06 = get_building_near(-41, -14);
Building_Rom_Boat_Target_Int_02_07 = get_building_near(20, 2);
Building_Rom_Boat_Target_Int_02_08 = get_building_near(18, -32);

Rom_Boat_Targets_Int_02 = {
	Building_Rom_Boat_Target_Int_02_01:position(),
	Building_Rom_Boat_Target_Int_02_02:position(),
	Building_Rom_Boat_Target_Int_02_03:position(),
	Building_Rom_Boat_Target_Int_02_04:position(),
	Building_Rom_Boat_Target_Int_02_05:position(),
	Building_Rom_Boat_Target_Int_02_06:position(),
	Building_Rom_Boat_Target_Int_02_07:position(),
	Building_Rom_Boat_Target_Int_02_08:position()
};

-- make all buildings invulnerable to damage
Buildings = bm:buildings();

function Make_Buildings_Invulnerable(bm, start_point, callback)
	local number_of_buildings = Buildings:count();

	if start_point > number_of_buildings then
		bm:out("Make_Buildings_Invulnerable :: processed " .. start_point - 1 .. " buildings");
		
		callback();
		
		return;
	end;

	local end_point = 0;

	if number_of_buildings <= (start_point + 100) then
		end_point = number_of_buildings;
	else
		end_point = start_point + 100;
	end;
	
	--bm:out("Make_Buildings_Invulnerable :: processing buildings " .. start_point .. " to " .. end_point);

	for i = start_point, end_point do
		local building = Buildings:item(i);
	
		building:change_is_destructible(false);
	end;
	
	bm:callback(function() Make_Buildings_Invulnerable(bm, end_point + 1, callback) end, 200);
end;


function All_Buildings_Now_Invulnerable()
	-- make breach point vulnerable again	
	Building_Wall_Breach_Point_02:change_is_destructible(true);
	Building_Wall_Breach_Point_03:change_is_destructible(true);
	Building_Wall_Breach_Point_03:destroy();
end;

Make_Buildings_Invulnerable(bm, 1, function() All_Buildings_Now_Invulnerable() end);



--
-- Siege Equipment
--

assault_equipment = bm:assault_equipment();

Siege_Tower_01 = assault_equipment:vehicle_item(1);
Siege_Tower_02 = assault_equipment:vehicle_item(2);
Siege_Tower_03 = assault_equipment:vehicle_item(3);
Siege_Tower_04 = assault_equipment:vehicle_item(4);
Siege_Tower_05 = assault_equipment:vehicle_item(5);

assault_equipment_table = {
	Siege_Tower_01,
	Siege_Tower_02,
	Siege_Tower_03,
	Siege_Tower_04,
	Siege_Tower_05
};







C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\e3_carthage\e3_boats.lua
--
-- Roman Boats
--


Pos_Rom_Harbour_01_Attack = v(68,-460)
Orient_Rom_Harbour_01_Attack = r_to_d(-0.105174)
Width_Rom_Harbour_01_Attack = 97.9342

Pos_Rom_Harbour_02_Attack = v(-35.4,-492.87)
Orient_Rom_Harbour_02_Attack = r_to_d(-0.396)
Width_Rom_Harbour_02_Attack = 77

Pos_Rom_Harbour_03_Attack = v(-140.3,-544)
Orient_Rom_Harbour_03_Attack = r_to_d(-0.5)
Width_Rom_Harbour_03_Attack = 77


function Advance_Roman_Siege_Ships()
	SUnit_Rom_Harbour_01.uc:guard_mode(true);
	SUnit_Rom_Harbour_02.uc:guard_mode(true);
	SUnit_Rom_Harbour_03.uc:guard_mode(true);
	
	SUnit_Rom_Harbour_01.uc:goto_location_angle_width(Pos_Rom_Harbour_01_Attack, Orient_Rom_Harbour_01_Attack, Width_Rom_Harbour_01_Attack);
	SUnit_Rom_Harbour_02.uc:goto_location_angle_width(Pos_Rom_Harbour_02_Attack, Orient_Rom_Harbour_02_Attack, Width_Rom_Harbour_02_Attack);
	SUnit_Rom_Harbour_03.uc:goto_location(v(-140, -600));

	bm:callback(function() SUnit_Rom_Harbour_03.uc:goto_location_angle_width(Pos_Rom_Harbour_03_Attack, Orient_Rom_Harbour_03_Attack, Width_Rom_Harbour_03_Attack) end, 25000);
	
	bm:watch(function() return SUnit_Rom_Harbour_01.unit:position():distance_xz(Pos_Rom_Harbour_01_Attack) < 10 end, 5000, function() Rom_Harbour_01_In_Position() end);
	bm:watch(function() return SUnit_Rom_Harbour_02.unit:position():distance_xz(Pos_Rom_Harbour_02_Attack) < 10 end, 5000, function() Rom_Harbour_02_In_Position() end);
	bm:watch(function() return SUnit_Rom_Harbour_03.unit:position():distance_xz(Pos_Rom_Harbour_03_Attack) < 10 end, 5000, function() Rom_Harbour_03_In_Position() end);
end;


function Rom_Harbour_01_In_Position()
	Building_Wall_Breach_Point_01:change_is_destructible(true);
	SUnit_Rom_Harbour_01.uc:attack_building(Building_Wall_Breach_Point_01);
	bm:callback(function() Building_Wall_Breach_Point_01:change_is_destructible(false) end, 1000);
end;


function Rom_Harbour_02_In_Position()
	Rom_Harbour_02_Fires_On_Wall_Breach();
	
	bm:watch(function() return Building_Wall_Breach_Point_02:health() < 0.6 end, 0, function() Building_Wall_Breach_Point_02:change_is_destructible(false) end, "Breach_Point_HP_Watch");
end;


function Rom_Harbour_03_In_Position()
	Rom_Harbour_03_Fires_On_Beach();
end;


Rom_Art_Harbour_01 = {
	v(125, 15, -105),
	v(110, 15, -118)
};


Rom_Art_01_Docks_Target_List = {
	v(-20, 7, -25),
	v(-5, 7, -27)
};


Rom_Art_Harbour_02 = {
	v(-15, 20, -450),
	v(-46, 20, -467),
	v(-79, 20, -480)
};


Rom_Art_Harbour_03 = {
	v(-123, 20, -502),
	v(-154, 20, -519),
	v(-185, 20, -535)	
};
	

Rom_Art_02_Beach_Target_List = {
	v(-20, 14, -208)
};

	
Rom_Art_03_Beach_Target_List = {
	v(-362, 20, -160),
	v(-335, 20, -160),
	v(-172, 20, -160),
	v(-73, 20, -160)
};


Rom_Art_Int_01_Target_List = {
	v(-242, 16, -75),
	v(-256, 25, -91),
	v(-209, 32, -79),
	v(-177, 20, -80),
	v(-162, 27, -102),
	v(-8, 20, -143),
	v(15, 14, -91)
};


Rom_Art_Int_02_Target_List = {
	v(-129, 28, -75),
	v(-104, 30, -85),
	v(-85, 32, -85),
	v(-5, 12, -45),
	v(18, 10, -40),
	v(-95, 20, -30),
	v(-235, 18, -35),
	v(-220, 18, -28)
};

function Rom_Harbour_02_Fires_On_Wall_Breach()
	Start_Art_Cluster(SUnit_Rom_Harbour_02, Rom_Art_Harbour_02, nil, Rom_Art_02_Beach_Target_List, 8000, 2, 10);
end;


function Rom_Harbour_02_Fires_On_Beach()
	Start_Art_Cluster(SUnit_Rom_Harbour_02, Rom_Art_Harbour_02, nil, Rom_Art_03_Beach_Target_List, 8000, 30, 60);
end;


function Rom_Harbour_03_Fires_On_Beach()
	Start_Art_Cluster(SUnit_Rom_Harbour_03, Rom_Art_Harbour_03, nil, Rom_Art_03_Beach_Target_List, 8000, 30, 60);
end;


function Boats_Fire_Inside_City_01()
	Start_Art_Cluster(SUnit_Rom_Harbour_02, Rom_Art_Harbour_02, nil, Rom_Art_Int_01_Target_List, 10000, 30, 60);
	Start_Art_Cluster(SUnit_Rom_Harbour_03, Rom_Art_Harbour_03, nil, Rom_Art_Int_01_Target_List, 10000, 30, 60);
end;


function Boats_Fire_Inside_City_02()	
	Start_Art_Cluster(SUnit_Rom_Harbour_02, Rom_Art_Harbour_02, nil, Rom_Art_Int_02_Target_List, 10000, 30, 60);
	Start_Art_Cluster(SUnit_Rom_Harbour_03, Rom_Art_Harbour_03, nil, Rom_Art_Int_02_Target_List, 10000, 30, 60);
end;


function Rom_Harbour_01_Fires_On_Docks()
	Start_Art_Cluster(SUnit_Rom_Harbour_01, Rom_Art_Harbour_01, nil, Rom_Art_01_Docks_Target_List, 6000, 8, 10);
end;


function Stop_Rom_Harbour_01_Firing_On_Docks()
	Stop_Art_Cluster(SUnit_Rom_Harbour_01.name);
end;


POS_Car_Art_01_01 = v(-414, 32, -79);
POS_Car_Art_01_02 = v(-421, 32, -82);
POS_Car_Art_01_03 = v(-428, 32, -85);
POS_Car_Art_01_04 = v(-435, 32, -88);

Car_Art_01 = {
	POS_Car_Art_01_01,
	POS_Car_Art_01_02,
	POS_Car_Art_01_03,
	POS_Car_Art_01_04
};

POS_Car_Art_02_01 = v(-319, 20, 72);
POS_Car_Art_02_02 = v(-327, 20, 71);
POS_Car_Art_02_03 = v(-334, 20, 69);
POS_Car_Art_02_04 = v(-342, 20, 67);

Car_Art_02 = {
	POS_Car_Art_02_01,
	POS_Car_Art_02_02,
	POS_Car_Art_02_03,
	POS_Car_Art_02_04
};

POS_Car_Art_03_01 = v(-321, 20, 102);
POS_Car_Art_03_02 = v(-329, 20, 100);
POS_Car_Art_03_03 = v(-337, 20, 98);
POS_Car_Art_03_04 = v(-345, 20, 96);

Car_Art_03 = {
	POS_Car_Art_03_01,
	POS_Car_Art_03_02,
	POS_Car_Art_03_03,
	POS_Car_Art_03_04
};

POS_Car_Art_04_01 = v(22, 10, 72);
POS_Car_Art_04_02 = v(14, 10, 72);
POS_Car_Art_04_03 = v(6, 10, 72);
POS_Car_Art_04_04 = v(-2, 10, 72);

Car_Art_04 = {
	POS_Car_Art_04_01,
	POS_Car_Art_04_02,
	POS_Car_Art_04_03,
	POS_Car_Art_04_04
};

POS_Car_Art_05_01 = v(-170, 18, 108);
POS_Car_Art_05_02 = v(-178, 18, 108);
POS_Car_Art_05_03 = v(-186, 18, 108);
POS_Car_Art_05_04 = v(-194, 18, 108);

Car_Art_05 = {
	POS_Car_Art_05_01,
	POS_Car_Art_05_02,
	POS_Car_Art_05_03,
	POS_Car_Art_05_04
};

Art_01_Target_List = {
	SUnit_Rom_Beach_03,
	SUnit_Rom_Beach_04,
	SUnit_Rom_Beach_05,
	SUnit_Rom_Beach_06,
	SUnit_Rom_Main_03,
	SUnit_Rom_Main_04,
	SUnit_Rom_Main_10
}

Art_01_Target_Backup = {
	v(-310, -254),
	v(-300, -290),
	v(-315, -220),
	v(-350, -320),
	v(-300, -340)
};

Art_02_Target_List = Art_01_Target_List;
Art_03_Target_List = Art_01_Target_List;

Art_02_Target_Backup = Art_01_Target_Backup;
Art_03_Target_Backup = Art_01_Target_Backup;

Art_04_Target_List = {
	SUnit_Rom_Main_13,
	SUnit_Rom_Main_06
};

Art_04_Target_Backup = {
	v(-75, -270),
	v(-35, -300),
	v(-75, -230)
};

Art_05_Target_List = {
	SUnit_Rom_Beach_01,
	SUnit_Rom_Beach_02,
	SUnit_Rom_Main_11,
	SUnit_Rom_Main_12
};

Art_05_Target_Backup = {
	v(-190, -330),
	v(-220, -325),
	v(-200, -305)
};

-- supersafe mode
BOOL_Dont_Risk_Hitting_Siege_Tower = false;

function Start_Car_Artillery()
	bm:out("Starting Carthaginian artillery");
	
	Start_Art_Cluster(SUnit_Car_Art_01, Car_Art_01, Art_01_Target_List, Art_01_Target_Backup, 10000, 30, 60);
	Start_Art_Cluster(SUnit_Car_Art_02, Car_Art_02, Art_02_Target_List, Art_02_Target_Backup, 10000, 30, 60);
	Start_Art_Cluster(SUnit_Car_Art_03, Car_Art_03, Art_03_Target_List, Art_03_Target_Backup, 10000, 30, 60);
	Start_Art_Cluster(SUnit_Car_Art_04, Car_Art_04, Art_04_Target_List, Art_04_Target_Backup, 10000, 30, 60);
	Start_Art_Cluster("SUnit_Car_Art_05", Car_Art_05, Art_05_Target_List, Art_05_Target_Backup, 10000, 30, 60);
end;


function Start_Art_Cluster(sunit, art_list, target_list, backup_target_list, reload_time, max_offset_from_target, min_distance_to_tower)
	local cluster_name = "";
	
	if is_scriptunit(sunit) then
		cluster_name = sunit.name;
		
		sunit.uc:set_invincible(true);
	else
		cluster_name = sunit;
	end;
	
	Stop_Art_Cluster(cluster_name);
		

	for i = 1, #art_list do
		local start_offset = (math.random(0, 100) * 100);
		
		-- bm:out("Starting artillery cluster " .. cluster_name .. ", piece " .. i .. " in " .. start_offset .. "ms");
			
		bm:callback(
			function()						
				bm:repeat_callback(
					function()
						if BOOL_Dont_Risk_Hitting_Siege_Tower or not target_list then
							Fire_Art_Piece(bm, cluster_name..tostring(i), art_list[i], backup_target_list[math.random(1, #backup_target_list)], backup_target_list, max_offset_from_target, min_distance_to_tower);
						else
							Fire_Art_Piece(bm, cluster_name..tostring(i), art_list[i], target_list[math.random(1, #target_list)].unit:position(), backup_target_list, max_offset_from_target, min_distance_to_tower);
						end;
					end,
					reload_time,
					cluster_name .. "_Artillery"
				);
			end, 
			start_offset,
			cluster_name .. "_Artillery"
		);
	end;
end;


function Stop_Art_Cluster(sunit_name)
	bm:remove_process(sunit_name .. "_Artillery");
end;


function Fire_Art_Piece(bm, name, source, target_unit_pos, backup_target_list, max_offset_from_target, min_distance_to_tower)

	local target_pos = nil;
				
	if target_unit_pos:get_y() < 0 then
		target_pos = v(target_unit_pos:get_x(), 0, target_unit_pos:get_z());
	else
		target_pos = target_unit_pos;
	end;
	
	local target_pos_with_offset = get_position_near_target(target_pos, 0, max_offset_from_target);
	
	-- if the position we've picked is too close to any siege towers then re-enter this function with a position from the backup target list
	for i = 1, #assault_equipment_table do
		if target_pos_with_offset:distance_xz(assault_equipment_table[i]:position()) < min_distance_to_tower then
			Fire_Art_Piece(bm, name, source, backup_target_list[math.random(1, #backup_target_list)], backup_target_list, max_offset_from_target, min_distance_to_tower)
			
			return;
		end;
	end;
	
	--bm:out("triggering projectile " .. name .. " launch from " .. v_to_s(source) .. " to " .. v_to_s(target_pos_with_offset));
	
	bm:trigger_projectile_launch("rock_large_flammable", source, target_pos_with_offset);
end;






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\e3_carthage\e3_common.lua

--
-- Ship beaching behaviour
--


-- Send the ship to the shore along the supplied path
function Beach_Ship(bm, ship, sea_path, beach_path, callback, is_close_formation)

	local next_position = sea_path:get_next();
	
	if not next_position then
		Land_Ship_On_Shore(bm, ship, beach_path, callback);
		
		return;
	else
		ship.uc:goto_location(next_position);
		if not is_close_formation then
			ship.uc:loose_formation(false);
		end;
		
		bm:watch(function() return ship.unit:position():distance_xz(next_position) < 40 end, 1000, function() Beach_Ship(bm, ship, sea_path, beach_path, callback, true) end, ship.name .. "_Beaching");
	end;
end;


-- The ship has arrived offshore, give it the disembark order
function Land_Ship_On_Shore(bm, ship, beach_path, callback)

	ship.uc:perform_special_ability("dismount");

	--bm:watch(function() return ship.unit:is_idle() end, 0, function() bm:out("Script now thinks " .. ship.name .. " is idle -> in 25s the unit will be sent onwards") end);
	bm:watch(function() return ship.unit:is_idle() end, 25000, function() Move_Unit_Up_Beach(bm, ship, beach_path, callback, true) end, ship.name .. "_Beaching");
end;


-- The unit is now off the ship, move it up the beach to the beach_pos and then activate the callback
function Move_Unit_Up_Beach(bm, ship, beach_path, callback, is_first)

	--bm:out(ship.name .. " is moving up the beach");

	local next_loc = beach_path:get_next();
	
	if not next_loc then
		if callback then 
			callback();
			
			return;
		end;
	else
		local should_run = true;
		
		if next_loc.speed == false then
			should_run = false;
		end;
		
		if is_number(next_loc.bearing) then
			if is_first then
				ship.uc:goto_location_angle_width_q(next_loc.position, next_loc.bearing, next_loc.width, should_run);
			else
				ship.uc:goto_location_angle_width(next_loc.position, next_loc.bearing, next_loc.width, should_run);
			end;
		else
			if is_first then
				ship.uc:goto_location_q(next_loc.position, should_run);
			else
				ship.uc:goto_location(next_loc.position, should_run);
			end;
		end;
		
		bm:watch(function() return ship.unit:position():distance_xz(next_loc.position) < 30 end, 0, function() Move_Unit_Up_Beach(bm, ship, beach_path, callback, false) end, ship.name .. "_Beaching");
	end;
end;



function Stop_Beaching(bm, sunit)
	bm:remove_process(sunit.name .. "_Beaching");
end;


--
-- Siege tower docking behaviour
--

function Use_Siege_Tower(bm, sunit, siege_tower, building, callback, docking_callback)
	bm:out(sunit.name .. " is being told to go and pick up a siege tower at " .. v_to_s(siege_tower:position()));
	
	sunit.uc:occupy_vehicle(siege_tower, true);
	sunit.uc:set_invincible(true);
	
	bm:watch(
		function() 
			return sunit.unit:is_idle() 
		end, 
		0, 
		function() 
			bm:out(sunit.name .. " reckons it has now picked its siege tower up, in 10s we go to the walls");
			bm:callback(function() Push_Siege_Tower_To_Wall(bm, sunit, siege_tower, building, callback, docking_callback) end, 15000);
		end
	);
end;


function Push_Siege_Tower_To_Wall(bm, sunit, siege_tower, building, callback, docking_callback)

	-- Failsafe :: test that the sunit position is the same as the siege tower position.
	-- Sometimes the unit fails to get on the siege tower and we get through to here.
	-- If this happens grab the siege tower instead.
	
	if not (math.floor(sunit.unit:position():get_x()) == math.floor(siege_tower:position():get_x()) and
		math.floor(sunit.unit:position():get_z()) == math.floor(siege_tower:position():get_z())) then
		
		bm:out("WARNING :: " .. sunit.name .. " was instructed to push a siege tower to the wall but is not on top of it. Will try to grab the siege tower instead and go around again");
		bm:out("\t\t" .. sunit.name .. " is at " .. v_to_s(sunit.unit:position()) .. " and the target siege tower is at " .. v_to_s(siege_tower:position()));
		
		Use_Siege_Tower(bm, sunit, siege_tower, building, callback, docking_callback);
		
		return;
	end;


	if docking_callback then
		docking_callback();
	end;

	bm:out(sunit.name .. " pushing siege tower to wall");
	
	bm:out(sunit.name .. " is at " .. v_to_s(sunit.unit:position()) .. " and siege tower is at " .. v_to_s(siege_tower:position()));
	
	sunit.uc:attack_building(building);
	
	bm:watch(
		function() 
			return siege_tower:position():distance_xz(building:position()) < 30
		end, 
		0, 
		function() 
			bm:out(sunit.name .. " has a siege tower within 30m of the wall, going to next phase in 30 seconds!"); 
			
			-- if the unit was not invincible before picking up the siege tower via unit_max_casualties then set it to be not invincible again
			if not sunit.is_invincible_e3 then
				sunit.uc:set_invincible(false);
			end;
			
			bm:callback(function() callback() end, 30000) 
		end
	);
end;








function Move_To_Attack(bm, sunit, position, orientation, width, target_sunit, engage_distance, engage_callback, rout_proportion, rout_callback)
	sunit.uc:goto_location_angle_width(position, orientation, width, true);
	--bm:repeat_callback(function() sunit.uc:goto_location_angle_width(position, orientation, width, true) end, 10000, sunit.name .. "_Move_To_Attack");
	
	bm:watch(function() return sunit.unit:position():distance(target_sunit.unit:position()) < engage_distance end, 0, function() Move_To_Attack_Engage(bm, sunit, target_sunit, rout_proportion, engage_callback, rout_callback) end, sunit.name .. "_Move_To_Attack");
end;


function Move_To_Attack_Engage(bm, sunit, target_sunit, rout_proportion, engage_callback, rout_callback)
	bm:remove_process(sunit.name .. "_Move_To_Attack");

	bm:out(sunit.name .. " is moving to attack " .. target_sunit.name);
	
	if engage_callback then
		engage_callback();
	end;
	
	sunit.uc:attack_unit(target_sunit.unit, true, true);
	bm:callback(function() target_sunit.uc:attack_unit(sunit.unit, true, true) end, 4000, sunit.name .. "_Move_To_Attack");
	
	if rout_callback then
		if not is_number(rout_proportion) or rout_proportion < 0 or rout_proportion > 1 then
			bm:out("Warning:: assigned to watch a Move_To_Attack fight but the rout proportion is invalid. Source unit is " .. sunit.name .. ", target is " .. target_sunit.name .. " and rout_proportion is " .. tostring(rout_proportion));
			
			return;
		end;
	
		bm:watch(function() return is_routing_or_dead(target_sunit.unit) or unit_proportion_alive(target_sunit.unit) < rout_proportion end, 0, function() target_sunit.uc:morale_behavior_rout(); rout_callback() end, sunit.name .. "_Move_To_Attack");
	end;
end;




function kill_on_rout(bm, sunit)
	--bm:watch(function() return is_routing_or_dead(sunit.unit) end, 0, function() bm:out(sunit.name .. " is routing, killing it"); kill_on_rout_Action(bm, sunit) end);
end;


function Really_kill_on_rout(bm, sunit)
	bm:watch(function() return is_routing_or_dead(sunit.unit) end, 0, function() bm:out(sunit.name .. " is routing, killing it"); kill_on_rout_Action(bm, sunit) end);
end;



function kill_on_rout_Action(bm, sunit)
	if unit_proportion_alive(sunit.unit) > 0 then
		kill_unit_proportion(sunit.unit, 0.1);
		
		bm:callback(function() kill_on_rout_Action(bm, sunit) end, 1000);
	end;
end;



function Fade_Volume(bm, volume_type, start_value, end_value, t)
	local steps = math.floor(t * 10);
	local volume_step = (start_value - end_value) / steps;
	local new_volume = 0;
		
	for i = 1, steps do
		bm:callback(
			function()
				new_volume = math.floor(start_value - (volume_step * i));
				bm:out("Changing volume type " .. volume_type .. " to " .. new_volume);
				bm:set_volume(volume_type, math.floor(volume_step * i));
			end,
			(i * 100)
		);
	end;
	
	bm:callback(function() bm:set_volume(volume_type, end_volume) end, t);
end;



BOOL_Boat_Intro_Is_Playing = false;
BOOL_Elephant_Outro_Is_Playing = false;

function Esc_Key_Pressed()
	bm:out("Escape key has been pressed");
	
	if BOOL_Boat_Intro_Is_Playing then
		bm:out("Skipping boat intro");
		End_Boat_Intro_Cutscene(true);
	elseif BOOL_Elephant_Outro_Is_Playing then
		bm:out("Skipping elephant outro");
	end;
end;


-- location stuff
location = {
	position = nil,
	bearing = nil,
	width = nil,
	speed = nil
};

function location:new(new_pos, new_bearing, new_width, new_speed)
	
	-- type check our startup parameters

	if not is_vector(new_pos) then
		return false;
	end;
	
	loc = {};
	setmetatable(loc, self);
	
	self.__index = self;
	self.__tostring = function() return TYPE_LOCATION end;
	
	loc.position = new_pos;
	
	if is_number(new_bearing) and is_number(new_width) then
		loc.bearing = new_bearing;
		loc.width = new_width;
	end;
	
	if not is_nil(new_speed) then
		loc.speed = new_speed;
	end;
	
	return loc;
end;







C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\e3_carthage\e3_effects.lua

BOOL_Show_Smoke_Effects = true;

function Start_Initial_Effects()
	if BOOL_Show_Smoke_Effects then
		bm:out("Start_Initial_Effects");
		bm:start_terrain_effect("Smoke_Large_West_1")
		bm:start_terrain_effect("Fire_Smoke_Large_East_1")
		bm:start_terrain_effect("Beach_Fire_Small_East_1")
		bm:start_terrain_effect("Beach_Fire_Small_East_2")
		bm:start_terrain_effect("Beach_Fire_Small_east_3")
		--bm:start_terrain_effect("Beach_Fire_Small_East_4")
		bm:start_terrain_effect("Beach_Fire_Small_West_1")
	end;
end;

----------------------------------------------------------------
---------------------------- EAST ------------------------------
----------------------------------------------------------------

function Start_East_Effects_Phase_1()
	if BOOL_Show_Smoke_Effects then
		bm:out("Start_East_Effects_Phase_1");
		bm:start_terrain_effect("Fire_Smoke_Small_East_1")
		bm:start_terrain_effect("Fire_Smoke_Small_East_2")
		bm:start_terrain_effect("Fire_Smoke_Small_East_3")
		bm:start_terrain_effect("Smoke_Large_Faint_West_1")
		bm:start_terrain_effect("Smoke_Centre_2")
	end;
end;

function Start_East_Effects_Phase_2()
	if BOOL_Show_Smoke_Effects then
		bm:out("Start_East_Effects_Phase_2");
		bm:start_terrain_effect("Fire_Smoke_Large_East_3")
		bm:start_terrain_effect("Fire_Smoke_Large_East_4")
		bm:start_terrain_effect("Fire_Smoke_Large_East_6")
		bm:start_terrain_effect("Smoke_Centre_1")
	end;
end;

function Start_East_Effects_Phase_3()
	if BOOL_Show_Smoke_Effects then
		bm:out("Start_East_Effects_Phase_3");
		bm:start_terrain_effect("Fire_Smoke_Large_East_5")
		bm:start_terrain_effect("Fire_Smoke_Large_East_2")
		bm:start_terrain_effect("Fire_Smoke_Small_East_5")
		bm:start_terrain_effect("Fire_Smoke_Small_East_4")
	end;
end;

----------------------------------------------------------------
---------------------------- WEST ------------------------------
----------------------------------------------------------------


function Start_West_Effects_Phase_1()
	if BOOL_Show_Smoke_Effects then
		bm:out("Start_West_Effects_Phase_1");
		bm:start_terrain_effect("Smoke_Giant_West_1")
		bm:start_terrain_effect("Smoke_Large_Faint_West_2")
	end;
end;

function Start_West_Effects_Phase_2()
	if BOOL_Show_Smoke_Effects then
		bm:out("Start_West_Effects_Phase_2");
		bm:start_terrain_effect("Smoke_Large_Faint_West_3")
	end;
end;

function Start_West_Effects_Phase_3()
	if BOOL_Show_Smoke_Effects then
		bm:out("Start_West_Effects_Phase_3");
		bm:start_terrain_effect("Smoke_Large_Faint_West_5")
		bm:start_terrain_effect("Smoke_Large_Faint_West_4")
	end;
end;

----------------------------------------------------------------
---------------------------- NORTH -----------------------------
----------------------------------------------------------------

function Start_North_Effects()
	if BOOL_Show_Smoke_Effects then
		bm:out("Start_North_Effects");
		bm:start_terrain_effect("Smoke_Giant_North_1")
		bm:start_terrain_effect("Smoke_Large_Faint_North_1")
		bm:start_terrain_effect("Smoke_Large_Faint_North_2")
		bm:start_terrain_effect("Smoke_Large_North_1")
		bm:start_terrain_effect("Smoke_Large_North_2")
		bm:start_terrain_effect("Fire_Large_North_1")
		bm:start_terrain_effect("Fire_Large_North_2")
		bm:start_terrain_effect("Fire_Large_North_3")
		bm:start_terrain_effect("Fire_Large_North_4")
		
	end;
end;






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\e3_carthage\e3_main.lua
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-- Battle of E3_Carthage -- <authorname>
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

battle_name = "E3_Carthage"

system.ClearRequiredFiles();

package.path = package.path .. ";data/Script/" .. battle_name .. "/?.lua"

--require "Scripting_Library_Header";
require "lua_scripts.Battle_Script_Header";

bm = battle_manager:new(empire_battle:new()); --set to true to enable debug output

subtitles = bm:subtitles();
subtitles:clear();
cam = bm:camera();

bm:out("==============");
bm:out("==============");
bm:out("==============");
bm:out("Script started: Battle of " .. battle_name);
bm:out("==============");

require "E3_Common";
require "E3_Armies";
require "E3_West";
require "E3_Town";
require "E3_Effects";
require "E3_Scripted_Audio";
require "E3_Patrol_Managers";
require "E3_Boats";

-----------------------------------------------------------
-- Script Start
-----------------------------------------------------------

bm:set_music_auto_playback(false);

POS_play_sound = v(0, 0);

cam:fade(true, 0.0);

bm:register_phase_change_callback("Deployment", function() Deployment_Phase() end);
bm:setup_battle(function() Start_Battle() end);

function Deployment_Phase()
	bm:out("Deployment phase is being called");
	
	-- specific seed for the RN generator
	math.randomseed(284961);
	
	Start_Initial_Effects();
	
	bm:set_volume(VOLUME_TYPE_SFX, 0);
	bm:set_volume(VOLUME_TYPE_VO, 0);
	bm:set_volume(VOLUME_TYPE_MUSIC, 100);

	-- Set all ships to loose formation
	Unitcontroller_Rom_01_All:loose_formation(true);
	SUnit_Rom_Harbour_01.uc:loose_formation(true);
	SUnit_Rom_Harbour_02.uc:loose_formation(true);
	SUnit_Rom_Harbour_03.uc:loose_formation(true);
	
	-- Roman attackers on beach onto palisades
	SUnit_Rom_Beach_01.uc:occupy_zone(v(-216, -260), true);
	SUnit_Rom_Beach_02.uc:occupy_zone(v(-216, -318), true);
	SUnit_Rom_Beach_03.uc:occupy_zone(v(-370, -418), true);
	SUnit_Rom_Beach_04.uc:loose_formation(false);
	SUnit_Rom_Beach_04.uc:occupy_zone(v(-308, -374), true);
	SUnit_Rom_Beach_05.uc:loose_formation(false);
	SUnit_Rom_Beach_05.uc:occupy_zone(v(-278, -346), true);
	SUnit_Rom_Beach_06.uc:occupy_zone(v(-408, -464), true);
	

	-- Carthaginian defenders onto walls
	SUnit_Car_Wall_01.uc:occupy_zone(v(0, -215), true);
	SUnit_Car_Wall_02.uc:occupy_zone(v(-40, -176), true);
	SUnit_Car_Wall_03.uc:occupy_zone(v(-140, -147), true);
	SUnit_Car_Wall_04.uc:occupy_zone(v(-235, -147), true);
	SUnit_Car_Wall_05.uc:occupy_zone(v(-410, -181), true);
	SUnit_Car_Wall_06.uc:occupy_zone(v(-488, -263), true);
	SUnit_Car_Wall_07.uc:occupy_zone(v(-535, -310), true);	
	SUnit_Car_Wall_08.uc:occupy_zone(v(-606, -327), true);
	SUnit_Car_Wall_09.uc:occupy_zone(v(-690, -327), true);	
	SUnit_Car_Wall_10.uc:occupy_zone(v(-775, -300), true);
	SUnit_Car_Wall_11.uc:occupy_zone(v(-330, -147), true);
		
	Hide_Elephants();
	
	bm:end_current_battle_phase();
end;


function Set_Up_Armies()
	-- Set Roman melee ammo to zero (no pilums)	
	SUnit_Rom_Main_01.unit:set_current_ammo_unary(0);
	SUnit_Rom_Main_04.unit:set_current_ammo_unary(0);
	SUnit_Rom_Main_05.unit:set_current_ammo_unary(0);
	SUnit_Rom_Main_06.unit:set_current_ammo_unary(0);
	SUnit_Rom_Main_07.unit:set_current_ammo_unary(0);
	SUnit_Rom_Main_08.unit:set_current_ammo_unary(0);
	SUnit_Rom_Main_09.unit:set_current_ammo_unary(0);
	SUnit_Rom_Main_10.unit:set_current_ammo_unary(0);
	SUnit_Rom_Main_12.unit:set_current_ammo_unary(0);
	SUnit_Rom_Main_13.unit:set_current_ammo_unary(0);
	SUnit_Rom_Main_14.unit:set_current_ammo_unary(0);
	SUnit_Rom_Main_15.unit:set_current_ammo_unary(0);
	
	-- Make Romans fearless
	Unitcontroller_Rom_01_All:morale_behavior_fearless();
	Unitcontroller_Rom_02_All:morale_behavior_fearless();

	-- Romans cant take too many casualties
	Limit_Roman_Casualties_Start()
	
	-- Turn on fire at will on all units
	Unitcontroller_Rom_01_All:fire_at_will(true);
	Unitcontroller_Rom_02_All:fire_at_will(true);
	Unitcontroller_Car_All:fire_at_will(true);

	-- And then off again for Carthaginian artillery
	SUnit_Car_Art_01.uc:fire_at_will(false);
	SUnit_Car_Art_02.uc:fire_at_will(false);
	SUnit_Car_Art_03.uc:fire_at_will(false);
	SUnit_Car_Art_04.uc:fire_at_will(false);
	
	-- Cavalry invulnerable	
	SUnit_Rom_West_13.uc:set_invincible(true);
	SUnit_Rom_West_14.uc:set_invincible(true);
	SUnit_Rom_West_15.uc:set_invincible(true);
	SUnit_Rom_West_16.uc:set_invincible(true);
	
	-- Set up wall defenders
	SUnit_Car_Wall_01.uc:morale_behavior_fearless();
	SUnit_Car_Wall_02.uc:morale_behavior_fearless();
	SUnit_Car_Wall_03.uc:morale_behavior_fearless();
	SUnit_Car_Wall_04.uc:morale_behavior_fearless();
	SUnit_Car_Wall_05.uc:morale_behavior_fearless();
	
	unit_max_casualties(SUnit_Car_Wall_03, 0.8);
	unit_max_casualties(SUnit_Car_Wall_04, 0.8);
end;


function Limit_Roman_Casualties_Start()
	unit_max_casualties(SUnit_Rom_Main_01, 0.7);
	unit_max_casualties(SUnit_Rom_Main_02, 0.6);
	unit_max_casualties(SUnit_Rom_Main_03, 0.5);
	unit_max_casualties(SUnit_Rom_Main_04, 0.6);
	unit_max_casualties(SUnit_Rom_Main_05, 0.7);
	unit_max_casualties(SUnit_Rom_Main_06, 0.6);
	unit_max_casualties(SUnit_Rom_Main_07, 0.65);
	unit_max_casualties(SUnit_Rom_Main_08, 0.55);
	unit_max_casualties(SUnit_Rom_Main_09, 0.5);
	unit_max_casualties(SUnit_Rom_Main_10, 0.55);
	unit_max_casualties(SUnit_Rom_Main_11, 0.5);
	unit_max_casualties(SUnit_Rom_Main_12, 0.6);
	unit_max_casualties(SUnit_Rom_Main_13, 0.65);
	unit_max_casualties(SUnit_Rom_Main_14, 0.5);
	unit_max_casualties(SUnit_Rom_Main_15, 0.65);

	unit_max_casualties(SUnit_Rom_Beach_01, 0.6);
	unit_max_casualties(SUnit_Rom_Beach_02, 0.6);
	unit_max_casualties(SUnit_Rom_Beach_03, 0.6);
	unit_max_casualties(SUnit_Rom_Beach_04, 0.6);
	unit_max_casualties(SUnit_Rom_Beach_05, 0.6);
	unit_max_casualties(SUnit_Rom_Beach_06, 0.6);
end;


function Limit_Roman_Casualties_Town()
	unit_max_casualties(SUnit_Rom_Main_01, 0.55);
	unit_max_casualties(SUnit_Rom_Main_02, 0.4);
	unit_max_casualties(SUnit_Rom_Main_03, 0.45);
	unit_max_casualties(SUnit_Rom_Main_04, 0.4);
	unit_max_casualties(SUnit_Rom_Main_05, 0.55);
	unit_max_casualties(SUnit_Rom_Main_06, 0.45);
	unit_max_casualties(SUnit_Rom_Main_07, 0.45);
	unit_max_casualties(SUnit_Rom_Main_08, 0.5);
	unit_max_casualties(SUnit_Rom_Main_09, 0.45);
	unit_max_casualties(SUnit_Rom_Main_10, 0.45);
	unit_max_casualties(SUnit_Rom_Main_11, 0.45);
	unit_max_casualties(SUnit_Rom_Main_12, 0.5);
	unit_max_casualties(SUnit_Rom_Main_13, 0.4);
	unit_max_casualties(SUnit_Rom_Main_14, 0.45);
	unit_max_casualties(SUnit_Rom_Main_15, 0.4);

	unit_max_casualties(SUnit_Rom_Beach_01, 0.5);
	unit_max_casualties(SUnit_Rom_Beach_02, 0.5);
	unit_max_casualties(SUnit_Rom_Beach_03, 0.5);
	unit_max_casualties(SUnit_Rom_Beach_04, 0.5);
	unit_max_casualties(SUnit_Rom_Beach_05, 0.5);
end;


function Start_Battle()	
	bm:out("Battle is Starting");
	
	Set_Up_Armies();
	
	Prepare_For_Intro_Movie();
end;


function Prepare_For_Intro_Movie()
	-- steal focus and hide ui
	bm:enable_cinematic_camera(true);
	bm:steal_input_focus();
	bm:enable_cinematic_ui(true, false, false);
	
	cam:move_to(v(145.5, -4.3, -965.7), v(145, 2, -958.8), 0, false, 0);
	
	bm:callback(function() Play_Intro_Movie() end, 1500);
end;


function Play_Intro_Movie()
	BOOL_Senate_Intro_Is_Playing = true;
	
	local movie_name = "RomeII_Senators_Movie.ca_vp8";
	
	bm:out("Playing movie " .. movie_name);
	bm:play_music("music_R2_Placeholder_A");
	bm:play_movie(movie_name, false);
	
	
	bm:modify_battle_speed(0.5);
	
	-- lairy bit of script to make the scene end after 48100ms
	bm:callback(
		function()
			bm:modify_battle_speed(1);
			bm:callback(function() Intro_Movie_Has_Finished(false) end, 100, "Senate_Movie");
		end,
		24000,
		"Senate_Movie"
	);
		
	--bm:callback(function() Intro_Movie_Has_Finished(false) end, 48100, "Senate_Movie_Is_Playing");
	
	bm:callback(function() CheckIfMovieFinished() end, 100);
	--Intro_Movie_Has_Finished();
end;


BOOL_Test = false;


-- Checks if movie played every second, once finishes calls intro movie has finished function
function CheckIfMovieFinished()
	local movie_playing_poll_frequency = 100;	--check if movie played once a second
	bm:callback(
		function()
			local is_movie_playing = bm:is_movie_playing();
			
			if not BOOL_Test then
				bm:out("is_movie_playing is " .. tostring(is_movie_playing));
				BOOL_Test = true;
			end;
			
			if is_movie_playing then
				CheckIfMovieFinished();
			else
				bm:out("Skipping senate movie");
				Intro_Movie_Has_Finished(true);
			end;
		end,
		movie_playing_poll_frequency,
		"Senate_Movie"
	);
end;


function Intro_Movie_Has_Finished(was_skipped)
	if not BOOL_Senate_Intro_Is_Playing then
		return;
	end;
	
	bm:out("Intro movie has finished");
	bm:remove_process("Senate_Movie");
	
	bm:modify_battle_speed(1);
	
	BOOL_Senate_Intro_Is_Playing = false;
	
	Fade_Volume(bm, VOLUME_TYPE_SFX, 0, 100, 1);
	Fade_Volume(bm, VOLUME_TYPE_VO, 0, 100, 1);
	
	if was_skipped then
		bm:out("Senate movie was skipped, killing music immediately");
		bm:stop_music_custom_fade(0);
		bm:play_music("music_R2_Placeholder_B");
	else
		bm:out("Senate movie was not skipped, killing music in a bit");
		bm:callback(
			function() 
				bm:play_music("music_R2_Placeholder_B") 
			end, 
			800
		);
	end;
	
	Play_Boat_Intro_Cutscene();	
end;	


intro_sound = new_sfx("INTRO");

function Play_Boat_Intro_Cutscene()
	bm:out("Playing boat intro cutscene");
	
	cam:fade(false, 0.5);
	
	Launch_Beach_Invasion();
	Start_Roman_West_Assault();
	
	BOOL_Boat_Intro_Is_Playing = true;
	
	bm:steal_escape_key();
	
	bm:callback(function() play_sound(POS_play_sound, intro_sound) end, 19800, "Boat_Cutscene");

	bm:cindy_playback_no_camera("Script\\E3_Carthage\\cinematics\\intro\\Intro_Char.xml", true); 
	bm:cindy_playback("Script\\E3_Carthage\\cinematics\\intro\\Intro_01.xml", false); 
	bm:cindy_playback("Script\\E3_Carthage\\cinematics\\intro\\Intro_02.xml", false); 
	bm:cindy_playback("Script\\E3_Carthage\\cinematics\\intro\\Intro_03.xml", false); 
	bm:cindy_playback("Script\\E3_Carthage\\cinematics\\intro\\Intro_04.xml", false); 
	bm:cindy_playback("Script\\E3_Carthage\\cinematics\\intro\\Intro_05.xml", false, true);
	
	bm:callback(function() End_Boat_Intro_Cutscene(false) end, 32000, "Boat_Cutscene");
end;


POS_Final_Cam = v(-52.3, 18.5, -358.8);
Targ_Final_Cam = v(-47.5, 2, -671.3);

function End_Boat_Intro_Cutscene(was_skipped)
	bm:out("Ending boat intro cutscene");
	
	BOOL_Boat_Intro_Is_Playing = false;
	bm:release_escape_key();
	
	bm:remove_process("Boat_Cutscene");
	
	if was_skipped then
		cam:fade(true, 0);
		
		bm:callback(
			function() 
				bm:stop_cindy_playback(true);
				bm:stop_cindy_playback_no_camera(true);
						
				stop_sound(intro_sound);
		
				cam:move_to(Targ_Final_Cam, POS_Final_Cam, 0, false, 0);
			end,
			100
		);
		
		bm:callback(
			function() 
				cam:fade(false, 1);
				bm:enable_cinematic_camera(false);
				bm:enable_cinematic_ui(false, true, false);
				bm:enable_cinematic_ui(true, true, false);
				bm:release_input_focus();
			end, 
			500
		);
	else
		cam:move_to(v(-80.4, 3.3, -583.1), v(-81.3, 4.5, -574.0), 0, false, 30);
		cam:move_to(v(-83.5, 6.5, -564), v(-84.4, 7.7, -554.9), 3, true, 32);
		bm:callback(function() cam:move_to(Targ_Final_Cam, POS_Final_Cam, 5, false, 0) end, 2500);
			
		bm:callback(
			function()
				bm:enable_cinematic_camera(false);
				bm:enable_cinematic_ui(false, true, false);
				bm:enable_cinematic_ui(true, true, false);
				bm:release_input_focus();
			end,
			6500
		);
	end;
	
	-- Start Carthaginian artillery (turns off fire at will)
	Start_Car_Artillery();

	--bm:callback(function() Launch_Projectile_At_Carthaginian_Tower() end, 10000);
end;

	
	
function Hide_Elephants()
	SUnit_Car_Ele_01.uc:change_enabled(false);
	SUnit_Car_Ele_01.uc:set_invisible_to_all(true);
end;


function Show_Elephants()
	SUnit_Car_Ele_01.uc:change_enabled(true);
	SUnit_Car_Ele_01.uc:set_invisible_to_all(false);
end;



POS_Rom_Main_01_Beach_Tripwire_A = v(-233, -365);
POS_Rom_Main_01_Beach_Tripwire_B = v(-253, -377);

function Launch_Beach_Invasion()
	local Iter_Rom_Main_01_Waypoints_Sea = iterator:new({v(-173, -440)});
	
	local Loc_Rom_Main_01_Lower_Beach_01 = location:new(v(-235.8, -340.5), r_to_d(-0.496), 10.6);
	local Loc_Rom_Main_01_Lower_Beach_02 = location:new(v(-246, -273.3), r_to_d(0.15), 17.95);
	local Iter_Rom_Main_01_Waypoints_Lower_Beach = iterator:new({Loc_Rom_Main_01_Lower_Beach_01, Loc_Rom_Main_01_Lower_Beach_02});
	
	Beach_Ship(bm, SUnit_Rom_Main_01, Iter_Rom_Main_01_Waypoints_Sea, Iter_Rom_Main_01_Waypoints_Lower_Beach, function() Roman_General_Use_Siege_Tower() end);
	
	bm:watch(
		function() 
			return has_crossed_line(POS_Rom_Main_01_Beach_Tripwire_A, POS_Rom_Main_01_Beach_Tripwire_B, SUnit_Rom_Main_01.unit:position())
		end, 
		0, 
		function()
			PM_Rom_Beach_04_Lower_Beach:start();
			PM_Rom_Beach_05_Lower_Beach:start();
			bm:callback(function() Prepare_Mid_Beach_Attack() end, 10000);
		end
	);
	
	
	
	local Loc_Rom_Main_02_Lower_Beach_01 = location:new(v(-444.5,-465.5), r_to_d(0.17), 11.4);
	local Loc_Rom_Main_02_Lower_Beach_02 = location:new(v(-336.49,-306.42), r_to_d(0.794), 11.73);
	local Loc_Rom_Main_02_Lower_Beach_03 = location:new(v(-237.7,-291.8), r_to_d(0.143), 22.5);
	local Iter_Rom_Main_02_Waypoints_Lower_Beach = iterator:new({Loc_Rom_Main_02_Lower_Beach_01, Loc_Rom_Main_02_Lower_Beach_02, Loc_Rom_Main_02_Lower_Beach_03});

	local Iter_Rom_Main_02_Waypoints_Sea = iterator:new({v(-323, -573)});
	bm:callback(
		function()
			Beach_Ship(bm, SUnit_Rom_Main_02, Iter_Rom_Main_02_Waypoints_Sea, Iter_Rom_Main_02_Waypoints_Lower_Beach, nil)
		end,
		100--0
	);
	
	
	
	local Loc_Rom_Main_03_Lower_Beach_01 = location:new(v(-356.387,-353.534), r_to_d(-0.364), 8.4);
	local Loc_Rom_Main_03_Lower_Beach_02 = location:new(v(-261.37,-270.08), r_to_d(0.137), 21.85);
	local Iter_Rom_Main_03_Waypoints_Lower_Beach = iterator:new({Loc_Rom_Main_03_Lower_Beach_01, Loc_Rom_Main_03_Lower_Beach_02});
	
	local Iter_Rom_Main_03_Waypoints_Sea = iterator:new({v(-268, -509)});
	
	bm:callback(
		function()
			Beach_Ship(bm, SUnit_Rom_Main_03, Iter_Rom_Main_03_Waypoints_Sea, Iter_Rom_Main_03_Waypoints_Lower_Beach, nil)
		end,
		100--0
	);

	
	
	local Loc_Rom_Main_04_Lower_Beach_01 = location:new(v(-258, -310), r_to_d(-0.673), 9.26);
	local Loc_Rom_Main_04_Lower_Beach_02 = location:new(v(-212.19,-278.073), r_to_d(0.21), 22.88);
	local Iter_Rom_Main_04_Waypoints_Lower_Beach = iterator:new({Loc_Rom_Main_04_Lower_Beach_01, Loc_Rom_Main_04_Lower_Beach_02});

	local Iter_Rom_Main_04_Waypoints_Sea = iterator:new({v(-246, -473)});
	bm:callback(
		function()
			Beach_Ship(bm, SUnit_Rom_Main_04, Iter_Rom_Main_04_Waypoints_Sea, Iter_Rom_Main_04_Waypoints_Lower_Beach, nil)
		end,
		100--00
	);
	
	

	local Loc_Rom_Main_05_Lower_Beach_01 = location:new(v(-150.726,-318.827), r_to_d(0.099), 10.84);
	local Loc_Rom_Main_05_Lower_Beach_02 = location:new(v(-130.963,-288.28), r_to_d(-0.079), 17);
	local Iter_Rom_Main_05_Waypoints_Lower_Beach = iterator:new({Loc_Rom_Main_05_Lower_Beach_01, Loc_Rom_Main_05_Lower_Beach_02});
	
	local Iter_Rom_Main_05_Waypoints_Sea = iterator:new({v(-108, -400)});
	bm:callback(
		function()
			Beach_Ship(bm, SUnit_Rom_Main_05, Iter_Rom_Main_05_Waypoints_Sea, Iter_Rom_Main_05_Waypoints_Lower_Beach, nil)
		end,
		500--0
	);
	

	
	
	local Loc_Rom_Main_06_Lower_Beach_01 = location:new(v(-65, -290), r_to_d(-0.272761), 40.5);
	local Iter_Rom_Main_06_Waypoints_Lower_Beach = iterator:new({Loc_Rom_Main_06_Lower_Beach_01});
	
	local Iter_Rom_Main_06_Waypoints_Sea = iterator:new({v(-44, -370)});
	bm:callback(
		function()
			Beach_Ship(bm, SUnit_Rom_Main_06, Iter_Rom_Main_06_Waypoints_Sea, Iter_Rom_Main_06_Waypoints_Lower_Beach, function() SUnit_Rom_Main_06.uc:occupy_zone(v(-85, -270), true) end)
		end,
		500--0
	);
	
	
	
	local Loc_Rom_Main_07_Lower_Beach_01 = location:new(v(-246.74,-402.16), r_to_d(0.9), 11.71);
	local Loc_Rom_Main_07_Lower_Beach_02 = location:new(v(-145.945,-296.68), r_to_d(1.2), 15.86, false);
	local Loc_Rom_Main_07_Lower_Beach_03 = location:new(v(-64.48,-234.787), r_to_d(0.727), 20.5, false);
	local Iter_Rom_Main_07_Waypoints_Lower_Beach = iterator:new({Loc_Rom_Main_07_Lower_Beach_01, Loc_Rom_Main_07_Lower_Beach_02, Loc_Rom_Main_07_Lower_Beach_03});	
	
	local Iter_Rom_Main_07_Waypoints_Sea = iterator:new({v(-450, -885)});
	bm:callback(
		function()
			Beach_Ship(bm, SUnit_Rom_Main_07, Iter_Rom_Main_07_Waypoints_Sea, Iter_Rom_Main_07_Waypoints_Lower_Beach, function() SUnit_Rom_Main_07.uc:change_fatigue_amount(0.1) end)
		end,
		300--0
	);
	
	

	local Loc_Rom_Main_08_Lower_Beach_01 = location:new(v(-246.74,-402.16), r_to_d(0.9), 11.71);	
	local Loc_Rom_Main_08_Lower_Beach_02 = location:new(v(-145.945,-296.68), r_to_d(1.2), 15.86, false);
	local Loc_Rom_Main_08_Lower_Beach_03 = location:new(v(-47.67,-249.74), r_to_d(0.727), 20.5, false);
	local Iter_Rom_Main_08_Waypoints_Lower_Beach = iterator:new({Loc_Rom_Main_08_Lower_Beach_01, Loc_Rom_Main_08_Lower_Beach_02, Loc_Rom_Main_08_Lower_Beach_03});
	
	local Iter_Rom_Main_08_Waypoints_Sea = iterator:new({v(-430, -855)});	
	bm:callback(
		function()
			Beach_Ship(bm, SUnit_Rom_Main_08, Iter_Rom_Main_08_Waypoints_Sea, Iter_Rom_Main_08_Waypoints_Lower_Beach, function() SUnit_Rom_Main_08.uc:change_fatigue_amount(0.1) end)
		end,
		300--0
	);
	
	
	
	
	local Loc_Rom_Main_09_Lower_Beach_01 = location:new(v(-405.26,-512.12), r_to_d(0.315), 12.46, false);
	local Loc_Rom_Main_09_Lower_Beach_01 = location:new(v(-375,-474), r_to_d(0.315), 12.46, false);
	local Loc_Rom_Main_09_Lower_Beach_02 = location:new(v(-171.546,-343.98), r_to_d(1.1), 15.7);
	local Loc_Rom_Main_09_Lower_Beach_03 = location:new(v(-30.85,-264.69), r_to_d(0.727), 20.5, false);
	local Iter_Rom_Main_09_Waypoints_Lower_Beach = iterator:new({Loc_Rom_Main_09_Lower_Beach_01, Loc_Rom_Main_09_Lower_Beach_02, Loc_Rom_Main_09_Lower_Beach_03});
	
	local Iter_Rom_Main_09_Waypoints_Sea = iterator:new({v(-235, -639), v(-331, -585)});
	
	bm:callback(
		function()
			Beach_Ship(bm, SUnit_Rom_Main_09, Iter_Rom_Main_09_Waypoints_Sea, Iter_Rom_Main_09_Waypoints_Lower_Beach, nil)
		end,
		300--0
	);

	
	
	local Loc_Rom_Main_10_Lower_Beach_01 = location:new(v(-337.94,-456.36), r_to_d(-0.447), 21.8);
	local Loc_Rom_Main_10_Lower_Beach_02 = location:new(v(-341.5,-345), r_to_d(0.23), 16.28);
	local Loc_Rom_Main_10_Lower_Beach_03 = location:new(v(-288,-266.65), r_to_d(0.097), 27.5);
	local Iter_Rom_Main_10_Waypoints_Lower_Beach = iterator:new({Loc_Rom_Main_10_Lower_Beach_01, Loc_Rom_Main_10_Lower_Beach_02, Loc_Rom_Main_10_Lower_Beach_03});
	
	local Iter_Rom_Main_10_Waypoints_Sea = iterator:new({v(-278, -538)});
	bm:callback(
		function() 								
			Beach_Ship(bm, SUnit_Rom_Main_10, Iter_Rom_Main_10_Waypoints_Sea, Iter_Rom_Main_10_Waypoints_Lower_Beach, nil)
		end,
		300--0
	);
	
	
	local Loc_Rom_Main_11_Lower_Beach_01 = location:new(v(-237, -392), 0, 22.5);
	local Loc_Rom_Main_11_Lower_Beach_02 = location:new(v(-192.487,-310.12), r_to_d(0.064), 10.1);
	local Loc_Rom_Main_11_Lower_Beach_03 = location:new(v(-186.52,-288.39), r_to_d(0.2), 28.8);
	local Iter_Rom_Main_11_Waypoints_Lower_Beach = iterator:new({Loc_Rom_Main_11_Lower_Beach_01, Loc_Rom_Main_11_Lower_Beach_02, Loc_Rom_Main_11_Lower_Beach_03});
	
	local Iter_Rom_Main_11_Waypoints_Sea = iterator:new({v(-205, -474)});
	bm:callback(
		function()
			Beach_Ship(
				bm, 
				SUnit_Rom_Main_11, 
				Iter_Rom_Main_11_Waypoints_Sea, 
				Iter_Rom_Main_11_Waypoints_Lower_Beach,
				nil
			)
		end,
		300--0
	);
	
	
	local Loc_Rom_Main_12_Lower_Beach_01 = location:new(v(-150.726,-318.827), r_to_d(0.099), 10.84);
	local Loc_Rom_Main_12_Lower_Beach_02 = location:new(v(-155.33,-293.37), r_to_d(0.093), 32.3);
	local Iter_Rom_Main_12_Waypoints_Lower_Beach = iterator:new({Loc_Rom_Main_12_Lower_Beach_01, Loc_Rom_Main_12_Lower_Beach_02});
	
	local Iter_Rom_Main_12_Waypoints_Sea = iterator:new({v(-135, -423)});
	bm:callback(
		function()
			Beach_Ship(bm, SUnit_Rom_Main_12, Iter_Rom_Main_12_Waypoints_Sea, Iter_Rom_Main_12_Waypoints_Lower_Beach, nil)
		end,
		300--0
	);					
	
	
	
	local Loc_Rom_Main_13_Lower_Beach_01 = location:new(v(-45.3872,-278.237), r_to_d(0.364608), 22.4402);
	local Iter_Rom_Main_13_Waypoints_Lower_Beach = iterator:new({Loc_Rom_Main_13_Lower_Beach_01});
	
	local Iter_Rom_Main_13_Waypoints_Sea = iterator:new({v(-19, -354)});
	bm:callback(
		function()
			Beach_Ship(bm, SUnit_Rom_Main_13, Iter_Rom_Main_13_Waypoints_Sea, Iter_Rom_Main_13_Waypoints_Lower_Beach, nil)
		end,
		300--0
	);

	

	
	
	
	local Loc_Rom_Main_14_Lower_Beach_01 = location:new(v(-356, -325), r_to_d(0.69), 13.7);
	local Loc_Rom_Main_14_Lower_Beach_02 = location:new(v(-249.52, -228.15), r_to_d(0.15), 20.5);
	local Iter_Rom_Main_14_Waypoints_Lower_Beach = iterator:new({Loc_Rom_Main_14_Lower_Beach_01, Loc_Rom_Main_14_Lower_Beach_02});

	local Iter_Rom_Main_14_Waypoints_Sea = iterator:new({v(-417, -821)});
	bm:callback(
		function()	
			Beach_Ship(bm, SUnit_Rom_Main_14, Iter_Rom_Main_14_Waypoints_Sea, Iter_Rom_Main_14_Waypoints_Lower_Beach, function() SUnit_Rom_Main_14.uc:change_fatigue_amount(0.1) end)
		end, 
		500--0
	);
	

	
	local Loc_Rom_Main_15_Lower_Beach_01 = location:new(v(-356, -325), r_to_d(0.69), 13.7);
	local Loc_Rom_Main_15_Lower_Beach_02 = location:new(v(-227.275, -231.5), r_to_d(0.15), 20.5);
	local Iter_Rom_Main_15_Waypoints_Lower_Beach = iterator:new({Loc_Rom_Main_15_Lower_Beach_01, Loc_Rom_Main_15_Lower_Beach_02});
			
	local Iter_Rom_Main_15_Waypoints_Sea = iterator:new({v(-400, -787)});
	bm:callback(
		function()
			Beach_Ship(bm, SUnit_Rom_Main_15, Iter_Rom_Main_15_Waypoints_Sea, Iter_Rom_Main_15_Waypoints_Lower_Beach, function() SUnit_Rom_Main_15.uc:change_fatigue_amount(0.1) end)
		end,
		500--0
	);
	
	-- Roman missile ships
	bm:callback(
		function()
			bm:out("Advancing siege ships");
			Advance_Roman_Siege_Ships()
		end,
		10000
	);
end;


function Allow_Breach_Point_To_Partially_Collapse()
	bm:out("Allowing breach point to partially collapse");

	Building_Wall_Breach_Point_02:change_is_destructible(true);
	bm:remove_process("Breach_Point_HP_Watch");
	
	bm:watch(function() return Building_Wall_Breach_Point_02:health() < 0.3 end, 0, function() Building_Wall_Breach_Point_02:change_is_destructible(false) end, "Breach_Point_HP_Watch");
end;



--
-- Roman General getting onto wall
-- 

function Roman_General_Use_Siege_Tower()

	bm:out("Roman_General_Use_Siege_Tower() called");
	
	-- safe mode, onager strikes shouldn't hit near towers
	BOOL_Dont_Risk_Hitting_Siege_Tower = true;

	Use_Siege_Tower(
						bm,
						SUnit_Rom_Main_01,
						Siege_Tower_01, 
						Building_Wall_Dock_Point_Main, 
						function() Roman_General_Is_On_Wall() end,
						function() 
							SUnit_Car_Wall_11.uc:attack_unit(SUnit_Rom_Beach_05.unit, true, true);
							Advance_Romans_To_Upper_Beach(); 
							Allow_Breach_Point_To_Partially_Collapse(); 
							Ranged_Move_Near_Wall();
						end
					);
						
	bm:callback(function() Roman_Second_Use_East_Siege_Tower() end, 25000);
		
	bm:watch(function() return Siege_Tower_01:position():distance_xz(Building_Wall_Dock_Point_Main:position()) < 23 end, 0, function() Play_Scipio_Siege_Tower_Speech() end);
end;

function Play_Scipio_Siege_Tower_Speech()
	local scipio_pos = SUnit_Rom_Main_01.unit:position_of_officer();

	bm:out("Play_Scipio_Siege_Tower_Speech() called, position of Scipio is " .. v_to_s(scipio_pos));
	
	local TOWER_SOUND = new_sfx("TOWER");

	play_sound(scipio_pos, TOWER_SOUND);
    SUnit_Rom_Main_01.unit:play_anim_for_captain("GENERAL_SPEECH_1", false);
end;


function Roman_General_Is_On_Wall()

	bm:out("Roman_General_Is_On_Wall() called");
		
	SUnit_Rom_Main_01.uc:attack_unit(SUnit_Car_Wall_04.unit, true, true);
	SUnit_Car_Wall_04.uc:attack_unit(SUnit_Rom_Main_01.unit, true, true);
	
	-- wait a short while before allowing the wall unit to rout (they tend to break pretty quick otherwise)
	unit_max_casualties(SUnit_Car_Wall_04, 0);
	bm:callback(
		function()
			SUnit_Car_Wall_04.uc:morale_behavior_default();
			kill_on_rout(bm, SUnit_Car_Wall_04);
		end,
		15000
	);
	
	-- wait before allowing the ground ranged defeders to fire
	SUnit_Car_Main_04.uc:fire_at_will(true);
	SUnit_Car_Main_05.uc:fire_at_will(true);
	SUnit_Car_Mid_04.uc:fire_at_will(true)
		
	bm:watch(function() return unit_proportion_alive(SUnit_Car_Wall_04.unit) < 0.7 end, 0, function() SUnit_Car_Wall_04.uc:morale_behavior_rout() end);
	bm:watch(function() return is_routing_or_dead(SUnit_Car_Wall_04.unit) end, 0, function() Roman_General_Takes_Wall() end);
end;


function Roman_General_Takes_Wall()

	bm:out("Roman_General_Takes_Wall() called");
		
	BOOL_Roman_General_Has_Taken_Wall = true;
	
	Start_East_Effects_Phase_1();
		
	SUnit_Rom_Main_01.uc:halt();
	
	bm:callback(function() SUnit_Car_Wall_11.uc:morale_behavior_rout() end, 5000);
	
	bm:callback(function() Start_Town_Entry() end, 10000);
	bm:callback(function() Breach_Wall() end, 20000);
	
	Send_Boats_Into_Harbour();
end;


--
-- Roman Second getting onto wall
-- 


function Roman_Second_Use_East_Siege_Tower()
	bm:out("Roman_Second_Use_East_Siege_Tower() called");
		
	Use_Siege_Tower(
						bm,
						SUnit_Rom_Main_05,
						Siege_Tower_02, 
						Building_Wall_Dock_Point_East, 
						function() Roman_Second_Is_On_Wall() end,
						function() Advance_Romans_To_Upper_Beach_East() end
					);
end;


BOOL_Roman_Second_Is_On_Wall = false;

function Roman_Second_Is_On_Wall()

	bm:out("Roman_Second_Is_On_Wall() called");
		
	BOOL_Roman_Second_Is_On_Wall = true;
	
	SUnit_Rom_Main_05.uc:attack_unit(SUnit_Car_Wall_03.unit, true, true);
	SUnit_Car_Wall_03.uc:attack_unit(SUnit_Rom_Main_05.unit, true, true);
	
	Try_To_End_Roman_Second_Fight_On_Wall();
end;


function Try_To_End_Roman_Second_Fight_On_Wall()
	if BOOL_Roman_Second_Is_On_Wall and BOOL_Wall_Is_Breached then	
		bm:callback(function() End_Roman_Second_Fight_On_Wall() end, 10000);
	end;
end;


function End_Roman_Second_Fight_On_Wall()
	bm:out("Ending Roman Second's fight on wall");
	
	SUnit_Car_Wall_03.uc:morale_behavior_default();
	unit_max_casualties(SUnit_Car_Wall_03, 0);
end;


--
-- Wall Breach
-- 


BOOL_Wall_Is_Breached = false;
Cached_Wall_Health = 0;

function Breach_Wall()	
	bm:remove_process("Breach_Point_HP_Watch");
	
	-- Move Dock St. Troops into position
	SUnit_Rom_Dock_St_02.uc:goto_location_angle_width(v(-46.14, -228.37), r_to_d(0.75), 17.8, true);
	SUnit_Rom_Dock_St_03.uc:goto_location_angle_width(v(-30.92, -242.55), r_to_d(0.75), 17.8, true);
	SUnit_Rom_Dock_St_07.uc:goto_location_angle_width(v(-64.15, -200.12), r_to_d(0.74), 36.1, true);
	bm:callback(function() SUnit_Rom_Dock_St_Arch_01.uc:goto_location_angle_width(v(-73.23, -206.78), r_to_d(0.74), 41.3, true) end, 5000);
	
	-- Get all boats to target the breachable wall section
	SUnit_Rom_Harbour_01.uc:attack_building(Building_Wall_Breach_Point_02);
	
	Building_Wall_Breach_Point_02:change_is_destructible(true);
	
	Cached_Wall_Health = Building_Wall_Breach_Point_01:health();
	
	bm:watch(function() return Building_Wall_Breach_Point_02:health() < Cached_Wall_Health end, 0, function() Building_Wall_Breach_Point_02:destroy() end);
	
	-- remove this eventually
	--bm:callback(function() bm:out("Forceably breaching wall"); Building_Wall_Breach_Point_02:destroy() end, 10000);
	
	bm:watch(function() return Building_Wall_Breach_Point_02:health() < 0.1 end, 0, function() Wall_Is_Breached() end);
end;


BOOL_Roman_Second_Has_Finished_On_Wall = false;

function Wall_Is_Breached()
	bm:out("Wall is breached");

	BOOL_Wall_Is_Breached = true;
	
	Try_To_End_Roman_Second_Fight_On_Wall();
	
	Boats_Fire_Inside_City_01();
	
	SUnit_Car_Wall_01.uc:morale_behavior_rout();
	bm:callback(function() SUnit_Car_Wall_02.uc:morale_behavior_rout() end, 2000);
	
	bm:callback(
		function() 
			if not BOOL_Dock_St_Second_Intercept_Started then
				SUnit_Rom_Main_05.uc:attack_unit(SUnit_Car_Dock_02.unit, true, true);
			end;
		end, 
		12000
	);
		
	Start_Dock_St_First_Intercept();
end;


--
-- Mid-Beach Attack
--

function Prepare_Mid_Beach_Attack()
	SUnit_Rom_Beach_06.uc:morale_behavior_fearless();
	
	SUnit_Rom_Beach_06.uc:occupy_zone(v(-442, -377), true);
	SUnit_Rom_Beach_03.uc:occupy_zone(v(-378, -312), true);
	
	SUnit_Car_Wall_05.uc:morale_behavior_fearless();	
	--bm:callback(function() Start_Mid_Beach_Attack() end, 20000);
end;


function Start_Mid_Beach_Attack()
	bm:out("Starting Mid Beach Attack");

	SUnit_Rom_Beach_06.uc:goto_location_angle_width(v(-406.3, -367.8), r_to_d(-0.145), 20.8);
	
	bm:callback(
		function()
			Use_Siege_Tower(
				bm,
				SUnit_Rom_Beach_06,
				Siege_Tower_03, 
				Building_Wall_Dock_Point_Mid, 
				function() Roman_Mid_Is_On_Wall() end,
				nil
			)
		end,
		5000
	);
	
	bm:callback(function() SUnit_Car_Wall_06.uc:attack_unit(SUnit_Rom_Beach_03.unit, true, true) end, 15000);
end;


function Roman_Mid_Is_On_Wall()
	bm:out("Roman_Mid_Is_On_Wall() called");

	SUnit_Car_Wall_06.uc:attack_unit(SUnit_Rom_Beach_06.unit, true, true);
	SUnit_Rom_Beach_06.uc:attack_unit(SUnit_Car_Wall_06.unit, true, true);
	
	SUnit_Car_Wall_06.uc:morale_behavior_fearless();
	unit_max_casualties(SUnit_Rom_Beach_06, 0.35);
	unit_max_casualties(SUnit_Car_Wall_06, 0.25);
end;


Pos_Rom_West_13_Upper_Beach = v(-336.808, -186.845)
Orient_Rom_West_13_Upper_Beach = r_to_d(0.13547)
Width_Rom_West_13_Upper_Beach = 22.6
	
Pos_Rom_West_14_Upper_Beach = v(-313.325,-189.946)
Orient_Rom_West_14_Upper_Beach = r_to_d(0.13547)
Width_Rom_West_14_Upper_Beach = 20.8
	
Pos_Rom_West_15_Upper_Beach = v(-290.734,-193.025)
Orient_Rom_West_15_Upper_Beach = r_to_d(0.13547)
Width_Rom_West_15_Upper_Beach = 20.8

Pos_Rom_West_16_Upper_Beach = v(-268.143,-196.104)
Orient_Rom_West_16_Upper_Beach = r_to_d(0.13547)
Width_Rom_West_16_Upper_Beach = 20.8


function Advance_Romans_To_Upper_Beach()
	bm:out("Advance_Romans_To_Upper_Beach() called");
	
	-- melee
	Stop_Beaching(bm, SUnit_Rom_Main_03); 
	SUnit_Rom_Main_03.uc:goto_location_angle_width(v(-248.5, -218), r_to_d(0.15), 19.6);	
	SUnit_Rom_Beach_04.uc:goto_location_angle_width(v(-226.2, -221.4), r_to_d(0.15), 19.6);	
	SUnit_Rom_Main_04.uc:goto_location_angle_width(v(-203.84, -224.8), r_to_d(0.15), 19.6);
	bm:callback(function() Stop_Beaching(bm, SUnit_Rom_Main_02); SUnit_Rom_Main_02.uc:goto_location_angle_width(v(-205.027, -234.869), r_to_d(0.15), 20.5, true) end, 10000);
	bm:callback(function() SUnit_Rom_Main_04.uc:goto_location_angle_width(v(-203.84, -224.8), r_to_d(0.15), 19.6, true) end, 15000);
	
	--ranged
	bm:callback(function() PM_Rom_Main_10_Upper_Beach:start() end, 5000);
	bm:callback(function() SUnit_Rom_Main_11.uc:goto_location_angle_width(v(-212.8, -205.71), r_to_d(0.13), 44.6) end, 5000);
	bm:callback(function() SUnit_Rom_Main_11.uc:goto_location_angle_width(v(-212.8, -205.71), r_to_d(0.13), 44.24, true) end, 15000);
	bm:callback(function() SUnit_Rom_Beach_02.uc:goto_location_angle_width(v(-170.11, -227.49), r_to_d(0.04), 42.67, true) end, 20000);
		
	--cavalry
	Advance_Roman_Cavalry_To_Upper_Beach();	
end;


-- called when Roman second is on its siege tower
function Advance_Romans_To_Upper_Beach_East()

	bm:callback(function() SUnit_Rom_Main_12.uc:goto_location_angle_width(v(-163.113, -242.74), r_to_d(-0.102), 27.8) end, 15000);
	bm:callback(function() SUnit_Rom_Main_12.uc:goto_location_angle_width(v(-167.4, -208.9), r_to_d(0.038), 44.24, true) end, 40000);
end;


function Advance_Roman_Cavalry_To_Upper_Beach()
	PM_Rom_West_16:stop();
	PM_Rom_West_16_Upper_Beach:start();
	
	bm:callback(
		function() 
			PM_Rom_West_15:stop()
			PM_Rom_West_15_Upper_Beach:start();
		end, 
		3000
	);
	
	bm:callback(
		function() 
			PM_Rom_West_14:stop()
			PM_Rom_West_14_Upper_Beach:start();
		end, 
		6000
	);
	
	bm:callback(
		function() 
			PM_Rom_West_13:stop()
			PM_Rom_West_13_Upper_Beach:start();
		end, 
		9000
	);
end;








C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\e3_carthage\e3_patrol_managers.lua
-- patrol manager declarations

PM_Rom_Beach_04_Lower_Beach = patrol_manager:new(
	"Rom_Beach_04_Lower_Beach",
	SUnit_Rom_Beach_04,
	Armies_Car,
	5,
	20,
	20
);

PM_Rom_Beach_04_Lower_Beach:add_waypoint(v(-252.4, -317.05), true, r_to_d(-0.673), 9.26);
PM_Rom_Beach_04_Lower_Beach:add_waypoint(v(-236.7,-273.38), true, r_to_d(0.143), 22.5);


PM_Rom_Beach_05_Lower_Beach = patrol_manager:new(
	"Rom_Beach_05_Lower_Beach",
	SUnit_Rom_Beach_05,
	Armies_Car,
	5,
	20,
	20
);

PM_Rom_Beach_05_Lower_Beach:set_completion_callback(
	function()
		SUnit_Rom_Beach_05.uc:occupy_zone(v(-300, -243), true);
		SUnit_Rom_Beach_05.uc:attack_unit_q(SUnit_Car_Wall_11.unit, true, true);
		SUnit_Car_Wall_11.uc:attack_unit(SUnit_Rom_Beach_05.unit, true, true);
	end
);

PM_Rom_Beach_05_Lower_Beach:add_waypoint(v(-271.794, -293.705), true, r_to_d(-0.72), 13.44);



PM_Rom_Main_10_Upper_Beach = patrol_manager:new(
	"Rom_Beach_10_Lower_Beach",
	SUnit_Rom_Main_10,
	Armies_Car,
	1
);

PM_Rom_Main_10_Upper_Beach:add_waypoint(v(-252.257, -236.42), false, r_to_d(0.11), 23.13);
PM_Rom_Main_10_Upper_Beach:add_waypoint(v(-256.227, -200.97), true, r_to_d(0.046), 39.85);







PM_Rom_West_13_Upper_Beach = patrol_manager:new(
	"Rom_West_13_Upper_Beach",
	SUnit_Rom_West_13,
	Armies_Car,
	10
);

PM_Rom_West_13_Upper_Beach:add_waypoint(v(-450.9, -303), true, r_to_d(0.857), 20.25);
PM_Rom_West_13_Upper_Beach:add_waypoint(v(-391, -241), true, r_to_d(0.848), 17.5);
PM_Rom_West_13_Upper_Beach:add_waypoint(v(-305, -183), true, r_to_d(0.848), 17.5);
PM_Rom_West_13_Upper_Beach:add_waypoint(v(-229.17, -180.22), true, r_to_d(0.049), 17.2);






PM_Rom_West_14_Upper_Beach = patrol_manager:new(
	"Rom_West_14_Upper_Beach",
	SUnit_Rom_West_14,
	Armies_Car,
	10
);

PM_Rom_West_14_Upper_Beach:add_waypoint(v(-476, -324), true, r_to_d(0.857), 20.25);
PM_Rom_West_14_Upper_Beach:add_waypoint(v(-382.373, -227.77), true, r_to_d(0.848), 17.5);
PM_Rom_West_14_Upper_Beach:add_waypoint(v(-305, -183), true, r_to_d(0.848), 17.5);
PM_Rom_West_14_Upper_Beach:add_waypoint(v(-209.99, -181.15), true, r_to_d(0.049), 17.2);




PM_Rom_West_15_Upper_Beach = patrol_manager:new(
	"Rom_West_15_Upper_Beach",
	SUnit_Rom_West_15,
	Armies_Car,
	10
);

PM_Rom_West_15_Upper_Beach:add_waypoint(v(-460.9, -318), true, r_to_d(0.857), 20.25);
PM_Rom_West_15_Upper_Beach:add_waypoint(v(-300.07, -180.85), true, r_to_d(1.288), 18.3);
PM_Rom_West_15_Upper_Beach:add_waypoint(v(-305, -183), true, r_to_d(0.848), 17.5);
PM_Rom_West_15_Upper_Beach:add_waypoint(v(-190.82, -182.08), true, r_to_d(0.049), 17.2);




PM_Rom_West_16_Upper_Beach = patrol_manager:new(
	"Rom_West_16_Upper_Beach",
	SUnit_Rom_West_16,
	Armies_Car,
	10
);

PM_Rom_West_16_Upper_Beach:add_waypoint(v(-450, -315), true, r_to_d(0.857), 20.25);
PM_Rom_West_16_Upper_Beach:add_waypoint(v(-304.07, -182.85), true, r_to_d(1.288), 18.3);
PM_Rom_West_16_Upper_Beach:add_waypoint(v(-305, -183), true, r_to_d(0.848), 17.5);
PM_Rom_West_16_Upper_Beach:add_waypoint(v(-171.636, -183.012), true, r_to_d(0.049), 17.2);








PM_Rom_Back_St_01 = patrol_manager:new(
	"Rom_Back_St_01",
	SUnit_Rom_Back_St_01,
	Armies_Car,
	1,
	15,
	15
 );
 
PM_Rom_Back_St_01:set_completion_callback(function() SUnit_Rom_Back_St_01.uc:attack_unit(SUnit_Car_Art_03.unit, true, true) end);

PM_Rom_Back_St_01:set_width(20);
PM_Rom_Back_St_01:add_waypoint(v(-200, -156), true);
PM_Rom_Back_St_01:add_waypoint(v(-200, -134), true);
--PM_Rom_Back_St_01:add_waypoint(v(-305, -107), true);
PM_Rom_Back_St_01:add_waypoint(v(-313, 20), true);


PM_Rom_Back_St_02 = patrol_manager:new(
	"Rom_Back_St_02",
	SUnit_Rom_Back_St_02,
	Armies_Car,
	1,
	15,
	15
);

PM_Rom_Back_St_02:set_completion_callback(function() SUnit_Rom_Back_St_02.uc:attack_unit(SUnit_Car_Art_02.unit, true, true) end);

PM_Rom_Back_St_02:set_width(20);
PM_Rom_Back_St_02:add_waypoint(v(-200, -156), true);
PM_Rom_Back_St_02:add_waypoint(v(-200, -134), true);
--PM_Rom_Back_St_02:add_waypoint(v(-305, -107), true);
PM_Rom_Back_St_02:add_waypoint(v(-313, 20), true);






PM_Rom_Back_St_03 = patrol_manager:new(
	"Rom_Back_St_03",
	SUnit_Rom_Back_St_03,
	Armies_Car,
	1,
	15,
	15
);

PM_Rom_Back_St_03:set_completion_callback(function() SUnit_Rom_Back_St_03.uc:attack_unit(SUnit_Car_Art_01.unit, true, true) end);

PM_Rom_Back_St_03:set_width(20);
PM_Rom_Back_St_03:add_waypoint(v(-200, -156), true);
PM_Rom_Back_St_03:add_waypoint(v(-200, -134), true);
--PM_Rom_Back_St_03:add_waypoint(v(-305, -107), true);
PM_Rom_Back_St_03:add_waypoint(v(-440, -37), true);




PM_Rom_Back_St_04 = patrol_manager:new(
	"Rom_Back_St_04",
	SUnit_Rom_Back_St_04,
	Armies_Car,
	1,
	15,
	15
);

PM_Rom_Back_St_04:set_completion_callback(function() SUnit_Rom_Back_St_04.uc:attack_unit(SUnit_Car_Art_02.unit, true, true) end);
									
PM_Rom_Back_St_04:set_width(20);
PM_Rom_Back_St_04:add_waypoint(v(-200, -156), true);
PM_Rom_Back_St_04:add_waypoint(v(-200, -134), true);
--PM_Rom_Back_St_04:add_waypoint(v(-305, -107), true);
PM_Rom_Back_St_04:add_waypoint(v(-313, 20), true);
	






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\e3_carthage\e3_scripted_audio.lua

BOOL_Scripted_Audio_Enabled = false;

SFX_Test_01 = new_sfx("Beach_assault_02");
SFX_Test_02 = new_sfx("Archers_on_the_walls_05");
SFX_Test_03 = new_sfx("Beach_assault_03");


function Start_Audio_Call_And_Response_Test()
	if BOOL_Scripted_Audio_Enabled then	
		bm:out("Start_Audio_Call_And_Response_Test");
		
		bm:watch(
			function()
				return cam:position():distance(SUnit_Rom_Main_01.unit:position()) < 20
			end,
			1000,
			function()
				Play_Audio_Call_And_Response_Test()
			end,
			"Audio_Call_And_Response_Test"
		);	
	end;
end;



function Stop_Audio_Call_And_Response_Test()
	bm:remove_process("Audio_Call_And_Response_Test");
end;



function Play_Audio_Call_And_Response_Test()
	bm:out("Audio Call")
	play_sound(SUnit_Rom_Main_01.unit:position(),SFX_Test_01)
				
	bm:callback(
		function()
			bm:out("Audio Response")
			play_sound(SUnit_Rom_Main_01.unit:position(),SFX_Test_02)
		end,
		500
	);
				
	bm:callback(
		function()
			bm:out("Audio Response 2")
			play_sound(SUnit_Rom_Main_01.unit:position(),SFX_Test_03)
		end,
		900
	);
end;






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\e3_carthage\e3_town.lua

SUnit_Rom_Dock_St_01 = SUnit_Rom_Main_05;
SUnit_Rom_Dock_St_02 = SUnit_Rom_Main_13;
SUnit_Rom_Dock_St_03 = SUnit_Rom_Main_06;
SUnit_Rom_Dock_St_04 = SUnit_Rom_Main_09;
SUnit_Rom_Dock_St_05 = SUnit_Rom_Main_07;
SUnit_Rom_Dock_St_06 = SUnit_Rom_Main_08;
SUnit_Rom_Dock_St_07 = SUnit_Rom_Main_12;
SUnit_Rom_Dock_St_Arch_01 = SUnit_Rom_Beach_01;

Rom_Dock_St = {
	SUnit_Rom_Dock_St_01,
	SUnit_Rom_Dock_St_02,
	SUnit_Rom_Dock_St_03,
	SUnit_Rom_Dock_St_04,
	SUnit_Rom_Dock_St_05,
	SUnit_Rom_Dock_St_06,
	SUnit_Rom_Dock_St_07,
	SUnit_Rom_Dock_St_Arch_01
};

Car_Dock_St = {
	SUnit_Car_Dock_01,
	SUnit_Car_Dock_02,
	SUnit_Car_Dock_03,
	SUnit_Car_Dock_04,
	SUnit_Car_Dock_05,
	SUnit_Car_Dock_06
};

SUnit_Rom_Mid_St_01 = SUnit_Rom_Main_01;
SUnit_Rom_Mid_St_02 = SUnit_Rom_Main_04;
SUnit_Rom_Mid_St_03 = SUnit_Rom_Beach_04;
SUnit_Rom_Mid_St_04 = SUnit_Rom_Main_11;
SUnit_Rom_Mid_St_Arch_01 = SUnit_Rom_Beach_02;

Rom_Mid_St = {
	SUnit_Rom_Mid_St_01,
	SUnit_Rom_Mid_St_02,
	SUnit_Rom_Mid_St_03,
	SUnit_Rom_Mid_St_04,
	SUnit_Rom_Mid_St_Arch_01
};

Car_Mid_St = {
	SUnit_Car_Mid_01,
	SUnit_Car_Mid_02,
	SUnit_Car_Mid_03,
	SUnit_Car_Mid_04
};

SUnit_Rom_Main_St_01 = SUnit_Rom_Main_03;
SUnit_Rom_Main_St_02 = SUnit_Rom_Main_02;
SUnit_Rom_Main_St_03 = SUnit_Rom_Main_14;
SUnit_Rom_Main_St_04 = SUnit_Rom_Main_15;
SUnit_Rom_Main_St_05 = SUnit_Rom_Main_10;
SUnit_Rom_Main_St_Arch_01 = SUnit_Rom_Beach_05;

Rom_Main_St = {
	SUnit_Rom_Main_St_01,
	SUnit_Rom_Main_St_02,
	SUnit_Rom_Main_St_03,
	SUnit_Rom_Main_St_04,
	SUnit_Rom_Main_St_05,
	SUnit_Rom_Main_St_Arch_01
};

Car_Main_St = {
	SUnit_Car_Main_01,
	SUnit_Car_Main_02,
	SUnit_Car_Main_03,
	SUnit_Car_Main_04,
	SUnit_Car_Main_05
};

SUnit_Rom_Back_St_01 = SUnit_Rom_West_13;
SUnit_Rom_Back_St_02 = SUnit_Rom_West_14;
SUnit_Rom_Back_St_03 = SUnit_Rom_West_15;
SUnit_Rom_Back_St_04 = SUnit_Rom_West_16;


--Carth ranged move close to wall inside settlement
function Ranged_Move_Near_Wall()
	Main_St_Ranged_Move_Near_Wall();
	Mid_St_Ranged_Move_Near_Wall();
end;

--
-- E3 Town - controls town assault phase
--

function Start_Town_Entry()
	bm:out("Starting Town Entry");
	
	Start_Back_St_Attack();
	
	Limit_Roman_Casualties_Town();
	
	-- Set the Carthaginian artillery to fire at will
	Stop_Art_Cluster(SUnit_Car_Art_01.name);
	Stop_Art_Cluster(SUnit_Car_Art_02.name);
	Stop_Art_Cluster(SUnit_Car_Art_03.name);
	Stop_Art_Cluster(SUnit_Car_Art_04.name);
	Stop_Art_Cluster("SUnit_Car_Art_05");
	SUnit_Car_Art_01.uc:fire_at_will(true);
	SUnit_Car_Art_02.uc:fire_at_will(true);
	SUnit_Car_Art_03.uc:fire_at_will(true);
	SUnit_Car_Art_04.uc:fire_at_will(true);
	
	bm:callback(function() Start_Main_St_First_Intercept() end, 10000);
	bm:callback(function() Start_Mid_St_First_Intercept() end, 12000);
end;



--
-- BOATS IN HARBOUR
--

Pos_Rom_Harbour_01_In_Harbour = v(142.14, -129.39)
Orient_Rom_Harbour_01_In_Harbour = r_to_d(-0.93)
Width_Rom_Harbour_01_In_Harbour = 27

function Send_Boats_Into_Harbour()
	bm:out("Send_Boats_Into_Harbour() called");

	SUnit_Rom_Harbour_01.uc:loose_formation(false);
	SUnit_Rom_Harbour_01.uc:goto_location_angle_width(Pos_Rom_Harbour_01_In_Harbour, Orient_Rom_Harbour_01_In_Harbour, Width_Rom_Harbour_01_In_Harbour);
end;




--
-- BACK STREET
--


function Start_Back_St_Attack()
	PM_Rom_Back_St_01:start();
	bm:callback(function() PM_Rom_Back_St_02:start() end, 500);
	bm:callback(function() PM_Rom_Back_St_03:start() end, 1000);
	bm:callback(function() PM_Rom_Back_St_04:start() end, 1500);
end;

--
-- MAIN STREET
--

function Refresh_Main_Street_Combatants()
	refresh_sunits(Rom_Main_St);
	refresh_sunits(Car_Main_St);
end;



Pos_Car_Main_04_Near_Wall = v(-230.15,-96.85)
Orient_Car_Main_04_Near_Wall = r_to_d(-3.08)
Width_Car_Main_04_Near_Wall = 26.89

Pos_Car_Main_05_Near_Wall = v(-234,-88.25)
Orient_Car_Main_05_Near_Wall = r_to_d(3.14)
Width_Car_Main_05_Near_Wall = 21.1

function Main_St_Ranged_Move_Near_Wall()
	SUnit_Car_Main_04.uc:fire_at_will(false);
	SUnit_Car_Main_05.uc:fire_at_will(false);
	
	SUnit_Car_Main_04.uc:morale_behavior_fearless();
	SUnit_Car_Main_05.uc:morale_behavior_fearless();
	
	SUnit_Car_Main_04.uc:goto_location_angle_width(Pos_Car_Main_04_Near_Wall, Orient_Car_Main_04_Near_Wall, Width_Car_Main_04_Near_Wall, true);
	SUnit_Car_Main_05.uc:goto_location_angle_width(Pos_Car_Main_05_Near_Wall, Orient_Car_Main_05_Near_Wall, Width_Car_Main_05_Near_Wall, true);
end;


Pos_Car_Main_01_First_Intercept = v(-234,-76)
Orient_Car_Main_01_First_Intercept = r_to_d(3.11619)
Width_Car_Main_01_First_Intercept = 20

Pos_Car_Main_02_First_Intercept = v(-229,-52)
Orient_Car_Main_02_First_Intercept = r_to_d(-3.00881)
Width_Car_Main_02_First_Intercept = 31.1498

Pos_Rom_Main_St_05_First_Blockade = v(-235.4,-111.6)
Orient_Rom_Main_St_05_First_Blockade = 0
Width_Rom_Main_St_05_First_Blockade = 37.07

function Start_Main_St_First_Intercept()

	bm:out("Start_Main_St_First_Intercept() called");
	
	Refresh_Main_Street_Combatants();
	
	-- first Car Melee responder
	bm:callback(function() SUnit_Car_Main_01.uc:goto_location_angle_width(Pos_Car_Main_01_First_Intercept, Orient_Car_Main_01_First_Intercept, Width_Car_Main_01_First_Intercept, true) end, 5000);
	kill_on_rout(bm, SUnit_Car_Main_01);
	
	-- Car ranged pull back from gate (initial)
	SUnit_Car_Main_04.uc:goto_location_angle_width(v(-234.33,-68.18), r_to_d(3.13), 19.4, true);
	
	-- Further Car ranged pull back
	bm:watch(
		function() 
			return is_close_to_position(Units_Rom_01, SUnit_Car_Main_05.unit:position(), 55)
		end,
		0,
		function()
			SUnit_Car_Main_05.uc:goto_location_angle_width(v(-225.88,37.06), r_to_d(3.14), 37, true);
			bm:callback(function() SUnit_Car_Main_04.uc:goto_location_angle_width(v(-232.229,-40.009), r_to_d(3.09222), 25.5141, true) end, 1500);
		end
	);
	
	-- first Roman attacker
	SUnit_Rom_Main_St_01.uc:goto_location_angle_width(v(-230, -43), 0, 25);
	bm:callback(
		function()
			Move_To_Attack(bm, SUnit_Rom_Main_St_01, v(-230, -43), 0, 25, SUnit_Car_Main_01, 60, function() Main_St_First_Intercept_Engaged() end, 0.8, function() Start_Main_St_Second_Intercept() end)
		end, 
		10000
	);
	
	-- second Roman attacker
	bm:callback(function() SUnit_Rom_Main_St_02.uc:goto_location_angle_width(v(-230, -43), 0, 25) end, 5000);
	bm:callback(
		function()
			Move_To_Attack(bm, SUnit_Rom_Main_St_02, v(-230, -43), 0, 25, SUnit_Car_Main_01, 60, nil, 0.8, nil)
		end, 
		20000
	);

	-- second Car defender
	bm:callback(function() SUnit_Car_Main_02.uc:goto_location_angle_width(Pos_Car_Main_02_First_Intercept, Orient_Car_Main_02_First_Intercept, Width_Car_Main_02_First_Intercept, true) end, 25000);
	bm:watch(function() return SUnit_Car_Main_02.unit:position():distance_xz(Pos_Car_Main_02_First_Intercept) < 30 end, 0, function() SUnit_Car_Main_01.uc:morale_behavior_rout(); SUnit_Car_Main_02.uc:attack_unit(SUnit_Rom_Main_St_02.unit, true, true) end);
	
	-- Roman velites
	bm:callback(
		function() 
			SUnit_Rom_Main_St_05.uc:goto_location_angle_width(Pos_Rom_Main_St_05_First_Blockade, Orient_Rom_Main_St_05_First_Blockade, Width_Rom_Main_St_05_First_Blockade);
		end,
		5000
	);
	bm:callback(
		function() 
			SUnit_Rom_Main_St_05.uc:goto_location_angle_width(Pos_Rom_Main_St_05_First_Blockade, Orient_Rom_Main_St_05_First_Blockade, Width_Rom_Main_St_05_First_Blockade, true)
		end,
		15000
	);
	
	-- background Roman attackers
	bm:callback(function() SUnit_Rom_Main_St_03.uc:goto_location_angle_width(v(-213.79, -190.49), r_to_d(0.042), 18.7) end, 20000);
end;


function Main_St_First_Intercept_Engaged()
	SUnit_Rom_Main_St_Arch_01.uc:goto_location_angle_width(v(-235.77, -124), 0, 43.9, true);
end;


Pos_Car_Main_03_Second_Intercept = v(-228.82,-12.2)
Orient_Car_Main_03_Second_Intercept = r_to_d(-3.10641)
Width_Car_Main_03_Second_Intercept = 25.004

Pos_Car_Main_04_Second_Intercept = v(-225,0)
Orient_Car_Main_04_Second_Intercept = r_to_d(-3.09442)
Width_Car_Main_04_Second_Intercept = 34

Pos_Rom_Main_St_05_Second_Blockade = v(-233.38,-83.05)
Orient_Rom_Main_St_05_Second_Blockade = 0
Width_Rom_Main_St_05_Second_Blockade = 21.3

Pos_Rom_Main_St_Arch_01_Second_Blockade = v(-233.95,-113.7)
Orient_Rom_Main_St_Arch_01_Second_Blockade = 0
Width_Rom_Main_St_Arch_01_Second_Blockade = 34.1

function Start_Main_St_Second_Intercept()
	bm:out("Start_Main_St_Second_Intercept() called");
	
	Refresh_Main_Street_Combatants();
	
	-- Car ranged retreat
	SUnit_Car_Main_04.uc:goto_location_angle_width(Pos_Car_Main_04_Second_Intercept, Orient_Car_Main_04_Second_Intercept, Width_Car_Main_04_Second_Intercept, true);
	
	-- Roman melee attack
	bm:callback(function() Move_To_Attack(bm, SUnit_Rom_Main_St_01, v(-225, 48), 0, 25, SUnit_Car_Main_02, 60, nil, 0.8, function() Start_Main_St_Third_Intercept() end) end, 3000);
	bm:callback(function() Move_To_Attack(bm, SUnit_Rom_Main_St_02, v(-205, 50), 0, 25, SUnit_Car_Main_02, 50, nil, 0.8, function() SUnit_Car_Main_02.uc:morale_behavior_rout() end) end, 5000);					
	bm:callback(function() Move_To_Attack(bm, SUnit_Rom_Main_St_03, v(-205, 50), 0, 25, SUnit_Car_Main_02, 50, nil, 0.8, function() SUnit_Car_Main_02.uc:morale_behavior_rout() end) end, 5000);					
	bm:callback(function() Move_To_Attack(bm, SUnit_Rom_Main_St_04, v(-205, 50), 0, 25, SUnit_Car_Main_02, 50, nil, 0.8, function() SUnit_Car_Main_02.uc:morale_behavior_rout() end) end, 10000);					
	
	-- Move next wave of Car melee up, when it gets into position rout the current wave
	SUnit_Car_Main_03.uc:goto_location_angle_width(Pos_Car_Main_03_Second_Intercept, Orient_Car_Main_03_Second_Intercept, Width_Car_Main_03_Second_Intercept, true);
	bm:watch(function() return SUnit_Car_Main_03.unit:position():distance_xz(Pos_Car_Main_03_Second_Intercept) < 30 end, 0, function() SUnit_Car_Main_02.uc:morale_behavior_rout() end);
	
	-- Roman velites
	bm:callback(function() SUnit_Rom_Main_St_05.uc:goto_location_angle_width(Pos_Rom_Main_St_05_Second_Blockade, Orient_Rom_Main_St_05_Second_Blockade, Width_Rom_Main_St_05_Second_Blockade, true) end, 10000);
	
	-- Roman archers
	SUnit_Rom_Main_St_Arch_01.uc:goto_location_angle_width(Pos_Rom_Main_St_Arch_01_Second_Blockade, Orient_Rom_Main_St_Arch_01_Second_Blockade, Width_Rom_Main_St_Arch_01_Second_Blockade, true);
end;

Pos_Car_Main_04_Third_Intercept = v(-225,20)
Orient_Car_Main_04_Third_Intercept = r_to_d(-3.09442)
Width_Car_Main_04_Third_Intercept = 34

Pos_Rom_Main_St_05_Third_Intercept = v(-233, -62.8)
Orient_Rom_Main_St_05_Third_Intercept = 0
Width_Rom_Main_St_05_Third_Intercept = 21.9


function Start_Main_St_Third_Intercept()
	bm:out("Start_Main_St_Third_Intercept() called");
	
	Refresh_Main_Street_Combatants();
	
	-- Car ranged retreat
	SUnit_Car_Main_04.uc:goto_location_angle_width(Pos_Car_Main_04_Third_Intercept, Orient_Car_Main_04_Third_Intercept, Width_Car_Main_04_Third_Intercept, true);

	-- Car melee defense will fight forever
	SUnit_Car_Main_03.uc:morale_behavior_fearless();
	unit_max_casualties(SUnit_Car_Main_03, 0.75);
	
	-- Roman melee attack
	Move_To_Attack(bm, SUnit_Rom_Main_St_01, v(-225, 48), 0, 25, SUnit_Car_Main_03, 60, nil, 0.5, function() Main_St_Third_Intercept_Defeated() end);
	bm:callback(function() Move_To_Attack(bm, SUnit_Rom_Main_St_02, v(-205, 50), 0, 25, SUnit_Car_Main_03, 50, nil, 0.5, function() SUnit_Car_Main_03.uc:morale_behavior_rout() end) end, 2000);
	bm:callback(function() Move_To_Attack(bm, SUnit_Rom_Main_St_03, v(-205, 50), 0, 25, SUnit_Car_Main_03, 50, nil, 0.5, function() SUnit_Car_Main_03.uc:morale_behavior_rout() end) end, 8000);
	bm:callback(function() Move_To_Attack(bm, SUnit_Rom_Main_St_04, v(-205, 50), 0, 25, SUnit_Car_Main_03, 50, nil, 0.5, function() SUnit_Car_Main_03.uc:morale_behavior_rout() end) end, 12000);
	
	-- Roman velites
	bm:callback(function() SUnit_Rom_Main_St_05.uc:goto_location_angle_width(Pos_Rom_Main_St_05_Third_Intercept, Orient_Rom_Main_St_05_Third_Intercept, Width_Rom_Main_St_05_Third_Intercept, true) end, 15000);
end;


function Main_St_Third_Intercept_Defeated()
	bm:out("Main_St_Third_Intercept_Defeated() called :: how?");
end;









--
-- MID STREET
--

function Refresh_Mid_Street_Combatants()
	refresh_sunits(Rom_Mid_St);
	refresh_sunits(Car_Mid_St);
end;

Pos_Car_Mid_04_Near_Wall = v(-180,-55)
Orient_Car_Mid_04_Near_Wall = r_to_d(3.141)
Width_Car_Mid_04_Near_Wall = 29

function Mid_St_Ranged_Move_Near_Wall()
	SUnit_Car_Mid_04.uc:goto_location_angle_width(Pos_Car_Mid_04_Near_Wall, Orient_Car_Mid_04_Near_Wall, Width_Car_Mid_04_Near_Wall, true);
	SUnit_Car_Mid_04.uc:morale_behavior_fearless();
	SUnit_Car_Mid_04.uc:fire_at_will(false);
end;

Pos_Car_Mid_01_First_Intercept = v(-184.448,-83.3612)
Orient_Car_Mid_01_First_Intercept = r_to_d(-3.02559)
Width_Car_Mid_01_First_Intercept = 17.0323


function Start_Mid_St_First_Intercept()
	-- Car melee defense move to position
	--kill_on_rout(bm, SUnit_Car_Mid_01);
	SUnit_Car_Mid_01.uc:goto_location_angle_width(Pos_Car_Mid_01_First_Intercept, Orient_Car_Mid_01_First_Intercept, Width_Car_Mid_01_First_Intercept, true);
	
	Refresh_Mid_Street_Combatants();
	
	-- Start additional particle effects
	Start_East_Effects_Phase_2();
	
	-- Roman melee attack
	bm:callback(function() Move_To_Attack(bm, SUnit_Rom_Mid_St_01, v(-182, -47), 0, 25, SUnit_Car_Mid_01, 60, nil, 0.85, function() Start_Mid_St_Second_Intercept() end) end, 10000, "Mid_St_First_Attack");
	
	bm:callback(function() Move_To_Attack(bm, SUnit_Rom_Mid_St_02, v(-182, -47), 0, 25, SUnit_Car_Mid_01, 60, function() Mid_St_First_Intercept_Engaged() end, 0.85, function() Start_Mid_St_Second_Intercept() end) end, 5000, "Mid_St_First_Attack");
	
	bm:callback(function() Move_To_Attack(bm, SUnit_Rom_Mid_St_03, v(-182, -47), 0, 25, SUnit_Car_Mid_01, 60, nil, 0.85, function() Start_Mid_St_Second_Intercept() end) end, 35000, "Mid_St_First_Attack");
	
	-- Roman velites
	SUnit_Rom_Mid_St_04.uc:goto_location_angle_width(v(-190.3,-108.17), r_to_d(0.02), 37.67, true);
	
	-- Roman archers
	bm:callback(function() SUnit_Rom_Mid_St_Arch_01.uc:goto_location_angle_width(v(-189.77, -124), 0, 42.1, true) end, 20000, "Mid_St_First_Attack");
	
	-- background Roman attackers
	bm:callback(function() SUnit_Rom_Mid_St_03.uc:goto_location_angle_width(v(-193.11, -191.36), r_to_d(0.042), 18.7) end, 15000, "Mid_St_First_Attack");
end;


function Mid_St_First_Intercept_Engaged()
	
end;


Pos_Rom_Mid_St_03_Second_Intercept = v(-97.63, -41.054)
Orient_Rom_Mid_St_03_Second_Intercept = 0
Width_Rom_Mid_St_03_Second_Intercept = 40.75

Pos_Car_Mid_02_Second_Intercept = v(-102.24, -47.21)
Orient_Car_Mid_02_Second_Intercept = r_to_d(-1.582)
Width_Car_Mid_02_Second_Intercept = 19.98

Pos_Car_Mid_03_Second_Intercept = v(-95.6, 9.74)
Orient_Car_Mid_03_Second_Intercept = r_to_d(3.141)
Width_Car_Mid_03_Second_Intercept = 14.5

Pos_Rom_Mid_St_04_Second_Intercept = v(-153.7, -49.4)
Orient_Rom_Mid_St_04_Second_Intercept = r_to_d(1.58)
Width_Rom_Mid_St_04_Second_Intercept = 16.7

Pos_Car_Mid_04_Second_Intercept_Initial = v(-77.97, -46.7);
Pos_Car_Mid_04_Second_Intercept_Final = v(-95, -25.8);

BOOL_Mid_St_Second_Intercept_Started = false;

function Start_Mid_St_Second_Intercept()
	if BOOL_Mid_St_Second_Intercept_Started then
		return;
	end;
		
	BOOL_Mid_St_Second_Intercept_Started = true;
	
	bm:out("Starting Mid St Second Intercept");
	
	bm:remove_process("Mid_St_First_Attack");
		
	Boats_Fire_Inside_City_02();
	
	Refresh_Mid_Street_Combatants();
		
	-- Move Car melee defense in, make it undefeatable until we say otherwise
	bm:callback(function() SUnit_Car_Mid_02.uc:goto_location_angle_width(Pos_Car_Mid_02_Second_Intercept, Orient_Car_Mid_02_Second_Intercept, Width_Car_Mid_02_Second_Intercept, true) end, 5000);
	--kill_on_rout(bm, SUnit_Car_Mid_02);
	SUnit_Car_Mid_02.uc:morale_behavior_fearless();
	unit_max_casualties(SUnit_Car_Mid_02, 0.8);

	-- Car melee defense will start to take casualties when flanked from Dock St.
	bm:watch(
		function()
			return SUnit_Car_Mid_02.unit:position():distance_xz(SUnit_Rom_Dock_St_04.unit:position()) < 30
		end, 
		0, 
		function()
			unit_max_casualties(SUnit_Car_Mid_02, 0)
		end
	);
	
	-- Roman melee attack moves up
	SUnit_Rom_Mid_St_02.uc:halt();
	SUnit_Rom_Mid_St_03.uc:halt();
	Move_To_Attack(bm, SUnit_Rom_Mid_St_01, v(-96, -2), 0, 20, SUnit_Car_Mid_02, 30, function() Mid_St_Second_Intercept_Engaged() end, 0.7, function() Start_Mid_St_Third_Intercept() end);
	bm:callback(function() Move_To_Attack(bm, SUnit_Rom_Mid_St_02, v(-96, -2), 0, 20, SUnit_Car_Mid_02, 30, function() Mid_St_Second_Intercept_Engaged() end, 0.7, function() Start_Mid_St_Third_Intercept() end) end, 10000);
	bm:callback(function() Move_To_Attack(bm, SUnit_Rom_Mid_St_03, v(-96, -2), 0, 20, SUnit_Car_Mid_02, 30, function() Mid_St_Second_Intercept_Engaged() end, 0.7, function() Start_Mid_St_Third_Intercept() end) end, 18000);
	
	-- Roman velites move up
	bm:callback(function() SUnit_Rom_Mid_St_04.uc:goto_location_angle_width(Pos_Rom_Mid_St_04_Second_Intercept, Orient_Rom_Mid_St_04_Second_Intercept, Width_Rom_Mid_St_04_Second_Intercept, true) end, 20000);
	
	-- Car archers retreat
	SUnit_Car_Mid_04.uc:goto_location_angle_width(Pos_Car_Mid_04_Second_Intercept_Initial, r_to_d(1.578), 22.2, true);
	
	bm:watch(
		function()
			return SUnit_Car_Mid_04.unit:position():distance_xz(Pos_Car_Mid_04_Second_Intercept_Initial) < 30
		end,
		0,
		function()
			SUnit_Car_Mid_04.uc:goto_location_angle_width(v(-95, 76.8), 180, 13, true);
			
			bm:watch(
				function()
					return SUnit_Car_Mid_04.unit:position():distance_xz(Pos_Car_Mid_04_Second_Intercept_Final) < 30
				end,
				8000,
				function()
					SUnit_Car_Mid_04.uc:goto_location_angle_width(Pos_Car_Mid_04_Second_Intercept_Final, 180, 13, true);
				end
			);
		end
	);
	
	-- Some safety script for now - cache the health of the Car archers and rout/kill them if they get into combat (during this intercept)
	local Car_Mid_04_Health = SUnit_Car_Mid_04.unit:number_of_men_alive();
	bm:watch(
		function() 
			return SUnit_Car_Mid_04.unit:number_of_men_alive() < (Car_Mid_04_Health - 8)
		end, 
		0, 
		function() 
			SUnit_Car_Mid_04.uc:morale_behavior_rout();
			Really_kill_on_rout(bm, SUnit_Car_Mid_04);
			bm:callback(
				function()
					SUnit_Rom_Mid_St_02.uc:attack_unit(SUnit_Car_Mid_02.unit, true, true);
				end,
				8000
			);
		end, 
		"Car_Mid_04_Health"
	);
end;


Pos_Rom_Mid_St_Arch_01_Second_Blockade = v(-233.95,-113.7)
Orient_Rom_Mid_St_Arch_01_Second_Blockade = 0
Width_Rom_Mid_St_Arch_01_Second_Blockade = 34.1

BOOL_Mid_St_Second_Intercept_Engaged = false;

function Mid_St_Second_Intercept_Engaged()
	if BOOL_Mid_St_Second_Intercept_Engaged then
		return;
	end;

	BOOL_Mid_St_Second_Intercept_Engaged = true;
	
	bm:out("Mid_St_Second_Intercept_Engaged() called");
	
	--Start environment lerp
	--battle:start_lighting_environment_cross_fade(180);
	
	if BOOL_Dock_St_Second_Intercept_Started then
		SUnit_Rom_Dock_St_04.uc:attack_unit(SUnit_Car_Mid_02.unit, true, true);
	end;
	
	-- Kick some more smoke off
	Start_East_Effects_Phase_3();
	
	-- Roman archers
	SUnit_Rom_Mid_St_Arch_01.uc:goto_location_angle_width(Pos_Rom_Mid_St_Arch_01_Second_Blockade, Orient_Rom_Mid_St_Arch_01_Second_Blockade, Width_Rom_Mid_St_Arch_01_Second_Blockade, true);
	
	-- Next Carthaginian melee comes in, when it's in position rout the current lot
	SUnit_Car_Mid_03.uc:goto_location_angle_width(Pos_Car_Mid_03_Second_Intercept, Orient_Car_Mid_03_Second_Intercept, Width_Car_Mid_03_Second_Intercept, true);
	bm:watch(
		function()
			return SUnit_Car_Mid_03.unit:position():distance_xz(Pos_Car_Mid_03_Second_Intercept) < 50
		end,
		0,
		function()
			bm:out("Routing SUnit_Car_Mid_02");
			SUnit_Car_Mid_02.uc:morale_behavior_rout();
		end
	);
end;

Pos_Rom_Mid_St_04_Third_Intercept = v(-96.36, -25.35)
Orient_Rom_Mid_St_04_Third_Intercept = 0
Width_Rom_Mid_St_04_Third_Intercept = 13.3

BOOL_Mid_St_Third_Intercept_Started = false;

function Start_Mid_St_Third_Intercept()

	if BOOL_Mid_St_Third_Intercept_Started then
		return;
	end;

	BOOL_Mid_St_Third_Intercept_Started = true;
	
	bm:out("Starting Mid St Third Intercept");
	
	Refresh_Mid_Street_Combatants();
	
	bm:remove_process("Car_Mid_04_Health");
		
	-- Carth ranged retreat (inc temp guard against crash)
	if SUnit_Car_Mid_04.unit:number_of_men_alive() > 0 then
		SUnit_Car_Mid_04.uc:goto_location_angle_width(v(-100.581, 81.178), r_to_d(3.12194), 27.4129, true);
	end;

	-- Roman melee move
	SUnit_Rom_Mid_St_02.uc:halt();
	SUnit_Rom_Mid_St_03.uc:halt();
	SUnit_Rom_Dock_St_04.uc:halt();
	Move_To_Attack(bm, SUnit_Rom_Mid_St_01, v(-96, 52), 0, 20, SUnit_Car_Mid_03, 60, function() Mid_St_Third_Intercept_Engaged() end, 0.75, function() Mid_St_Third_Intercept_Defeated() end);
	bm:callback(function() Move_To_Attack(bm, SUnit_Rom_Mid_St_02, v(-96, 52), 0, 20, SUnit_Car_Mid_03, 60, function() Mid_St_Third_Intercept_Engaged() end, 0.75, function() Mid_St_Third_Intercept_Defeated() end) end, 10000);
	bm:callback(function() Move_To_Attack(bm, SUnit_Rom_Dock_St_04, v(-96, 52), 0, 20, SUnit_Car_Mid_03, 60, function() Mid_St_Third_Intercept_Engaged() end, 0.75, function() Mid_St_Third_Intercept_Defeated() end) end, 24000);
	bm:callback(function() Move_To_Attack(bm, SUnit_Rom_Mid_St_03, v(-96, -2), 0, 20, SUnit_Car_Mid_03, 60, function() Mid_St_Third_Intercept_Engaged() end, 0.75, function() Mid_St_Third_Intercept_Defeated() end) end, 30000);
	
	-- Roman ranged move
	bm:callback(function() SUnit_Rom_Mid_St_04.uc:goto_location_angle_width(Pos_Rom_Mid_St_04_Third_Intercept, Orient_Rom_Mid_St_04_Third_Intercept, Width_Rom_Mid_St_04_Third_Intercept, true) end, 10000);
	
	-- Carth melee unkillable until we want them to be (they get flanked)
	SUnit_Car_Mid_03.uc:morale_behavior_fearless();
	kill_on_rout(bm, SUnit_Car_Mid_03);
	unit_max_casualties(SUnit_Car_Mid_03, 0.85);
end;

BOOL_Mid_St_Third_Intercept_Engaged = false;

function Mid_St_Third_Intercept_Engaged()
	if BOOL_Mid_St_Third_Intercept_Engaged then
		return;
	end;

	BOOL_Mid_St_Third_Intercept_Engaged = true;
	
	bm:out("Mid_St_Third_Intercept_Engaged() called");

	-- borrow units from Dock St
	--SUnit_Rom_Dock_St_01.uc:attack_unit(SUnit_Car_Mid_03.unit, true, true);
	SUnit_Rom_Dock_St_02.uc:attack_unit(SUnit_Car_Mid_03.unit, true, true);
	
	bm:watch(
		function()
			return SUnit_Car_Mid_03.unit:position():distance_xz(SUnit_Rom_Dock_St_01.unit:position()) < 50 or
				SUnit_Car_Mid_03.unit:position():distance_xz(SUnit_Rom_Dock_St_02.unit:position()) < 50
		end,
		0,
		function()
			SUnit_Car_Mid_03.uc:morale_behavior_default();
			unit_max_casualties(SUnit_Car_Mid_03, 0);
		end
	);
end;


POS_Mid_St_Third_Intercept_Defeated = v(-97.06, 7.1);
POS_Mid_St_General_Third_Intercept_Defeated = v(-95.63, 18.85);

BOOL_Mid_St_Third_Intercept_Defeated = false;

function Mid_St_Third_Intercept_Defeated()
	if BOOL_Mid_St_Third_Intercept_Defeated then
		return;
	end;
	
	BOOL_Mid_St_Third_Intercept_Defeated = true;

	bm:out("Mid_St_Third_Intercept_Defeated() called");
	
	-- advance the general's unit if it's in the vicinity, otherwise advance the unit that flanked
	if SUnit_Rom_Mid_St_01.unit:position():distance_xz(POS_Mid_St_Third_Intercept_Defeated) < 25 then
		bm:out("Advancing Roman General");
	
		SUnit_Rom_Mid_St_01.uc:goto_location_angle_width(POS_Mid_St_General_Third_Intercept_Defeated, 0, 16.37);
		SUnit_Rom_Dock_St_02.uc:halt();
		
		--[[
		bm:watch(
			function()
				return SUnit_Rom_Mid_St_01.unit:position():distance_xz(POS_Mid_St_General_Third_Intercept_Defeated) < 15
			end,
			0,
			function()
				Launch_Projectile_At_Carthaginian_Tower();
			end
		);
		]]
	else
		bm:out("Advancing Roman stand-in General");
	
		SUnit_Rom_Dock_St_02.uc:goto_location_angle_width(POS_Mid_St_General_Third_Intercept_Defeated, 0, 16.37);
		--[[
		bm:watch(
			function()
				return SUnit_Rom_Dock_St_02.unit:position():distance_xz(POS_Mid_St_General_Third_Intercept_Defeated) < 15
			end,
			0,
			function()
				Launch_Projectile_At_Carthaginian_Tower();
			end
		);
		]]
	end;
		
	SUnit_Rom_Mid_St_02.uc:halt();	
	SUnit_Rom_Mid_St_03.uc:halt();	
	SUnit_Rom_Dock_St_01.uc:halt();	
	SUnit_Rom_Dock_St_04.uc:halt();
	
	bm:callback(function() Launch_Projectile_At_Carthaginian_Tower() end, 1000);
end;


function Launch_Projectile_At_Carthaginian_Tower()
	bm:out("Launching projectile at Carthaginian Tower");
	
	Building_Carthaginian_Tower:change_is_destructible(true);
	
	bm:trigger_projectile_launch("rock_large_flammable", v(100, 30, -90), v(-131, 35, 52));
	bm:callback(function() bm:trigger_projectile_launch("rock_large_flammable", v(110, 30, -78), v(-131, 33, 50)) end, 200);
	bm:callback(function() bm:trigger_projectile_launch("rock_large_flammable", v(120, 30, -72), v(-131, 33, 50)) end, 500);
	
	bm:steal_input_focus();
	cam:move_to(v(-98.14, 24.6, 14.66), v(-94.96, 19.86, 0.85), 3, false, 0);
	
	bm:callback(function() SUnit_Car_Mid_03.uc:kill() end, 1000);
	
	Start_North_Effects();
	
	Check_Carthaginian_Tower();
end;


function Check_Carthaginian_Tower()
	if Building_Carthaginian_Tower:health() < 1 then
		Destroy_Carthaginian_Tower();
	else
		bm:callback(function() Check_Carthaginian_Tower() end, 100);
	end;
end;


function Destroy_Carthaginian_Tower()
	bm:out("Destroying Carthaginian Tower");

	Building_Carthaginian_Tower:change_is_destructible(true);
	Building_Carthaginian_Tower:destroy();
	
	bm:callback(function() SUnit_Car_Mid_03.uc:kill() end, 5000);

	--bm:callback(function() Spawn_Elephants() end, 12000);
	Spawn_Elephants();
end;


function Spawn_Elephants()
	bm:out("Spawning Elephants");
	
	SUnit_Car_Mid_04.uc:teleport_to_location(v(-180, 75), 180, 30);
	
	bm:stop_music_custom_fade(0);
	bm:play_music("music_R2_Placeholder_C");

	local ELEPHANTS_SOUND = new_sfx("ELEPHANTS");
	local Elephant_Scene_Length = 14100;
	local POS_Elephant_Scene = v(-94.29, 14.6, 25.38);
	
	bm:cindy_playback("Script\\E3_Carthage\\cinematics\\elephants\\Elephants_Scene.xml", false, true); 
	
	bm:callback(function() play_sound(POS_Elephant_Scene, ELEPHANTS_SOUND) end, 8600);

	bm:out("Fade out");
	bm:callback(
		function() 
			cam:fade(true, 0.2);
			-- steal focus and hide ui
			
			bm:callback(
				function()
					bm:enable_cinematic_ui(true, false, true);
					
					bm:set_volume(VOLUME_TYPE_SFX, 0);
					bm:set_volume(VOLUME_TYPE_VO, 0);
				end,
				200
			);
		end, 
		Elephant_Scene_Length - 250
	);

	bm:callback(function() Transition_To_Outro() end, Elephant_Scene_Length + 500);
end;


function Transition_To_Outro()
	bm:out("Transition_To_Outro() called");
	
	cam:move_to(v(-634, 194.6, 620.5), v(-681.5, 220, 659), 0, true, 0);
	
	Unitcontroller_Rom_01_Nearly_All:set_invincible(false);
	Unitcontroller_Rom_01_Nearly_All:kill();
	Unitcontroller_Rom_02_All:set_invincible(false);
	Unitcontroller_Rom_02_All:kill();
	Unitcontroller_Car_Nearly_All:set_invincible(false);
	Unitcontroller_Car_Nearly_All:kill();
	
	bm:callback(function() Start_Outro() end, 3000);
end;


function Start_Outro()
	bm:out("Start_Outro() called");
	
	local Outro_Length = 38070;
	
	cam:fade(false, 1);
	
	Fade_Volume(bm, VOLUME_TYPE_SFX, 0, 100, 1);
	Fade_Volume(bm, VOLUME_TYPE_VO, 0, 100, 1);
	
	local OUTRO_SOUND = new_sfx("OUTRO");

	bm:out("Playing outro audio");
	play_sound(POS_play_sound, OUTRO_SOUND);

	bm:out("Playing outro cutscene sequence");
	bm:cindy_playback("Script\\E3_Carthage\\cinematics\\outro\\Outro_01.xml", false); 
	bm:cindy_playback("Script\\E3_Carthage\\cinematics\\outro\\Outro_02.xml", false); 
	bm:cindy_playback("Script\\E3_Carthage\\cinematics\\outro\\Outro_03.xml", false); 
	bm:cindy_playback("Script\\E3_Carthage\\cinematics\\outro\\Outro_04.xml", false); 
	bm:cindy_playback("Script\\E3_Carthage\\cinematics\\outro\\Outro_05.xml", false); 
	bm:cindy_playback("Script\\E3_Carthage\\cinematics\\outro\\Outro_06.xml", true, true);

	bm:callback(function() Outro_Cutscene_Has_Finished() end, (Outro_Length - 4500));
end;
	
	
function Outro_Cutscene_Has_Finished()
	bm:out("Outro_Cutscene_Has_Finished");
	
	cam:fade(true, 2);
	
	bm:callback(
		function()
			bm:set_volume(VOLUME_TYPE_SFX, 75);
			bm:set_volume(VOLUME_TYPE_VO, 75);
			bm:set_volume(VOLUME_TYPE_MUSIC, 75);
		end, 
		1400
	);
		
	bm:callback(
		function()
			bm:set_volume(VOLUME_TYPE_SFX, 50);
			bm:set_volume(VOLUME_TYPE_VO, 50);
			bm:set_volume(VOLUME_TYPE_MUSIC, 50);
		end, 
		1600
	);
	
	bm:callback(
		function()
			bm:set_volume(VOLUME_TYPE_SFX, 25);
			bm:set_volume(VOLUME_TYPE_VO, 25);
			bm:set_volume(VOLUME_TYPE_MUSIC, 25);
		end, 
		1800
	);
		
	bm:callback(
		function()
			bm:set_volume(VOLUME_TYPE_SFX, 0);
			bm:set_volume(VOLUME_TYPE_VO, 0);
			bm:set_volume(VOLUME_TYPE_MUSIC, 0);
		end, 
		2000
	);
	
	bm:callback(function() bm:play_movie("RomeII_Demo_Logo.ca_vp8", false) end, 3500);
	
	-- additional call to make the battle end
	bm:callback(function() End_Battle() end, 30000);
end;


function End_Battle()
	bm:out("Ending battle");
	Unitcontroller_Rom_01_All:morale_behavior_rout();
	Unitcontroller_Rom_02_All:morale_behavior_rout();
	Unitcontroller_Car_All:morale_behavior_rout();
	bm:change_victory_countdown_limit(0);
end;






--
-- DOCK STREET
--

Pos_Car_Dock_01_First_Intercept = v(-8.49217,-140.066)
Orient_Car_Dock_01_First_Intercept = r_to_d(2.81898)
Width_Car_Dock_01_First_Intercept = 17.11

Pos_Car_Dock_02_First_Intercept = v(-27.2438,-146.4)
Orient_Car_Dock_02_First_Intercept = r_to_d(2.81361)
Width_Car_Dock_02_First_Intercept = 17.0997

Pos_Car_Dock_06_First_Intercept = v(-14.55,-110)
Orient_Car_Dock_06_First_Intercept = r_to_d(-3.11)
Width_Car_Dock_06_First_Intercept = 22.53

Pos_Rom_Dock_St_07_First_Intercept = v(-6.06,-170.27)
Orient_Rom_Dock_St_07_First_Intercept = r_to_d(-0.31)
Width_Rom_Dock_St_07_First_Intercept = 32.73

POS_Car_Dock_04_Second_Intercept_Waypoint = v(-19, 9);

POS_Wall_Breach = v(-17, -213);

POS_Car_Dock_06_Far_Retreat = v(9.3, 182);
Orient_Car_Dock_06_Far_Retreat = 180;
Width_Car_Dock_06_Far_Retreat = 24.15;

function Refresh_Dock_Street_Combatants()
	refresh_sunits(Rom_Dock_St);
	refresh_sunits(Car_Dock_St);
end;

function Start_Dock_St_First_Intercept()
	bm:out("Start_Dock_St_First_Intercept() called");
	
	Refresh_Dock_Street_Combatants();
	
	-- move first unit and the the second when the first nears the breach
	Move_To_Attack(bm, SUnit_Rom_Dock_St_02, v(-35.00, -144.80), r_to_d(6.22), 24.1, SUnit_Car_Dock_02, 30, function() Dock_St_First_Blockade_Engaged() end, 0.75, function() SUnit_Car_Dock_01.uc:morale_behavior_rout(); Start_Dock_St_Second_Intercept() end);
	Move_To_Attack(bm, SUnit_Rom_Dock_St_03, v(-7.95, -143.19), r_to_d(6.22), 24.1, SUnit_Car_Dock_01, 30, function() Dock_St_First_Blockade_Engaged() end, 0.75, function() SUnit_Car_Dock_02.uc:morale_behavior_rout(); Start_Dock_St_Second_Intercept() end);
	
	-- Car javelin run in to cover entrance and then retreat when melee come through
	SUnit_Car_Dock_06.uc:morale_behavior_fearless();
	SUnit_Car_Dock_06.uc:goto_location(v(-9, -160), true);
	bm:watch(
		function() 
			return SUnit_Car_Dock_06.unit:unit_distance(SUnit_Rom_Dock_St_02.unit) < 40 or
			SUnit_Car_Dock_06.unit:unit_distance(SUnit_Rom_Dock_St_03.unit) < 40
		end, 
		0, 
		function()		
			SUnit_Car_Dock_06.uc:goto_location_angle_width(POS_Car_Dock_06_Far_Retreat, Orient_Car_Dock_06_Far_Retreat, Width_Car_Dock_06_Far_Retreat, true);			
			
			bm:watch(
				function()
					return SUnit_Car_Dock_06.unit:position():distance_xz(Pos_Car_Dock_06_First_Intercept) < 30
				end,
				8000,
				function()				
					SUnit_Car_Dock_06.uc:goto_location_angle_width(Pos_Car_Dock_06_First_Intercept, Orient_Car_Dock_06_First_Intercept, Width_Car_Dock_06_First_Intercept, true)
				end
			);	
		end
	);
	
	SUnit_Car_Dock_01.uc:goto_location_angle_width(Pos_Car_Dock_01_First_Intercept, Orient_Car_Dock_01_First_Intercept, Width_Car_Dock_01_First_Intercept, true);	
	SUnit_Car_Dock_02.uc:goto_location_angle_width(Pos_Car_Dock_02_First_Intercept, Orient_Car_Dock_02_First_Intercept, Width_Car_Dock_02_First_Intercept, true);
	
	kill_on_rout(bm, SUnit_Car_Dock_02);
	kill_on_rout(bm, SUnit_Car_Dock_01);
	
	bm:callback(function() SUnit_Rom_Dock_St_07.uc:goto_location_angle_width(Pos_Rom_Dock_St_07_First_Intercept, Orient_Rom_Dock_St_07_First_Intercept, Width_Rom_Dock_St_07_First_Intercept, true) end, 20000);
	
	--[[
	bm:callback(
							function()
								Move_To_Attack(bm, SUnit_Rom_Dock_St_01, v(-35.00, -144.80), r_to_d(6.22), 24.1, SUnit_Car_Wall_02, 40, function() Dock_St_First_Blockade_Engaged() end, 0.75, function() Start_Dock_St_Second_Intercept() end);
							end,
							25000, -- can't be less than 20000
							"Roman_Second_Enters_Town"
						);
	]]
						
	-- move next wave Car melee unit closer
	bm:callback(function() SUnit_Car_Dock_04.uc:goto_location_angle_width(v(-55.86, 146.1), r_to_d(1.57), 21.5, true) end, 10000);	
end;



Pos_Car_Dock_03_Second_Intercept = v(-1.44,-36.97)
Orient_Car_Dock_03_Second_Intercept = r_to_d(-3.1)
Width_Car_Dock_03_Second_Intercept = 17.5

Pos_Car_Dock_04_Second_Intercept = v(-20.93,-36.23)
Orient_Car_Dock_04_Second_Intercept = r_to_d(-3.1)
Width_Car_Dock_04_Second_Intercept = 17.5

Pos_Car_Dock_05_Second_Intercept = v(-4.94861,36.3542)
Orient_Car_Dock_05_Second_Intercept = r_to_d(-3.13392)
Width_Car_Dock_05_Second_Intercept = 26.9543

Pos_Car_Dock_06_Second_Intercept = v(-11.69,-0.189)
Orient_Car_Dock_06_Second_Intercept = r_to_d(3.09)
Width_Car_Dock_06_Second_Intercept = 36.73

Pos_Rom_Dock_St_07_Second_Intercept = v(-13.85,-88.34)
Orient_Rom_Dock_St_07_Second_Intercept = 0
Width_Rom_Dock_St_07_Second_Intercept = 26.8


BOOL_Dock_St_First_Intercept_Engaged = false;

function Dock_St_First_Blockade_Engaged()
	if BOOL_Dock_St_First_Intercept_Engaged then
		return;
	end;
	
	BOOL_Dock_St_First_Intercept_Engaged = true;
	
	Prepare_Dock_St_Second_Blockade();

	bm:callback(
		function()
			if not BOOL_Dock_St_Second_Intercept_Started then
				SUnit_Rom_Dock_St_04.uc:attack_unit(SUnit_Car_Dock_02.unit, true, true);
				SUnit_Rom_Dock_St_05.uc:change_fatigue_amount(0.1);
				SUnit_Rom_Dock_St_06.uc:change_fatigue_amount(0.1);
				bm:out("Ordering SUnit_Rom_Dock_St_05 and SUnit_Rom_Dock_St_06 into Dock St");
				Move_To_Attack(bm, SUnit_Rom_Dock_St_05, v(-35.00, -144.80), r_to_d(6.22), 24.1, SUnit_Car_Dock_02, 60, nil, 0.82, nil);
				Move_To_Attack(bm, SUnit_Rom_Dock_St_06, v(-7.95, -143.19), r_to_d(6.22), 24.1, SUnit_Car_Dock_01, 60, nil, 0.82, nil);
			end;
		end,
		100
	);
end;

function Prepare_Dock_St_Second_Blockade()

	-- start the next Car melee defense line moving
	SUnit_Car_Dock_03.uc:goto_location_angle_width(Pos_Car_Dock_03_Second_Intercept, Orient_Car_Dock_03_Second_Intercept, Width_Car_Dock_03_Second_Intercept, true);
	SUnit_Car_Dock_04.uc:goto_location_angle_width(Pos_Car_Dock_04_Second_Intercept, Orient_Car_Dock_04_Second_Intercept, Width_Car_Dock_04_Second_Intercept, true);
end;

Pos_Rom_Dock_St_Arch_01_Second_Blockade = v(-14.86, -132.42);
Orient_Rom_Dock_St_Arch_01_Second_Blockade = 0;
Width_Rom_Dock_St_Arch_01_Second_Blockade = 35.43

BOOL_Dock_St_Second_Intercept_Started = false;

function Start_Dock_St_Second_Intercept()	
	if BOOL_Dock_St_Second_Intercept_Started then
		return;
	end;
	
	BOOL_Dock_St_Second_Intercept_Started = true;
	
	bm:out("Start_Dock_St_Second_Intercept() called");
	
	Refresh_Dock_Street_Combatants();
	
	bm:remove_process("Roman_Second_Enters_Town");
	
	-- third wave Car melee move closer
	SUnit_Car_Dock_05.uc:goto_location_angle_width(Pos_Car_Dock_05_Second_Intercept, Orient_Car_Dock_05_Second_Intercept, Width_Car_Dock_05_Second_Intercept, true);

	-- hacky way of making the car ranged retreat nicely	
	SUnit_Car_Dock_06.uc:goto_location_angle_width(POS_Car_Dock_06_Far_Retreat, Orient_Car_Dock_06_Far_Retreat, Width_Car_Dock_06_Far_Retreat, true);			
	bm:watch(
		function()
			return SUnit_Car_Dock_06.unit:position():distance_xz(Pos_Car_Dock_06_Second_Intercept) < 30
		end,
		8000,
		function()			
			SUnit_Car_Dock_06.uc:goto_location_angle_width(Pos_Car_Dock_06_Second_Intercept, Orient_Car_Dock_06_Second_Intercept, Width_Car_Dock_06_Second_Intercept, true)
		end
	);

	-- Main Roman melee
	Move_To_Attack(bm, SUnit_Rom_Dock_St_02, v(-18, 13), 0, 24, SUnit_Car_Dock_04, 30, function() Dock_St_Second_Intercept_Start_Ship_Attack() end, 0.7, function() SUnit_Car_Dock_03.uc:morale_behavior_rout(); Dock_St_Start_Third_Intercept() end);
	Move_To_Attack(bm, SUnit_Rom_Dock_St_03, v(3, 13), 0, 24, SUnit_Car_Dock_03, 30, nil, 0.7, function() SUnit_Car_Dock_04.uc:morale_behavior_rout(); Dock_St_Start_Third_Intercept() end);
	
	-- Moves off to Mid St (or into a position to go off to Mid Street)
	if BOOL_Mid_St_Second_Intercept_Engaged then
		SUnit_Rom_Dock_St_04.uc:attack_unit(SUnit_Car_Mid_02.unit, true, true);
	else
		SUnit_Rom_Dock_St_04.uc:goto_location_angle_width(v(-14.4, -60.7), 0, 18.3, true);
	end;
	
	-- Additional Roman melee
	bm:callback(
		function()
			Move_To_Attack(bm, SUnit_Rom_Dock_St_01, v(-18, 13), 0, 24, SUnit_Car_Dock_04, 30, nil, 0.7, nil);
			Move_To_Attack(bm, SUnit_Rom_Dock_St_05, v(3, 13), 0, 24, SUnit_Car_Dock_03, 30, nil, 0.7, nil);
			Move_To_Attack(bm, SUnit_Rom_Dock_St_06, v(3, 13), 0, 24, SUnit_Car_Dock_03, 30, nil, 0.7, nil)
		end,
		2000
	);
	
	-- Roman archers
	SUnit_Rom_Dock_St_Arch_01.uc:goto_location_angle_width(Pos_Rom_Dock_St_Arch_01_Second_Blockade, Orient_Rom_Dock_St_Arch_01_Second_Blockade, Width_Rom_Dock_St_Arch_01_Second_Blockade, true);
	
	-- Roman velites
	bm:callback(
		function() 
			SUnit_Rom_Main_07.uc:change_fatigue_amount(0.1); 
			SUnit_Rom_Dock_St_07.uc:goto_location_angle_width(Pos_Rom_Dock_St_07_Second_Intercept, Orient_Rom_Dock_St_07_Second_Intercept, Width_Rom_Dock_St_07_Second_Intercept, true) 
		end, 
		18000
	);
	
	-- second intercept cannot be defeated until Mid St is in position
	unit_max_casualties(SUnit_Car_Dock_03, 0.8);
	unit_max_casualties(SUnit_Car_Dock_04, 0.8);
	SUnit_Car_Dock_03.uc:morale_behavior_fearless();
	SUnit_Car_Dock_04.uc:morale_behavior_fearless();
	bm:watch(
		function() 
			return BOOL_Mid_St_Second_Intercept_Engaged 
		end, 
		0, 
		function() 
			unit_max_casualties(SUnit_Car_Dock_03, 0);
			unit_max_casualties(SUnit_Car_Dock_04, 0);
			SUnit_Car_Dock_03.uc:morale_behavior_default();
			SUnit_Car_Dock_04.uc:morale_behavior_default()
		end
	);
end;


function Dock_St_Second_Intercept_Start_Ship_Attack()
	bm:out("Dock_St_Second_Intercept_Start_Ship_Attack() called");
	
	Rom_Harbour_01_Fires_On_Docks();	
end;

Pos_Car_Dock_06_Third_Intercept = v(-4.06,51.14)
Orient_Car_Dock_06_Third_Intercept = r_to_d(-3.13)
Width_Car_Dock_06_Third_Intercept = 35.93





BOOL_Dock_St_Third_Intercept_Started = false;

function Dock_St_Start_Third_Intercept()
	if BOOL_Dock_St_Third_Intercept_Started then
		return;
	end;
	
	BOOL_Dock_St_Third_Intercept_Started = true;
	
	bm:out("Dock_St_Start_Third_Intercept() called");
	
	Stop_Rom_Harbour_01_Firing_On_Docks();
	
	Refresh_Dock_Street_Combatants();
	
	-- halt boats
	SUnit_Rom_Harbour_01.uc:halt();
	
	-- Retreat Car ranged
	SUnit_Car_Dock_06.uc:goto_location_angle_width(Pos_Car_Dock_06_Third_Intercept, Orient_Car_Dock_06_Third_Intercept, Width_Car_Dock_06_Third_Intercept, true);

	-- Ensure previous wave are routed
	SUnit_Car_Dock_03.uc:morale_behavior_rout();
		
	-- Car defenders won't die
	SUnit_Car_Dock_05.uc:morale_behavior_fearless();
	unit_max_casualties(SUnit_Car_Dock_05, 0.7);
	
	SUnit_Car_Dock_06.uc:morale_behavior_fearless();
	unit_max_casualties(SUnit_Car_Dock_06, 0.7);
	
	SUnit_Car_Art_04.uc:morale_behavior_fearless();
	unit_max_casualties(SUnit_Car_Art_04, 0.7);
	
	-- set Roman attackers off
	bm:callback(
							function()
								if not BOOL_Mid_St_Third_Intercept_Engaged then
									-- Roman attackers that will divert to Dock St.
									SUnit_Rom_Dock_St_01.uc:attack_unit(SUnit_Car_Dock_05.unit);
									SUnit_Rom_Dock_St_02.uc:goto_location_angle_width(v(-18.12, 6.33), r_to_d(0.041), 16.5);
								end;
								SUnit_Rom_Dock_St_03.uc:attack_unit(SUnit_Car_Dock_05.unit, true, true);
								if not is_routing_or_dead(SUnit_Car_Dock_06.unit) then
									SUnit_Rom_Dock_St_05.uc:attack_unit(SUnit_Car_Dock_06.unit, true, true);
								else
									SUnit_Rom_Dock_St_05.uc:attack_unit(SUnit_Car_Dock_05.unit, true, true);
								end;
								SUnit_Rom_Dock_St_06.uc:attack_unit(SUnit_Car_Art_04.unit, true, true);
							end,
							5000
						);
					
	-- Roman ranged
	SUnit_Rom_Dock_St_07.uc:goto_location_angle_width(v(-10.87, 21.18), 0, 33.12, true);
	SUnit_Rom_Dock_St_Arch_01.uc:goto_location_angle_width(v(-11.9, -48.76), r_to_d(-0.41), 33.3, true);
end;









C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\e3_carthage\e3_west.lua
------------------------------------------------------------------------------------------------
--------------------------------------- FIRST PHASE --------------------------------------------
------------------------------------------------------------------------------------------------

function Start_Roman_West_Assault()
	PM_Rom_West_01:start();
	PM_Rom_West_02:start();
	PM_Rom_West_03:start();
	PM_Rom_West_05:start();
	PM_Rom_West_06:start();
	PM_Rom_West_10:start();
	PM_Rom_West_11:start();
	PM_Rom_West_12:start();
	unit_max_casualties(SUnit_Car_Wall_10, 0.60);
	unit_max_casualties(SUnit_Car_Wall_07, 0.60);
	unit_max_casualties(SUnit_Car_Wall_05, 0.60);
	SUnit_Rom_West_Art_01.uc:fire_at_will(false);
	SUnit_Rom_West_Art_03.uc:fire_at_will(false);
	bm:callback(function() Bombardment_West_Phase_1_A() end, 1000);
	bm:callback(function() Bombardment_West_Phase_1_B() end, 1000);
	bm:callback(function() Start_West_Effects_Phase_1() end, 40000);
	SUnit_Car_Wall_10.uc:morale_behavior_fearless();
	SUnit_Car_Wall_07.uc:morale_behavior_fearless();
	SUnit_Car_Wall_05.uc:morale_behavior_fearless();
	SUnit_Car_Wall_09.uc:morale_behavior_fearless();
	unit_max_casualties(SUnit_Car_Wall_09, 0.50);
end;

------------------------------------------
-------------- Artillery -----------------
------------------------------------------


function Bombardment_West_Phase_1_A()
	bm:repeat_callback(function() bm:trigger_projectile_launch("rock_large_flammable",  v(-514.6, 15, -525.3), v(-546, 20, -208)) end, 28000, "Salvo 1, fire!_1");
	bm:repeat_callback(function() bm:trigger_projectile_launch("rock_large_flammable",  v(-522.2, 15, -527.6), v(-557, 26, -161)) end, 31000, "Salvo 1, fire!_2");
	bm:repeat_callback(function() bm:trigger_projectile_launch("rock_large_flammable",  v(-529.9, 15, -528.6), v(-595, 22, -190)) end, 26000, "Salvo 1, fire!_3");
	bm:repeat_callback(function() bm:trigger_projectile_launch("rock_large_flammable",  v(-536.5, 15, -530.0), v(-638, 24, -199)) end, 33000, "Salvo 1, fire!_4");
end;

function Bombardment_West_Phase_1_B()
	bm:repeat_callback(function() bm:trigger_projectile_launch("rock_large_flammable",  v(-928.1, 12.5, -430.0), v(-654, 20, -205)) end, 46000, "Salvo 2, fire!_1");
	bm:repeat_callback(function() bm:trigger_projectile_launch("rock_large_flammable",  v(-933.8, 12.5, -423.9), v(-658, 20, -204)) end, 38000, "Salvo 2, fire!_2");
	bm:repeat_callback(function() bm:trigger_projectile_launch("rock_large_flammable",  v(-938.2, 12.5, -417.9), v(-703, 18, -187)) end, 42000, "Salvo 2, fire!_3");
	bm:repeat_callback(function() bm:trigger_projectile_launch("rock_large_flammable",  v(-943, 12.5, -410), v(-698, 20, -170)) end, 50000, "Salvo 2, fire!_4");
end;


--------------------------------------
-------------- Infantry --------------
--------------------------------------

PM_Rom_West_01 = patrol_manager:new(
	"Rom_West_01",                                                           
	SUnit_Rom_West_01,
	Armies_Car,                                                              
	10,
	20,
	20
);

--PM_Rom_West_01:set_debug_all();
PM_Rom_West_01:set_width(12.4);
PM_Rom_West_01:add_waypoint(v(-865.384, -634.784), true);
PM_Rom_West_01:add_waypoint(v(-864.571, -517.46), true);
PM_Rom_West_01:add_waypoint(v(-795.001, -461.3), true);
PM_Rom_West_01:add_waypoint(v(-743.286, -484.952), true);

PM_Rom_West_02 = patrol_manager:new(
	"Rom_West_02",                                                       
	SUnit_Rom_West_02,
	Armies_Car,                                                      
	10,
	20,
	20
);

PM_Rom_West_02:set_completion_callback(function() Phase_2_allied_assault_siege_tower_1() end);

PM_Rom_West_02:set_width(12.4);
PM_Rom_West_02:add_waypoint(v(-836.781, -635.601), true);
PM_Rom_West_02:add_waypoint(v(-831.994, -522.832), true);
PM_Rom_West_02:add_waypoint(v(-791.284, -459.169), true);
PM_Rom_West_02:add_waypoint(v(-735.099, -475.968), true);
PM_Rom_West_02:add_waypoint(v(-730.4, -462.943), true);

PM_Rom_West_03 = patrol_manager:new(
	"Rom_West_03",
	SUnit_Rom_West_03,
	Armies_Car,
	10,
	20,
	20
);

PM_Rom_West_03:set_width(12.4);
PM_Rom_West_03:add_waypoint(v(-766.461, -530.696), true);
PM_Rom_West_03:add_waypoint(v(-699.461, -520.622), true);
PM_Rom_West_03:add_waypoint(v(-704.266, -484.497), true);

PM_Rom_West_05 = patrol_manager:new(
	"Rom_West_05",                                                           
	SUnit_Rom_West_05,
	Armies_Car,
	10,
	20,
	20
);

PM_Rom_West_05:set_completion_callback(function() Phase_2_allied_assault_siege_tower_2() end);

PM_Rom_West_05:set_width(12.4);
PM_Rom_West_05:add_waypoint(v(-681.466, -551.56), true);
PM_Rom_West_05:add_waypoint(v(-677.288, -479.398), true);
PM_Rom_West_05:add_waypoint(v(-621.953, -476.113), true);

PM_Rom_West_06 = patrol_manager:new(
	"Rom_West_06",
	SUnit_Rom_West_06,
	Armies_Car,
	10,
	20,
	20
);

PM_Rom_West_06:set_width(12.4);
PM_Rom_West_06:add_waypoint(v(-659.574, -660.759), true);
PM_Rom_West_06:add_waypoint(v(-560.263, -495.783), true);
PM_Rom_West_06:add_waypoint(v(-566.335, -499.338), true);

--------------------------------------
-------------- Projectile ------------
--------------------------------------

PM_Rom_West_10 = patrol_manager:new(
	"Rom_West_10",
	SUnit_Rom_West_10,
	Armies_Car,
	10,
	20,
	20
);

PM_Rom_West_10:set_completion_callback(function() Phase_2_allied_assault_Rom_West_10() end);

PM_Rom_West_10:set_width(16.9);
PM_Rom_West_10:add_waypoint(v(-739.645, -523.421), true);
PM_Rom_West_10:add_waypoint(v(-683.89, -538.07), true);
PM_Rom_West_10:add_waypoint(v(-680.381, -485.325), true);

function Phase_2_allied_assault_Rom_West_10()
	SUnit_Rom_West_10.uc:goto_location_angle_width(v(-666.975, -460.368), r_to_d(0.050142), 57.7462, true);
	SUnit_Rom_West_10.uc:fire_at_will(true);
	unit_max_casualties(SUnit_Rom_West_10, 0.80);
end;

PM_Rom_West_11 = patrol_manager:new(
	"Rom_West_11",
	SUnit_Rom_West_11,
	Armies_Car,                                                             
	10,                                                                      
	20,                                                                     
	20
);

PM_Rom_West_11:set_completion_callback(function() Phase_2_allied_assault_Rom_West_11() end);

PM_Rom_West_11:set_width(16.9);
PM_Rom_West_11:add_waypoint(v(-857.266, -621.76), true);
PM_Rom_West_11:add_waypoint(v(-834.254, -522.049), true);
PM_Rom_West_11:add_waypoint(v(-795.612, -455.336), true);

function Phase_2_allied_assault_Rom_West_11()
	SUnit_Rom_West_11.uc:goto_location_angle_width(v(-773.63, -441.382), r_to_d(0.355788), 68.1557, true);
	SUnit_Rom_West_11.uc:fire_at_will(true);
	unit_max_casualties(SUnit_Rom_West_11, 0.80);
end;

PM_Rom_West_12 = patrol_manager:new(
	"Rom_West_12",
	SUnit_Rom_West_12,
	Armies_Car,
	10,
	20,
	20
);

PM_Rom_West_12:set_completion_callback(function() Phase_2_allied_assault_Rom_West_12() end);

PM_Rom_West_12:set_width(16.9);
PM_Rom_West_12:add_waypoint(v(-675.314, -568.931), true);
PM_Rom_West_12:add_waypoint(v(-550.201, -525.59), true);

function Phase_2_allied_assault_Rom_West_12()
	SUnit_Rom_West_12.uc:goto_location_angle_width(v(-534.915, -452.817), r_to_d(-0.366526), 69.8545, true);
	SUnit_Rom_West_12.uc:fire_at_will(true);
	SUnit_Car_Wall_10.uc:fire_at_will(true);
	unit_max_casualties(SUnit_Rom_West_12, 0.80);
	PM_Rom_West_13:start();
	PM_Rom_West_14:start();
	PM_Rom_West_15:start();
	PM_Rom_West_16:start();
end;


--------------------------------------
-------------- Cavalry ---------------
--------------------------------------


PM_Rom_West_13 = patrol_manager:new(
	"Rom_West_13",
	SUnit_Rom_West_13,
	Armies_Car,
	10,
	20,
	20
);

PM_Rom_West_13:set_width(15.4);
PM_Rom_West_13:add_waypoint(v(-755.179, -585.561), false);

PM_Rom_West_14 = patrol_manager:new(
	"Rom_West_14",
	SUnit_Rom_West_14,
	Armies_Car,
	10,
	20,
	20
);

PM_Rom_West_14:set_width(15.4);
PM_Rom_West_14:add_waypoint(v(-661.884, -672.484), false);
PM_Rom_West_14:add_waypoint(v(-480.927, -448.679), false);

PM_Rom_West_15 = patrol_manager:new(
	"Rom_West_15",
	SUnit_Rom_West_15,
	Armies_Car,
	10,
	20,
	20
);

PM_Rom_West_15:set_width(15.4);
PM_Rom_West_15:add_waypoint(v(-649.475, -686.032), false);
PM_Rom_West_15:add_waypoint(v(-450.963, -458.314), false);
PM_Rom_West_15:add_waypoint(v(-464.358, -482.478), false);
PM_Rom_West_15:add_waypoint(v(-463.328, -443.133), false);

PM_Rom_West_16 = patrol_manager:new(
	"Rom_West_16",
	SUnit_Rom_West_16,
	Armies_Car,
	10,
	20,
	20
);
									
PM_Rom_West_16:set_width(15.4);
PM_Rom_West_16:add_waypoint(v(-493.741, -478.55), false);

------------------------------------------------------------------------------------------------
--------------------------------------- SECOND PHASE -------------------------------------------
------------------------------------------------------------------------------------------------

POS_Rom_allies_rally_01 = v(-683, -303);
POS_Rom_allies_rally_02 = v(-674, -290);
POS_Car_allies_rally_01 = v(-484.427, -233.594);
POS_Car_allies_rally_02 = v(-781, -246);

unit_max_casualties(SUnit_Rom_West_02, 0.60);
unit_max_casualties(SUnit_Rom_West_05, 0.60);
SUnit_Rom_West_02.uc:morale_behavior_fearless();
SUnit_Rom_West_05.uc:morale_behavior_fearless();


function Phase_2_allied_assault_siege_tower_1()
	bm:out("Allied_unit_1_use_siege() called");
	Use_Siege_Tower(
						bm,
						SUnit_Rom_West_02,
						Siege_Tower_05, 
						Building_Wall_Dock_Point_5,
						function()
							SUnit_Car_Wall_09.uc:morale_behavior_default();
							unit_max_casualties(SUnit_Car_Wall_09, 0);
							SUnit_Rom_West_02.uc:attack_unit(SUnit_Car_Wall_09.unit, true, true);	
							SUnit_Car_Wall_09.uc:attack_unit(SUnit_Rom_West_02.unit, true, true);
							bm:watch(function() return is_routing_or_dead(SUnit_Car_Wall_09.unit) end, 0, function() Phase_2_allied_assault_on_walls() end);
						end
					);
	
	--Start_Audio_Call_And_Response_Test();

end;

function Phase_2_allied_assault_siege_tower_2()
	bm:out("Allied_unit_2_use_siege() called");
	Use_Siege_Tower(
						bm,
						SUnit_Rom_West_05,
						Siege_Tower_04, 
						Building_Wall_Dock_Point_6, 
						function() 
							SUnit_Rom_West_05.uc:attack_unit(SUnit_Car_Wall_08.unit, true, true);	
							SUnit_Car_Wall_08.uc:attack_unit(SUnit_Rom_West_05.unit, true, true);
						end
					);
	bm:watch(function() return is_routing_or_dead(SUnit_Car_Wall_08.unit) end, 0, function() Phase_2_allied_assault_on_walls_2() end);
end;

function Phase_2_allied_assault_on_walls()
	bm:out("Allies, to the rally point West");
		SUnit_Rom_West_01.uc:goto_location_angle_width(v(-840, -125), r_to_d(0.0423762), 12.4, true);
		SUnit_Rom_West_03.uc:goto_location_angle_width(v(-860, -165), r_to_d(0.144674), 12.4, true);
		SUnit_Rom_West_06.uc:goto_location_angle_width(v(-864.433, -132.779), r_to_d(-0.320794), 12.4, true);
		SUnit_Rom_West_02.uc:goto_location_angle_width(v(-726, -305), r_to_d(0.0250231), 12.4, true);
		SUnit_Car_Wall_10.uc:goto_location_angle_width(v(-784.719, -243.311), r_to_d(1.61413), 46.567, true);
		SUnit_Car_Wall_05.uc:goto_location_angle_width(v(-536.121, -281.635), r_to_d(-0.772935), 51.5343, true);
		SUnit_Car_Wall_07.uc:goto_location_angle_width(v(-489.594, -224.346), r_to_d(-0.769771), 31.0525, true);
	bm:watch(function() return SUnit_Car_Wall_10.unit:position():distance_xz(v(-784.719, -243.311)) < 30 end, 50000, function() Allied_city_street_battle_1() end);
	bm:watch(function() return SUnit_Car_Wall_07.unit:position():distance_xz(v(-489.594, -224.346)) < 30 end, 50000, function() Allied_city_street_battle_2() end);
	bm:callback(function() Bombardment_West_Phase_2_A() end, 1000);
	bm:callback(function() Bombardment_West_Phase_2_B() end, 1000);
	Start_West_Effects_Phase_2()
	Start_Mid_Beach_Attack();
end;

function Phase_2_allied_assault_on_walls_2()
	bm:out("Allies, to the rally point East");
		SUnit_Rom_West_05.uc:goto_location_angle_width(v(-596, -324), r_to_d(1.51337), 29, true);
		SUnit_Car_Wall_08.uc:goto_location_angle_width(POS_Car_allies_rally_01, r_to_d(0.0423762), 20, true);
end;

function Bombardment_West_Phase_2_A()
	bm:remove_process("Salvo 1, fire!_1");
	bm:remove_process("Salvo 1, fire!_2");
	bm:remove_process("Salvo 1, fire!_3");
	bm:remove_process("Salvo 1, fire!_4");
	bm:out("Salvo 1, fire again!");
	bm:repeat_callback(function() bm:trigger_projectile_launch("rock_large_flammable",  v(-514.6, 15, -525.3), v(-521, 28, -93)) end, 28000, "Salvo 1, fire again!_1");
	bm:repeat_callback(function() bm:trigger_projectile_launch("rock_large_flammable",  v(-522.2, 15, -527.6), v(-551, 26, -122)) end, 31000, "Salvo 1, fire again!_2");
	bm:repeat_callback(function() bm:trigger_projectile_launch("rock_large_flammable",  v(-529.9, 15, -528.6), v(-563, 26, -63)) end, 26000, "Salvo 1, fire again!_3");
	bm:repeat_callback(function() bm:trigger_projectile_launch("rock_large_flammable",  v(-536.5, 15, -530.0), v(-568, 26, -122)) end, 33000, "Salvo 1, fire again!_4");
end;

function Bombardment_West_Phase_2_B()
	bm:remove_process("Salvo 2, fire!_1");
	bm:remove_process("Salvo 2, fire!_2");
	bm:remove_process("Salvo 2, fire!_3");
	bm:remove_process("Salvo 2, fire!_4");
	bm:out("Salvo 2, fire again!");
	bm:repeat_callback(function() bm:trigger_projectile_launch("rock_large_flammable",  v(-928.1, 12.5, -430.0), v(-600, 26, -126)) end, 46000, "Salvo 2, fire again!_1");
	bm:repeat_callback(function() bm:trigger_projectile_launch("rock_large_flammable",  v(-933.8, 12.5, -423.9), v(-618, 26, -110)) end, 38000, "Salvo 2, fire again!_2");
	bm:repeat_callback(function() bm:trigger_projectile_launch("rock_large_flammable",  v(-938.2, 12.5, -417.9), v(-588, 26, -80)) end, 42000, "Salvo 2, fire again!_3");
	bm:repeat_callback(function() bm:trigger_projectile_launch("rock_large_flammable",  v(-943, 12.5, -410), v(-635, 26, -84)) end, 50000, "Salvo 2, fire again!_4");
end;


------------------------------------------------------------------------------------------------
--------------------------------------- THIRD PHASE --------------------------------------------
------------------------------------------------------------------------------------------------


function Allied_city_street_battle_1()
	bm:out("Allies, Fight them in the streets_West");
	kill_on_rout(bm, SUnit_Car_Wall_09)
	SUnit_Rom_West_02.uc:goto_location(POS_Rom_allies_rally_01, true);
	SUnit_Rom_West_10.uc:goto_location(POS_Rom_allies_rally_01, true);
	SUnit_Rom_West_11.uc:goto_location(POS_Rom_allies_rally_01, true);
	SUnit_Car_Wall_10.uc:goto_location_angle_width(v(-648, -14), r_to_d(0.0), 20, true);
	bm:watch(function() return SUnit_Car_Wall_10.unit:position():distance_xz (v(-648, -14)) < 20 end, 1000, function() Allied_Final_Battle_1() end);
end;

function Allied_city_street_battle_2()
	bm:out("Allies, Fight them in the streets_East");
	kill_on_rout(bm, SUnit_Car_Wall_08)
	SUnit_Rom_West_05.uc:goto_location(POS_Rom_allies_rally_02, true);
	SUnit_Rom_West_12.uc:goto_location(POS_Rom_allies_rally_02, true);
	SUnit_Car_Wall_07.uc:goto_location_angle_width(v(-521.591, 27.0381), r_to_d(0.0), 20, true);
	SUnit_Car_Wall_05.uc:goto_location_angle_width(v(-522.591, -86.0381), r_to_d(0.0), 15, true);
	bm:watch(function() return SUnit_Car_Wall_05.unit:position():distance_xz (v(-525, -101)) < 20 end, 1000, function() Allied_Final_Battle_2() end);
	bm:watch(function() return SUnit_Car_Wall_07.unit:position():distance_xz (v(-531, -27)) < 20 end, 1000, function() Allied_Final_Battle_3() end);
end;


------------------------------------------------------------------------------------------------
--------------------------------------- FINAL PHASE --------------------------------------------
------------------------------------------------------------------------------------------------


function Allied_Final_Battle_1()
	bm:out("Allies, FINAL PUSH WEST");
	SUnit_Rom_West_01.uc:attack_unit(SUnit_Car_Wall_10.unit, true, true);
	SUnit_Rom_West_02.uc:attack_unit(SUnit_Car_Wall_10.unit, true, true);
	SUnit_Rom_West_03.uc:attack_unit(SUnit_Car_Wall_10.unit, true, true);
	bm:callback(function() Bombardment_West_Phase_3_A() end, 1000);
	bm:callback(function() Bombardment_West_Phase_3_B() end, 1000);
	Start_West_Effects_Phase_3()
	SUnit_Rom_West_11.uc:attack_unit(SUnit_Car_Wall_10.unit, true, true);
end;

function Allied_Final_Battle_2()
	bm:out("Allies, FINAL PUSH EAST");
	SUnit_Rom_West_05.uc:attack_unit(SUnit_Car_Wall_07.unit, true, true);
	SUnit_Rom_West_03.uc:attack_unit(SUnit_Car_Wall_07.unit, true, true);
	SUnit_Rom_West_10.uc:attack_unit(SUnit_Car_Wall_07.unit, true, true);
end;

function Allied_Final_Battle_3()
	bm:out("Allies, FINAL PUSH NORTH");
	SUnit_Rom_West_06.uc:attack_unit(SUnit_Car_Wall_05.unit, true, true);
	SUnit_Rom_West_12.uc:attack_unit(SUnit_Car_Wall_05.unit, true, true);
end;

function Bombardment_West_Phase_3_A()
	bm:remove_process("Salvo 1, fire again!_1");
	bm:remove_process("Salvo 1, fire again!_2");
	bm:remove_process("Salvo 1, fire again!_3");
	bm:remove_process("Salvo 1, fire again!_4");
	bm:out("Salvo 1, Final Bombardment!");
	bm:repeat_callback(function() bm:trigger_projectile_launch("rock_large_flammable",  v(-514.6, 15, -525.3), v(-521, 28, -93)) end, 28000);
	bm:repeat_callback(function() bm:trigger_projectile_launch("rock_large_flammable",  v(-522.2, 15, -527.6), v(-551, 26, -122)) end, 31000);
	bm:repeat_callback(function() bm:trigger_projectile_launch("rock_large_flammable",  v(-529.9, 15, -528.6), v(-563, 26, -63)) end, 26000);
	bm:repeat_callback(function() bm:trigger_projectile_launch("rock_large_flammable",  v(-536.5, 15, -530.0), v(-568, 26, -122)) end, 33000);
end;

function Bombardment_West_Phase_3_B()
	bm:remove_process("Salvo 2, fire again!_1");
	bm:remove_process("Salvo 2, fire again!_2");
	bm:remove_process("Salvo 2, fire again!_3");
	bm:remove_process("Salvo 2, fire again!_4");
	bm:out("Salvo 2, Final Bombardment!");
	bm:repeat_callback(function() bm:trigger_projectile_launch("rock_large_flammable",  v(-928.1, 12.5, -430.0), v(-600, 26, -126)) end, 46000);
	bm:repeat_callback(function() bm:trigger_projectile_launch("rock_large_flammable",  v(-933.8, 12.5, -423.9), v(-618, 26, -110)) end, 38000);
	bm:repeat_callback(function() bm:trigger_projectile_launch("rock_large_flammable",  v(-938.2, 12.5, -417.9), v(-588, 26, -80)) end, 42000);
	bm:repeat_callback(function() bm:trigger_projectile_launch("rock_large_flammable",  v(-943, 12.5, -410), v(-635, 26, -84)) end, 50000);
end;







C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\et_environment_test\et_cutscenes.lua
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	CUTSCENES SCRIPT
--
--	Declare intro and other cutscenes
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------




Cutscene_Intro = cutscene:new(
	"Cutscene_Intro", 							-- unique string name for cutscene
	UC_Egy_01_All, 								-- unitcontroller over player's army
	1000, 										-- duration of cutscene in ms
	function() Start_Battle() end 				-- what to call when cutscene is finished
);


--Cutscene_Intro:set_debug();


function Play_Cutscene_Intro()
	
	Cutscene_Intro:start();
end;






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\et_environment_test\et_declarations.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	DECLARATIONS SCRIPT
--
--	Declare alliances, armies, convex areas and anything else of note in here
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

cam = bm:camera();

--
-- Army Declarations
--

Alliances = bm:alliances();

Alliance_Egy = Alliances:item(1);
Army_Egy_01 = Alliance_Egy:armies():item(1);

Alliance_Sel = Alliances:item(2); 
Army_Sel_01 = Alliance_Sel:armies():item(1);




--
-- Script Unit Declarations
--

SUnit_Egy_01 = script_unit:new(Army_Egy_01, "Egy_01");
SUnit_Egy_02 = script_unit:new(Army_Egy_01, "Egy_02");
SUnit_Egy_03 = script_unit:new(Army_Egy_01, "Egy_03");
SUnit_Egy_04 = script_unit:new(Army_Egy_01, "Egy_04");

UC_Egy_01_All = unitcontroller_from_army(Army_Egy_01);


SUnit_Sel_01 = script_unit:new(Army_Sel_01, "Sel_01");
SUnit_Sel_02 = script_unit:new(Army_Sel_01, "Sel_02");
SUnit_Sel_03 = script_unit:new(Army_Sel_01, "Sel_03");
SUnit_Sel_04 = script_unit:new(Army_Sel_01, "Sel_04");

UC_Sel_01_All = unitcontroller_from_army(Army_Sel_01);
UC_Sel_01_All:take_control();











C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\et_environment_test\et_main.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	MAIN BATTLE SCRIPT
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------


-- called at start of deployment phase
function Deployment_Phase()
	bm:out("Battle is in deployment phase");
end;



-- end of deployment phase i.e. battle start
function End_Deployment_Phase()
		
	-- launch cutscene, or straight into battle without it
	-- Play_Cutscene_Intro();
	Start_Battle_No_Cutscene();
end;


function Start_Battle_No_Cutscene()
	cam:fade(false, 0.5);
	
	bm:enable_cinematic_ui(false, true, false);
	
	Start_Battle();
end;



-- the interactive battle has started
function Start_Battle()
	bm:out("Battle is Starting");
	
	-- register victory and defeat VO callbacks
	bm:setup_victory_callback(function() Battle_Is_Ending() end);
	
	AddEventCallBack("ComponentLClickUp", OnComponentLClickUp);
	
	output_unit_info(SUnit_Egy_01, "Event handler has been registered");
end;


function output_unit_info(sunit, pretext)
	bm:out("");
	bm:out("=====");
	bm:out("output_unit_info called, pretext is " .. tostring(pretext));
	bm:out("\tsunit is " .. sunit.name);
	bm:out("\t\t->sunit.unit:is_routing() is " .. tostring(sunit.unit:is_routing()));
	bm:out("\t\t->sunit.unit:number_of_men_alive() is " .. tostring(sunit.unit:number_of_men_alive()));
	bm:out("\t\t->sunit.unit:position() is " .. v_to_s(sunit.unit:position()));
	bm:out("=====");
	bm:out("");
end;


function OnComponentLClickUp(context)
	output_unit_info(SUnit_Egy_01, "Event has been triggered");
	
	bm:callback(
		function() output_unit_info(SUnit_Egy_01, "1000ms after event triggered") end,
		1000
	);
end;





BOOL_Battle_Is_Ending = false;

-- the game has gone to victory countdown phase, someone has won
function Battle_Is_Ending()
	if not BOOL_Battle_Is_Ending then
		BOOL_Battle_Is_Ending = true;
					
		if is_routing_or_dead(Alliance_Egy) then	
			bm:out("Player has lost, army is routing");
									
			bm:callback(function() bm:end_battle() end, 10000);
		else
			bm:out("Player has won !");
					
			bm:callback(function() bm:end_battle() end, 10000);
		end;
	end;
end;









C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\et_environment_test\et_start.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	INITIAL SCRIPT SETUP
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

-- clear out loaded files
system.ClearRequiredFiles();

-- load in battle script library
require "lua_scripts.Battle_Script_Header";

-- declare battlemanager object
bm = battle_manager:new(empire_battle:new());

-- get battle name from folder, and print header
battle_name, battle_shortform = get_folder_name_and_shortform();

bm:out("==============");
bm:out("==============");
bm:out("==============");
bm:out("Script started: Battle of " .. battle_name);
bm:out("==============");

-- load in other script files associated with this battle
package.path = package.path .. ";data/Script/" .. battle_name .. "/?.lua";

require (battle_shortform .. "_Declarations");
require (battle_shortform .. "_Cutscenes");
require (battle_shortform .. "_Main");

-- register functions to be called on phase changes
bm:register_phase_change_callback("Deployment", function() Deployment_Phase() end);			-- optional deployment phase callback
bm:setup_battle(function() End_Deployment_Phase() end);										-- called when battle starts








C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\major_settlement_level_01\major_settlement_level_01_v3_main.lua
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-- Battle of EMPTY -- <authorname>
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

battle_name = "Empty"
battle = empire_battle:new();

system.ClearRequiredFiles();

package.path = package.path .. ";data/Script/" .. battle_name .. "/?.lua"

require "Scripting_Library_Header";

bm = battle_manager:new(battle, true); --set to true to enable debug output

subtitles = battle:subtitles();
subtitles:clear();
cam = bm:camera();

bm:out("==============");
bm:out("==============");
bm:out("==============");
bm:out("Script started: Battle of " .. battle_name);
bm:out("==============");

-----------------------------------------------------------
-- Declare our armies, units and unitcontrollers
-----------------------------------------------------------

require "Empty_Armies";

-----------------------------------------------------------
-- Declare our patrol routes
-----------------------------------------------------------

require "Empty_Patrol_Routes";

-----------------------------------------------------------
-- Declare cutscenes
-----------------------------------------------------------

require "Empty_Cutscene"

-----------------------------------------------------------
-- Script Start
-----------------------------------------------------------

bm:setup_battle(function() End_Deployment_Phase() end);

function End_Deployment_Phase()
		
	-- launch cutscene, or straight into battle without it
	Play_Cutscene_Intro();
	-- Start_Battle_No_Cutscene();
end;

-----------------------------------------------------------
-- Start of Battle
-----------------------------------------------------------

function Start_Battle_No_Cutscene()
	Unitcontroller_Tok_All:release_control();
	
	Start_Battle();
end;


function Start_Battle()	
	bm:out("Battle is Starting");
	
	cam:fade(false, 0.5);
		
	-- continue suppressing unit vo for a few seconds after cutscene
	bm:suppress_unit_voices(true);
	bm:register_callback(function() bm:suppress_unit_voices(false) end, 3000);
				
	--start rout manager and results callbacks
	-- rm_victory = rout_manager:new(bm, "Player_Victory", Armies_Oda, Armies_Imp, 1);
	-- rm_victory:start();
	
	-- register post-battle victory and defeat VO callbacks
	bm:register_results_callbacks(function() Player_Has_Won_Advice() end, function() Player_Has_Lost_Advice() end);
	
	-- trigger advisor and then objective at the start of battle
	-- bm:register_callback(function() bm:queue_advisor("CreativeAssembly.HB_Anegawa_Extra_01", 10000) end, 2000);
	-- bm:register_callback(function() bm:close_advisor() end, 14000);
	-- bm:register_callback(function() Show_Objectives(subtitles, "CreativeAssembly.HB_Anegawa_Obj1", true) end, 14000);
	bm:register_callback(function()  battle:remaining_conflict_time() end, 10000)
	bm:register_callback(function() bm:out("BigExplosion called"); battle:start_terrain_effect("BigExplosion") end, 10000);
end;


function Player_Has_Won_Advice()
	bm:out("Player has won!");
	--bm:stop_advisor_queue();
	--bm:queue_advisor("CreativeAssembly.HB_Anegawa_Battle_Won", "");
end;


function Player_Has_Lost_Advice()
	bm:out("Player has lost!");
	--bm:stop_advisor_queue();
	--bm:show_advisor_message("CreativeAssembly.HB_Anegawa_Battle_Lost", "");
end;







C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ambush_valley\multiplayer_ambush_valley.lua
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
-- Battle of Ambush_Valley -- Elliott Lock
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

battle_name = "Ambush_Valley"
battle = empire_battle:new();

system.ClearRequiredFiles();

package.path = package.path .. ";data/Script/" .. battle_name .. "/?.lua"

require "Scripting_Library_Header";

bm = battle_manager:new(battle, true); --set to true to enable debug output

subtitles = battle:subtitles();
subtitles:set_alignment("mid_centre");
subtitles:begin("bottom_centre");
subtitles:clear();

bm:out("==============");
bm:out("==============");
bm:out("==============");
bm:out("Script started: Battle of " .. battle_name);
bm:out("==============");


-----------------------------------------------------------
-- Army Declarations
-----------------------------------------------------------
Alliances = battle:alliances();

Alliance_Chosokabe = Alliances:item(1);
Armies_Chosokabe = Alliance_Chosokabe:armies();
Army_Chosokabe = Armies_Chosokabe:item(1);
Units_Chosokabe = Army_Chosokabe:units();

Alliance_Hojo = Alliances:item(2);
Armies_Hojo = Alliance_Hojo:armies();
Army_Hojo = Armies_Hojo:item(1);
Units_Hojo = Army_Hojo:units();

-----------------------------------------------------------
-- Declare units and individual unitcontrollers
-----------------------------------------------------------

Attacker_01 = Units_Chosokabe:item(01);
Unitcontroller_Chosokabe_Inf_01 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_01:add_units(Attacker_01);

Attacker_02 = Units_Chosokabe:item(02);
Unitcontroller_Chosokabe_Inf_02 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_02:add_units(Attacker_02);

Attacker_03 = Units_Chosokabe:item(03);
Unitcontroller_Chosokabe_Inf_03 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_03:add_units(Attacker_03);

Attacker_04 = Units_Chosokabe:item(04);
Unitcontroller_Chosokabe_Inf_04 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_04:add_units(Attacker_04);

Attacker_05 = Units_Chosokabe:item(05);
Unitcontroller_Chosokabe_Inf_05 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_05:add_units(Attacker_05);

Attacker_06 = Units_Chosokabe:item(06);
Unitcontroller_Chosokabe_Inf_06 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_06:add_units(Attacker_06);

Attacker_07 = Units_Chosokabe:item(07);
Unitcontroller_Chosokabe_Inf_07 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_07:add_units(Attacker_07);

Attacker_08 = Units_Chosokabe:item(08);
Unitcontroller_Chosokabe_Inf_08 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_08:add_units(Attacker_08);

Attacker_09 = Units_Chosokabe:item(09);
Unitcontroller_Chosokabe_Inf_09 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_09:add_units(Attacker_09);

Attacker_10 = Units_Chosokabe:item(10);
Unitcontroller_Chosokabe_Inf_10 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_10:add_units(Attacker_10);

Attacker_11 = Units_Chosokabe:item(11);
Unitcontroller_Chosokabe_Inf_11 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_11:add_units(Attacker_11);

Attacker_12 = Units_Chosokabe:item(12);
Unitcontroller_Chosokabe_Inf_12 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_12:add_units(Attacker_12);

Attacker_13 = Units_Chosokabe:item(13);
Unitcontroller_Chosokabe_Inf_13 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_13:add_units(Attacker_13);

Attacker_14 = Units_Chosokabe:item(14);
Unitcontroller_Chosokabe_Inf_14 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_14:add_units(Attacker_14);

Attacker_15 = Units_Chosokabe:item(15);
Unitcontroller_Chosokabe_Inf_15 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_15:add_units(Attacker_15);

Attacker_16 = Units_Chosokabe:item(16);
Unitcontroller_Chosokabe_Inf_16 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_16:add_units(Attacker_16);

Attacker_17 = Units_Chosokabe:item(17);
Unitcontroller_Chosokabe_Inf_17 = Army_Chosokabe:create_unit_controller();
Unitcontroller_Chosokabe_Inf_17:add_units(Attacker_17);

Defender_01 = Units_Hojo:item(01);
Unitcontroller_Hojo_Inf_01 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_01:add_units(Defender_01);

Defender_02 = Units_Hojo:item(02);
Unitcontroller_Hojo_Inf_02 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_02:add_units(Defender_02);

Defender_03 = Units_Hojo:item(03);
Unitcontroller_Hojo_Inf_03 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_03:add_units(Defender_03);

Defender_04 = Units_Hojo:item(04);
Unitcontroller_Hojo_Inf_04 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_04:add_units(Defender_04);

Defender_05 = Units_Hojo:item(05);
Unitcontroller_Hojo_Inf_05 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_05:add_units(Defender_05);

Defender_06 = Units_Hojo:item(06);
Unitcontroller_Hojo_Inf_06 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_06:add_units(Defender_06);

Defender_07 = Units_Hojo:item(07);
Unitcontroller_Hojo_Inf_07 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_07:add_units(Defender_07);

Defender_08 = Units_Hojo:item(08);
Unitcontroller_Hojo_Inf_08 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_08:add_units(Defender_08);

Defender_09 = Units_Hojo:item(09);
Unitcontroller_Hojo_Inf_09 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_09:add_units(Defender_09);

Defender_10 = Units_Hojo:item(10);
Unitcontroller_Hojo_Inf_10 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_10:add_units(Defender_10);

Defender_11 = Units_Hojo:item(11);
Unitcontroller_Hojo_Inf_11 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_11:add_units(Defender_11);

Defender_12 = Units_Hojo:item(12);
Unitcontroller_Hojo_Inf_12 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_12:add_units(Defender_12);

Defender_13 = Units_Hojo:item(13);
Unitcontroller_Hojo_Inf_13 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_13:add_units(Defender_13);

Defender_14 = Units_Hojo:item(14);
Unitcontroller_Hojo_Inf_14 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_14:add_units(Defender_14);

Defender_15 = Units_Hojo:item(15);
Unitcontroller_Hojo_Inf_15 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_15:add_units(Defender_15);

Defender_16 = Units_Hojo:item(16);
Unitcontroller_Hojo_Inf_16 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_16:add_units(Defender_16);

Defender_17 = Units_Hojo:item(17);
Unitcontroller_Hojo_Inf_17 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_17:add_units(Defender_17);

Defender_18 = Units_Hojo:item(18);
Unitcontroller_Hojo_Inf_18 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_18:add_units(Defender_18);

Defender_19 = Units_Hojo:item(19);
Unitcontroller_Hojo_Inf_19 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_19:add_units(Defender_19);

Defender_20 = Units_Hojo:item(20);
Unitcontroller_Hojo_Inf_20 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_20:add_units(Defender_20);

Defender_21 = Units_Hojo:item(21);
Unitcontroller_Hojo_Inf_21 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_21:add_units(Defender_21);

Defender_22 = Units_Hojo:item(22);
Unitcontroller_Hojo_Inf_22 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_22:add_units(Defender_22);

Defender_23 = Units_Hojo:item(23);
Unitcontroller_Hojo_Inf_23 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_23:add_units(Defender_23);

Defender_24 = Units_Hojo:item(24);
Unitcontroller_Hojo_Inf_24 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_24:add_units(Defender_24);

Defender_25 = Units_Hojo:item(25);
Unitcontroller_Hojo_Inf_25 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_25:add_units(Defender_25);

Defender_26 = Units_Hojo:item(26);
Unitcontroller_Hojo_Inf_26 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_26:add_units(Defender_26);

Defender_27 = Units_Hojo:item(27);
Unitcontroller_Hojo_Inf_27 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_27:add_units(Defender_27);

Defender_28 = Units_Hojo:item(28);
Unitcontroller_Hojo_Inf_28 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_28:add_units(Defender_28);

Defender_29 = Units_Hojo:item(29);
Unitcontroller_Hojo_Inf_29 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_29:add_units(Defender_29);

Defender_30 = Units_Hojo:item(30);
Unitcontroller_Hojo_Inf_30 = Army_Hojo:create_unit_controller();
Unitcontroller_Hojo_Inf_30:add_units(Defender_30);

-----------------------------------------------------------
-- Create an army-wide unitcontroller for each of the 
-- AI armies, and use them to mind-control them 
-- before they get a chance to deploy
-----------------------------------------------------------

Unitcontroller_Chosokabe_All = Army_Chosokabe:create_unit_controller();

for i = 1, Units_Chosokabe:count() do
	Unitcontroller_Chosokabe_All:add_units(Units_Chosokabe:item(i));
end;

Unitcontroller_Chosokabe_All:take_control();

Unitcontroller_Hojo_All = Army_Hojo:create_unit_controller();

for i = 1, Units_Hojo:count() do
	Unitcontroller_Hojo_All:add_units(Units_Hojo:item(i));
end;

Unitcontroller_Hojo_All:take_control();

-----------------------------------------------------------
-- Declare Sound Effects
-----------------------------------------------------------

POS_Play_Sound = v(0,0);
cam = bm:camera();

-----------------------------------------------------------
-- Intro Cutscene
-----------------------------------------------------------

Cutscene_Intro = cutscene:new(
								bm, 
								Unitcontroller_Chosokabe_All, 
								function() Start_Battle() end, 
								8000, 
								"Cutscene_Intro", 
								true, 
								true,
								nil,
								nil,
								true,
								function() Cutscene_Intro_Skipped() end
							);
							
Cutscene_Intro:set_music("music_now_and_zen_alt", 0, 2);
Cutscene_Intro:register_subtitles(subtitles);
Cutscene_Intro:set_cinematic_bars(true);
Cutscene_Intro:suppress_unit_voices(true);
							
--Cutscene_Intro:set_debug(true);
--Cutscene_Intro:set_hide_debug_ui(true);

function Play_Cutscene_Intro()
	-- Cutscene_Intro:action(function() cam:change_height_range(0, 100) end, 0);
	Cutscene_Intro:action(function() subtitles:begin("bottom_centre") end, 0);
	Cutscene_Intro:action(function() subtitles:set_alignment("bottom_centre") end, 0);
	--Cutscene_Intro:action(function() subtitles:push_back_subtitle_entry(00000,8000,"The Ambush is set sir. Timing will decide the battle. We're ready to strike on your command.")  end, 0);
	Cutscene_Intro:action(function() cam:move_to(v(-54.2, -18.0, 224.5), v(16.4, 14.5, 113.2), 0, true, 70) end, 0);
	Cutscene_Intro:action(function() cam:move_to(v(-13.8, -20.5, 135.4), v(69.4, 39.7, 46.6), 8, true, 70) end, 0);

	--Take control of units
	Unitcontroller_Chosokabe_All:take_control();
	Unitcontroller_Hojo_All:take_control();

	-- Hojo unit orders
	Unitcontroller_Chosokabe_All:fire_at_will(false)

	-- Chosokabe unit orders
	Unitcontroller_Hojo_Inf_01:goto_location_angle_width(v(-31.07, -404.01), r_to_d(3.22), 10.98);
	Unitcontroller_Hojo_Inf_02:goto_location_angle_width(v(-28.55, -379.09), r_to_d(3.32), 15.10);
	Unitcontroller_Hojo_Inf_03:goto_location_angle_width(v(-45.38, -376.10), r_to_d(3.32), 15.10);
	Unitcontroller_Hojo_Inf_04:goto_location_angle_width(v(-11.71, -382.09), r_to_d(3.32), 15.10);
	Unitcontroller_Hojo_Inf_05:goto_location_angle_width(v(-8.86, -344.13), r_to_d(3.27), 13.90);
	Unitcontroller_Hojo_Inf_06:goto_location_angle_width(v(-40.61, -340.14), r_to_d(3.27), 12.70);
	Unitcontroller_Hojo_Inf_07:goto_location_angle_width(v(-25.03, -342.10), r_to_d(3.27), 12.70);
	Unitcontroller_Hojo_Inf_08:goto_location_angle_width(v(-30.74, -303.92), r_to_d(3.28), 19.90);
	Unitcontroller_Hojo_Inf_09:goto_location_angle_width(v(-9.04, -306.85), r_to_d(3.28), 19.90);
	Unitcontroller_Hojo_Inf_10:goto_location_angle_width(v(-10.79, -368.73), r_to_d(3.30), 13.90);
	Unitcontroller_Hojo_Inf_11:goto_location_angle_width(v(-26.49, -366.19), r_to_d(3.30), 13.90);
	Unitcontroller_Hojo_Inf_12:goto_location_angle_width(v(-42.18, -363.65), r_to_d(3.30), 13.90);
	Unitcontroller_Hojo_Inf_13:goto_location_angle_width(v(-23.06, -329.48), r_to_d(3.28), 12.70);
	Unitcontroller_Hojo_Inf_14:goto_location_angle_width(v(-38.62, -327.38), r_to_d(3.28), 12.70);
	Unitcontroller_Hojo_Inf_15:goto_location_angle_width(v(-7.50, -331.59), r_to_d(3.28), 12.70);
	Unitcontroller_Hojo_Inf_16:goto_location_angle_width(v(-7.87, -297.88), r_to_d(3.27), 18.70);
	Unitcontroller_Hojo_Inf_17:goto_location_angle_width(v(-29.39, -295.02), r_to_d(3.27), 18.70);
	Unitcontroller_Hojo_Inf_18:goto_location_angle_width(v(-40.78, -352.36), r_to_d(3.28), 12.70);
	Unitcontroller_Hojo_Inf_19:goto_location_angle_width(v(-25.23, -354.53), r_to_d(3.28), 12.70);
	Unitcontroller_Hojo_Inf_20:goto_location_angle_width(v(-9.68, -356.70), r_to_d(3.28), 12.70);
	Unitcontroller_Hojo_Inf_21:goto_location_angle_width(v(-5.83, -319.32), r_to_d(3.26), 12.70);
	Unitcontroller_Hojo_Inf_22:goto_location_angle_width(v(-36.99, -315.50), r_to_d(3.26), 12.70);
	Unitcontroller_Hojo_Inf_23:goto_location_angle_width(v(-21.41, -317.41), r_to_d(3.26), 12.70);
	Unitcontroller_Hojo_Inf_24:goto_location_angle_width(v(-7.55, -288.46), r_to_d(3.28), 18.70);
	Unitcontroller_Hojo_Inf_25:goto_location_angle_width(v(-28.46, -285.58), r_to_d(3.28), 17.50);
	Unitcontroller_Hojo_Inf_26:goto_location_angle_width(v(1.11, -277.43), r_to_d(3.29), 15.00);
	Unitcontroller_Hojo_Inf_27:goto_location_angle_width(v(-16.71, -274.85), r_to_d(3.29), 15.00);
	Unitcontroller_Hojo_Inf_28:goto_location_angle_width(v(-34.52, -272.27), r_to_d(3.29), 15.00);
	Unitcontroller_Hojo_Inf_29:goto_location_angle_width(v(-38.20, -389.85), r_to_d(3.29), 15.00);
	Unitcontroller_Hojo_Inf_30:goto_location_angle_width(v(-21.38, -392.30), r_to_d(3.29), 15.00);

	Cutscene_Intro:start();
end;


function Cutscene_Intro_Skipped()
	subtitles:clear();
	cam:move_to(v(-13.8, -20.5, 135.4), v(69.4, 39.7, 46.6), 0, true, 70)
	cam:fade(false, 0.5);

	cam:change_height_range(-1, -1);
end;

-----------------------------------------------------------
-- Script Start
-----------------------------------------------------------

bm:setup_battle(function() End_Deployment_Phase() end);

function End_Deployment_Phase()
		
	-- launch cutscene, or straight into battle without it
	--cam:fade(false, 0.5);
	Play_Cutscene_Intro();
	-- Start_Battle_No_Cutscene();
end;

function Start_Battle()
	Unitcontroller_Chosokabe_All:release_control();
	Unitcontroller_Hojo_Inf_01:release_control();

	bm:watch(function() return Attacker_01:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_02:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_03:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_04:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_05:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_06:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_07:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_08:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_09:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_10:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_11:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_12:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_13:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_14:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_15:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_16:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Attacker_17:is_moving() end, 3000, function() Movement_Ambush_Is_Launched() end, "AmbushWatch");

	bm:watch(function() return Defender_01:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_02:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_03:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_04:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_05:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_06:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_07:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_08:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_09:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_10:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_11:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_12:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_13:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_14:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_15:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_16:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_17:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_18:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_19:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_20:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_21:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_22:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_23:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_24:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_25:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_26:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_27:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_28:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_29:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");
	bm:watch(function() return Defender_30:unary_of_men_alive() < 1 end, 0, function() Attack_Ambush_Is_Launched() end, "AmbushWatch");

end;

function Movement_Ambush_Is_Launched()
	bm:remove_process("AmbushWatch");
	Unitcontroller_Hojo_All:release_control();
	Unitcontroller_Chosokabe_All:take_control();
	Unitcontroller_Chosokabe_All:fire_at_will(true)
	Unitcontroller_Chosokabe_All:release_control();
	subtitles:end_subtitles();
	subtitles:clear();

	--subtitles:begin("mid_centre")
	--subtitles:set_alignment("mid_centre")
	--subtitles:push_back_subtitle_entry(00000,4000,"WE'VE BEEN SPOTTED GENERAL!!!")
	
	bm:show_advisor_message("", "GENERAL, WE'VE BEEN SPOTTED!!!");
end;

function Attack_Ambush_Is_Launched()
	bm:remove_process("AmbushWatch");
	Unitcontroller_Hojo_All:release_control();
	Unitcontroller_Chosokabe_All:take_control();
	Unitcontroller_Chosokabe_All:fire_at_will(true)
	Unitcontroller_Chosokabe_All:release_control();
end;






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ni_nile\ni_common.lua







C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ni_nile_small\ni_common2.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	COMMON SCRIPT
--
--	Useful functions go in here
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------





-- make skirmishers skirmish

function Set_Skirmish(sunits, value)
	bm:out("Set skirmish behaviour on " .. #sunits .. " units to " .. tostring(value));

	for i = 1, #sunits do
		sunits[i].uc:change_behaviour_active("skirmish", value);
	end;
end;



-- take control of all sunits in a table

function Take_Control_Of_SUnits(sunits)
	bm:out("Taking control of " .. #sunits .. " units");

	for i = 1, #sunits do
		sunits[i].uc:take_control();
	end;
end;



-- takes a table of scripted units and releases them to the generic AI
function Release_SUnits_To_AI(sunits)
	if not is_table(sunits) then
		script_error("ERROR! Release_SUnits_To_AI() called but supplied parameter [" .. tostring(sunits) .. "] is not a table!");
		return false;
	end;
	
	if #sunits then
		return false;
	end;
	
	local uc = nil;
	local army = nil;
	local output = {};
	
	for i = 1, #sunits do
		local current_sunit = sunits[i];
		
		if not is_scriptunit(current_sunit) then
			script_error("ERROR! Release_SUnits_To_AI() called but table item " .. i .. " is not a scriptunit, it's [" .. tostring(current_sunit) .. "] instead");
			return false;
		end;
	
		if not uc then
			army = current_sunit.army;
			uc = army:create_unit_controller();
			
		elseif current_sunit.army ~= army then
			script_error("ERROR! Release_SUnits_To_AI() called but sunit " .. i .. " is not a member of army " .. tostring(army) .. " but of army " .. tostring(current_sunit.army) .. "] instead");
			return false;
		end;
		
		uc:add_units(current_sunit.unit);
		table.insert(output, current_sunit.name);
	end;

	local outputstr = "Releasing units ["
	for i = 1, #output do
		outputstr = outputstr .. output[i];
	end;
	outputstr = outputstr .. "] to AI"
	
	uc:release_control();
end;






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ni_nile_egy\ni_common3.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	COMMON SCRIPT
--
--	Useful functions go in here
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------





-- make skirmishers skirmish

function Set_Skirmish(sunits, value)
	bm:out("Set skirmish behaviour on " .. #sunits .. " units to " .. tostring(value));

	for i = 1, #sunits do
		sunits[i].uc:change_behaviour_active("skirmish", value);
	end;
end;



-- take control of all sunits in a table

function Take_Control_Of_SUnits(sunits)
	bm:out("Taking control of " .. #sunits .. " units");

	for i = 1, #sunits do
		sunits[i].uc:take_control();
	end;
end;



-- takes a table of scripted units and releases them to the generic AI
function Release_SUnits_To_AI(sunits)
	if not is_table(sunits) then
		script_error("ERROR! Release_SUnits_To_AI() called but supplied parameter [" .. tostring(sunits) .. "] is not a table!");
		return false;
	end;
	
	if #sunits then
		return false;
	end;
	
	local uc = nil;
	local army = nil;
	local output = {};
	
	for i = 1, #sunits do
		local current_sunit = sunits[i];
		
		if not is_scriptunit(current_sunit) then
			script_error("ERROR! Release_SUnits_To_AI() called but table item " .. i .. " is not a scriptunit, it's [" .. tostring(current_sunit) .. "] instead");
			return false;
		end;
	
		if not uc then
			army = current_sunit.army;
			uc = army:create_unit_controller();
			
		elseif current_sunit.army ~= army then
			script_error("ERROR! Release_SUnits_To_AI() called but sunit " .. i .. " is not a member of army " .. tostring(army) .. " but of army " .. tostring(current_sunit.army) .. "] instead");
			return false;
		end;
		
		uc:add_units(current_sunit.unit);
		table.insert(output, current_sunit.name);
	end;

	local outputstr = "Releasing units ["
	for i = 1, #output do
		outputstr = outputstr .. output[i];
	end;
	outputstr = outputstr .. "] to AI"
	
	uc:release_control();
end;






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ni_nile\ni_cutscenes.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	CUTSCENES SCRIPT
--
--	Declare intro and other cutscenes
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

SFX_Rom_HB_NI_Intro_02 = new_sfx("Play_Rom_HB_NI_Intro_02_1");
SFX_Rom_HB_NI_Intro_03 = new_sfx("Play_Rom_HB_NI_Intro_03_1");
SFX_Rom_HB_NI_Intro_04 = new_sfx("Play_Rom_HB_NI_Intro_04_1");
SFX_Rom_HB_NI_Intro_05 = new_sfx("Play_Rom_HB_NI_Intro_05_1");


--POS_Cam_Cutscene_Intro_End = v(94.3, 50.8, -970.0);
--Targ_Cam_Cutscene_Intro_End = v(93.5, 29.5, -911.2);
POS_Cam_Cutscene_Intro_End = v(94.4, 38.2, -951.9);
Targ_Cam_Cutscene_Intro_End = v(93.3, 5.5, -868.0);

Cutscene_Intro = cutscene:new(
	"Cutscene_Intro", 							-- unique string name for cutscene
	UC_Rom_01_All, 								-- unitcontroller over player's army
	31000, 										-- duration of cutscene in ms
	function() Cutscene_Intro_End() end			-- what to call when cutscene is finished
);

Cutscene_Intro:set_skippable(true, function() Cutscene_Intro_Skipped() end);
Cutscene_Intro:set_skip_camera(POS_Cam_Cutscene_Intro_End, Targ_Cam_Cutscene_Intro_End);
-- Cutscene_Intro:set_debug();

function Play_Cutscene_Intro()

	local subtitles = Cutscene_Intro:subtitles();
	subtitles:set_alignment("bottom_centre");
	subtitles:clear();
	
	Teleport_Rom_Army_Intro_Start();
	Move_Rom_Army_Intro_Start();
	Teleport_Rom_Navy_Intro_Start();
	
	Show_Egy_Army(true);
	
	Cutscene_Intro:action(function() cam:move_to(v(422.5, 28.5, -722.0), v(362.9, 25.6, -703.3), 0, true, 35) end, 0);
	Cutscene_Intro:action(function() cam:move_to(v(422.5, 28.5, -722.0), v(362.9, 25.6, -703.3), 8, true, 33) end, 0);
	Cutscene_Intro:action(function() cam:fade(false, 0.5) end, 0);
	
	-- February, 47BC
	
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.NI.Intro_01") end, 2500);
	Cutscene_Intro:action(function() subtitles:clear() end, 5500);
	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 5000);
	Cutscene_Intro:action(function() subtitles:clear() end, 5000);

	-- Julius Caesar has joined forces with his allies and is marching on Ptolemy???s army.
	
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.NI.Intro_02") end, 6000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Rom_HB_NI_Intro_02) end, 6000);
	
	Cutscene_Intro:action(function() cam:move_to(v(89.3, 5.7, -895.7), v(88.9, 1.3, -958.0), 0, true, 30) end, 6000);
	Cutscene_Intro:action(function() cam:move_to(v(89.3, 6.3, -887.0), v(90.6, 1.9, -933.2), 3, true, 31) end, 6000);
	
	Cutscene_Intro:action(function() cam:move_to(v(92.9, 8.4, -930.3), v(92.1, 2.0, -868.1), 0, true, 35) end, 9000);
	Cutscene_Intro:action(function() cam:move_to(v(92.9, 8.4, -930.3), v(92.1, 9.3, -867.8), 6, true, 34) end, 9000);
		
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 12000);
	Cutscene_Intro:action(function() subtitles:clear() end, 12000);
	
	-- Ptolemy???s position is fortified by nature. His hilltop camp is guarded by the Nile to the east, steep terrain to the south and surrounded by marshes.
	
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.NI.Intro_03") end, 13000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Rom_HB_NI_Intro_03) end, 13000);
	
	Cutscene_Intro:action(function() Move_Rom_Navy_Intro_Start() end, 13000);
	Cutscene_Intro:action(function() Teleport_Rom_Army_Battle_Start() end, 13000);
	
	Cutscene_Intro:action(function() cam:move_to(v(91.7, 149.5, -306.5), v(45.6, 132.5, -267.8), 0, true, 35) end, 13000);
	Cutscene_Intro:action(function() cam:move_to(v(109.7, 149.5, -281.7), v(57.2, 132.9, -252.1), 6, true, 35) end, 13000);
	
	Cutscene_Intro:action(function() cam:move_to(v(514.8, 5.0, -820.8), v(470.1, 5.4, -777.1), 0, true, 30) end, 16500);
	Cutscene_Intro:action(function() cam:move_to(v(514.8, 5.0, -820.8), v(474.0, 7.9, -773.5), 6, true, 29) end, 16500);
	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 23000);
	Cutscene_Intro:action(function() subtitles:clear() end, 23000);
	
	-- Caesar must find a way to overcome Ptolemy???s superior position and put an end to the Alexandrine War.
	
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.NI.Intro_04") end, 24000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Rom_HB_NI_Intro_04) end, 24000);
	
	Cutscene_Intro:action(function() cam:move_to(v(601.6, 31.1, -882.5), v(567.9, 20.4, -831.0), 0, true, 0) end, 24000);
	Cutscene_Intro:action(function() cam:move_to(POS_Cam_Cutscene_Intro_End, Targ_Cam_Cutscene_Intro_End, 5.5, false, 0) end, 25000);
	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 31000);
	Cutscene_Intro:action(function() subtitles:clear() end, 31000);

	Cutscene_Intro:start();
end;


function Cutscene_Intro_Skipped()
	cam:fade(true, 0);
	
	Teleport_Rom_Army_Battle_Start();
	Teleport_Rom_Navy_Battle_Start();

	stop_sound(SFX_Rom_HB_NI_Intro_02);
	stop_sound(SFX_Rom_HB_NI_Intro_03);
	stop_sound(SFX_Rom_HB_NI_Intro_04);
	stop_sound(SFX_Rom_HB_NI_Intro_05);
	
	bm:callback(function() cam:fade(false, 0.5) end, 500);
end;



function Cutscene_Intro_End()
	cam:move_to(POS_Cam_Cutscene_Intro_End,Targ_Cam_Cutscene_Intro_End, 0, true, 0);
	
	Start_Battle();
end;










C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ni_nile_small\ni_cutscenes2.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	CUTSCENES SCRIPT
--
--	Declare intro and other cutscenes
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
SFX_E3_Intro_02 = new_sfx("Play_Rom_HB_NI_E3_Intro_02_1");
SFX_E3_Intro_03 = new_sfx("Play_Rom_HB_NI_E3_Intro_03_1");
SFX_E3_Intro_04 = new_sfx("Play_Rom_HB_NI_Intro_04_1");
SFX_E3_Intro_05 = new_sfx("Play_Rom_HB_NI_E3_Intro_05_1");
SFX_E3_Intro_06 = new_sfx("Play_Rom_HB_NI_E3_Intro_06_1");
SFX_E3_Intro_07 = new_sfx("Play_Rom_HB_NI_E3_Intro_07_1");
SFX_E3_Intro_08 = new_sfx("Play_Rom_HB_NI_E3_Intro_08_1");
SFX_E3_Intro_09 = new_sfx("Play_Rom_HB_NI_E3_Intro_09_1");


POS_Cam_Cutscene_Intro_End = v(-71.89286804199219, 56.75508880615234, -934.2026977539063);
Targ_Cam_Cutscene_Intro_End = v(-26.25979614257813, 44.23145294189453, -893.2705078125);

Cutscene_Intro = cutscene:new(
	"Cutscene_Intro", 							-- unique string name for cutscene
	UC_Rom_01_All, 								-- unitcontroller over player's army
	58000, 										-- duration of cutscene in ms
	function() Cutscene_Intro_End() end			-- what to call when cutscene is finished
);

Cutscene_Intro:set_skippable(true, function() Cutscene_Intro_Skipped() end);
Cutscene_Intro:set_skip_camera(POS_Cam_Cutscene_Intro_End, Targ_Cam_Cutscene_Intro_End);

function Play_Cutscene_Intro()
	local subtitles = Cutscene_Intro:subtitles();
	subtitles:set_alignment("bottom_centre");

	Cutscene_Intro:action(function() bm:cindy_playback("Script\\NI_Nile_Small\\Cutscene\\Nile.CindySceneManager", true) end, 0);
	Cutscene_Intro:action(function() cam:fade(false, 1) end, 0);
	
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_E3_Intro_02) end, 800);
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.NI.E3_Intro_02") end, 800);
	
	Cutscene_Intro:action(function() subtitles:clear() end, 5600);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_E3_Intro_03) end, 6600);
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.NI.E3_Intro_03") end, 6600);
	
	Cutscene_Intro:action(function() subtitles:clear() end, 17000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_E3_Intro_04) end, 18000);
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.NI.Intro_04") end, 18000);
	
	Cutscene_Intro:action(function() subtitles:clear() end, 24500);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_E3_Intro_05) end, 25500);
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.NI.E3_Intro_05") end, 25500);
	
	Cutscene_Intro:action(function() subtitles:clear() end, 31500);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_E3_Intro_06) end, 32500);
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.NI.E3_Intro_06") end, 32500);
	
	Cutscene_Intro:action(function() subtitles:clear() end, 35500);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_E3_Intro_07) end, 36500);
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.NI.E3_Intro_07") end, 36500);
	
	Cutscene_Intro:action(function() subtitles:clear() end, 40000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_E3_Intro_08) end, 41000);
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.NI.E3_Intro_08") end, 41000);
	
	Cutscene_Intro:action(function() subtitles:clear() end, 49500);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_E3_Intro_09) end, 50500);
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.NI.E3_Intro_09") end, 50500);
	
	Cutscene_Intro:start();
end;


function Cutscene_Intro_Skipped()
	cam:fade(true, 0);
	bm:stop_cindy_playback(true);
	
	bm:callback(function() cam:fade(false, 0.5) end, 500);
end;



function Cutscene_Intro_End()
	cam:move_to(POS_Cam_Cutscene_Intro_End,Targ_Cam_Cutscene_Intro_End, 0, true, 0);
	
	Start_Battle();
end;







C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ni_nile_egy\ni_cutscenes3.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	CUTSCENES SCRIPT
--
--	Declare intro and other cutscenes
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
SFX_E3_Intro_10 = new_sfx("Play_Rom_HB_NI_E3_Intro_10_1");
SFX_E3_Intro_11 = new_sfx("Play_Rom_HB_NI_E3_Intro_11_1");
SFX_E3_Intro_13 = new_sfx("Play_Rom_HB_NI_E3_Intro_13_1");
SFX_E3_Intro_14 = new_sfx("Play_Rom_HB_NI_E3_Intro_14_1");
SFX_E3_Intro_15 = new_sfx("Play_Rom_HB_NI_E3_Intro_15_1");
SFX_E3_Intro_16 = new_sfx("Play_Rom_HB_NI_E3_Intro_16_1");


POS_Cam_Cutscene_Intro_End = v(-133.4432678222656, 149.2937927246094, -169.1509094238281);
Targ_Cam_Cutscene_Intro_End = v(-70.51242065429688, 106.0833587646484, -252.2497863769531);

Cutscene_Intro = cutscene:new(
	"Cutscene_Intro", 							-- unique string name for cutscene
	UC_Rom_01_All, 								-- unitcontroller over player's army
	46000, 										-- duration of cutscene in ms
	function() Cutscene_Intro_End() end			-- what to call when cutscene is finished
);

Cutscene_Intro:set_skippable(true, function() Cutscene_Intro_Skipped() end);
Cutscene_Intro:set_skip_camera(POS_Cam_Cutscene_Intro_End, Targ_Cam_Cutscene_Intro_End);

function Play_Cutscene_Intro()
	local subtitles = Cutscene_Intro:subtitles();
	subtitles:set_alignment("bottom_centre");

	Cutscene_Intro:action(function() bm:cindy_playback("Script\\NI_Nile_Egy\\Cutscene\\Nile.CindySceneManager", true) end, 0);
	
	Cutscene_Intro:action(function() cam:fade(false, 1) end, 0);
	
	-- The Romans are attacking in force, but we hold an excellent defensive position on the hill. Maintain the high ground, and the advantage it offers, at all costs.
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_E3_Intro_10) end, 1000);
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.NI.E3_Intro_10") end, 1000);
	
	-- Our war elephants and scythed-chariots will smash through their front lines as they approach.
	Cutscene_Intro:action(function() subtitles:clear() end, 10300);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_E3_Intro_11) end, 11300);
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.NI.E3_Intro_11") end, 11300);
	
	-- Our ballistae will rain down the fires of Zeus-Amun upon their heads.
	Cutscene_Intro:action(function() subtitles:clear() end, 18500);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_E3_Intro_14) end, 19500);
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.NI.E3_Intro_14") end, 19500);
	
	-- The Roman fleet attacks from the south. Beware, as they may disembark troops to bolster their land forces.
	Cutscene_Intro:action(function() subtitles:clear() end, 24600);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_E3_Intro_15) end, 25600);
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.NI.E3_Intro_15") end, 25600);
	
	-- However, our ships stand ready to intercept. Armed with ballistae and our finest archers, they are more than a match for the Roman fleet. Our first priority should be to send them forwards.
	Cutscene_Intro:action(function() subtitles:clear() end, 32000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_E3_Intro_16) end, 33000);
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.NI.E3_Intro_16") end, 33000);
	
	Cutscene_Intro:start();
end;


function Cutscene_Intro_Skipped()
	cam:fade(true, 0);
	bm:stop_cindy_playback(true);
	
	bm:callback(function() cam:fade(false, 0.5) end, 500);
end;



function Cutscene_Intro_End()
	cam:move_to(POS_Cam_Cutscene_Intro_End,Targ_Cam_Cutscene_Intro_End, 0, true, 0);
	
	Start_Battle();
end;






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ni_nile\ni_declarations.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	DECLARATIONS SCRIPT
--
--	Declare alliances, armies, convex areas and anything else of note in here
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

cam = bm:camera();
bm:enable_cinematic_ui(true, true, true);

--
-- Army Declarations
--

Alliances = bm:alliances();

Alliance_Rom = Alliances:item(1);
Army_Rom_01 = Alliance_Rom:armies():item(1);

Alliance_Egy = Alliances:item(2); 
Army_Egy_01 = Alliance_Egy:armies():item(1);
Army_Egy_02 = Alliance_Egy:armies():item(2);




--
-- Script Unit Declarations
--

SUnit_Rom_01 = script_unit:new(Army_Rom_01, "Rom_01");
SUnit_Rom_02 = script_unit:new(Army_Rom_01, "Rom_02");
SUnit_Rom_03 = script_unit:new(Army_Rom_01, "Rom_03");
SUnit_Rom_04 = script_unit:new(Army_Rom_01, "Rom_04");
SUnit_Rom_05 = script_unit:new(Army_Rom_01, "Rom_05");
SUnit_Rom_06 = script_unit:new(Army_Rom_01, "Rom_06");
SUnit_Rom_07 = script_unit:new(Army_Rom_01, "Rom_07");
SUnit_Rom_08 = script_unit:new(Army_Rom_01, "Rom_08");
SUnit_Rom_09 = script_unit:new(Army_Rom_01, "Rom_09");
SUnit_Rom_10 = script_unit:new(Army_Rom_01, "Rom_10");
SUnit_Rom_11 = script_unit:new(Army_Rom_01, "Rom_11");
SUnit_Rom_12 = script_unit:new(Army_Rom_01, "Rom_12");
SUnit_Rom_13 = script_unit:new(Army_Rom_01, "Rom_13");
SUnit_Rom_14 = script_unit:new(Army_Rom_01, "Rom_14");
SUnit_Rom_15 = script_unit:new(Army_Rom_01, "Rom_10");
SUnit_Rom_16 = script_unit:new(Army_Rom_01, "Rom_16");
SUnit_Rom_17 = script_unit:new(Army_Rom_01, "Rom_17");
SUnit_Rom_18 = script_unit:new(Army_Rom_01, "Rom_18");
SUnit_Rom_19 = script_unit:new(Army_Rom_01, "Rom_19");
SUnit_Rom_20 = script_unit:new(Army_Rom_01, "Rom_20");
SUnit_Rom_21 = script_unit:new(Army_Rom_01, "Rom_Ship_1");
SUnit_Rom_22 = script_unit:new(Army_Rom_01, "Rom_Ship_2");
SUnit_Rom_23 = script_unit:new(Army_Rom_01, "Rom_Ship_3");
SUnit_Rom_24 = script_unit:new(Army_Rom_01, "Rom_Ship_4");
SUnit_Rom_25 = script_unit:new(Army_Rom_01, "Rom_Ship_5");
SUnit_Rom_26 = script_unit:new(Army_Rom_01, "Rom_Ship_6");

UC_Rom_01_All = unitcontroller_from_army(Army_Rom_01);

Rom_SUnits = {
	SUnit_Rom_01,
	SUnit_Rom_02,
	SUnit_Rom_03,
	SUnit_Rom_04,
	SUnit_Rom_05,
	SUnit_Rom_06,
	SUnit_Rom_07,
	SUnit_Rom_08,
	SUnit_Rom_09,
	SUnit_Rom_10,
	SUnit_Rom_11,
	SUnit_Rom_12,
	SUnit_Rom_13,
	SUnit_Rom_14,
	SUnit_Rom_15,
	SUnit_Rom_16,
	SUnit_Rom_17,
	SUnit_Rom_18,
	SUnit_Rom_19,
	SUnit_Rom_20,
	SUnit_Rom_21,
	SUnit_Rom_22,
	SUnit_Rom_23,
	SUnit_Rom_24,
	SUnit_Rom_25,
	SUnit_Rom_26
};

Rom_Land_SUnits = {
	SUnit_Rom_01,
	SUnit_Rom_02,
	SUnit_Rom_03,
	SUnit_Rom_04,
	SUnit_Rom_05,
	SUnit_Rom_06,
	SUnit_Rom_07,
	SUnit_Rom_08,
	SUnit_Rom_09,
	SUnit_Rom_10,
	SUnit_Rom_11,
	SUnit_Rom_12,
	SUnit_Rom_13,
	SUnit_Rom_14,
	SUnit_Rom_15,
	SUnit_Rom_16,
	SUnit_Rom_17,
	SUnit_Rom_18,
	SUnit_Rom_19,
	SUnit_Rom_20
};

Rom_Navy_SUnits = {
	SUnit_Rom_21,
	SUnit_Rom_22,
	SUnit_Rom_23,
	SUnit_Rom_24,
	SUnit_Rom_25,
	SUnit_Rom_26
};









SUnit_Egy_01 = script_unit:new(Army_Egy_01, "Egy_01");
SUnit_Egy_02 = script_unit:new(Army_Egy_01, "Egy_02");
SUnit_Egy_03 = script_unit:new(Army_Egy_01, "Egy_03");
SUnit_Egy_04 = script_unit:new(Army_Egy_01, "Egy_04");
SUnit_Egy_05 = script_unit:new(Army_Egy_01, "Egy_05");
SUnit_Egy_06 = script_unit:new(Army_Egy_01, "Egy_06");
SUnit_Egy_07 = script_unit:new(Army_Egy_01, "Egy_07");
SUnit_Egy_08 = script_unit:new(Army_Egy_01, "Egy_08");
SUnit_Egy_09 = script_unit:new(Army_Egy_01, "Egy_09");
SUnit_Egy_10 = script_unit:new(Army_Egy_01, "Egy_10");
SUnit_Egy_11 = script_unit:new(Army_Egy_01, "Egy_11");
SUnit_Egy_12 = script_unit:new(Army_Egy_01, "Egy_12");
SUnit_Egy_13 = script_unit:new(Army_Egy_01, "Egy_13");
SUnit_Egy_14 = script_unit:new(Army_Egy_01, "Egy_14");
SUnit_Egy_15 = script_unit:new(Army_Egy_01, "Egy_15");
SUnit_Egy_16 = script_unit:new(Army_Egy_01, "Egy_16");
SUnit_Egy_17 = script_unit:new(Army_Egy_01, "Egy_17");
SUnit_Egy_18 = script_unit:new(Army_Egy_01, "Egy_18");
SUnit_Egy_19 = script_unit:new(Army_Egy_01, "Egy_18");
SUnit_Egy_20 = script_unit:new(Army_Egy_01, "Egy_18");
SUnit_Egy_21 = script_unit:new(Army_Egy_01, "Egy_18");
SUnit_Egy_22 = script_unit:new(Army_Egy_01, "Egy_18");
SUnit_Egy_30 = script_unit:new(Army_Egy_02, "Egy_Naval_1");
SUnit_Egy_31 = script_unit:new(Army_Egy_02, "Egy_Naval_2");
SUnit_Egy_32 = script_unit:new(Army_Egy_02, "Egy_Naval_3");
SUnit_Egy_33 = script_unit:new(Army_Egy_02, "Egy_Naval_4");
SUnit_Egy_34 = script_unit:new(Army_Egy_02, "Egy_Naval_5");


UC_Egy_01_All = unitcontroller_from_army(Army_Egy_01);
UC_Egy_02_All = unitcontroller_from_army(Army_Egy_02);
--UC_Egy_01_All:take_control();



Egy_SUnits = {
	SUnit_Egy_01,
	SUnit_Egy_02,
	SUnit_Egy_03,
	SUnit_Egy_04,
	SUnit_Egy_05,
	SUnit_Egy_06,
	SUnit_Egy_07,
	SUnit_Egy_08,
	SUnit_Egy_09,
	SUnit_Egy_10,
	SUnit_Egy_11,
	SUnit_Egy_12,
	SUnit_Egy_13,
	SUnit_Egy_14,
	SUnit_Egy_15,
	SUnit_Egy_16,
	SUnit_Egy_17,
	SUnit_Egy_18,
	SUnit_Egy_19,
	SUnit_Egy_20,
	SUnit_Egy_21,
	SUnit_Egy_22,
	SUnit_Egy_30,
	SUnit_Egy_31,
	SUnit_Egy_32,
	SUnit_Egy_33,
	SUnit_Egy_34
};

Egy_Land_SUnits = {
	SUnit_Egy_01,
	SUnit_Egy_02,
	SUnit_Egy_03,
	SUnit_Egy_04,
	SUnit_Egy_05,
	SUnit_Egy_06,
	SUnit_Egy_07,
	SUnit_Egy_08,
	SUnit_Egy_09,
	SUnit_Egy_10,
	SUnit_Egy_11,
	SUnit_Egy_12,
	SUnit_Egy_13,
	SUnit_Egy_14,
	SUnit_Egy_15,
	SUnit_Egy_16,
	SUnit_Egy_17,
	SUnit_Egy_18,
	SUnit_Egy_19,
	SUnit_Egy_20,
	SUnit_Egy_21,
	SUnit_Egy_22
};


Egy_Naval_SUnits = {
	SUnit_Egy_30,
	SUnit_Egy_31,
	SUnit_Egy_32,
	SUnit_Egy_33,
	SUnit_Egy_34
};





--
-- Battle sounds
--

SFX_HB_NI_Pre_01 = new_sfx("Play_Rom_HB_NI_Pre_01_1");
SFX_HB_NI_Pre_02 = new_sfx("Play_Rom_HB_NI_Pre_02_1");
SFX_HB_NI_Pre_03 = new_sfx("Play_Rom_HB_NI_Pre_03_1");
SFX_HB_NI_Pre_04 = new_sfx("Play_Rom_HB_NI_Pre_04_1");
SFX_HB_NI_Pre_05 = new_sfx("Play_Rom_HB_NI_Pre_05_1");

SFX_HB_NI_Intro_02 = new_sfx("Play_Rom_HB_NI_Intro_02_1");
SFX_HB_NI_Intro_03 = new_sfx("Play_Rom_HB_NI_Intro_03_1");
SFX_HB_NI_Intro_04 = new_sfx("Play_Rom_HB_NI_Intro_04_1");

SFX_HB_NI_001 = new_sfx("Play_Rom_HB_NI_001_1");
SFX_HB_NI_002 = new_sfx("Play_Rom_HB_NI_002_1");
SFX_HB_NI_003 = new_sfx("Play_Rom_HB_NI_003_1");
SFX_HB_NI_004 = new_sfx("Play_Rom_HB_NI_004_1");
SFX_HB_NI_005 = new_sfx("Play_Rom_HB_NI_005_1");
SFX_HB_NI_006 = new_sfx("Play_Rom_HB_NI_006_1");

SFX_HB_NI_Post_01 = new_sfx("Play_Rom_HB_NI_Post_01_1");
SFX_HB_NI_Post_02 = new_sfx("Play_Rom_HB_NI_Post_02_1");

POS_Play_Sound = v(0,0);





--
-- Buildings
--

-- Building_01 = get_building_near(bm, 0, 0);






SUnit_Rom_01.POS_Intro_Start = v(89.5156,-909.17)
SUnit_Rom_01.Orient_Intro_Start = r_to_d(0.0428556)
SUnit_Rom_01.Width_Intro_Start = 15.2661

SUnit_Rom_02.POS_Intro_Start = v(36.9461,-855.847)
SUnit_Rom_02.Orient_Intro_Start = r_to_d(0.00441019)
SUnit_Rom_02.Width_Intro_Start = 17.9816

SUnit_Rom_03.POS_Intro_Start = v(36.9384,-878.394)
SUnit_Rom_03.Orient_Intro_Start = r_to_d(-0.00383495)
SUnit_Rom_03.Width_Intro_Start = 17.9499

SUnit_Rom_04.POS_Intro_Start = v(65.2692,-855.556)
SUnit_Rom_04.Orient_Intro_Start = r_to_d(0.000383495)
SUnit_Rom_04.Width_Intro_Start = 18.0491

SUnit_Rom_05.POS_Intro_Start = v(66.4759,-878.536)
SUnit_Rom_05.Orient_Intro_Start = r_to_d(0.0736311)
SUnit_Rom_05.Width_Intro_Start = 20.8747

SUnit_Rom_06.POS_Intro_Start = v(10.4563,-855.685)
SUnit_Rom_06.Orient_Intro_Start = r_to_d(0.000862864)
SUnit_Rom_06.Width_Intro_Start = 17.9331

SUnit_Rom_07.POS_Intro_Start = v(10.5757,-878.497)
SUnit_Rom_07.Orient_Intro_Start = r_to_d(0.000671117)
SUnit_Rom_07.Width_Intro_Start = 18.2032

SUnit_Rom_08.POS_Intro_Start = v(-41.6934,-906.828)
SUnit_Rom_08.Orient_Intro_Start = r_to_d(-0.0464988)
SUnit_Rom_08.Width_Intro_Start = 27.2103

SUnit_Rom_09.POS_Intro_Start = v(-41.6147,-866.981)
SUnit_Rom_09.Orient_Intro_Start = r_to_d(-0.0325012)
SUnit_Rom_09.Width_Intro_Start = 26.79

SUnit_Rom_10.POS_Intro_Start = v(-74.848,-903.112)
SUnit_Rom_10.Orient_Intro_Start = r_to_d(-0.0147646)
SUnit_Rom_10.Width_Intro_Start = 35.1336

SUnit_Rom_11.POS_Intro_Start = v(-104.055,-903.524)
SUnit_Rom_11.Orient_Intro_Start = r_to_d(-0.0552233)
SUnit_Rom_11.Width_Intro_Start = 20.2773

SUnit_Rom_12.POS_Intro_Start = v(93.6188,-858.43)
SUnit_Rom_12.Orient_Intro_Start = r_to_d(0.0156274)
SUnit_Rom_12.Width_Intro_Start = 18.1822

SUnit_Rom_13.POS_Intro_Start = v(93.583,-881.221)
SUnit_Rom_13.Orient_Intro_Start = r_to_d(0.00690291)
SUnit_Rom_13.Width_Intro_Start = 18.5217

SUnit_Rom_14.POS_Intro_Start = v(-14.799,-858.449)
SUnit_Rom_14.Orient_Intro_Start = r_to_d(-0.00604005)
SUnit_Rom_14.Width_Intro_Start = 18.3941

SUnit_Rom_15.POS_Intro_Start = v(-130.512,-856.158)
SUnit_Rom_15.Orient_Intro_Start = r_to_d(0)
SUnit_Rom_15.Width_Intro_Start = 43.0818

SUnit_Rom_16.POS_Intro_Start = v(-76.9011,-856.269)
SUnit_Rom_16.Orient_Intro_Start = r_to_d(-0.00249272)
SUnit_Rom_16.Width_Intro_Start = 42.7553

SUnit_Rom_17.POS_Intro_Start = v(129.044,-856.241)
SUnit_Rom_17.Orient_Intro_Start = r_to_d(-0.00325971)
SUnit_Rom_17.Width_Intro_Start = 42.8927

SUnit_Rom_18.POS_Intro_Start = v(182.497,-856.136)
SUnit_Rom_18.Orient_Intro_Start = r_to_d(-0.00325971)
SUnit_Rom_18.Width_Intro_Start = 43.3357

SUnit_Rom_19.POS_Intro_Start = v(120.458,-907.613)
SUnit_Rom_19.Orient_Intro_Start = r_to_d(-0.0330765)
SUnit_Rom_19.Width_Intro_Start = 27.1324

SUnit_Rom_20.POS_Intro_Start = v(147.207,-907.381)
SUnit_Rom_20.Orient_Intro_Start = r_to_d(-0.0117925)
SUnit_Rom_20.Width_Intro_Start = 26.4497


function Teleport_Rom_Army_Intro_Start()
	for i = 1, #Rom_Land_SUnits do
		local curr_sunit = Rom_Land_SUnits[i];
		curr_sunit.uc:teleport_to_location(curr_sunit.POS_Intro_Start, curr_sunit.Orient_Intro_Start, curr_sunit.Width_Intro_Start);
	end;
end;


function Move_Rom_Army_Intro_Start()
	for i = 1, #Rom_Land_SUnits do
		local curr_sunit = Rom_Land_SUnits[i];
		curr_sunit:goto_start_location();
	end;
end;


function Teleport_Rom_Army_Battle_Start()
	for i = 1, #Rom_Land_SUnits do
		local curr_sunit = Rom_Land_SUnits[i];
		curr_sunit:teleport_to_start_location();
	end;
end;


function Show_Egy_Army(value)
	for i = 1, #Egy_SUnits do
		local current_sunit = Egy_SUnits[i];
		current_sunit.uc:set_always_visible_to_all(value);
	end;
end;



Rom_Ships_Intro_Start_Z_Offset = -75;

function Teleport_Rom_Navy_Intro_Start()
	for i = 1, #Rom_Navy_SUnits do
		local curr_sunit = Rom_Navy_SUnits[i];
		curr_sunit.uc:teleport_to_location(v_offset(curr_sunit.start_position, 0, 0, Rom_Ships_Intro_Start_Z_Offset), curr_sunit.start_bearing, curr_sunit.start_width);
	end;
end;


function Move_Rom_Navy_Intro_Start()
	for i = 1, #Rom_Navy_SUnits do
		local curr_sunit = Rom_Navy_SUnits[i];
		curr_sunit:goto_start_location();
	end;
end;


function Teleport_Rom_Navy_Battle_Start()
	for i = 1, #Rom_Navy_SUnits do
		local curr_sunit = Rom_Navy_SUnits[i];
		curr_sunit:teleport_to_start_location();
	end;
end;







--
-- Convex Areas
--

--[[
Area_Village = convex_area:new(
	{
		v(80, -330),
		v(550, -340),
		v(580, -700),
		v(70, -570)
	}
);
]]




--
-- Patrol_Managers
--

--PM_Egy_01 = patrol_manager:new("Egy_01", SUnit_Egy_01, Alliance_Rom:armies(), 100);
--PM_Egy_01:add_waypoint(v(120, 70), false, 5000);









C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ni_nile_small\ni_declarations2.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	DECLARATIONS SCRIPT
--
--	Declare alliances, armies, convex areas and anything else of note in here
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

cam = bm:camera();
bm:enable_cinematic_ui(true, true, true);

--
-- Army Declarations
--

Alliances = bm:alliances();

Alliance_Rom = Alliances:item(1);
Army_Rom_01 = Alliance_Rom:armies():item(1);

Alliance_Egy = Alliances:item(2); 
Army_Egy_01 = Alliance_Egy:armies():item(1);
Army_Egy_02 = Alliance_Egy:armies():item(2);




--
-- Script Unit Declarations
--


SUnit_Rom_01 = script_unit:new(Army_Rom_01, "Rom_01");
SUnit_Rom_02 = script_unit:new(Army_Rom_01, "Rom_02");
SUnit_Rom_03 = script_unit:new(Army_Rom_01, "Rom_03");
SUnit_Rom_04 = script_unit:new(Army_Rom_01, "Rom_04");
SUnit_Rom_05 = script_unit:new(Army_Rom_01, "Rom_05");
SUnit_Rom_06 = script_unit:new(Army_Rom_01, "Rom_06");
SUnit_Rom_07 = script_unit:new(Army_Rom_01, "Rom_07");
SUnit_Rom_08 = script_unit:new(Army_Rom_01, "Rom_08");
SUnit_Rom_09 = script_unit:new(Army_Rom_01, "Rom_09");
SUnit_Rom_10 = script_unit:new(Army_Rom_01, "Rom_10");
SUnit_Rom_11 = script_unit:new(Army_Rom_01, "Rom_Ship_1");
SUnit_Rom_12 = script_unit:new(Army_Rom_01, "Rom_Ship_3");
SUnit_Rom_13 = script_unit:new(Army_Rom_01, "Rom_Ship_4");
SUnit_Rom_14 = script_unit:new(Army_Rom_01, "Rom_11");
SUnit_Rom_15 = script_unit:new(Army_Rom_01, "Rom_12");

UC_Rom_01_All = unitcontroller_from_army(Army_Rom_01);

Rome_Land_SUnits = {
 SUnit_Rom_01,
 SUnit_Rom_02,
 SUnit_Rom_03,
 SUnit_Rom_04,
 SUnit_Rom_05,
 SUnit_Rom_06,
 SUnit_Rom_07,
 SUnit_Rom_08,
 SUnit_Rom_09,
 SUnit_Rom_10,
 SUnit_Rom_14,
 SUnit_Rom_15
};

SUnits_Rom_Navy = {
SUnit_Rom_11,
SUnit_Rom_12,
SUnit_Rom_13
}; 



SUnit_Egy_01 = script_unit:new(Army_Egy_01, "Egy_01");
SUnit_Egy_02 = script_unit:new(Army_Egy_01, "Egy_02");
SUnit_Egy_03 = script_unit:new(Army_Egy_01, "Egy_03");
SUnit_Egy_04 = script_unit:new(Army_Egy_01, "Egy_04");
SUnit_Egy_05 = script_unit:new(Army_Egy_01, "Egy_05");
SUnit_Egy_06 = script_unit:new(Army_Egy_01, "Egy_06");
SUnit_Egy_07 = script_unit:new(Army_Egy_01, "Egy_07");
SUnit_Egy_08 = script_unit:new(Army_Egy_01, "Egy_08");
SUnit_Egy_09 = script_unit:new(Army_Egy_01, "Egy_09");
SUnit_Egy_10 = script_unit:new(Army_Egy_01, "Egy_10");
SUnit_Egy_11 = script_unit:new(Army_Egy_01, "Egy_11");
SUnit_Egy_12 = script_unit:new(Army_Egy_01, "Egy_12");
SUnit_Egy_13 = script_unit:new(Army_Egy_01, "Egy_13");
SUnit_Egy_14 = script_unit:new(Army_Egy_01, "Egy_14");
SUnit_Egy_15 = script_unit:new(Army_Egy_01, "Egy_15");
SUnit_Egy_16 = script_unit:new(Army_Egy_01, "Egy_16");
SUnit_Egy_17 = script_unit:new(Army_Egy_01, "Egy_17");
SUnit_Egy_18 = script_unit:new(Army_Egy_01, "Egy_18");
SUnit_Egy_21 = script_unit:new(Army_Egy_02, "Egy_Naval_1");
SUnit_Egy_22 = script_unit:new(Army_Egy_02, "Egy_Naval_2");
SUnit_Egy_24 = script_unit:new(Army_Egy_02, "Egy_Naval_3");
SUnit_Egy_25 = script_unit:new(Army_Egy_02, "Egy_Naval_4");
SUnit_Egy_26 = script_unit:new(Army_Egy_02, "Egy_Naval_5");
Sunit_Egy_S1 = script_unit:new(Army_Egy_01, "Egy_S1");
Sunit_Egy_S2 = script_unit:new(Army_Egy_01, "Egy_S2");
Sunit_Egy_S3 = script_unit:new(Army_Egy_01, "Egy_S3");
Sunit_Egy_S4 = script_unit:new(Army_Egy_01, "Egy_S4");
--SUnit_Egy_23 = script_unit:new(Army_Egy_01, "Egy_21");
--SUnit_Egy_28 = script_unit:new(Army_Egy_01, "Egy_26");
--SUnit_Egy_29 = script_unit:new(Army_Egy_01, "Egy_27");
UC_Egy_01_All = unitcontroller_from_army(Army_Egy_01);
--UC_Egy_01_All:take_control();

--
-- Egyptian reinforcements
--


SUnit_Egy_R_01 = script_unit:new(Army_Egy_02, "Egy_R_01");
SUnit_Egy_R_02 = script_unit:new(Army_Egy_02, "Egy_R_02");
SUnit_Egy_R_03 = script_unit:new(Army_Egy_02, "Egy_R_03");
SUnit_Egy_R_04 = script_unit:new(Army_Egy_02, "Egy_R_04");
SUnit_Egy_R_05 = script_unit:new(Army_Egy_02, "Egy_R_05");
SUnit_Egy_R_06 = script_unit:new(Army_Egy_02, "Egy_R_06");
SUnit_Egy_R_07 = script_unit:new(Army_Egy_02, "Egy_R_07");
SUnit_Egy_R_08 = script_unit:new(Army_Egy_02, "Egy_R_08");
SUnit_Egy_R_09 = script_unit:new(Army_Egy_02, "Egy_R_09");
SUnit_Egy_R_10 = script_unit:new(Army_Egy_02, "Egy_R_10");
SUnit_Egy_R_11 = script_unit:new(Army_Egy_02, "Egy_R_11");
SUnit_Egy_R_12 = script_unit:new(Army_Egy_02, "Egy_R_12");
SUnit_Egy_R_13 = script_unit:new(Army_Egy_02, "Egy_R_13");
SUnit_Egy_R_14 = script_unit:new(Army_Egy_02, "Egy_R_14");
SUnit_Egy_R_15 = script_unit:new(Army_Egy_02, "Egy_R_15");
SUnit_Egy_R_16 = script_unit:new(Army_Egy_02, "Egy_R_16");
SUnit_Egy_R_17 = script_unit:new(Army_Egy_02, "Egy_R_17");
SUnit_Egy_R_18 = script_unit:new(Army_Egy_02, "Egy_R_18");





Egy_Land_SUnits = {
  SUnit_Egy_01,
  SUnit_Egy_02,
  SUnit_Egy_03,
  SUnit_Egy_04,
  SUnit_Egy_05,
  SUnit_Egy_06,
  SUnit_Egy_07,
  SUnit_Egy_08,
  SUnit_Egy_09,
  SUnit_Egy_10,
  SUnit_Egy_11,
  SUnit_Egy_12,
  SUnit_Egy_13,
  SUnit_Egy_14,
  SUnit_Egy_15,
  SUnit_Egy_16,
  SUnit_Egy_17,
  SUnit_Egy_18,
  SUnit_Egy_19,
  SUnit_Egy_20,
  SUnit_Egy_27
};


Egy_Reinforcements_SUnits = {
	SUnit_Egy_R_01,
	SUnit_Egy_R_02,
	SUnit_Egy_R_03,
	SUnit_Egy_R_04,
	SUnit_Egy_R_05,
	SUnit_Egy_R_06,
	SUnit_Egy_R_07,
	SUnit_Egy_R_08,
	SUnit_Egy_R_09,
	SUnit_Egy_R_10,
	SUnit_Egy_R_11,
	SUnit_Egy_R_12,
	SUnit_Egy_R_13,
	SUnit_Egy_R_14,
	SUnit_Egy_R_15,
	SUnit_Egy_R_16,
	SUnit_Egy_R_17,
	SUnit_Egy_R_18
};



Egy_Main_SUnits = {
	--SUnit_Egy_01,
	--SUnit_Egy_02,
	--SUnit_Egy_03,
	--SUnit_Egy_04,
	--SUnit_Egy_05,
	--SUnit_Egy_06,
	--SUnit_Egy_07,
	--SUnit_Egy_10,
	--SUnit_Egy_11,
	--SUnit_Egy_16
	
};


Egy_Naval_SUnits = {
	SUnit_Egy_21,
	SUnit_Egy_22,
	SUnit_Egy_24,
	SUnit_Egy_25,
	SUnit_Egy_26
};


Egy_West_Ambush_SUnits = {
	SUnit_Egy_18
};

--Egy_Chariot_Ambush_SUnits = {
--	SUnit_Egy_13
--};


Egy_East_Ambush_SUnits = {
	SUnit_Egy_07
};

Egy_Elephant_Ambush_SUnits = {
	SUnit_Egy_12
};

Egy_Artillery_SUnits = {
	SUnit_Egy_11,
	SUnit_Egy_12
};
Egy_Fireball_Sunits ={
Sunit_Egy_S1,
Sunit_Egy_S2,
Sunit_Egy_S3,
Sunit_Egy_S4
};

--
-- Fireball Stuff
--
	Area_Deployable_03 = convex_area:new(
		{
			v(-140, -286),
			v(-108, -285),
			v(-55, -430),
			v(-188, -415)
		}
	);
	
	Area_Deployable_01 = convex_area:new(
		{
			v(-70, -276),
			v(-50, -278),
			v(12, -380),
			v(-86, -383)
			
		}
	);
	
	Area_Deployable_02 = convex_area:new(
		{
			v(-10, -277),
			v(10, -276),
			v(105, -384),
			v(-53, -407)
			
		}
	);
	
	Area_Deployable_04 = convex_area:new(
		{
			v(60, -276),
			v(81, -276),
			v(226, -349),
			v(13, -423)
		
		}
	);
	

--
-- Battle sounds
--

SFX_HB_NI_Pre_01 = new_sfx("Play_Rom_HB_NI_Pre_01_1");
SFX_HB_NI_Pre_02 = new_sfx("Play_Rom_HB_NI_Pre_02_1");
SFX_HB_NI_Pre_03 = new_sfx("Play_Rom_HB_NI_Pre_03_1");
SFX_HB_NI_Pre_04 = new_sfx("Play_Rom_HB_NI_Pre_04_1");
SFX_HB_NI_Pre_05 = new_sfx("Play_Rom_HB_NI_Pre_05_1");

SFX_HB_NI_Intro_02 = new_sfx("Play_Rom_HB_NI_Intro_02_1");
SFX_HB_NI_Intro_03 = new_sfx("Play_Rom_HB_NI_Intro_03_1");
SFX_HB_NI_Intro_04 = new_sfx("Play_Rom_HB_NI_Intro_04_1");

SFX_HB_NI_001 = new_sfx("Play_Rom_HB_NI_001_1");
SFX_HB_NI_002 = new_sfx("Play_Rom_HB_NI_002_1");
SFX_HB_NI_003 = new_sfx("Play_Rom_HB_NI_003_1");
SFX_HB_NI_004 = new_sfx("Play_Rom_HB_NI_004_1");
SFX_HB_NI_005 = new_sfx("Play_Rom_HB_NI_005_1");
SFX_HB_NI_006 = new_sfx("Play_Rom_HB_NI_006_1");

SFX_HB_NI_Post_01 = new_sfx("Play_Rom_HB_NI_Post_01_1");
SFX_HB_NI_Post_02 = new_sfx("Play_Rom_HB_NI_Post_02_1");

POS_Play_Sound = v(0,0);


-- setting up unit states

Take_Control_Of_SUnits(Egy_West_Ambush_SUnits);		-- prevent these units from deploying
Take_Control_Of_SUnits(Egy_East_Ambush_SUnits);
--Take_Control_Of_SUnits(Egy_Naval_SUnits);
Take_Control_Of_SUnits(Egy_Artillery_SUnits);
Set_Skirmish(Egy_West_Ambush_SUnits, true);			-- set skirmishers to skirmish
--Set_Skirmish(Egy_East_Ambush_SUnits, true);
Take_Control_Of_SUnits(Egy_Fireball_Sunits);		


--------
--Roman Stuff
-------

Rom_Waypoints = {
 -- v(18, -675),
 -- v(18, -400),
  v(18, -240),

};












--
-- Buildings
--

-- Building_01 = get_building_near(bm, 0, 0);





-- Various defensive positions around the battlefield
POS_Egy_Main = v(-130, -20);
POS_Egy_Ele = v(-270, -70);
POS_Egy_Cav = v(180, -40);
POS_Egy_Flank = v(200, -180);
POS_Egy_Response = v(30, -10);
POS_Egy_Main_Forward = v(-200, -260);
POS_Egy_Flank_Forward = v(180, -350);

Dist_Egy_Main = 175;
Dist_Egy_Ele = 100;
Dist_Egy_Cav = 100;
Dist_Egy_Flank = 90;
Dist_Egy_Response = 100;

Dist_Egy_Main_Forward = 250;
Dist_Egy_Flank_Forward = 200;


POS_Egy_Village = v(180, -460);
POS_Egy_Marsh_South = v(-40, -465);
POS_Egy_Marshes = v(-300, -330);

-- Enums to determine army positions
AT_MAIN = 0;
AT_RESPONSE = 1;
AT_FLANK = 2;
AT_MAIN_FORWARD = 3;
AT_FLANK_FORWARD = 4;





--
-- Convex Areas
--


Area_Village = convex_area:new(
	{
		v(80, -330),
		v(550, -340),
		v(580, -700),
		v(70, -570)
	}
);


Area_Main_Approach = convex_area:new(
	{
		v(-160, -420),
		v(-340, -320),
		v(-590, -150),
		v(-740, 330),
		v(30, 660),
		v(0, -140)
	}
);


Area_Flank_Approach = convex_area:new(
	{
		v(0, -140),
		v(30, 660),
		v(660, 660),
		v(580, -500),
		v(90, -530)
	}
);





--
-- Patrol_Managers
--

--PM_Egy_01 = patrol_manager:new("Egy_01", SUnit_Egy_01, Alliance_Rom:armies(), 100);
--PM_Egy_01:add_waypoint(v(120, 70), false, 5000);









C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ni_nile_egy\ni_declarations3.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	DECLARATIONS SCRIPT
--
--	Declare alliances, armies, convex areas and anything else of note in here
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

cam = bm:camera();
bm:enable_cinematic_ui(true, true, true);

--
-- Army Declarations
--

Alliances = bm:alliances();

Alliance_Egy = Alliances:item(1); 
Army_Egy_01 = Alliance_Egy:armies():item(1);

Alliance_Rom = Alliances:item(2);
Army_Rom_01 = Alliance_Rom:armies():item(1);



--
-- Script Unit Declarations
--

SUnit_Egy_01 = script_unit:new(Army_Egy_01, "Egy_01");
SUnit_Egy_02 = script_unit:new(Army_Egy_01, "Egy_02");
SUnit_Egy_03 = script_unit:new(Army_Egy_01, "Egy_03");
SUnit_Egy_04 = script_unit:new(Army_Egy_01, "Egy_04");
SUnit_Egy_05 = script_unit:new(Army_Egy_01, "Egy_05");
SUnit_Egy_06 = script_unit:new(Army_Egy_01, "Egy_06");
--SUnit_Egy_07 = script_unit:new(Army_Egy_01, "Egy_07");
SUnit_Egy_08 = script_unit:new(Army_Egy_01, "Egy_08");
SUnit_Egy_09 = script_unit:new(Army_Egy_01, "Egy_09");
SUnit_Egy_10 = script_unit:new(Army_Egy_01, "Egy_10");
SUnit_Egy_11 = script_unit:new(Army_Egy_01, "Egy_11");
SUnit_Egy_13 = script_unit:new(Army_Egy_01, "Egy_13");
--SUnit_Egy_14 = script_unit:new(Army_Egy_01, "Egy_14");
--SUnit_Egy_15 = script_unit:new(Army_Egy_01, "Egy_15");
SUnit_Egy_16 = script_unit:new(Army_Egy_01, "Egy_16");
SUnit_Egy_17 = script_unit:new(Army_Egy_01, "Egy_17");
SUnit_Egy_18 = script_unit:new(Army_Egy_01, "Egy_18");
SUnit_Egy_21 = script_unit:new(Army_Egy_01, "Egy_Naval_1");
SUnit_Egy_22 = script_unit:new(Army_Egy_01, "Egy_Naval_2");
SUnit_Egy_24 = script_unit:new(Army_Egy_01, "Egy_Naval_3");
SUnit_Egy_25 = script_unit:new(Army_Egy_01, "Egy_Naval_4");
SUnit_Egy_26 = script_unit:new(Army_Egy_01, "Egy_Naval_5");
SUnit_Egy_23 = script_unit:new(Army_Egy_01, "Egy_21");
SUnit_Egy_28 = script_unit:new(Army_Egy_01, "Egy_26");
SUnit_Egy_29 = script_unit:new(Army_Egy_01, "Egy_27");
UC_Egy_01_All = unitcontroller_from_army(Army_Egy_01);
UC_Egy_01_All:change_behaviour_active("fire_at_will", false);
UC_Egy_01_All:release_control();
--UC_Egy_01_All:take_control();

Egy_Land_SUnits = {
	SUnit_Egy_01,
	SUnit_Egy_02,
	SUnit_Egy_03,
	SUnit_Egy_04,
	SUnit_Egy_05,
	SUnit_Egy_06,
	SUnit_Egy_08,
	SUnit_Egy_09,
	SUnit_Egy_10,
	SUnit_Egy_11,
	SUnit_Egy_13,
	SUnit_Egy_16,
	SUnit_Egy_17,
	SUnit_Egy_18,
	SUnit_Egy_23,
	SUnit_Egy_28,
	SUnit_Egy_29
};

SUnits_Egy_Navy = {
	SUnit_Egy_21,
	SUnit_Egy_22,
	SUnit_Egy_24,
	SUnit_Egy_25,
	SUnit_Egy_26
};









SUnit_Rom_01 = script_unit:new(Army_Rom_01, "Rom_01");
SUnit_Rom_02 = script_unit:new(Army_Rom_01, "Rom_02");
SUnit_Rom_03 = script_unit:new(Army_Rom_01, "Rom_03");
SUnit_Rom_04 = script_unit:new(Army_Rom_01, "Rom_04");
SUnit_Rom_05 = script_unit:new(Army_Rom_01, "Rom_05");
SUnit_Rom_06 = script_unit:new(Army_Rom_01, "Rom_06");
SUnit_Rom_07 = script_unit:new(Army_Rom_01, "Rom_07");
SUnit_Rom_08 = script_unit:new(Army_Rom_01, "Rom_08");
--SUnit_Rom_09 = script_unit:new(Army_Rom_01, "Rom_09");
SUnit_Rom_10 = script_unit:new(Army_Rom_01, "Rom_10");
SUnit_Rom_11 = script_unit:new(Army_Rom_01, "Mith_1");
--SUnit_Rom_12 = script_unit:new(Army_Rom_01, "Mith_2");
--SUnit_Rom_13 = script_unit:new(Army_Rom_01, "Mith_3");
--SUnit_Rom_14 = script_unit:new(Army_Rom_01, "Mith_4");
--SUnit_Rom_15 = script_unit:new(Army_Rom_01, "Mith_5");
--SUnit_Rom_16 = script_unit:new(Army_Rom_01, "Mith_6");
SUnit_Rom_17 = script_unit:new(Army_Rom_01, "Mith_7");
--SUnit_Rom_18 = script_unit:new(Army_Rom_01, "Mith_8");
SUnit_Rom_19 = script_unit:new(Army_Rom_01, "Rom_Ship_1");
SUnit_Rom_20 = script_unit:new(Army_Rom_01, "Rom_Ship_2");
SUnit_Rom_21 = script_unit:new(Army_Rom_01, "Rom_Ship_3");
--SUnit_Rom_22 = script_unit:new(Army_Rom_01, "Rom_Ship_4");
--SUnit_Rom_23 = script_unit:new(Army_Rom_01, "Rom_Ship_5");
--SUnit_Rom_24 = script_unit:new(Army_Rom_01, "Rom_Ship_6");
--SUnit_Rom_25 = script_unit:new(Army_Rom_01, "Mith_9");
--SUnit_Rom_26 = script_unit:new(Army_Rom_01, "Mith_10");
UC_Rom_01_All = unitcontroller_from_army(Army_Rom_01);
--UC_Rom_01_All:take_control()
UC_Rom_01_All:change_behaviour_active("fire_at_will", false);
UC_Rom_01_All:release_control();

Rom_SUnitsAI = {
	SUnit_Rom_01,
	SUnit_Rom_02,
	SUnit_Rom_03,
	SUnit_Rom_04,
	SUnit_Rom_05,
	SUnit_Rom_06,
	SUnit_Rom_07,
	SUnit_Rom_08,
	SUnit_Rom_10,
	SUnit_Rom_11,
	SUnit_Rom_17
};


Rom_SUnits_Naval = {
	SUnit_Rom_19,
	SUnit_Rom_20,
	SUnit_Rom_21,
	--SUnit_Rom_23
};





--
-- Battle sounds
--

SFX_HB_NI_Pre_01 = new_sfx("Play_Rom_HB_NI_Pre_01_1");
SFX_HB_NI_Pre_02 = new_sfx("Play_Rom_HB_NI_Pre_02_1");
SFX_HB_NI_Pre_03 = new_sfx("Play_Rom_HB_NI_Pre_03_1");
SFX_HB_NI_Pre_04 = new_sfx("Play_Rom_HB_NI_Pre_04_1");
SFX_HB_NI_Pre_05 = new_sfx("Play_Rom_HB_NI_Pre_05_1");

SFX_HB_NI_Intro_02 = new_sfx("Play_Rom_HB_NI_Intro_02_1");
SFX_HB_NI_Intro_03 = new_sfx("Play_Rom_HB_NI_Intro_03_1");
SFX_HB_NI_Intro_04 = new_sfx("Play_Rom_HB_NI_Intro_04_1");

SFX_HB_NI_001 = new_sfx("Play_Rom_HB_NI_001_1");
SFX_HB_NI_002 = new_sfx("Play_Rom_HB_NI_002_1");
SFX_HB_NI_003 = new_sfx("Play_Rom_HB_NI_003_1");
SFX_HB_NI_004 = new_sfx("Play_Rom_HB_NI_004_1");
SFX_HB_NI_005 = new_sfx("Play_Rom_HB_NI_005_1");
SFX_HB_NI_006 = new_sfx("Play_Rom_HB_NI_006_1");

SFX_HB_NI_Post_01 = new_sfx("Play_Rom_HB_NI_Post_01_1");
SFX_HB_NI_Post_02 = new_sfx("Play_Rom_HB_NI_Post_02_1");

POS_Play_Sound = v(0,0);


-- setting up unit states

--Take_Control_Of_SUnits(Egy_West_Ambush_SUnits);		-- prevent these units from deploying
--Take_Control_Of_SUnits(Egy_East_Ambush_SUnits);
--Take_Control_Of_SUnits(Egy_Naval_SUnits);
--Take_Control_Of_SUnits(Egy_Artillery_SUnits);
--Set_Skirmish(Egy_West_Ambush_SUnits, true);			-- set skirmishers to skirmish
--Set_Skirmish(Egy_East_Ambush_SUnits, true);		












--
-- Buildings
--

-- Building_01 = get_building_near(bm, 0, 0);





-- Various defensive positions around the battlefield
POS_Egy_Main = v(-130, -20);
POS_Egy_Ele = v(-270, -70);
POS_Egy_Cav = v(180, -40);
POS_Egy_Flank = v(200, -180);
POS_Egy_Response = v(30, -10);
POS_Egy_Main_Forward = v(-200, -260);
POS_Egy_Flank_Forward = v(180, -350);

Dist_Egy_Main = 175;
Dist_Egy_Ele = 100;
Dist_Egy_Cav = 100;
Dist_Egy_Flank = 90;
Dist_Egy_Response = 100;

Dist_Egy_Main_Forward = 250;
Dist_Egy_Flank_Forward = 200;


POS_Egy_Village = v(180, -460);
POS_Egy_Marsh_South = v(-40, -465);
POS_Egy_Marshes = v(-300, -330);

-- Enums to determine army positions
AT_MAIN = 0;
AT_RESPONSE = 1;
AT_FLANK = 2;
AT_MAIN_FORWARD = 3;
AT_FLANK_FORWARD = 4;





--
-- Convex Areas
--


Area_Village = convex_area:new(
	{
		v(80, -330),
		v(550, -340),
		v(580, -700),
		v(70, -570)
	}
);


Area_Main_Approach = convex_area:new(
	{
		v(-160, -420),
		v(-340, -320),
		v(-590, -150),
		v(-740, 330),
		v(30, 660),
		v(0, -140)
	}
);


Area_Flank_Approach = convex_area:new(
	{
		v(0, -140),
		v(30, 660),
		v(660, 660),
		v(580, -500),
		v(90, -530)
	}
);





--
-- Patrol_Managers
--

--PM_Egy_01 = patrol_manager:new("Egy_01", SUnit_Egy_01, Alliance_Rom:armies(), 100);
--PM_Egy_01:add_waypoint(v(120, 70), false, 5000);









C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ni_nile\ni_main.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	MAIN BATTLE SCRIPT
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------



-- called at start of deployment phase
function Deployment_Phase()
	bm:out("Battle is in deployment phase");
end;



-- end of deployment phase i.e. battle start
function End_Deployment_Phase()
		
	-- launch cutscene, or straight into battle without it
	Play_Cutscene_Intro();
	-- Start_Battle_No_Cutscene();
end;


function Start_Battle_No_Cutscene()
	cam:fade(false, 0.5);
	
	Start_Battle();
end;


----------------------------------------------
--
--	START BATTLE
--
----------------------------------------------


-- the interactive battle has started
function Start_Battle()
	bm:out("Battle is Starting");
	
	-- startup advice
	bm:callback(function() bm:queue_advisor("Rom.HB.NI.001", 10000) end, 2000);
	
	-- startup objective
	bm:callback(function() set_objective("Rom.HB.NI.Objective_01") end, 5000);
			
	-- register victory and defeat VO callbacks
	bm:setup_victory_callback(function() Battle_Is_Ending() end);
	
	-- start rout manager
	bm:start_rout_manager(1);
	
	-- Egyptian Army
	UC_Egy_01_All:release_control();
	
	-- Egyptian Navy
	UC_Egy_02_All:release_control();
	
	-- rout Egyptian Navy if the land army routs
	bm:watch(
		function() return is_routing_or_dead(Egy_Land_SUnits) end,
		0,
		function()
			for i = 1, #Egy_Naval_SUnits do
				Egy_Naval_SUnits[i].uc:morale_behavior_rout();
			end
		end,
		"Egy_Navy_Behaviour"
	);
end;



----------------------------------------------
--
--	END OF BATTLE
--
----------------------------------------------


BOOL_Battle_Is_Ending = false;

-- the game has gone to victory countdown phase, someone has won
function Battle_Is_Ending()
	if not BOOL_Battle_Is_Ending then
		BOOL_Battle_Is_Ending = true;
		
		bm:remove_process("Egy_Navy_Behaviour");
							
		if is_routing_or_dead(Alliance_Rom) then	
			bm:out("Player has lost, army is routing");
			
			fail_objective("Rom.HB.NI.Objective_01");
			
			bm:stop_advisor_queue();
			bm:queue_advisor("Rom.HB.NI.006", 10000);
							
			bm:callback(function() bm:end_battle() end, 10000);
		else
			bm:out("Player has won !");
			
			complete_objective("Rom.HB.NI.Objective_01");
			
			--  achievement
			local difficulty = Army_Rom_01:army_handicap();
	
			if difficulty <= 0 then			-- difficulty is "normal" or harder
				bm:unlock_achievement("ACHIEVEMENT_HISTORICAL_BATTLE_7");
			end;
			
			bm:stop_advisor_queue();
			bm:queue_advisor("Rom.HB.NI.005", 15000);
			
			bm:callback(function() bm:end_battle() end, 15000);
		end;
	end;
end;










C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ni_nile_small\ni_main2.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	MAIN BATTLE SCRIPT
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------



-- called at start of deployment phase
function Deployment_Phase()
	bm:out("Battle is in deployment phase");
end;



-- end of deployment phase i.e. battle start
function End_Deployment_Phase()
		
	-- launch cutscene, or straight into battle without it
	Play_Cutscene_Intro();
	-- Start_Battle_No_Cutscene();
end;


function Start_Battle_No_Cutscene()
	cam:fade(false, 0.5);
	
	Start_Battle();
end;


----------------------------------------------
--
--	START BATTLE
--
----------------------------------------------


BOOL_Should_Release_To_AI = false;

-- the interactive battle has started
function Start_Battle()
	bm:out("Battle is Starting");
	
	-- startup advice
	bm:callback(function() bm:queue_advisor("Rom.HB.NI.001", 8000) end, 2000);
	
	-- startup objective
	bm:callback(function() set_objective("Rom.HB.NI.Objective_01") end, 4000);
			
	-- register victory and defeat VO callbacks
	bm:setup_victory_callback(function() Battle_Is_Ending() end);
	
	-- start rout manager
	bm:start_rout_manager(1);
		
	-- should we just release to AI and not do anything scripted
	if BOOL_Should_Release_To_AI then
		bm:out("\tReleasing all Egyptian units to AI");
		UC_Egy_01_All:release_control();
		return;
	end;
		
	bm:watch(
		function()
			return is_routing_or_dead(Egy_Land_SUnits)
		end,
		0,
		function()
			bm:out("Egyptian army is routing -> routing Egyptian navy!");
			for i = 1, #Egy_Naval_SUnits do
				Egy_Naval_SUnits[i].uc:morale_behavior_rout();
			end;
		end,
		"Army_Rout_Watch"
	);

	
	Watch_Rolling_Ball_Deployable(Sunit_Egy_S3, v(-125, -285), Rome_Land_SUnits, Area_Deployable_03);
	Watch_Rolling_Ball_Deployable(Sunit_Egy_S1, v(-60, -275), Rome_Land_SUnits, Area_Deployable_01);
	Watch_Rolling_Ball_Deployable(Sunit_Egy_S2, v(00, -275), Rome_Land_SUnits, Area_Deployable_02);
	Watch_Rolling_Ball_Deployable(Sunit_Egy_S4, v(70, -275), Rome_Land_SUnits, Area_Deployable_04);	
	--
	-- SCRIPTED BEHAVIOUR
	--	
	
	--Release_SUnits_To_AI(Egy_Main_SUnits);
	--Release_SUnits_To_AI(Egy_Naval_SUnits);
	
	Set_West_Ambush();
	Set_East_Ambush();
	--Set_Chariot_Ambush();
	--Set_Elephant_Ambush();
	--Start_Naval_Patrol();
	Start_Egy_Artillery_Group(Egy_Artillery_SUnits); 
	--Start_Egy_Main_Defence() 
	--Start_Egy_Secondary_Defence() 
	--Start_Roman_Attack();

	-- wait a while before summoning Egyptian reinforcements
	bm:callback(function() Summon_Egyptian_Reinforcements() end, 540000);
end;





----------------------------------------------
--
--	END OF BATTLE
--
----------------------------------------------


BOOL_Battle_Is_Ending = false;

-- the game has gone to victory countdown phase, someone has won
function Battle_Is_Ending()
	if not BOOL_Battle_Is_Ending then
		BOOL_Battle_Is_Ending = true;
		bm:remove_process("Army_Rout_Watch")		
		bm:remove_process("Egy_General_Watch");
		bm:remove_process("Rom_General_Watch");
		bm:remove_process("Egy_Elephant_Attack");
		bm:remove_process("Egy_Cavalry_Attack");
					
		if is_routing_or_dead(Alliance_Rom) then	
			bm:out("Player has lost, army is routing");
			
			fail_objective("Rom.HB.NI.Objective_01");
			
			bm:stop_advisor_queue();
			bm:queue_advisor("Rom.HB.NI.006", 8000);
							
			bm:callback(function() bm:end_battle() end, 10000);
		else
			bm:out("Player has won !");
			
			complete_objective("Rom.HB.NI.Objective_01");
			
			bm:stop_advisor_queue();
			bm:queue_advisor("Rom.HB.NI.005", 12000);
			
			bm:callback(function() bm:end_battle() end, 12000);
		end;
	end;
end;

--[[

]]







----------------------------------------------
--
--	WEST AMBUSH
--
----------------------------------------------

function Set_West_Ambush()
bm:out("Set_West_Ambush() called!");
	bm:watch(
		function()
			return distance_between_forces(Rome_Land_SUnits, Egy_West_Ambush_SUnits, true) < 200
		end,
		0,
		function()
			Trigger_West_Ambush()
		end,
		"West_Ambush"
	);
end;



function Trigger_West_Ambush()
	bm:out("Trigger_West_Ambush() called!");
                
	for i = 1, #Egy_West_Ambush_SUnits do
		current_sunit = Egy_West_Ambush_SUnits[i];
		
		Set_Unit_Attacking_Closest(current_sunit, Alliance_Rom, 15000 + (i * 3000));
	end;
end;

----------------------------------------------
--
--	Roman Attack
--
----------------------------------------------

function Start_Roman_Attack()
	bm:out ("Start_Roman_Attack() called");

	SAI_RomAI = script_ai_planner:new("SAI_RomAI", Rom_SUnitsAI);
	SAI_RomAI:set_debug();
	-- SAI_RomAI:patrol(Rom_Waypoints, Egy_Land_SUnits);
	SAI_RomAI:attack_unit(SUnit_Egy_01.unit);
end;



----------------------------------------------
--
--	Egyptian reinforcements
--
----------------------------------------------


function Summon_Egyptian_Reinforcements()
	bm:out("Summoning Egyptian Reinforcements");
	
	for i = 1, #Egy_Reinforcements_SUnits do
		local current_sunit = Egy_Reinforcements_SUnits[i];
		
		current_sunit.unit:deploy_reinforcement(true);
		current_sunit.uc:release_control();
	end;
	
	bm:out("\t" .. tostring(#Egy_Reinforcements_SUnits) .. " deployed");
end;



----------------------------------------------
--
--	EAST AMBUSH
--
----------------------------------------------

function Set_East_Ambush()
bm:out("Set_East_Ambush() called!");
	bm:watch(
		function()
			return distance_between_forces(Rome_Land_SUnits, Egy_East_Ambush_SUnits, true) < 225
		end,
		0,
		function()
			Trigger_East_Ambush()
		end,
		"East_Ambush"
	);
end;

function Trigger_East_Ambush()
	bm:out("Trigger_East_Ambush() called!");
	
	bm:remove_process("East_Ambush");
	
	SAI_Egy_East_Ambushers = script_ai_planner:new("SAI_Egy_Ambushers", Egy_East_Ambush_SUnits);
	SAI_Egy_East_Ambushers:set_debug();
	local unit_to_attack = get_closest_unit(Rom_SUnits, Egy_East_Ambush_SUnits[1].unit:position(), true);
	bm:out("\tattacking unit at " .. v_to_s(unit_to_attack:position()));
	SAI_Egy_East_Ambushers:attack_unit(unit_to_attack);
	
	--Release_SUnits_To_AI(Egy_Main_SUnits);
end;
function Trigger_East_Ambush()
	bm:out("Trigger_East_Ambush() called!");
                
	for i = 1, #Egy_East_Ambush_SUnits do
		current_sunit = Egy_East_Ambush_SUnits[i];
		
		Set_Unit_Attacking_Closest(current_sunit, Alliance_Rom, 15000 + (i * 3000));
	end;
end;








----------------------------------------------
--
--	CHARIOT AMBUSH
--
----------------------------------------------

function Set_Chariot_Ambush()
	
	bm:watch(
		function()
			return distance_between_forces(Rom_SUnits, Egy_Chariot_Ambush_SUnits, true) < 500
		end,
		0,
		function()
			Trigger_Chariot_Ambush()
		end,
		"Chariot_Ambush"
	);
end;
function Trigger_Chariot_Ambush()
	bm:out("Trigger_Chariot_Ambush() called!");
	
	bm:remove_process("Chariot_Ambush");
	
	SAI_Egy_Chariot_Ambushers = script_ai_planner:new("SAI_Egy_Ambushers", Egy_Chariot_Ambush_SUnits);
	SAI_Egy_Chariot_Ambushers:set_debug();
	local unit_to_attack = get_closest_unit(Rom_SUnits, Egy_Chariot_Ambush_SUnits[1].unit:position(), true);
	bm:out("\tattacking unit at " .. v_to_s(unit_to_attack:position()));
	SAI_Egy_Chariot_Ambushers:attack_unit(unit_to_attack);
	
	--Release_SUnits_To_AI(Egy_Main_SUnits);
end;








----------------------------------------------
--
--	ELEPHANT AMBUSH
--
----------------------------------------------

function Set_Elephant_Ambush()
	
	bm:watch(
		function()
			return distance_between_forces(Rom_SUnits, Egy_Elephant_Ambush_SUnits, true) < 350
		end,
		0,
		function()
			Trigger_Elephant_Ambush()
		end,
		"Elephant_Ambush"
	);
end;
function Trigger_Elephant_Ambush()
	bm:out("Trigger_Elephant_Ambush() called!");
	
	bm:remove_process("Elephant_Ambush");
	
	SAI_Egy_Elephant_Ambushers = script_ai_planner:new("SAI_Egy_Ambushers", Egy_Elephant_Ambush_SUnits);
	SAI_Egy_Elephant_Ambushers:set_debug();
	local unit_to_attack = get_closest_unit(Rom_SUnits, Egy_Elephant_Ambush_SUnits[1].unit:position(), true);
	bm:out("\tattacking unit at " .. v_to_s(unit_to_attack:position()));
	SAI_Egy_Elephant_Ambushers:attack_unit(unit_to_attack);
	
	--Release_SUnits_To_AI(Egy_Main_SUnits);
end;










----------------------------------------------
--
--	NAVAL ACTION
--
----------------------------------------------

--Naval_Waypoint_List = {
	--v(700, 500),
--	v(700, 200),
--	v(700, -200),
	--v(700, -800)
--};


function Start_Naval_Patrol()
	bm:out("Start_Naval_Patrol() called");
	
	SAI_Egy_Navy = script_ai_planner:new("SAI_Egy_Navy", Egy_Naval_SUnits);
	SAI_Egy_Navy:set_debug();
	SAI_Egy_Navy:defend_position(v(560, 260), 300);

end;

----------------------------------------------
--
--	Artillery 
--
----------------------------------------------

function Start_Egy_Artillery_Group(art_sunits)
	if not is_table(art_sunits) then
		script_error("Start_Egy_Artillery_Group() called but supplied parameter is not a table!");
		return false;
	end;
	
	-- do nothing if this artillery group contains no units
	if #art_sunits == 0 then
		bm:out("Start_Egy_Artillery_Group() called but supplied group contains no units");
		return;
	end;

	-- stash a unique name for this group based on the first unit in it
	local art_group_name = art_sunits[1].name .. "_Art_Group";

	bm:out("Start_Egy_Artillery_Group() called, name is " .. art_group_name);

	-- -- for each scriptunit 

	for i = 1, #art_sunits do
		local current_sunit = art_sunits[i];

		-- set it to fire-at-will and take control of it so the AI doesn't move it
		current_sunit.uc:change_behaviour_active("fire_at_will", true);
		current_sunit.uc:take_control(); 
	end;
	
	--bm:out("\tnow acting on " .. #art_sunits .. " units");

	-- when the enemy approaches any of these units, release them all to the AI
	--bm:watch(
	--	function()
	--		return distance_between_forces(art_sunits, Rom_SUnits, true) < 100
	--	end,
	--	0,
	--	function()
	--		Release_Egy_Artillery_Group(art_group_name, art_sunits);
	--	end,
	--	art_group_name
	--);
end;


function Release_Egy_Artillery_Group(art_group_name, art_sunits)
	bm:out("Releasing artillery group " .. art_group_name .. " to AI, it has been approached");
	
	bm:remove_process(art_group_name);
	
	-- release the artillery group to the AI
	for i = 1, #art_sunits do
		art_sunits[i].uc:release_control();
	end;
end;










----------------------------------------------
--
--	MAIN DEFENCE
--
----------------------------------------------

function Start_Egy_Main_Defence()
	SAI_Egy_Main_Defence = script_ai_planner:new("SAI_Egy_Main_Defence", Egy_Main_Defence_SUnits);
	SAI_Egy_Main_Defence:set_debug();

	SAI_Egy_Main_Defence:defend_position(v(-15, -80), 150);
end;


function Start_Egy_Secondary_Defence()
	SAI_Egy_Secondary_Defence = script_ai_planner:new("SAI_Egy_Secondary_Defence", Egy_Secondary_Defence_SUnits);
	SAI_Egy_Secondary_Defence:set_debug();

	SAI_Egy_Secondary_Defence:defend_position(v(-750, 90), 150);
end;












----------------------------------------------
--
--	TRIGGERING DEPLOYABLES
--
----------------------------------------------


function Watch_Rolling_Ball_Deployable(sunit, deployable, enemy_sunits, area)
	-- watch for the enemy entering the trigger area
	bm:watch(
		function()
			return area:is_in_area(enemy_sunits, true);
		end,
		0,
		function()
			Trigger_Rolling_Ball_Deployable(sunit, deployable, enemy_sunits, area)
		end,
		sunit.name .. "_Rolling_Ball_Deployable"
	);
	
	-- watch for this unit routing and cancel all this behaviour if so
	bm:watch(
		function()
			return is_routing_or_dead(sunit.unit);
		end,
		0,
		function()
			bm:remove_process(sunit.name .. "_Rolling_Ball_Deployable");
		end,
		sunit.name .. "_Rolling_Ball_Deployable_Rout_Watch"
	);
end;


function Trigger_Rolling_Ball_Deployable(sunit, deployable, enemy_sunits, area)
	bm:out(sunit.name .. " is setting off its rolling ball");

	-- send the unit to set off the deployable
	sunit.uc:interact_with_deployable(deployable, true, true);
	
	-- watch for the unit arriving at the deployable. Wait a while and hope that it's done it by then
	bm:watch(
		function()
			return sunit.unit:position():distance_xz(deployable) < 10
		end,
		15000,
		function() Trigger_Rolling_Ball_Deployable_Post_Attack(sunit, deployable, enemy_sunits, area) end,
		sunit.name .. "_Rolling_Ball_Deployable"
	);
end;


function Trigger_Rolling_Ball_Deployable_Post_Attack(sunit, deployable, enemy_sunits, area)
	bm:out(sunit.name .. " is attacking closest unit after setting off its rolling ball");

	local attack_cmd = function() sunit.uc:attack_unit(get_closest_unit(enemy_sunits, sunit.unit:position(), true), true, true) end;
		
	attack_cmd();
	bm:repeat_callback(function() attack_cmd() end, 15000, sunit.name .. "_Rolling_Ball_Deployable");
end;






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ni_nile_egy\ni_main3.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	MAIN BATTLE SCRIPT
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------



-- called at start of deployment phase
function Deployment_Phase()
	bm:out("Battle is in deployment phase");
end;



-- end of deployment phase i.e. battle start
function End_Deployment_Phase()
		
	-- launch cutscene, or straight into battle without it
	Play_Cutscene_Intro();
	--Start_Battle_No_Cutscene();
end;


function Start_Battle_No_Cutscene()
	cam:fade(false, 0.5);
	
	Start_Battle();
end;


----------------------------------------------
--
--	START BATTLE
--
----------------------------------------------


BOOL_Should_Release_To_AI = false;

-- the interactive battle has started
function Start_Battle()
	bm:out("Battle is Starting");
	
	-- startup advice
	bm:callback(function() bm:queue_advisor("Rom.HB.CN.001", 8000) end, 2000);
	
	-- startup objective
	bm:callback(function() set_objective("Rom.HB.CR.Objective_01") end, 4000);
			
	-- register victory and defeat VO callbacks
	bm:setup_victory_callback(function() Battle_Is_Ending() end);
	
	-- start rout manager
	bm:start_rout_manager(1);
		
	-- should we just release to AI and not do anything scripted
		if BOOL_Should_Release_To_AI then
		bm:out("\tReleasing all Egyptian units to AI");
		UC_Egy_01_All:release_control();
		return;
		end;
		
	bm:watch(
        function()
			return is_routing_or_dead(Rom_SUnitsAI)
		end,
		0,
		function()
			bm:out("Roman army is routing -> routing Roman navy!");
			for i = 1, #Rom_SUnits_Naval do
				Rom_SUnits_Naval[i].uc:morale_behavior_rout();
			end;
		end,
		"Army_Rout_Watch"
	);

	
	--
	-- SCRIPTED BEHAVIOUR
	--	
	
	-- set fire-at-will to on for both armies
	UC_Rom_01_All:change_behaviour_active("fire_at_will", true);
	UC_Egy_01_All:change_behaviour_active("fire_at_will", true);
	
	UC_Rom_01_All:release_control();
	UC_Egy_01_All:release_control();
end;





----------------------------------------------
--
--	END OF BATTLE
--
----------------------------------------------


BOOL_Battle_Is_Ending = false;

-- the game has gone to victory countdown phase, someone has won
function Battle_Is_Ending()
	if not BOOL_Battle_Is_Ending then
		BOOL_Battle_Is_Ending = true;
		bm:remove_process("Army_Rout_Watch")	
		bm:remove_process("Egy_General_Watch");
		bm:remove_process("Rom_General_Watch");
		bm:remove_process("Egy_Elephant_Attack");
		bm:remove_process("Egy_Cavalry_Attack");
					
		if is_routing_or_dead(Alliance_Rom) then	
			bm:out("Player has Won, army is routing");
			
			fail_objective("Rom.HB.CR.Objective_01");
			
			bm:stop_advisor_queue();
			bm:queue_advisor("Rom.HB.CR.007", 8000);
							
			bm:callback(function() bm:end_battle() end, 10000);
		else
			bm:out("Player has won !");
			
			complete_objective("Rom.HB.CR.Objective_01");
			
			bm:stop_advisor_queue();
			bm:queue_advisor("Rom.HB.CR.008", 12000);
			
			bm:callback(function() bm:end_battle() end, 12000);
		end;
	end;
end;

--[[

]]







----------------------------------------------
--
--	WEST AMBUSH
--
----------------------------------------------

function Set_West_Ambush()
	bm:watch(
		function()
			return distance_between_forces(Rom_SUnits, Egy_West_Ambush_SUnits, true) < 200
		end,
		0,
		function()
			Trigger_West_Ambush()
		end,
		"West_Ambush"
	);
end;


function Trigger_West_Ambush()
	bm:out("Trigger_West_Ambush() called!");
	
	bm:remove_process("West_Ambush");
	
	SAI_Egy_West_Ambushers = script_ai_planner:new("SAI_Egy_Ambushers", Egy_West_Ambush_SUnits);
	SAI_Egy_West_Ambushers:set_debug();
	local unit_to_attack = get_closest_unit(Rom_SUnits, Egy_West_Ambush_SUnits[1].unit:position(), true);
	bm:out("\tattacking unit at " .. v_to_s(unit_to_attack:position()));
	SAI_Egy_West_Ambushers:attack_unit(unit_to_attack);
	
	--Release_SUnits_To_AI(Egy_Main_SUnits);
end;


----------------------------------------------
--
--	Roman Attack
--
----------------------------------------------

function Start_Roman_Attack()
	bm:out ("Start_Roman_Attack() called");

	SAI_RomAI = script_ai_planner:new("SAI_RomAI", Rom_SUnitsAI);
	SAI_RomAI:set_debug();
	SAI_RomAI:attack_unit(SUnit_Egy_01.unit);
end;



----------------------------------------------
--
--	Egyptian reinforcements
--
----------------------------------------------


function Summon_Egyptian_Reinforcements()
	bm:out("Summoning Egyptian Reinforcements");
	
	for i = 1, #Egy_Reinforcements_SUnits do
		local current_sunit = Egy_Reinforcements_SUnits[i];
		
		current_sunit.unit:deploy_reinforcement(true);
		current_sunit.uc:release_control();
	end;
	
	bm:out("\t" .. tostring(#Egy_Reinforcements_SUnits) .. " deployed");
end;



----------------------------------------------
--
--	EAST AMBUSH
--
----------------------------------------------

function Set_East_Ambush()
	
	bm:watch(
		function()
			return distance_between_forces(Rom_SUnits, Egy_East_Ambush_SUnits, true) < 200
		end,
		0,
		function()
			Trigger_East_Ambush()
		end,
		"East_Ambush"
	);
end;

--[[function Trigger_East_Ambush()
	bm:out("Trigger_East_Ambush() called!");
	
	bm:remove_process("East_Ambush");
	
	SAI_Egy_East_Ambushers = script_ai_planner:new("SAI_Egy_Ambushers", Egy_East_Ambush_SUnits);
	SAI_Egy_East_Ambushers:set_debug();
	local unit_to_attack = get_closest_unit(Rom_SUnits, Egy_East_Ambush_SUnits[1].unit:position(), true);
	bm:out("\tattacking unit at " .. v_to_s(unit_to_attack:position()));
	SAI_Egy_East_Ambushers:attack_unit(unit_to_attack);
	
	--Release_SUnits_To_AI(Egy_Main_SUnits);
end;--]]
function Trigger_East_Ambush()
                bm:out("Trigger_East_Ambush() called!");
                
                bm:remove_process("East_Ambush");
                
                --[[
                SAI_Egy_East_Ambushers = script_ai_planner:new("SAI_Egy_Ambushers", Egy_East_Ambush_SUnits);
                SAI_Egy_East_Ambushers:set_debug();
                local unit_to_attack = get_closest_unit(Rom_SUnits, Egy_East_Ambush_SUnits[1].unit:position(), true);
                bm:out("\tattacking unit at " .. v_to_s(unit_to_attack:position()));
                SAI_Egy_East_Ambushers:attack_unit(unit_to_attack);
                ]]
                
                for i = 1, #Egy_East_Ambush_SUnits do
                                current_sunit = Egy_East_Ambush_SUnits[i];
                                
                                current_sunit.uc:attack_unit(get_closest_unit(Alliance_Rom, current_sunit.unit:position(), true), true, true);
                                bm:repeat_callback(function() current_sunit.uc:attack_unit(get_closest_unit(Alliance_Rom, current_sunit.unit:position(), true), true, true) end, 19000 + (i * 2000), "East_Ambush");
                                bm:watch(function() return is_routing_or_dead(current_sunit.unit) end, 0, function() bm:remove_process("East_Ambush") end, "East_Ambush");
                end;
                
                --Release_SUnits_To_AI(Egy_Main_SUnits);
end;








----------------------------------------------
--
--	CHARIOT AMBUSH
--
----------------------------------------------

function Set_Chariot_Ambush()
	
	bm:watch(
		function()
			return distance_between_forces(Rom_SUnits, Egy_Chariot_Ambush_SUnits, true) < 500
		end,
		0,
		function()
			Trigger_Chariot_Ambush()
		end,
		"Chariot_Ambush"
	);
end;
function Trigger_Chariot_Ambush()
	bm:out("Trigger_Chariot_Ambush() called!");
	
	bm:remove_process("Chariot_Ambush");
	
	SAI_Egy_Chariot_Ambushers = script_ai_planner:new("SAI_Egy_Ambushers", Egy_Chariot_Ambush_SUnits);
	SAI_Egy_Chariot_Ambushers:set_debug();
	local unit_to_attack = get_closest_unit(Rom_SUnits, Egy_Chariot_Ambush_SUnits[1].unit:position(), true);
	bm:out("\tattacking unit at " .. v_to_s(unit_to_attack:position()));
	SAI_Egy_Chariot_Ambushers:attack_unit(unit_to_attack);
	
	--Release_SUnits_To_AI(Egy_Main_SUnits);
end;








----------------------------------------------
--
--	ELEPHANT AMBUSH
--
----------------------------------------------

function Set_Elephant_Ambush()
	
	bm:watch(
		function()
			return distance_between_forces(Rom_SUnits, Egy_Elephant_Ambush_SUnits, true) < 350
		end,
		0,
		function()
			Trigger_Elephant_Ambush()
		end,
		"Elephant_Ambush"
	);
end;
function Trigger_Elephant_Ambush()
	bm:out("Trigger_Elephant_Ambush() called!");
	
	bm:remove_process("Elephant_Ambush");
	
	SAI_Egy_Elephant_Ambushers = script_ai_planner:new("SAI_Egy_Ambushers", Egy_Elephant_Ambush_SUnits);
	SAI_Egy_Elephant_Ambushers:set_debug();
	local unit_to_attack = get_closest_unit(Rom_SUnits, Egy_Elephant_Ambush_SUnits[1].unit:position(), true);
	bm:out("\tattacking unit at " .. v_to_s(unit_to_attack:position()));
	SAI_Egy_Elephant_Ambushers:attack_unit(unit_to_attack);
	
	--Release_SUnits_To_AI(Egy_Main_SUnits);
end;










----------------------------------------------
--
--	NAVAL ACTION
--
----------------------------------------------

--Naval_Waypoint_List = {
	--v(700, 500),
--	v(700, 200),
--	v(700, -200),
	--v(700, -800)
--};


function Start_Naval_Patrol()
	bm:out("Start_Naval_Patrol() called");
	
	SAI_Egy_Navy = script_ai_planner:new("SAI_Egy_Navy", Egy_Naval_SUnits);
	SAI_Egy_Navy:set_debug();
	SAI_Egy_Navy:defend_position(v(560, 260), 300);

end;

----------------------------------------------
--
--	Artillery 
--
----------------------------------------------

function Start_Egy_Artillery_Group(art_sunits)
	if not is_table(art_sunits) then
		script_error("Start_Egy_Artillery_Group() called but supplied parameter is not a table!");
		return false;
	end;
	
	-- do nothing if this artillery group contains no units
	if #art_sunits == 0 then
		bm:out("Start_Egy_Artillery_Group() called but supplied group contains no units");
		return;
	end;

	-- stash a unique name for this group based on the first unit in it
	local art_group_name = art_sunits[1].name .. "_Art_Group";

	bm:out("Start_Egy_Artillery_Group() called, name is " .. art_group_name);

	-- -- for each scriptunit 

	for i = 1, #art_sunits do
		local current_sunit = art_sunits[i];

		-- set it to fire-at-will and take control of it so the AI doesn't move it
		current_sunit.uc:change_behaviour_active("fire_at_will", true);
		current_sunit.uc:take_control(); 
	end;
	
	--bm:out("\tnow acting on " .. #art_sunits .. " units");

	-- when the enemy approaches any of these units, release them all to the AI
	--bm:watch(
	--	function()
	--		return distance_between_forces(art_sunits, Rom_SUnits, true) < 100
	--	end,
	--	0,
	--	function()
	--		Release_Egy_Artillery_Group(art_group_name, art_sunits);
	--	end,
	--	art_group_name
	--);
end;


function Release_Egy_Artillery_Group(art_group_name, art_sunits)
	bm:out("Releasing artillery group " .. art_group_name .. " to AI, it has been approached");
	
	bm:remove_process(art_group_name);
	
	-- release the artillery group to the AI
	for i = 1, #art_sunits do
		art_sunits[i].uc:release_control();
	end;
end;










----------------------------------------------
--
--	MAIN DEFENCE
--
----------------------------------------------

function Start_Egy_Main_Defence()
	SAI_Egy_Main_Defence = script_ai_planner:new("SAI_Egy_Main_Defence", Egy_Main_Defence_SUnits);
	SAI_Egy_Main_Defence:set_debug();

	SAI_Egy_Main_Defence:defend_position(v(-15, -80), 150);
end;


function Start_Egy_Secondary_Defence()
	SAI_Egy_Secondary_Defence = script_ai_planner:new("SAI_Egy_Secondary_Defence", Egy_Secondary_Defence_SUnits);
	SAI_Egy_Secondary_Defence:set_debug();

	SAI_Egy_Secondary_Defence:defend_position(v(-750, 90), 150);
end;








C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ni_nile\ni_start.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	INITIAL SCRIPT SETUP
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

-- clear out loaded files
system.ClearRequiredFiles();

-- load in battle script library
require "lua_scripts.Battle_Script_Header";

-- declare battlemanager object
bm = battle_manager:new(empire_battle:new());

-- get battle name from folder, and print header
battle_name, battle_shortform = get_folder_name_and_shortform();

bm:out("==============");
bm:out("==============");
bm:out("==============");
bm:out("Script started: Battle of " .. battle_name);
bm:out("==============");

-- load in other script files associated with this battle
package.path = package.path .. ";data/Script/" .. battle_name .. "/?.lua";

require (battle_shortform .. "_Declarations");
require (battle_shortform .. "_Cutscenes");
require (battle_shortform .. "_Main");

-- register functions to be called on phase changes
bm:register_phase_change_callback("Deployment", function() Deployment_Phase() end);			-- optional deployment phase callback
bm:setup_battle(function() End_Deployment_Phase() end);										-- called when battle starts








C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ni_nile_small\ni_start2.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	INITIAL SCRIPT SETUP
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

-- clear out loaded files
system.ClearRequiredFiles();

-- load in battle script library
require "lua_scripts.Battle_Script_Header";

-- declare battlemanager object
bm = battle_manager:new(empire_battle:new());

-- get battle name from folder, and print header
battle_name, battle_shortform = get_folder_name_and_shortform();

bm:out("==============");
bm:out("==============");
bm:out("==============");
bm:out("Script started: Battle of " .. battle_name);
bm:out("==============");

-- load in other script files associated with this battle
package.path = package.path .. ";data/Script/" .. battle_name .. "/?.lua";

require (battle_shortform .. "_Common2");
require (battle_shortform .. "_Declarations2");
require (battle_shortform .. "_Cutscenes2");
require (battle_shortform .. "_Main2");

-- register functions to be called on phase changes
bm:register_phase_change_callback("Deployment", function() Deployment_Phase() end);			-- optional deployment phase callback
bm:setup_battle(function() End_Deployment_Phase() end);										-- called when battle starts








C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ni_nile_egy\ni_start3.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	INITIAL SCRIPT SETUP
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

-- clear out loaded files
system.ClearRequiredFiles();

-- load in battle script library
require "lua_scripts.Battle_Script_Header";

-- declare battlemanager object
bm = battle_manager:new(empire_battle:new());

-- get battle name from folder, and print header
battle_name, battle_shortform = get_folder_name_and_shortform();

bm:out("==============");
bm:out("==============");
bm:out("==============");
bm:out("Script started: Battle of " .. battle_name);
bm:out("==============");

-- load in other script files associated with this battle
package.path = package.path .. ";data/Script/" .. battle_name .. "/?.lua";

require (battle_shortform .. "_Common3");
require (battle_shortform .. "_Declarations3");
require (battle_shortform .. "_Cutscenes3");
require (battle_shortform .. "_Main3");

-- register functions to be called on phase changes
bm:register_phase_change_callback("Deployment", function() Deployment_Phase() end);			-- optional deployment phase callback
bm:setup_battle(function() End_Deployment_Phase() end);										-- called when battle starts








C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\pa_prologue_capua\pa_city.lua

-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	CITY ATTACK SCRIPT
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------





POS_Siege_Position_Dump = v(830, 800);

function Clean_Up_Skipped_Siege_Position_Attack()
	for i = 1, #Samnite_Siege_Position_Sunits do
		local current_sunit = Samnite_Siege_Position_Sunits[i];
		current_sunit.uc:teleport_to_location(POS_Siege_Position_Dump, 0, current_sunit.start_width);
		Disappear_Units(current_sunit);
	end;
	
	for i = 1, #Samnite_Siege_Position_Engines do
		local current_sunit = Samnite_Siege_Position_Engines[i];
		current_sunit.uc:morale_behavior_rout();
	end;
end;




function Init_City_Attack()
	Clean_Up_Skipped_Village_Attack();
	Clean_Up_Skipped_Siege_Position_Attack();
	
	-- Remove Samnite village attackers
	Remove_Village_Samnites();
	
	-- teleport Samnite army into position near bridges
	Teleport_Samnite_Army_City_Attack_Position();
	
	-- teleport Roman army into similar
	bm:callback(function() Teleport_Roman_Army_City_Attack_Position() end, 200);
		
	-- rout Roman units that are supposed to be routing
	SUnit_Rom_T_02.uc:morale_behavior_rout();
	SUnit_Rom_T_16.uc:morale_behavior_rout();
	SUnit_Rom_T_05.uc:morale_behavior_rout();
	
	-- kick off all battle movements
	Battle_Moves_Into_Town();
	
	Setup_Cutscene_Pre_City_Attack();
end;


function Setup_Cutscene_Pre_City_Attack()
	Teleport_Rom_Army_City_Attack_Pre_Start();
		
	Play_Cutscene_City_Attack();
end;


function Start_City_Attack()
	Set_Max_Casualties(Player_Sunits, 0.5, true);
	
	Show_Advisor_Dismiss_Button(true);
	
	-- set fatigue down
	for i = 1, #Player_Sunits do
		local current_sunit = Player_Sunits[i];
		current_sunit.uc:change_fatigue_amount(0.2);
		current_sunit.unit:set_current_ammo_unary(1);
		current_sunit.uc:release_control();
	end;
	
	-- hide control tabs (prevent player from accessing siege equipment)
	UIComponent(UIComponent(bm:ui_component("battle_orders")):Find("cf_land")):SetVisible(false);
	UIComponent(UIComponent(bm:ui_component("battle_orders")):Find("cf_buildings")):SetVisible(false);
	
	-- objectives
	objectives:InterfaceFunction("remove_objective", "Rom.Pro.Capua.Objective_06");
	objectives:InterfaceFunction("set_objective", "Rom.Pro.Capua.Objective_07");
	
	-- leave out for preview
	-- bm:callback(function() Issue_Map_Advice() end, 10000);
	
	-- watch for player's army approaching ford
	bm:watch(function() return Area_Ford_Approach:standing_is_in_area(Player_Sunits) end, 10000, function() Play_Cutscene_Ford() end, "Ford_Approach_Watch");
	
	-- watch for player's army crossing ford
	bm:watch(function() return Area_River_Crossed:standing_is_in_area(Player_Sunits) end, 0, function() Player_Crosses_River() end);
	
	-- warning #1 that the player should act
	bm:callback(
		function() 
			bm:stop_advisor_queue();
			-- The Consul and his men will be overpowered, we must come to their aid!
			bm:queue_advisor("Rom.Pro.Capua.AD.203", 6000);
		end, 
		210000, 
		"City_Attack_Watch"
	);
	
	
	-- warning #2 that the player should act
	bm:callback(
		function() 
			bm:stop_advisor_queue();
			-- Silanus! Capua needs our urgent assistance! Will you not act?
			bm:queue_advisor("Rom.Pro.Capua.AD.204", 6000);
		end, 
		300000, 
		"City_Attack_Watch"
	);
	
	-- player has not acted, force battle defeat
	bm:callback(
		function() 
			bm:stop_advisor_queue();
			-- Commander, grave news! The Consul has fallen and the town is being overrun! Let us make a retreat while we have our lives!
			bm:queue_advisor("Rom.Pro.Capua.AD.205", 12000);
			
			objectives:InterfaceFunction("fail_objective", "Rom.Pro.Capua.Objective_07");
			
			bm:callback(function() Lose_Battle() end, 12000);
		end, 
		420000, 
		"City_Attack_Watch"
	);
end;


function Teleport_Samnite_Army_City_Attack_Position()
	for i = 1, #Samnite_City_Sunits do
		local current_sunit = Samnite_City_Sunits[i];
		
		local wp = current_sunit.WP_City_Attack_Start;
		
		-- no custom waypoint was set for this teleport, so use the last river advance position
		if not wp then
			wp = current_sunit.River_Advance_Waypoints[#current_sunit.River_Advance_Waypoints];
		end;
		
		current_sunit.uc:teleport_to_location(wp.pos, wp.orient, wp.width);
	end;
end;


function Teleport_Roman_Army_City_Attack_Position()
	for i = 1, #Roman_City_Sunits do
		local current_sunit = Roman_City_Sunits[i];
		
		if current_sunit.WP_Defence_Bridge_01 then
			local wp = current_sunit.WP_Defence_Bridge_01;
			current_sunit.uc:teleport_to_location(wp.pos, wp.orient, wp.width);
		end;
	end;
end;



function Issue_Map_Advice()
	bm:out("Issue_Map_Advice() advice");
	
	bm:stop_advisor_queue();
	-- We can keep track of the Samnite advance with the help of our maps.
	bm:queue_advisor("Rom.Pro.Capua.AD.200", 20000);
end;


BOOL_Ford_Infotext_Added = false;

function Add_Ford_Infotext()
	if BOOL_Ford_Infotext_Added then
		return;
	end;
	
	BOOL_Ford_Infotext_Added = true;
	
	add_infotext("Rom.Pro.Capua.Info.217", "Rom.Pro.Capua.Info.218", "Rom.Pro.Capua.Info.200");
end;




function Cutscene_Ford_Finished()
	-- infotext
	Add_Ford_Infotext();
	
	Show_Advisor_Dismiss_Button(true);
	
	-- hide control tabs (prevent player from accessing siege equipment)
	UIComponent(UIComponent(bm:ui_component("battle_orders")):Find("cf_land")):SetVisible(false);
	UIComponent(UIComponent(bm:ui_component("battle_orders")):Find("cf_buildings")):SetVisible(false);
	
	-- player comes under attack as they cross the ford
	bm:callback(function() SAI_Sam_City_02:move_to_position_of_sunit(SUnit_Rom_01) end, 20000);
	
	-- more enemy start pouring into the settlement
	SAI_Sam_City_03:patrol({POS_N_Victory_Point, POS_NW_Victory_Point, POS_M_Victory_Point, POS_N_Victory_Point}, All_Roman_City_SUnits);
	-- bm:callback(function() SAI_Sam_City_03:patrol({POS_N_Victory_Point, POS_NW_Victory_Point, POS_M_Victory_Point, POS_N_Victory_Point}, All_Roman_City_SUnits) end, 15000);
end;


function Player_Crosses_River()
	bm:out("Player_Crosses_River() called");
	
	bm:remove_process("Ford_Approach_Watch");
	
	bm:stop_advisor_queue();
	-- The Samnites push towards the city centre. If they capture the city, all will be lost!
	bm:queue_advisor("Rom.Pro.Capua.AD.201", 30000);
	
	-- victory point infotext
	add_infotext(2, "Rom.Pro.Capua.Info.201", "Rom.Pro.Capua.Info.202", "Rom.Pro.Capua.Info.203", "Rom.Pro.Capua.Info.204", "Rom.Pro.Capua.Info.205");
	
	SAI_Sam_City_05:patrol({POS_M_Victory_Point, POS_NW_Victory_Point, POS_N_Victory_Point}, All_Roman_City_SUnits);
	-- bm:callback(function() SAI_Sam_City_05:patrol({POS_M_Victory_Point, POS_NW_Victory_Point, POS_N_Victory_Point}, All_Roman_City_SUnits) end, 30000);

	bm:watch(function() return distance_between_forces(Player_Sunits, Samnite_City_Sunits, true) < 100 end, 0, function() Player_Approaches_Samnites_In_City() end);
end;



function Player_Approaches_Samnites_In_City()
	bm:out("Player_Approaches_Samnites_In_City() called");
	
	bm:remove_process("City_Attack_Watch");
	
	-- Attack, men, your consul watches over you!
	bm:stop_advisor_queue();
	bm:queue_advisor("Rom.Pro.Capua.SI.202", 30000);
	
	-- weapon types infotext
	add_infotext(2, "Rom.Pro.Capua.Info.214", "Rom.Pro.Capua.Info.206", "Rom.Pro.Capua.Info.215", "Rom.Pro.Capua.Info.216", "Rom.Pro.Capua.Info.207");
	
	bm:callback(function() Issue_Defences_Advice() end, 45000, "City_Attack_Phase");
	
	Update_City_Attack_Info(true);
	bm:repeat_callback(function() Update_City_Attack_Info() end, 500, "Update_City_Atack_Info");
	
	Start_To_Rout_Damaged_Samnites_Near_Player();
end;



BOOL_Routing_Damaged_Samnites_Near_Player = false;

-- rout enemies damaged below a certain threshold if they are close to the player's units
function Start_To_Rout_Damaged_Samnites_Near_Player()
	if BOOL_Routing_Damaged_Samnites_Near_Player then
		return;
	end;
	BOOL_Routing_Damaged_Samnites_Near_Player = true;
	Rout_Damaged_Samnites_Near_Player();
end;


function Rout_Damaged_Samnites_Near_Player()
	for i = 1, #Samnite_City_Sunits do
		local sunit = Samnite_City_Sunits[i];
		
		if unit_proportion_alive(sunit.unit) < 0.55 and standing_is_close_to_position(All_Roman_City_SUnits, sunit.unit:position(), 50) then
			sunit.uc:morale_behavior_rout();
		end;
	end;
	
	bm:callback(function() Rout_Damaged_Samnites_Near_Player() end, 5000, "Rout_Damaged_Samnites_Near_Player");
end;




Cached_City_Allied_Units_Routing = -1;
Cached_City_Samnite_Units_Routing = -1;
Total_City_Allied_Units = #Roman_City_Sunits;
Total_City_Samnite_Units = #Samnite_City_Sunits;


function Update_City_Romans_Objective(force_update)
	local current_city_allied_units_routing = num_units_routing(Roman_City_Sunits);
		
	if force_update or current_city_allied_units_routing ~= Cached_City_Allied_Units_Routing then
		bm:out("Updating Allied unit count to " .. current_city_allied_units_routing .. " / " .. Total_City_Allied_Units);
		
		objectives:InterfaceFunction("set_info_objective", "Rom.Pro.Capua.Objective_09", Total_City_Allied_Units - current_city_allied_units_routing, Total_City_Allied_Units);
		
		Cached_City_Allied_Units_Routing = current_city_allied_units_routing;
	end;
end;


function Update_City_Samnites_Objective(force_update)
	local current_city_samnite_units_routing = num_units_routing(Samnite_City_Sunits);
	
	if force_update or current_city_samnite_units_routing ~= Cached_City_Samnite_Units_Routing then
		bm:out("Updating Samnite unit count to " .. current_city_samnite_units_routing .. " / " .. Total_City_Samnite_Units);
		
		objectives:InterfaceFunction("set_info_objective", "Rom.Pro.Capua.Objective_10", Total_City_Samnite_Units - current_city_samnite_units_routing, Total_City_Samnite_Units);
		
		Cached_City_Samnite_Units_Routing = current_city_samnite_units_routing;
	end;
end;


function Update_City_Attack_Info(force_update)
	Update_City_Romans_Objective(force_update);
	Update_City_Samnites_Objective(force_update);
end



function Issue_Defences_Advice()
	bm:out("Issue_Defences_Advice() advice");
	
	infotext:InterfaceFunction("clear_all_info_text");
	
	Set_Max_Casualties(Player_Sunits, 0.4, true);
	
	-- The Samnites press further into Capua, they threaten the city centre!
	bm:stop_advisor_queue();
	bm:queue_advisor("Rom.Pro.Capua.AD.202", 7000);
		
	bm:callback(function() cam:fade(true, 0.5) end, 7500, "City_Attack_Phase");
	bm:callback(function() Play_Cutscene_Wall_Art() end, 8000, "City_Attack_Phase");
end;


function Cutscene_Wall_Art_Finished()	
	objectives:InterfaceFunction("set_objective", "Rom.Pro.Capua.Objective_11");
	
	Show_Advisor_Dismiss_Button(true);
	
	-- show control tabs
	UIComponent(UIComponent(bm:ui_component("battle_orders")):Find("cf_land")):SetVisible(true);
	UIComponent(UIComponent(bm:ui_component("battle_orders")):Find("cf_buildings")):SetVisible(true);
	
	-- infotext
	add_infotext("Rom.Pro.Capua.Info.208", "Rom.Pro.Capua.Info.209", "Rom.Pro.Capua.Info.210", "Rom.Pro.Capua.Info.211", "Rom.Pro.Capua.Info.212");
	
	-- start testing for reinforcements after 30s
	bm:callback(function() Start_Reinforcements_Watch() end, 30000, "City_Attack_Phase")
end;


function Start_Reinforcements_Watch()
	bm:out("Start_Reinforcements_Watch() called");
	
	Set_Max_Casualties(Player_Sunits, 0.3, true);
		
	bm:watch(
		function()
			return Cached_City_Allied_Units_Routing + Cached_City_Samnite_Units_Routing >= 21
		end,
		0,
		function()
			Prepare_For_Reinforcements()
		end,
		"City_Attack_Phase"
	);
end;


function Prepare_For_Reinforcements()
	bm:out("Prepare_For_Reinforcements() called");
	
	-- Our allies begin to crumble, hope is fading
	bm:stop_advisor_queue();
	bm:queue_advisor("Rom.Pro.Capua.AD.206", 6000);
	
	-- Silanus retort
	bm:callback(function() bm:queue_advisor("Rom.Pro.Capua.SI.204", 6000) end, 7000, "City_Attack_Phase");

	bm:callback(function() cam:fade(true, 1) end, 18500);
	
	bm:callback(function() Summon_Reinforcements() end, 19500);
end;



function Summon_Reinforcements()
	bm:out("Summon_Reinforcements() called");
	
	-- for objective
	Total_City_Allied_Units = Total_City_Allied_Units + #Roman_Reinforcement_Sunits;
	
	-- show reinforcements
	Show_Units(UC_Rom_04_All);
	Show_Units(UC_Rom_05_All);

	-- teleport them into place and start them moving
	for i = 1, #Roman_Reinforcement_Sunits do
		local current_sunit = Roman_Reinforcement_Sunits[i];
		
		current_sunit.uc:teleport_to_location(current_sunit.Pos_Reinforcement_Start, current_sunit.Orient_Reinforcement_Start, current_sunit.Width_Reinforcement_Start);
		
		current_sunit.uc:goto_location_angle_width(current_sunit.Pos_Reinforcement_Walkon, current_sunit.Orient_Reinforcement_Walkon, current_sunit.Width_Reinforcement_Walkon);
	end;
	
	bm:callback(function() Play_Cutscene_Reinforcements_Appear() end, 1000);
end;


BOOL_Reinforcements_Charging_Towards_Town = false;

function Charge_Reinforcements_Towards_Town()
	if BOOL_Reinforcements_Charging_Towards_Town then
		return;
	end;
	
	BOOL_Reinforcements_Charging_Towards_Town = true;
	
	Update_City_Attack_Info(true);

	for i = 1, #Roman_Reinforcement_Sunits do
		local current_sunit = Roman_Reinforcement_Sunits[i];
		
		current_sunit.uc:morale_behavior_fearless();
		unit_max_casualties(current_sunit, 0.5);
		
		current_sunit.PM_Charge_Town = patrol_manager:new(current_sunit.name .. "_Charge", current_sunit, Alliance_Sam:armies(), 200);
		current_sunit.PM_Charge_Town:set_intercept_time(60000);
		current_sunit.PM_Charge_Town:set_completion_callback(
			function() 
				bm:repeat_callback(
					function() 
						current_sunit.uc:attack_unit(get_closest_standing_unit(Army_Sam_03, current_sunit.unit:position())) 
					end
				);
			end
		);
		current_sunit.PM_Charge_Town:add_waypoint(current_sunit.Pos_Charge, true);
		current_sunit.PM_Charge_Town:add_waypoint(POS_NE_Gate, true);
		
		current_sunit.PM_Charge_Town:start();
	end;
end



function Reinforcements_Have_Appeared()
	bm:out("Reinforcements_Have_Appeared() called");
	
	Show_Advisor_Dismiss_Button(true);
	
	-- get the Roman defenders to come out and attack a bit more
	AI_Roman_Town_Defence_N_Victory_Point:defend_position(v(-140, -400), 150);
	
	-- suicide Laenas
	SUnit_Rom_T_01.uc:attack_unit(get_closest_unit(Samnite_City_Sunits, SUnit_Rom_T_01.unit:position(), true), true, true);	
	
	-- victory watch
	bm:watch(function() return num_units_routing(Samnite_City_Sunits) >= #Samnite_City_Sunits - 3 end, 0, function() Prepare_For_Player_Wins_Battle() end)
end;


function Prepare_For_Player_Wins_Battle()
	bm:out("Prepare_For_Player_Wins_Battle() called");
	
	bm:change_victory_countdown_limit(-1);

	UC_Rom_01_All:morale_behavior_fearless();
	UC_Rom_01_All:release_control();
		
	-- The Samnites make their retreat! The day is ours!
	bm:stop_advisor_queue();
	bm:queue_advisor("Rom.Pro.Capua.SI.206", 12000);
	
	--objectives
	objectives:InterfaceFunction("complete_objective", "Rom.Pro.Capua.Objective_07");
	objectives:InterfaceFunction("complete_objective", "Rom.Pro.Capua.Objective_11");
	
	bm:callback(
		function()
			bm:stop_advisor_queue();
			bm:queue_advisor("Rom.Pro.Capua.AD.208", 8000);
		end,
		13000
	);
	
	bm:callback(function() Player_Wins_Battle() end, 23000);
end;


function Player_Wins_Battle()
	bm:out("Player_Wins_Battle() called");
	UC_Sam_M_All:morale_behavior_rout();
	bm:change_victory_countdown_limit(0);
end;
















C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\pa_prologue_capua\pa_common.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	COMMON SCRIPT
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

function Hide_Units(uc)
	uc:fire_at_will(false);
	uc:change_enabled(false);
	uc:set_invisible_to_all(true);
end;

function Show_Units(uc)
	uc:fire_at_will(true);
	uc:change_enabled(true);
	uc:set_invisible_to_all(false);
	uc:halt();
end;

function Disappear_Units(sunit, suppress_comment)
	if not suppress_comment then
		bm:out("Disappearing " .. sunit.name);
	end;
	
	sunit.uc:kill();
	Hide_Units(sunit.uc);
end;


function Clear_Subtitles()
	local bm = get_bm();
	local subtitles = bm:subtitles();
	
	subtitles:end_subtitles();	
	subtitles:clear();	
end;

function Display_Subtitles(text, duration, position)
	local bm = get_bm();
	local subtitles = bm:subtitles();
	local position = position or "top_centre";

	bm:out("Displaying subtitle [" .. text .. "] for " .. tostring(duration) .. "ms");
	
	bm:remove_process("Subtitle_Clear");
	
	subtitles:end_subtitles();	
	subtitles:clear();
	subtitles:begin(position);
	subtitles:push_back_subtitle_entry(0, duration, text);
	
	bm:callback(function() subtitles:end_subtitles() end, duration, "Subtitle_Clear");
end;


function Active_Units_Outside_Areas(sunits, areas)
	for i = 1, #sunits do
		local current_sunit = sunits[i];
		
		-- if it's not routing and not in any of our designated areas then return true
		if (not is_routing_or_dead(current_sunit.unit)) then		
			if is_convexarea(areas) then
				-- one area
				if not areas:is_in_area(current_sunit.unit) then
					return true;
				end;
			
			else
				-- table of areas
				for j = 1, #areas do
					if not areas[i]:is_in_area(current_sunit.unit) then
						return true;
					end;
				end;
			end;
		end;
	end;
	
	return false;
end;


function Any_Units_Under_Missile_Attack(sunits)
	for i = 1, #sunits do
		if sunits[i].unit:is_under_missile_attack() then
			return true;
		end;
	end;
	
	return false;
end;


function Any_Units_Taken_Casualties(sunits, proportion)
	for i = 1, #sunits do
		if unit_proportion_alive(sunits[i].unit) < proportion then
			return true;
		end;
	end;
	
	return false;
end;


function Any_Units_Moving_Fast(sunits)
	for i = 1, #sunits do
		local current_sunit = sunits[i];
		if current_sunit.unit:is_moving_fast() then
			return true;
		end;
	end;
	return false;
end;


function rout_on_next_casualty(sunit)
	local current_proportion_alive = unit_proportion_alive(sunit.unit);
	
	get_bm():watch(function() return unit_proportion_alive(sunit.unit) < current_proportion_alive end, 0, function() sunit.uc:morale_behavior_rout() end, sunit.name .. "_rout_on_next_casualty");
end;


function stop_rout_on_next_casualty(sunit)
	get_bm():remove_process(sunit.name .. "_rout_on_next_casualty");
end;


function Set_Max_Casualties(sunit_list, casualty_rate, should_release)
	for i = 1, #sunit_list do
		local current_sunit = sunit_list[i];
		
		if casualty_rate > 0 then
			current_sunit.uc:morale_behavior_fearless();
		end;
		
		unit_max_casualties(current_sunit, casualty_rate, should_release);
	end;
end;


function kill_over_time(sunit, t, min_proportion)
	if not is_sunit(sunit) then
		script_error("ERROR: kill_unit_over_time() called but first parameter " .. tostring(sunit) .. " is not a sunit, exiting");
		
		return false;
	end;
	
	if not is_number(t) or t <= 0 then
		script_error("ERROR: kill_unit_over_time() called but second parameter " .. tostring(t) .. " is not a positive number, exiting");
		
		return false;
	end;

	local bm = get_bm();
	local min_proportion = min_proportion or 0;
		
	local tick_time = 200;
	local current_men_alive = sunit.unit:number_of_men_alive();
	
	local min_men_alive = min_proportion * (sunit.unit:initial_number_of_men() / 100);
	local number_of_ticks = math.ceil(t * (1000 / tick_time));
	
	if number_of_ticks > current_men_alive then
		if t > 1000 then
			script_error("ERROR: kill_unit_over_time() called on " .. sunit.name .. " over duration " .. tostring(t) .. " but number_of_ticks works outs out to a LOT more than current_men_alive! Did you specify the duration in ms instead of s?");
		
			return false;
		end;
		
		number_or_ticks = current_men_alive;
	end;
	
	local callback_name = sunit.name .. "_kill_unit_over_time";
	
	bm:remove_process(callback_name);
	
	local men_to_kill_per_tick = math.ceil((current_men_alive - min_men_alive) / number_of_ticks);
	
	-- failsafe
	if men_to_kill_per_tick < 1 then
		men_to_kill_per_tick = 1;
	end;
	
	sunit.uc:set_invincible(false);
			
	for i = 1, number_of_ticks do
		bm:callback(
			function()
				sunit.unit:kill_number_of_men(men_to_kill_per_tick, false) 
			end, 
			tick_time * i, 
			callback_name
		);
	end;
end;











function cache_position(obj)
	if is_scriptunit(obj) then
		obj.cached_pos = obj.unit:position();
	elseif is_table(obj) then
		for i = 1, #obj do
			cache_position(obj[i]);
		end;
	end;
end;


function has_moved(obj, pos, dist)
	if is_scriptunit(obj) then
		if not is_nil(pos) and not is_vector(pos) then
			script_error("ERROR: has_moved() called but supplied position " .. tostring(pos) .. " is not a vector!");
			
			return false;
		end;
		
		if not is_number(dist) then
			if not is_nil(dist) then 
				script_error("ERROR: has_moved() called but supplied distance " .. tostring(pos) .. " is not a number!");
			
				return false;
			end;
			
			dist = 3;
		end;
	
		local cached_pos = obj.cached_pos;
				
		if not cached_pos then
			script_error(obj.name .. " ERROR: has_moved() called but position was never cached with cache_position()!")
			
			return false;
		end;
		
		if pos then
			-- return true if the unit is currently more than 3m closer to the specified pos than it was
			return obj.unit:position():distance(pos) + dist < cached_pos:distance(pos);
		end;
		
		return obj.unit:position():distance(cached_pos) > 1;

	elseif is_table(obj) then
		for i = 1, #obj do
			has_moved(obj[i], pos, dist);
		end;
	end;
end;




















C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\pa_prologue_capua\pa_cutscenes.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	CUTSCENES SCRIPT
--
--	Declare intro and other cutscenes
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

POS_Cam_First_Frame = v(-846.7, 252.7, -278.2);
POS_Targ_First_Frame = v(-784.5, 247.5, -275.7);
FOV_First_Frame = 35;

POS_Cam_Intro_Start = v(-736.6, 281.9, 191.1);
POS_Targ_Intro_Start = v(-680.1, 256.5, 183.5);

Cutscene_Intro_Duration = 37000;

Cutscene_Intro = cutscene:new(
	"Cutscene_Intro", 							-- unique string name for cutscene
	UC_Rom_01_All, 								-- unitcontroller over player's army
	Cutscene_Intro_Duration, 					-- duration of cutscene in ms
	function() Start_Battle() end 				-- what to call when cutscene is finished
);


Cutscene_Intro:set_skippable(true, function() Cutscene_Intro_Skipped() end);
-- Cutscene_Intro:set_post_cutscene_fade_time(0.5);
-- Cutscene_Intro:set_debug(true);

function Play_Cutscene_Intro()

	--Cutscene_Intro:action(function() cam:fade(false, 1) end, 0);
	
	Cutscene_Intro:action(function() Teleport_Rom_Army_Intro_Start() end, 0);
	Cutscene_Intro:action(function() cam:move_to(POS_Cam_First_Frame, POS_Targ_First_Frame, 5, true, 58) end, 0);
	
	-- Capua, Italy
	Cutscene_Intro:action(function() subtitles:set_text("Rom.Pro.Capua.SI.Intro_01") end, 500);
	
	Cutscene_Intro:action(function() subtitles:clear() end, 4500);
	
	-- The beaten army of Consul Laenas lies under siege in Capua.
	
	Cutscene_Intro:action(function() cam:move_to(v(64.5, 222.1, -460.3), v(2.4, 220.2, -462.0), 0, true, 32) end, 4000);
	Cutscene_Intro:action(function() cam:move_to(v(64.5, 222.1, -460.3), v(2.4, 220.2, -462.0), 5, true, 33) end, 4000);
	
	Cutscene_Intro:action(function() cam:move_to(v(-206.7, 232.8, -516.5), v(-154.8, 227.7, -482.2), 0, true, 30) end, 7000);
	Cutscene_Intro:action(function() cam:move_to(v(-206.7, 232.8, -516.5), v(-154.8, 230.1, -482.2), 6, true, 30) end, 7000);

	Cutscene_Intro:action(function() subtitles:set_text("Rom.Pro.Capua.SI.Intro_02") end, 4500);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Rom_Pro_Capua_SI_Intro_02) end, 4500);
	
	Cutscene_Intro:action(function() Move_Rom_Army_Intro_Start() end, 9000);
	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 10500);
	Cutscene_Intro:action(function() subtitles:clear() end, 10500);
	
	-- I, Gaius Fulvius Silanus, have hurried south with my meagre command to aid the consul.
	Cutscene_Intro:action(function() subtitles:set_text("Rom.Pro.Capua.SI.Intro_03") end, 11500);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Rom_Pro_Capua_SI_Intro_03) end, 11500);
		
	Cutscene_Intro:action(
		function()
			local pos_x = SUnit_Rom_01.unit:position_of_officer():get_x();
			local pos_y = SUnit_Rom_01.unit:position_of_officer():get_y();
			local pos_z = SUnit_Rom_01.unit:position_of_officer():get_z();
			
			local y_offset = 1.4;	-- height of Silanus from his feet
			
			local x_cam_offset = 2.4;	-- offset from Silanus to camera
			local y_cam_offset = -0.4;
			local z_cam_offset = -0.8;
			
			local x_cam_dest_offset = 5.1;	-- offset from camera source to camera destination
			local y_cam_dest_offset = -0.1;
			local z_cam_dest_offset = -0.5;
			
			local cam_source_pos = v(pos_x + x_cam_offset, pos_y + y_offset + y_cam_offset, pos_z + z_cam_offset);
			local cam_source_targ = v(pos_x, pos_y + y_offset, pos_z);
			
			local cam_dest_pos = v(pos_x + x_cam_offset + x_cam_dest_offset, pos_y + y_offset + y_cam_offset + y_cam_dest_offset, pos_z + z_cam_offset + z_cam_dest_offset);
			local cam_dest_targ = v(pos_x + x_cam_dest_offset, pos_y + y_offset + y_cam_dest_offset, pos_z + z_cam_dest_offset);
			
			bm:out("cam_source_pos is " .. v_to_s(cam_source_pos));
			bm:out("cam_source_targ is " .. v_to_s(cam_source_targ));
			bm:out("cam_dest_pos is " .. v_to_s(cam_dest_pos));
			bm:out("cam_dest_targ is " .. v_to_s(cam_dest_targ));
			
			cam:move_to(cam_source_pos, cam_source_targ, 0, true, 30);
			cam:move_to(cam_dest_pos, cam_dest_targ, 5, true, 30);
		end,
		11500
	);

	Cutscene_Intro:action(
		function() 
			local pos_x = SUnit_Rom_01.unit:position_of_officer():get_x();
			local pos_y = SUnit_Rom_01.unit:position_of_officer():get_y();
			local pos_z = SUnit_Rom_01.unit:position_of_officer():get_z();
			
			local y_offset = 1.2;	-- height of Silanus from his feet
			
			local x_cam_offset = 2.4;	-- offset from camera to Silanus
			local y_cam_offset = 0.0;
			local z_cam_offset = -0.8;
			
			local cam_source_pos = v(pos_x + x_cam_offset, pos_y + y_offset + y_cam_offset, pos_z + z_cam_offset);
			local cam_source_targ = v(pos_x, pos_y + y_offset, pos_z);
			
			bm:out("cam_source_pos is " .. v_to_s(cam_source_pos));
			bm:out("cam_source_targ is " .. v_to_s(cam_source_targ));
		
			cam:move_to(v(-708.8, 258.2, 172.6), v(-710.3, 258.0, 174.7), 0, true, 30);
			cam:move_to(v(-708.8, 258.2, 172.6), v(-709.6, 258.0, 175), 5, true, 30);
		end, 
		14500
	);
	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 17000);
	Cutscene_Intro:action(function() subtitles:clear() end, 17000);
	
	-- Further reinforcements are expected from Rome.
	Cutscene_Intro:action(function() subtitles:set_text("Rom.Pro.Capua.SI.Intro_04") end, 18000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Rom_Pro_Capua_SI_Intro_04) end, 18000);
	
	Cutscene_Intro:action(function() cam:move_to(v(-714.3, 256.8, 186.5), v(-702.0, 252.8, 247.6), 0, true, 25) end, 19000);
	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 21500);
	Cutscene_Intro:action(function() subtitles:clear() end, 21500);
	
	-- The city has been sighted. It is surrounded by the Samnites, a people native to the mountains of central Italy.
	Cutscene_Intro:action(function() subtitles:set_text("Rom.Pro.Capua.SI.Intro_05") end, 22500);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Rom_Pro_Capua_SI_Intro_05) end, 22500);
	Cutscene_Intro:action(function() cam:move_to(v(-730.7, 260.1, 229.7), v(-698.5, 249.7, 177.2), 0, true, 45) end, 22500);
	Cutscene_Intro:action(function() cam:move_to(v(-730.7, 277.3, 229.7), v(-698.5, 266.9, 177.2), 3, false, 45) end, 23000);
	
	Cutscene_Intro:action(function() cam:move_to(v(-740.0, 256.6, -460.9), v(-682.9, 244.3, -439.1), 0, true, 45) end, 26500);
	Cutscene_Intro:action(function() cam:move_to(v(-740.0, 256.6, -460.9), v(-681.9, 246.7, -440.4), 3, true, 44) end, 26500);
	
	Cutscene_Intro:action(function() cam:move_to(v(327.1, 263, -93.5), v(275.6, 251.8, -127.0), 0, true, 45) end, 29500);
	Cutscene_Intro:action(function() cam:move_to(v(327.1, 250.1, -93.5), v(275.6, 238.9, -127.0), 4, false, 45) end, 29500);
	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 32000);
	Cutscene_Intro:action(function() subtitles:clear() end, 32000);
	
	-- The Samnites are sworn enemies of Rome.
	Cutscene_Intro:action(function() subtitles:set_text("Rom.Pro.Capua.SI.Intro_06") end, 33000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Rom_Pro_Capua_SI_Intro_06) end, 33000);
	Cutscene_Intro:action(function() cam:move_to(v(239.8, 230.9, -149.8), v(297.4, 229, -125.6), 0, false, 45) end, 34500);
	
	Cutscene_Intro:action(function() cam:fade(true, 0.5) end, Cutscene_Intro_Duration - 500);
	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, Cutscene_Intro_Duration);
	Cutscene_Intro:action(function() subtitles:clear() end, Cutscene_Intro_Duration);
	
	Cutscene_Intro:start();
end;

function Cutscene_Intro_Skipped()
	stop_sound(SFX_Rom_Pro_Capua_SI_Intro_02);
	stop_sound(SFX_Rom_Pro_Capua_SI_Intro_03);
	stop_sound(SFX_Rom_Pro_Capua_SI_Intro_04);
	stop_sound(SFX_Rom_Pro_Capua_SI_Intro_05);
	stop_sound(SFX_Rom_Pro_Capua_SI_Intro_06);
	Teleport_Rom_Army_Intro_End();
end;




function Show_Advisor_Dismiss_Button(value)
	UIComponent(bm:ui_component("button_newest")):SetVisible(value);
end;




Cutscene_Bridge_Intel = cutscene:new(
	"Cutscene_Bridge_Intel", 					-- unique string name for cutscene
	UC_Rom_01_All, 								-- unitcontroller over player's army
	6000, 										-- duration of cutscene in ms
	function() Bridge_Intel_Delivered() end		-- what to call when cutscene is finished
);

Cutscene_Bridge_Intel:set_restore_cam_time(1);
Cutscene_Bridge_Intel:set_close_advisor_on_end(false);
Cutscene_Bridge_Intel:set_should_release_players_army(false);
--Cutscene_Bridge_Intel:set_debug();

function Play_Cutscene_Bridge_Intel()
	bm:remove_ping_icon(POS_Marker_Bridge:get_x(), POS_Marker_Bridge:get_y(), POS_Marker_Bridge:get_z());
	Camera_Objective_Completed();
	
	Show_Advisor_Dismiss_Button(false);
	Add_Shift_Camera_Movement_Infotext();
	
	Cutscene_Bridge_Intel:action(function() cam:move_to(v(-405.7, 230.3, -69.9), v(-361.9, 223, -118.3), 2, false, 50) end, 0);
	Cutscene_Bridge_Intel:action(function() bm:queue_advisor("Rom.Pro.Capua.SI.001", 6000) end, 500);
	
	Cutscene_Bridge_Intel:start();
end;









Cutscene_Capua_Intel = cutscene:new(
	"Cutscene_Capua_Intel", 					-- unique string name for cutscene
	UC_Rom_01_All, 								-- unitcontroller over player's army
	10000, 										-- duration of cutscene in ms
	function() Capua_Intel_Delivered() end		-- what to call when cutscene is finished
);

Cutscene_Capua_Intel:set_restore_cam_time(1);
Cutscene_Capua_Intel:set_close_advisor_on_end(false);
Cutscene_Capua_Intel:set_should_release_players_army(false);
--Cutscene_Capua_Intel:set_debug();

function Play_Cutscene_Capua_Intel()
	bm:remove_ping_icon(POS_Marker_Capua:get_x(), POS_Marker_Capua:get_y(), POS_Marker_Capua:get_z());
	Camera_Objective_Completed();
	
	Show_Advisor_Dismiss_Button(false);
	Add_Shift_Camera_Movement_Infotext();
	
	bm:callback(function() Move_Laenas_Cutscene_Capua_Intel_Position() end, 2100);

	Cutscene_Capua_Intel:action(function() cam:move_to(v(-99.4, 221.2, -444.7), v(-49.3, 214.8, -412.5), 2.5, false, 0) end, 0);
	Cutscene_Capua_Intel:action(function() bm:queue_advisor("Rom.Pro.Capua.SI.002", 8000) end, 500);
	
	Cutscene_Capua_Intel:action(function() Teleport_Laenas_Cutscene_Capua_Intel_Position() end, 2000);
	
	Cutscene_Capua_Intel:action(function() Move_Laenas_Cutscene_Capua_Intel_Position() end, 3000);
	
	Cutscene_Capua_Intel:action(function() cam:move_to(v(-54, 218.7, -473.7), v(-28.8, 210.7, -535.1), 0, true, 45) end, 3500);
	Cutscene_Capua_Intel:action(function() cam:move_to(v(-62.1, 218.7, -454.0), v(-36.8, 210.7, -515.4), 7, true, 45) end, 3500);
	
	Cutscene_Capua_Intel:action(function() cam:move_to(v(-85, 233.7, -512.0), v(-38.0, 213.6, -469.0), 0, true, 0) end, 8000);
	
	Cutscene_Capua_Intel:start();
end;






Cutscene_Army_Intel = cutscene:new(
	"Cutscene_Army_Intel", 					-- unique string name for cutscene
	UC_Rom_01_All, 								-- unitcontroller over player's army
	10000, 										-- duration of cutscene in ms
	function() Army_Intel_Delivered() end		-- what to call when cutscene is finished
);

Cutscene_Army_Intel:set_restore_cam_time(2);
Cutscene_Army_Intel:set_close_advisor_on_end(false);
Cutscene_Army_Intel:set_should_release_players_army(false);
--Cutscene_Army_Intel:set_debug();

function Play_Cutscene_Army_Intel()
	bm:remove_ping_icon(POS_Marker_Army:get_x(), POS_Marker_Army:get_y(), POS_Marker_Army:get_z());
	Camera_Objective_Completed();
	
	Show_Advisor_Dismiss_Button(false);
	Add_Shift_Camera_Movement_Infotext();

	Cutscene_Army_Intel:action(function() cam:move_to(v(317.2, 240.8, -138.2), v(370.4, 238.9, -105.9), 3, false, 45) end, 0);
	
	-- advisor//infotext
	Cutscene_Army_Intel:action(
		function()
			bm:queue_advisor(
				"Rom.Pro.Capua.SI.004", 
				10000, 
				false,
				function()
					add_infotext(2, "Rom.Pro.Capua.Info.005", "Rom.Pro.Capua.Info.006", "Rom.Pro.Capua.Info.007");
				end
			)
		end, 
		500
	);
	
	Cutscene_Army_Intel:action(function() cam:move_to(v(315.0, 225.5, -295.5), v(321.1, 220.3, -233.7), 0, true, 40) end, 5000);
	Cutscene_Army_Intel:action(function() cam:move_to(v(318.6, 225.5, -298.1), v(324.7, 220.3, -236.3), 8, true, 40) end, 5000);
		
	Cutscene_Army_Intel:action(function() cam:move_to(v(345.6, 255, -98.1), v(292.4, 240.4, -127.2), 0, true, 50) end, 8500);
	
	Cutscene_Army_Intel:start();
end;






Cutscene_Siege_Intel = cutscene:new(
	"Cutscene_Siege_Intel", 					-- unique string name for cutscene
	UC_Rom_01_All, 								-- unitcontroller over player's army
	8000, 										-- duration of cutscene in ms
	function() Siege_Intel_Delivered() end		-- what to call when cutscene is finished
);

Cutscene_Siege_Intel:set_restore_cam_time(1);
Cutscene_Siege_Intel:set_close_advisor_on_end(false);
Cutscene_Siege_Intel:set_should_release_players_army(false);
-- Cutscene_Siege_Intel:set_debug();

function Play_Cutscene_Siege_Intel()
	bm:remove_ping_icon(POS_Marker_Siege:get_x(), POS_Marker_Siege:get_y(), POS_Marker_Siege:get_z());
	Camera_Objective_Completed();
	
	Show_Advisor_Dismiss_Button(false);
	Add_Shift_Camera_Movement_Infotext();

	Cutscene_Siege_Intel:action(function() cam:move_to(v(69, 233.6, -12.9), v(55.3, 237.1, 73.6), 2, false, 50) end, 0);
	Cutscene_Siege_Intel:action(function() bm:queue_advisor("Rom.Pro.Capua.SI.003", 12000) end, 500);
	Cutscene_Siege_Intel:action(function() cam:move_to(v(89.7, 241.8, 82.9), v(54.4, 232.4, 3.3), 0, true, 30) end, 3500);
	Cutscene_Siege_Intel:action(function() cam:move_to(v(89.7, 241.8, 82.9), v(54.0, 234.3, 3.3), 4, true, 30) end, 3500);
	
	Cutscene_Siege_Intel:action(function() cam:move_to(v(36.1, 236.2, 22.0), v(97.4, 226.4, 30.2), 0, true, 0) end, 7000);
	
	Cutscene_Siege_Intel:start();
end;







Cutscene_Village_Attack = cutscene:new(
	"Cutscene_Village_Attack", 					-- unique string name for cutscene
	UC_Rom_01_All, 								-- unitcontroller over player's army
	16000, 										-- duration of cutscene in ms
	function() Start_Village_Attack() end		-- what to call when cutscene is finished
);

Cutscene_Village_Attack:set_skip_camera(POS_Cam_Intro_Start, POS_Targ_Intro_Start);
Cutscene_Village_Attack:set_close_advisor_on_end(false);
-- Cutscene_Village_Attack:set_debug();

function Play_Cutscene_Village_Attack()
	Show_Village_Combatants();
	Show_Advisor_Dismiss_Button(false);
	
	-- make all village combatants visible
	for i = 1, #Samnite_Village_Sunits do
		local curr_sunit = Samnite_Village_Sunits[i];
		curr_sunit.uc:set_always_visible_to_all(true);
	end;
	
	for i = 1, #Allied_Village_Sunits do
		local curr_sunit = Allied_Village_Sunits[i];
		curr_sunit.uc:set_always_visible_to_all(true);
	end;
	
	-- set bluff Samnite slingers to not fire-at-will in case they start causing casualties already
	SUnit_Sam_V_01.uc:fire_at_will(false);
	SUnit_Sam_V_05.uc:fire_at_will(false);
	
	SUnit_Allied_01.PM_Advance:start();
	SUnit_Allied_02.PM_Advance:start();
	SUnit_Allied_03.PM_Advance:start();
	
	SUnit_Sam_V_02.PM_Advance:start();
	SUnit_Sam_V_03.PM_Advance:start();
	SUnit_Sam_V_04.PM_Advance:start();
	
	-- remove previous subtitles
	clear_infotext();
	
	-- Tribune Silanus, the men are reporting sounds of a skirmish ahead of our position!
	Cutscene_Village_Attack:action(function() bm:queue_advisor("Rom.Pro.Capua.AD.002", 7000); end, 500);
	Cutscene_Village_Attack:action(function() cam:move_to(v(-406.8, 236.5, -44.6), v(-388.3, 232.0, 14.6), 3, false, 45) end, 0);
	
	Cutscene_Village_Attack:action(function() cam:move_to(v(-436.6, 241.9, 79.4), v(-380.9, 233.9, 106.1), 0, false, 40) end, 4000);
	Cutscene_Village_Attack:action(function() cam:move_to(v(-436.6, 241.9, 79.4), v(-384.7, 235.8, 113.3), 5, true, 39) end, 4000);
	
	Cutscene_Village_Attack:action(function() Cutscene_Village_Attack:wait_for_advisor() end, 7000);
	Cutscene_Village_Attack:action(function() bm:close_advisor() end, 7000);
		
	-- Some Romans in this village have been confronted by Samnites. They are outnumbered but our troops can tip the balance. Move out!
	Cutscene_Village_Attack:action(function() bm:queue_advisor("Rom.Pro.Capua.SI.005", 10000); end, 8000);
		
	Cutscene_Village_Attack:action(function() cam:move_to(v(-179.5, 254.2, 237.8), v(-227.1, 245.1, 199.0), 0, false, 35) end, 8000);
	Cutscene_Village_Attack:action(function() cam:move_to(v(-179.5, 254.2, 237.8), v(-227.9, 245.9, 199.8), 4, true, 33) end, 8000);
	
	Cutscene_Village_Attack:action(function() cam:move_to(v(-202.0, 273.5, 310.0), v(-227.0, 256.3, 255.5), 0, true, 50) end, 11000);
	Cutscene_Village_Attack:action(function() cam:move_to(POS_Cam_Intro_Start, POS_Targ_Intro_Start, 4, false, 0) end, 12000);
	
	Cutscene_Village_Attack:start();
end;






Cutscene_Village_Victory_Duration = 30000;

Cutscene_Village_Victory = cutscene:new(
	"Cutscene_Village_Victory", 						-- unique string name for cutscene
	UC_Rom_01_All, 										-- unitcontroller over player's army
	Cutscene_Village_Victory_Duration, 					-- duration of cutscene in ms
	function() Play_Siege_Attack_Intro_Cutscene() end	-- what to call when cutscene is finished
);

Cutscene_Village_Victory:set_skip_camera(POS_Cam_Intro_Start, POS_Targ_Intro_Start);
Cutscene_Village_Victory:set_post_cutscene_fade_time(0.5);
Cutscene_Village_Victory:set_close_advisor_on_end(false);
-- Cutscene_Village_Victory:set_debug();

function Play_Cutscene_Village_Victory()
	objectives:InterfaceFunction("remove_objective", "Rom.Pro.Capua.Objective_04");
	objectives:InterfaceFunction("remove_objective", "Rom.Pro.Capua.Objective_05");
	
	Show_Advisor_Dismiss_Button(false);

	Cutscene_Village_Victory:action(function() cam:fade(false, 0.5) end, 0);
	Cutscene_Village_Victory:action(function() cam:move_to(v(-326.7, 237.8, 375.8), v(-316.3, 231.7, 314.9), 0, false, 30) end, 0);
	Cutscene_Village_Victory:action(function() cam:move_to(v(-326.7, 237.8, 375.8), v(-316.3, 231.7, 314.9), 5, true, 27) end, 0);
	
	-- That's the last of them! No more guarding grain stores, we are meant for this! 
	Cutscene_Village_Victory:action(function() bm:queue_advisor("Rom.Pro.Capua.AD.006", 5000); end, 1000);
	
	Cutscene_Village_Victory:action(function() cam:move_to(v(-317.0, 238.1, 321.9), v(-330.8, 230.4, 382), 0, false, 30) end, 3000);
	Cutscene_Village_Victory:action(function() cam:move_to(v(-316.8, 236.8, 320.8), v(-330.5, 229.1, 380.9), 3, false, 30) end, 3000);
	
	Cutscene_Village_Victory:action(function() Cutscene_Village_Victory:wait_for_advisor() end, 9000);
	Cutscene_Village_Victory:action(function() bm:close_advisor() end, 9000);
	
	-- The slingers in the village are in our debt. They pledge their allegiance and have joined our ranks.
	Cutscene_Village_Victory:action(function() bm:queue_advisor("Rom.Pro.Capua.AD.007", 7000); end, 10000);
	
	Cutscene_Village_Victory:action(function() cam:move_to(v(-308.4, 234.5, 286.5), v(-304.4, 221.4, 220.2), 0, false, 40) end, 11000);
	Cutscene_Village_Victory:action(function() cam:move_to(v(-308.4, 234.5, 286.5), v(-304.4, 221.4, 220.2), 5, true, 38) end, 11000);
	
	Cutscene_Village_Victory:action(function() cam:move_to(v(-175.4, 307.0, 216.1), v(-142.7, 296.5, 164.4), 3, false, 35) end, 15000);
	
	Cutscene_Village_Victory:action(function() Start_Samnite_Advance_To_River() end, 15500);
		
	Cutscene_Village_Victory:action(function() Cutscene_Village_Victory:wait_for_advisor() end, 17000);
	Cutscene_Village_Victory:action(function() bm:close_advisor() end, 17000);
	
	-- The Samnites move on Capua!
	Cutscene_Village_Victory:action(function() bm:queue_advisor("Rom.Pro.Capua.AD.008", 4000); end, 18000);
	
	Cutscene_Village_Victory:action(function() cam:fade(true, 0.5) end, 18500);
	
	Cutscene_Village_Victory:action(function() cam:move_to(v(157.3, 240.7, -52.5), v(195.5, 230.6, -100.6), 0, false, 35) end, 19500);
	Cutscene_Village_Victory:action(function() cam:move_to(v(157.3, 240.7, -52.5), v(173.4, 228.6, -111.4), 4, true, 35) end, 19500);
	Cutscene_Village_Victory:action(function() cam:fade(false, 0.5) end, 19500);
	
	Cutscene_Village_Victory:action(function() cam:move_to(v(-30.1, 217.4, -409.2), v(-82.8, 211, -440.7), 0, false, 43) end, 23000);
	Cutscene_Village_Victory:action(function() cam:move_to(v(-30.1, 217.4, -409.2), v(-82.8, 211, -440.7), 6, false, 45) end, 23000);
		
	Cutscene_Village_Victory:action(function() subtitles:set_text("Rom.Pro.Capua.Leanas_01") end, 24000);
	Cutscene_Village_Victory:action(function() play_sound(POS_Play_Sound, SFX_Rom_Pro_Capua_Laenas_01) end, 24000);
	
	Cutscene_Village_Victory:action(function() SUnit_Rom_T_03.uc:start_taunting(); SUnit_Rom_T_11.uc:start_taunting() end, 23500);
	Cutscene_Village_Victory:action(function() SUnit_Rom_T_09.uc:start_taunting(); SUnit_Rom_T_08.uc:start_taunting() end, 24500);
	
	Cutscene_Village_Victory:action(function() cam:move_to(v(-66.7, 218, -425.6), v(-13.4, 213.1, -395), 0, false, 40) end, 27000);
	Cutscene_Village_Victory:action(function() cam:move_to(v(-66.7, 218, -425.6), v(-14.3, 217.2, -393.3), 4, true, 28) end, 27000);
	
	Cutscene_Village_Victory:action(function() cam:fade(true, 0.5) end, Cutscene_Village_Victory_Duration - 500);
	
	Cutscene_Village_Victory:start();
end;





POS_Cam_Siege_Attack_Start = v(-404.3, 269.6, 283);
POS_Targ_Siege_Attack_Start = v(-378.7, 254.1, 274.9);

Cutscene_Siege_Attack_Intro_Duration = 21500;

Cutscene_Siege_Attack_Intro = cutscene:new(
	"Cutscene_Siege_Attack_Intro", 						-- unique string name for cutscene
	UC_Rom_01_All, 										-- unitcontroller over player's army
	Cutscene_Siege_Attack_Intro_Duration, 				-- duration of cutscene in ms
	function() Start_Siege_Position_Attack() end		-- what to call when cutscene is finished
);

Cutscene_Siege_Attack_Intro:set_skip_camera(POS_Cam_Siege_Attack_Start, POS_Targ_Siege_Attack_Start);
Cutscene_Siege_Attack_Intro:set_close_advisor_on_end(false);
-- Cutscene_Siege_Attack_Intro:set_debug();

function Play_Siege_Attack_Intro_Cutscene()
	Remove_Village_Samnites();
		
	Start_Samnite_Advance_To_River();
	Teleport_Rom_Siege_Attack_Start();
	Show_Advisor_Dismiss_Button(false);
	
	bm:callback(
		function()
			-- stop these guys as they were all cheering in the previous cutscene
			SUnit_Rom_T_03.uc:halt(); 
			SUnit_Rom_T_11.uc:halt();
			SUnit_Rom_T_09.uc:halt(); 
			SUnit_Rom_T_08.uc:halt();
		end,
		200
	);
	
	Cutscene_Siege_Attack_Intro:action(function() cam:move_to(v(-300.6, 232.9, 271.4), v(-331, 230.8, 265.7), 0, false, 45) end, 0);
	Cutscene_Siege_Attack_Intro:action(function() cam:move_to(v(-300.6, 232.9, 271.4), v(-331, 230.8, 265.7), 5, true, 42) end, 0);
	
	Cutscene_Siege_Attack_Intro:action(function() cam:fade(false, 0.5) end, 1000);
	
	Cutscene_Siege_Attack_Intro:action(function() bm:stop_advisor_queue(); bm:queue_advisor("Rom.Pro.Capua.SI.100", 9500); end, 1000);
	
	Cutscene_Siege_Attack_Intro:action(function() cam:move_to(v(-362.1, 246, 308.4), v(-343.4, 237.4, 285.2), 0, false, 35) end, 4500);
	Cutscene_Siege_Attack_Intro:action(function() cam:move_to(v(-254.3, 317.6, 191.2), v(-233.6, 309.5, 169.6), 4, false, 35) end, 5500);
	
	Cutscene_Siege_Attack_Intro:action(function() Cutscene_Siege_Attack_Intro:wait_for_advisor() end, 10500);
	Cutscene_Siege_Attack_Intro:action(function() bm:close_advisor() end, 10500);
	
	Cutscene_Siege_Attack_Intro:action(function() bm:queue_advisor("Rom.Pro.Capua.SI.101", 9500); end, 11500);
	Cutscene_Siege_Attack_Intro:action(function() cam:move_to(v(68.4, 235.6, -29.2), v(67.9, 233.6, 1.7), 4, false, 35) end, 11500);
	
	Cutscene_Siege_Attack_Intro:action(function() cam:move_to(v(-3.6, 279.6, 83.8), v(16.8, 263.2, 67.2), 0, false, 0) end, 17500);
	Cutscene_Siege_Attack_Intro:action(function() cam:move_to(POS_Cam_Siege_Attack_Start, POS_Targ_Siege_Attack_Start, 3, false, 0) end, 18500);
	
	Cutscene_Siege_Attack_Intro:start();
end;






Cutscene_Bridge_Retreat_Duration = 10000;

Cutscene_Bridge_Retreat = cutscene:new(
	"Cutscene_Bridge_Retreat", 							-- unique string name for cutscene
	UC_Rom_01_All, 										-- unitcontroller over player's army
	Cutscene_Bridge_Retreat_Duration, 					-- duration of cutscene in ms
	function() Setup_Cutscene_Pre_City_Attack() end		-- what to call when cutscene is finished
);

Cutscene_Bridge_Retreat:set_skippable(true, function() Cutscene_Bridge_Retreat_Skipped() end);

function Play_Cutscene_Bridge_Retreat()
	Show_Advisor_Dismiss_Button(false);

	Cutscene_Bridge_Retreat:action(function() cam:move_to(v(17.4, 249.2, -352.6), v(7.1, 239.1, -380), 4, false, 0) end, 0);
	Cutscene_Bridge_Retreat:action(function() bm:stop_advisor_queue() end, 0);
	Cutscene_Bridge_Retreat:action(function() bm:queue_advisor("Rom.Pro.Capua.AD.102", 7000) end, 500);
	
	Cutscene_Bridge_Retreat:action(function() cam:move_to(v(-67.6, 226.5, -470.8), v(170.7, 205.1, -351.8), 0, false, 40) end, 6000);
	Cutscene_Bridge_Retreat:action(function() cam:move_to(v(-67.6, 230.7, -470.8), v(170.7, 208.8, -351.8), 4.5, true, 40) end, 6000);
	
	Cutscene_Bridge_Retreat:action(function() Clean_Up_Skipped_Siege_Position_Attack() end, 6000);	
		
	Cutscene_Bridge_Retreat:start();
end;


function Cutscene_Bridge_Retreat_Skipped()
	cam:fade(true, 0);
	
	Clean_Up_Skipped_Siege_Position_Attack();
end;









POS_Cutscene_City_Attack_End = v(12.1, 261.4, 70.4);
Targ_Cutscene_City_Attack_End = v(5.0, 251.1, 42.0);

Cutscene_City_Attack_Duration = 16500;

Cutscene_City_Attack = cutscene:new(
	"Cutscene_City_Attack", 							-- unique string name for cutscene
	UC_Rom_01_All, 										-- unitcontroller over player's army
	Cutscene_City_Attack_Duration, 						-- duration of cutscene in ms
	function() Start_City_Attack() end					-- what to call when cutscene is finished
);

Cutscene_City_Attack:set_skippable(true, function() Cutscene_City_Attack_Skipped() end);
Cutscene_City_Attack:set_skip_camera(POS_Cutscene_City_Attack_End, Targ_Cutscene_City_Attack_End);
Cutscene_City_Attack:set_close_advisor_on_end(false);
-- Cutscene_City_Attack:set_debug();


function Play_Cutscene_City_Attack()
	Show_Advisor_Dismiss_Button(false);

	Cutscene_City_Attack:action(function() cam:move_to(v(22.6, 232.2, 23.1), v(19.0, 229.0, -7.5), 0, false, 35) end, 0);
	Cutscene_City_Attack:action(function() cam:fade(false, 0.5) end, 0);
	
	-- We cannot wait for reinforcements men, we must act!
	Cutscene_City_Attack:action(function() bm:queue_advisor("Rom.Pro.Capua.SI.200", 15000); end, 500);

	Cutscene_City_Attack:action(function() cam:move_to(v(22.6, 230.2, 23.1), v(19.0, 226.9, -7.5), 2.5, false, 35) end, 2000);
	Cutscene_City_Attack:action(function() Move_Rom_Army_City_Attack_Pre_Start() end, 2000);
	
	Cutscene_City_Attack:action(function() cam:move_to(v(23.2, 229.7, -10), v(19.3, 229.5, 20.8), 0, false, 40) end, 5500);
	Cutscene_City_Attack:action(function() cam:move_to(v(6.5, 229.7, -8.9), v(-2.8, 229.4, 20.7), 15, false, 50) end, 5500);
	
	Cutscene_City_Attack:action(function() SUnit_Rom_03.uc:start_taunting(); SUnit_Rom_04.uc:start_taunting(); SUnit_Rom_07.uc:start_taunting(); end, 7500);
	
	Cutscene_City_Attack:action(function() cam:move_to(v(15.0, 227.6, 5.2), v(26.6, 226.3, 34), 0, false, 40) end, 9000);
	Cutscene_City_Attack:action(function() cam:move_to(v(12.7, 227.6, 6.1), v(24.0, 226.3, 35), 8, false, 40) end, 9000);
	
	Cutscene_City_Attack:action(function() SUnit_Rom_01.uc:start_taunting(); SUnit_Rom_02.uc:start_taunting(); SUnit_Rom_05.uc:start_taunting(); SUnit_Rom_06.uc:start_taunting(); end, 12000);
	
	Cutscene_City_Attack:action(function() cam:move_to(v(28.3, 229.5, -10.3), v(18.3, 228.2, 19.1), 0, false, 0) end, 12500);
	Cutscene_City_Attack:action(function() cam:move_to(POS_Cutscene_City_Attack_End, Targ_Cutscene_City_Attack_End, 3, false, 0) end, 13500);
		
	Cutscene_City_Attack:start();
end;


function Cutscene_City_Attack_Skipped()
	cam:fade(true, 0);
	
	Teleport_Rom_Army_City_Attack_Start();
	
	cam:move_to(POS_Cutscene_City_Attack_End, Targ_Cutscene_City_Attack_End, 0, false, 0);
	
	bm:callback(function() cam:fade(false, 0.5) end, 500);
end;




















Cutscene_Ford = cutscene:new(
	"Cutscene_Ford", 									-- unique string name for cutscene
	UC_Rom_01_All, 										-- unitcontroller over player's army
	2500,					 							-- duration of cutscene in ms
	function() Cutscene_Ford_Finished() end				-- what to call when cutscene is finished
);

Cutscene_Ford:set_restore_cam_time(2);
Cutscene_Ford:set_close_advisor_on_end(false);


function Play_Cutscene_Ford()
	Clear_Subtitles();
	
	Show_Advisor_Dismiss_Button(false);

	Cutscene_Ford:action(function() cam:move_to(v(-80.4, 238.9, -134.4), v(-108.6, 230.2, -144), 2, false, 0) end, 0);
		
	Cutscene_Ford:action(function() bm:queue_advisor("Rom.Pro.Capua.SI.201", 20000); end, 500);
	Cutscene_Ford:action(function() Add_Ford_Infotext(); end, 2500);
			
	Cutscene_Ford:start();
end;









Cutscene_Wall_Art = cutscene:new(
	"Cutscene_Wall_Art", 									-- unique string name for cutscene
	UC_Rom_01_All, 											-- unitcontroller over player's army
	2500,					 								-- duration of cutscene in ms
	function() Cutscene_Wall_Art_Finished() end				-- what to call when cutscene is finished
);

--Cutscene_Wall_Art:set_debug();
Cutscene_Wall_Art:set_restore_cam_time(2);
Cutscene_Wall_Art:set_close_advisor_on_end(false);


function Play_Cutscene_Wall_Art()
	Clear_Subtitles();
	
	Show_Advisor_Dismiss_Button(false);
	
	UC_Rom_Artillery_01:change_enabled(true);
	--UC_Rom_Artillery_01:set_invisible_to_all(false);
	UC_Rom_Artillery_01:release_control();
	
	Cutscene_Wall_Art:action(function() cam:move_to(v(-366.5, 241.3, -413.1), v(-336.9, 234.6, -419.2), 0, false, 0) end, 0);
	
	Cutscene_Wall_Art:action(function() cam:fade(false, 0.5) end, 200);
		
	Cutscene_Wall_Art:action(function() bm:queue_advisor("Rom.Pro.Capua.SI.203", 20000); end, 500);
			
	Cutscene_Wall_Art:start();
end;
















Cutscene_Reinforcements_Appear_Duration = 12500;

Cutscene_Reinforcements_Appear = cutscene:new(
	"Cutscene_Reinforcements_Appear", 							-- unique string name for cutscene
	UC_Rom_01_All,		 										-- unitcontroller over player's army
	Cutscene_Reinforcements_Appear_Duration, 					-- duration of cutscene in ms
	function() Reinforcements_Have_Appeared() end				-- what to call when cutscene is finished
);

Cutscene_Reinforcements_Appear:set_skippable(true, function() Cutscene_Reinforcements_Appear_Skipped() end);
Cutscene_Reinforcements_Appear:set_restore_cam_time(0);
Cutscene_Reinforcements_Appear:set_post_cutscene_fade_time(0.5);
Cutscene_Reinforcements_Appear:set_close_advisor_on_end(false);
-- Cutscene_Reinforcements_Appear:set_debug();


function Play_Cutscene_Reinforcements_Appear()
	Show_Advisor_Dismiss_Button(false);

	Cutscene_Reinforcements_Appear:action(function() cam:move_to(v(203.2, 236.2, -267), v(221.5, 236.2, -251.8), 0, false, 35) end, 0);
	Cutscene_Reinforcements_Appear:action(function() cam:move_to(v(203.2, 236.2, -267), v(221.5, 236.2, -251.8), 4.5, true, 37) end, 0);
	Cutscene_Reinforcements_Appear:action(function() cam:fade(false, 0.5) end, 0);
	
	Cutscene_Reinforcements_Appear:action(function() bm:queue_advisor("Rom.Pro.Capua.AD.207", 4500) end, 500);
	
	Cutscene_Reinforcements_Appear:action(function() cam:move_to(v(435.6, 262, -216.9), v(416.9, 255.5, -203.8), 0, false, 45) end, 4000);
	Cutscene_Reinforcements_Appear:action(function() cam:move_to(v(435.6, 262, -216.9), v(412.5, 257, -221), 12, false, 45) end, 4000);
	
	Cutscene_Reinforcements_Appear:action(function() Charge_Reinforcements_Towards_Town() end, 4000);
	
	Cutscene_Reinforcements_Appear:action(function() Cutscene_Reinforcements_Appear:wait_for_advisor() end, 5000);
	Cutscene_Reinforcements_Appear:action(function() bm:close_advisor() end, 5000);
	
	-- Reinforcements! Our allies, Roman and Lucanian, rally to our aid! Take heart men, the gods are with us!
	Cutscene_Reinforcements_Appear:action(function() bm:queue_advisor("Rom.Pro.Capua.SI.205", 10000) end, 6000);
	
	Cutscene_Reinforcements_Appear:action(function() infotext:InterfaceFunction("add_info_text_entry", "Rom.Pro.Capua.Info.222") end, 8000);
	Cutscene_Reinforcements_Appear:action(function() infotext:InterfaceFunction("add_info_text_entry", "Rom.Pro.Capua.Info.213") end, 8000);
	
	Cutscene_Reinforcements_Appear:action(function() cam:move_to(v(424.8, 278.9, -110.1), v(405.3, 272.3, -122.5), 0, false, 50) end, 8500);
	Cutscene_Reinforcements_Appear:action(function() cam:move_to(v(381.4, 278.9, -138.1), v(361.7, 273.3, -150.6), 12, false, 50) end, 8500);
	
	Cutscene_Reinforcements_Appear:action(function() cam:fade(true, 0.5) end, Cutscene_Reinforcements_Appear_Duration - 500);
	
	Cutscene_Reinforcements_Appear:start();
end;


function Cutscene_Reinforcements_Appear_Skipped()
	Charge_Reinforcements_Towards_Town();
end;






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\pa_prologue_capua\pa_declarations.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	DECLARATIONS SCRIPT
--
--	Declare alliances, armies, convex areas and anything else of note in here
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

--
-- Misc Declarations
--

eh = event_handler:new(AddEventCallBack);
start_advice_tickbox_listener(eh);
bm:stop_advice_on_battle_end(eh);

STARTPOS_START = 0;
STARTPOS_SIEGE_POSITION_ATTACK = 1;
STARTPOS_CITY_ATTACK = 2;

REASON_PLAYER_ABANDONED_VILLAGE_ATTACK = 1;

cam = bm:camera();
subtitles = bm:subtitles();

POS_Body_Dump = v(-366, -782);

debugdrawing = bm:debug_drawing();
objectives = UIComponent(bm:ui_component("scripted_objectives_panel"));
--infotext = UIComponent(bm:ui_component("advice_interface"));

--
-- Army Declarations
--

Alliances = bm:alliances();

Alliance_Rom = Alliances:item(1);
Army_Rom_01 = Alliance_Rom:armies():item(1);
Army_Rom_02 = Alliance_Rom:armies():item(2);
Army_Rom_03 = Alliance_Rom:armies():item(3);
Army_Rom_04 = Alliance_Rom:armies():item(4);
Army_Rom_05 = Alliance_Rom:armies():item(5);

Alliance_Sam = Alliances:item(2); 
Army_Sam_01 = Alliance_Sam:armies():item(1);
Army_Sam_02 = Alliance_Sam:armies():item(2);
Army_Sam_03 = Alliance_Sam:armies():item(3);


--
-- Script Unit Declarations
--

SUnit_Rom_01 = script_unit:new(Army_Rom_01, "Rom_01");
SUnit_Rom_02 = script_unit:new(Army_Rom_01, "Rom_02");
SUnit_Rom_03 = script_unit:new(Army_Rom_01, "Rom_03");
SUnit_Rom_04 = script_unit:new(Army_Rom_01, "Rom_04");
SUnit_Rom_05 = script_unit:new(Army_Rom_01, "Rom_05");
SUnit_Rom_06 = script_unit:new(Army_Rom_01, "Rom_06");
SUnit_Rom_07 = script_unit:new(Army_Rom_01, "Rom_07");

--SUnit_Rom_Art_01 = script_unit:new(Army_Rom_01, "Rom_Art_01");

UC_Rom_01_All = unitcontroller_from_army(Army_Rom_01);

Player_Sunits = {
	SUnit_Rom_01,
	SUnit_Rom_02,
	SUnit_Rom_03,
	SUnit_Rom_04
};

-- mountable artillery
Unit_Rom_Artillery_01 = Army_Rom_01:units():mountable_artillery_item(1);
UC_Rom_Artillery_01 = Army_Rom_01:create_unit_controller();
UC_Rom_Artillery_01:add_units(Unit_Rom_Artillery_01);
UC_Rom_Artillery_01:change_enabled(false);
-- UC_Rom_Artillery_01:set_invisible_to_all(true);


SUnit_Allied_01 = script_unit:new(Army_Rom_02, "Allied_01");
SUnit_Allied_02 = script_unit:new(Army_Rom_02, "Allied_02");
SUnit_Allied_03 = script_unit:new(Army_Rom_02, "Allied_03");

UC_Rom_02_All = unitcontroller_from_army(Army_Rom_02);
UC_Rom_02_All:take_control();

Allied_Village_Sunits = {
	SUnit_Allied_01,
	SUnit_Allied_02,
	SUnit_Allied_03
};

SUnit_Rom_T_01 = script_unit:new(Army_Rom_03, "Rom_T_01");
SUnit_Rom_T_02 = script_unit:new(Army_Rom_03, "Rom_T_02");
SUnit_Rom_T_03 = script_unit:new(Army_Rom_03, "Rom_T_03");
SUnit_Rom_T_04 = script_unit:new(Army_Rom_03, "Rom_T_04");
SUnit_Rom_T_05 = script_unit:new(Army_Rom_03, "Rom_T_05");
SUnit_Rom_T_06 = script_unit:new(Army_Rom_03, "Rom_T_06");
SUnit_Rom_T_07 = script_unit:new(Army_Rom_03, "Rom_T_07");
SUnit_Rom_T_08 = script_unit:new(Army_Rom_03, "Rom_T_08");
SUnit_Rom_T_09 = script_unit:new(Army_Rom_03, "Rom_T_09");
SUnit_Rom_T_10 = script_unit:new(Army_Rom_03, "Rom_T_10");
SUnit_Rom_T_11 = script_unit:new(Army_Rom_03, "Rom_T_11");
SUnit_Rom_T_12 = script_unit:new(Army_Rom_03, "Rom_T_12");
SUnit_Rom_T_13 = script_unit:new(Army_Rom_03, "Rom_T_13");
SUnit_Rom_T_14 = script_unit:new(Army_Rom_03, "Rom_T_14");
SUnit_Rom_T_15 = script_unit:new(Army_Rom_03, "Rom_T_15");
SUnit_Rom_T_16 = script_unit:new(Army_Rom_03, "Rom_T_16");
SUnit_Rom_T_17 = script_unit:new(Army_Rom_03, "Rom_T_17");
SUnit_Rom_T_18 = script_unit:new(Army_Rom_03, "Rom_T_18");
SUnit_Rom_T_19 = script_unit:new(Army_Rom_03, "Rom_T_19");
SUnit_Rom_T_20 = script_unit:new(Army_Rom_03, "Rom_T_20");

UC_Rom_03_All = unitcontroller_from_army(Army_Rom_03);
UC_Rom_03_All:take_control();


Roman_City_Sunits = {
	SUnit_Rom_T_01,
	SUnit_Rom_T_02,
	SUnit_Rom_T_03,
	SUnit_Rom_T_04,
	SUnit_Rom_T_05,
	SUnit_Rom_T_06,
	SUnit_Rom_T_07,
	SUnit_Rom_T_08,
	SUnit_Rom_T_09,
	SUnit_Rom_T_10,
	SUnit_Rom_T_11,
	SUnit_Rom_T_12,
	SUnit_Rom_T_13,
	SUnit_Rom_T_14,
	SUnit_Rom_T_15,
	SUnit_Rom_T_16,
	SUnit_Rom_T_17,
	SUnit_Rom_T_18,
	SUnit_Rom_T_19,
	SUnit_Rom_T_20
};




SUnit_Rom_R_01 = script_unit:new(Army_Rom_04, "Rom_R_01");
SUnit_Rom_R_02 = script_unit:new(Army_Rom_04, "Rom_R_02");
SUnit_Rom_R_03 = script_unit:new(Army_Rom_04, "Rom_R_03");
SUnit_Rom_R_04 = script_unit:new(Army_Rom_04, "Rom_R_04");
SUnit_Rom_R_05 = script_unit:new(Army_Rom_04, "Rom_R_05");
SUnit_Rom_R_06 = script_unit:new(Army_Rom_04, "Rom_R_06");

UC_Rom_04_All = unitcontroller_from_army(Army_Rom_04);
UC_Rom_04_All:take_control();








SUnit_Rom_R_11 = script_unit:new(Army_Rom_05, "Rom_R_11");
SUnit_Rom_R_12 = script_unit:new(Army_Rom_05, "Rom_R_12");
SUnit_Rom_R_13 = script_unit:new(Army_Rom_05, "Rom_R_13");
SUnit_Rom_R_14 = script_unit:new(Army_Rom_05, "Rom_R_14");

UC_Rom_05_All = unitcontroller_from_army(Army_Rom_05);
UC_Rom_05_All:take_control();



Roman_Reinforcement_Sunits = {
	SUnit_Rom_R_01,
	SUnit_Rom_R_02,
	SUnit_Rom_R_03,
	SUnit_Rom_R_04,
	SUnit_Rom_R_05,
	SUnit_Rom_R_06,
	SUnit_Rom_R_11,
	SUnit_Rom_R_12,
	SUnit_Rom_R_13,
	SUnit_Rom_R_14
};






All_Roman_City_SUnits = {
	SUnit_Rom_01,
	SUnit_Rom_02,
	SUnit_Rom_03,
	SUnit_Rom_04,
	SUnit_Rom_05,
	SUnit_Rom_06,
	SUnit_Rom_07,
	SUnit_Rom_T_01,
	SUnit_Rom_T_02,
	SUnit_Rom_T_03,
	SUnit_Rom_T_04,
	SUnit_Rom_T_05,
	SUnit_Rom_T_06,
	SUnit_Rom_T_07,
	SUnit_Rom_T_08,
	SUnit_Rom_T_09,
	SUnit_Rom_T_10,
	SUnit_Rom_T_11,
	SUnit_Rom_T_12,
	SUnit_Rom_T_13,
	SUnit_Rom_T_14,
	SUnit_Rom_T_15,
	SUnit_Rom_T_16,
	SUnit_Rom_T_17,
	SUnit_Rom_T_18,
	SUnit_Rom_T_19,
	SUnit_Rom_T_20,
	SUnit_Rom_R_01,
	SUnit_Rom_R_02,
	SUnit_Rom_R_03,
	SUnit_Rom_R_04,
	SUnit_Rom_R_05,
	SUnit_Rom_R_06,
	SUnit_Rom_R_11,
	SUnit_Rom_R_12,
	SUnit_Rom_R_13,
	SUnit_Rom_R_14
};

















SUnit_Sam_V_01 = script_unit:new(Army_Sam_01, "Sam_V_01");
SUnit_Sam_V_02 = script_unit:new(Army_Sam_01, "Sam_V_02");
SUnit_Sam_V_03 = script_unit:new(Army_Sam_01, "Sam_V_03");
SUnit_Sam_V_04 = script_unit:new(Army_Sam_01, "Sam_V_04");
SUnit_Sam_V_05 = script_unit:new(Army_Sam_01, "Sam_V_05");

UC_Sam_V_All = unitcontroller_from_army(Army_Sam_01);
UC_Sam_V_All:take_control();

Samnite_Village_Sunits = {
	SUnit_Sam_V_01,
	SUnit_Sam_V_02,
	SUnit_Sam_V_03,
	SUnit_Sam_V_04,
	SUnit_Sam_V_05
};

-- turn off skirmish behaviour for Village Sunits
for i = 1, #Samnite_Village_Sunits do
	local curr_sunit = Samnite_Village_Sunits[i];
	curr_sunit.uc:change_behaviour_active("skirmish", false);
end;




SUnit_Sam_S_01 = script_unit:new(Army_Sam_02, "Sam_S_01");
SUnit_Sam_S_02 = script_unit:new(Army_Sam_02, "Sam_S_02");
SUnit_Sam_S_03 = script_unit:new(Army_Sam_02, "Sam_S_03");
SUnit_Sam_S_04 = script_unit:new(Army_Sam_02, "Sam_S_04");
SUnit_Sam_S_05 = script_unit:new(Army_Sam_02, "Sam_S_05");
--SUnit_Sam_S_06 = script_unit:new(Army_Sam_02, "Sam_S_06");
--SUnit_Sam_S_07 = script_unit:new(Army_Sam_02, "Sam_S_07");

UC_Sam_S_All = unitcontroller_from_army(Army_Sam_02);
UC_Sam_S_All:fire_at_will(false);		-- prevent siege weapons from randomly firing
UC_Sam_S_All:take_control();




Samnite_Siege_Position_Sunits = {
	SUnit_Sam_S_01,
	SUnit_Sam_S_02,
	SUnit_Sam_S_03
}

Samnite_Siege_Position_Engines = {
	SUnit_Sam_S_04,
	SUnit_Sam_S_05
	--SUnit_Sam_S_06,
	--SUnit_Sam_S_07
};

Samnite_Siege_Position_All_Sunits = {
	SUnit_Sam_S_01,
	SUnit_Sam_S_02,
	SUnit_Sam_S_03,
	SUnit_Sam_S_04,
	SUnit_Sam_S_05
}



SUnit_Sam_M_01 = script_unit:new(Army_Sam_03, "Sam_M_01");
SUnit_Sam_M_02 = script_unit:new(Army_Sam_03, "Sam_M_02");
SUnit_Sam_M_03 = script_unit:new(Army_Sam_03, "Sam_M_03");
SUnit_Sam_M_04 = script_unit:new(Army_Sam_03, "Sam_M_04");
SUnit_Sam_M_05 = script_unit:new(Army_Sam_03, "Sam_M_05");
SUnit_Sam_M_06 = script_unit:new(Army_Sam_03, "Sam_M_06");
SUnit_Sam_M_07 = script_unit:new(Army_Sam_03, "Sam_M_07");
SUnit_Sam_M_08 = script_unit:new(Army_Sam_03, "Sam_M_08");
SUnit_Sam_M_09 = script_unit:new(Army_Sam_03, "Sam_M_09");
SUnit_Sam_M_10 = script_unit:new(Army_Sam_03, "Sam_M_10");
SUnit_Sam_M_11 = script_unit:new(Army_Sam_03, "Sam_M_11");
SUnit_Sam_M_12 = script_unit:new(Army_Sam_03, "Sam_M_12");
SUnit_Sam_M_13 = script_unit:new(Army_Sam_03, "Sam_M_13");
SUnit_Sam_M_14 = script_unit:new(Army_Sam_03, "Sam_M_14");
SUnit_Sam_M_15 = script_unit:new(Army_Sam_03, "Sam_M_15");
SUnit_Sam_M_16 = script_unit:new(Army_Sam_03, "Sam_M_16");
SUnit_Sam_M_17 = script_unit:new(Army_Sam_03, "Sam_M_17");
SUnit_Sam_M_18 = script_unit:new(Army_Sam_03, "Sam_M_18");
SUnit_Sam_M_19 = script_unit:new(Army_Sam_03, "Sam_M_19");
SUnit_Sam_M_20 = script_unit:new(Army_Sam_03, "Sam_M_20");
SUnit_Sam_M_21 = script_unit:new(Army_Sam_03, "Sam_M_21");
SUnit_Sam_M_22 = script_unit:new(Army_Sam_03, "Sam_M_22");
SUnit_Sam_M_23 = script_unit:new(Army_Sam_03, "Sam_M_23");
SUnit_Sam_M_24 = script_unit:new(Army_Sam_03, "Sam_M_24");
SUnit_Sam_M_25 = script_unit:new(Army_Sam_03, "Sam_M_25");
SUnit_Sam_M_26 = script_unit:new(Army_Sam_03, "Sam_M_26");
SUnit_Sam_M_27 = script_unit:new(Army_Sam_03, "Sam_M_27");
SUnit_Sam_M_28 = script_unit:new(Army_Sam_03, "Sam_M_28");
SUnit_Sam_M_29 = script_unit:new(Army_Sam_03, "Sam_M_29");
SUnit_Sam_M_30 = script_unit:new(Army_Sam_03, "Sam_M_30");

UC_Sam_M_All = unitcontroller_from_army(Army_Sam_03);
UC_Sam_M_All:take_control();

Samnite_City_Sunits = {
	SUnit_Sam_M_01,
	SUnit_Sam_M_02,
	SUnit_Sam_M_03,
	SUnit_Sam_M_04,
	SUnit_Sam_M_05,
	SUnit_Sam_M_06,
	SUnit_Sam_M_07,
	SUnit_Sam_M_08,
	SUnit_Sam_M_09,
	SUnit_Sam_M_10,
	SUnit_Sam_M_11,
	SUnit_Sam_M_12,
	SUnit_Sam_M_13,
	SUnit_Sam_M_14,
	SUnit_Sam_M_15,
	SUnit_Sam_M_16,
	SUnit_Sam_M_17,
	SUnit_Sam_M_18,
	SUnit_Sam_M_19,
	SUnit_Sam_M_20,
	SUnit_Sam_M_21,
	SUnit_Sam_M_22,
	SUnit_Sam_M_23,
	SUnit_Sam_M_24,
	SUnit_Sam_M_25,
	SUnit_Sam_M_26,
	SUnit_Sam_M_27,
	SUnit_Sam_M_28,
	SUnit_Sam_M_29,
	SUnit_Sam_M_30
};











--
-- Buildings
--

-- Building_01 = get_building_near(bm, 0, 0);









--
-- Convex Areas
--

Area_Village_Attack = convex_area:new(
	{		
		v(-1000, 1000),
		v(-160, 1000),
		v(-160, 300),
		v(-300, -120),
		v(-1000, -240)
	}
);


Area_SP_Attack = convex_area:new(
	{
		v(-500, -150),
		v(-520, 540),
		v(0, 480),
		v(250, 70),
		v(80, -145)
	}
);


Area_Ford_Approach = convex_area:new(
	{
		v(-55, 36),
		v(130, -55),
		v(-20, -330),
		v(-265, -120)
	}
);


Area_River_Crossed = convex_area:new(
	{
		v(-245, -79),
		v(45, -397),
		v(65, -585),
		v(-280, -570)
	}
);


--
-- Intro Cutscene
--


Pos_Rom_01_Intro_Start = v(-724.14,212.78)
Orient_Rom_01_Intro_Start = r_to_d(1.736)
Width_Rom_01_Intro_Start = 13.9

Pos_Rom_02_Intro_Start = v(-726.78,196.948)
Orient_Rom_02_Intro_Start = r_to_d(1.736)
Width_Rom_02_Intro_Start = 14.2

Pos_Rom_03_Intro_Start = v(-729.37,181.42)
Orient_Rom_03_Intro_Start = r_to_d(1.736)
Width_Rom_03_Intro_Start = 13.3

Pos_Rom_04_Intro_Start = v(-731.88,166.32)
Orient_Rom_04_Intro_Start = r_to_d(1.736)
Width_Rom_04_Intro_Start = 13.3


function Teleport_Rom_Army_Intro_Start()
	SUnit_Rom_01.uc:teleport_to_location(Pos_Rom_01_Intro_Start, Orient_Rom_01_Intro_Start, Width_Rom_01_Intro_Start);
	SUnit_Rom_02.uc:teleport_to_location(Pos_Rom_02_Intro_Start, Orient_Rom_02_Intro_Start, Width_Rom_02_Intro_Start);
	SUnit_Rom_03.uc:teleport_to_location(Pos_Rom_03_Intro_Start, Orient_Rom_03_Intro_Start, Width_Rom_03_Intro_Start);
	SUnit_Rom_04.uc:teleport_to_location(Pos_Rom_04_Intro_Start, Orient_Rom_04_Intro_Start, Width_Rom_04_Intro_Start);
end;

function Move_Rom_Army_Intro_Start()
	SUnit_Rom_01.uc:goto_location_angle_width(SUnit_Rom_01.start_position, SUnit_Rom_01.start_bearing, SUnit_Rom_01.start_width);
	SUnit_Rom_02.uc:goto_location_angle_width(SUnit_Rom_02.start_position, SUnit_Rom_02.start_bearing, SUnit_Rom_02.start_width);
	SUnit_Rom_03.uc:goto_location_angle_width(SUnit_Rom_03.start_position, SUnit_Rom_03.start_bearing, SUnit_Rom_03.start_width);
	SUnit_Rom_04.uc:goto_location_angle_width(SUnit_Rom_04.start_position, SUnit_Rom_04.start_bearing, SUnit_Rom_04.start_width);
end;


function Teleport_Rom_Army_Intro_End()
	SUnit_Rom_01.uc:teleport_to_location(SUnit_Rom_01.start_position, SUnit_Rom_01.start_bearing, SUnit_Rom_01.start_width);
	SUnit_Rom_02.uc:teleport_to_location(SUnit_Rom_02.start_position, SUnit_Rom_02.start_bearing, SUnit_Rom_02.start_width);
	SUnit_Rom_03.uc:teleport_to_location(SUnit_Rom_03.start_position, SUnit_Rom_03.start_bearing, SUnit_Rom_03.start_width);
	SUnit_Rom_04.uc:teleport_to_location(SUnit_Rom_04.start_position, SUnit_Rom_04.start_bearing, SUnit_Rom_04.start_width);
end;


function Teleport_Laenas_Cutscene_Capua_Intel_Position()
	SUnit_Rom_T_01.uc:teleport_to_location(v(-49.1, -484.7), r_to_d(-0.40), 13.5);
end;

function Move_Laenas_Cutscene_Capua_Intel_Position()
	SUnit_Rom_T_01.PM_Capua_Intel = patrol_manager:new("Capua_Intel_01", SUnit_Rom_T_01, Alliance_Sam:armies(), 0);
	SUnit_Rom_T_01.PM_Capua_Intel:add_waypoint(v(-57.7, -463.3));
	SUnit_Rom_T_01.PM_Capua_Intel:add_waypoint(v(-45.1, -458.1), false, -1, r_to_d(1.13), 16.5);
	SUnit_Rom_T_01.PM_Capua_Intel:set_waypoint_threshold(10);
	SUnit_Rom_T_01.PM_Capua_Intel:start();
end;




--
-- Patrol_Managers
--

SUnit_Allied_01.PM_Advance = patrol_manager:new("Allied_01", SUnit_Allied_01, Alliance_Sam:armies(), 40);
SUnit_Allied_01.PM_Advance:set_intercept_time(60000);
SUnit_Allied_01.PM_Advance:add_waypoint(v(-415, 111.0), false, 0);
SUnit_Allied_01.PM_Advance:add_waypoint(v(-360.7, 215.3), true, -1, r_to_d(1.57), 24);

SUnit_Allied_01.PM_Attack = patrol_manager:new("Allied_01_Attack", SUnit_Allied_01, Alliance_Sam:armies(), 150);
SUnit_Allied_01.PM_Attack:set_intercept_time(60000);
SUnit_Allied_01.PM_Attack:add_waypoint(v(-360.7, 215.3), true, -1, r_to_d(1.57), 24);

SUnit_Allied_02.PM_Advance = patrol_manager:new("Allied_02", SUnit_Allied_02, Alliance_Sam:armies(), 60);
SUnit_Allied_02.PM_Advance:set_waypoint_threshold(25);
SUnit_Allied_02.PM_Advance:set_intercept_time(60000);
SUnit_Allied_02.PM_Advance:add_waypoint(v(-325.18, 73.3), false, -1, r_to_d(0.42), 35);
--SUnit_Allied_02.PM_Advance:add_waypoint(v(-325.18, 73.3), true, -1, r_to_d(0.42), 35);

SUnit_Allied_02.PM_Attack = patrol_manager:new("Allied_02_Attack", SUnit_Allied_02, Alliance_Sam:armies(), 150);
SUnit_Allied_02.PM_Attack:set_intercept_time(60000);
SUnit_Allied_02.PM_Attack:add_waypoint(v(-325.18, 73.3), true, -1, r_to_d(0.42), 35);

SUnit_Allied_03.PM_Advance = patrol_manager:new("Allied_03", SUnit_Allied_03, Alliance_Sam:armies(), 60);
SUnit_Allied_03.PM_Advance:set_intercept_time(60000);
SUnit_Allied_03.PM_Advance:add_waypoint(v(-384, 52), false, 0, r_to_d(0.88), 35.5);
SUnit_Allied_03.PM_Advance:add_waypoint(v(-420.64, 130.74), true, -1, r_to_d(1.25), 30.1);

SUnit_Allied_03.PM_Attack = patrol_manager:new("Allied_03_Attack", SUnit_Allied_03, Alliance_Sam:armies(), 150);
SUnit_Allied_03.PM_Attack:set_intercept_time(60000);
SUnit_Allied_03.PM_Attack:add_waypoint(v(-420.64, 130.74), true, -1, r_to_d(1.25), 30.1);





SUnit_Sam_V_01.PM_Advance = patrol_manager:new("Sam_V_01", SUnit_Sam_V_01, Alliance_Rom:armies(), 80);
SUnit_Sam_V_01.PM_Advance:set_intercept_time(3600000);
SUnit_Sam_V_01.PM_Advance:add_waypoint(v(-564.6, 267.3), true, -1, r_to_d(-2.39), 34.21);

SUnit_Sam_V_02.PM_Advance = patrol_manager:new("Sam_V_02", SUnit_Sam_V_02, Alliance_Rom:armies(), 80);
SUnit_Sam_V_02.PM_Advance:set_intercept_time(3600000);
SUnit_Sam_V_02.PM_Advance:add_waypoint(v(-236.28, 270.63), true, -1, r_to_d(-2.01), 68);

SUnit_Sam_V_03.PM_Advance = patrol_manager:new("Sam_V_03", SUnit_Sam_V_03, Alliance_Rom:armies(), 50);
SUnit_Sam_V_03.PM_Advance:set_intercept_time(3600000);
SUnit_Sam_V_03.PM_Advance:add_waypoint(v(-230.35, 179.57), true, -1, r_to_d(-1.52), 17.8);

SUnit_Sam_V_04.PM_Advance = patrol_manager:new("Sam_V_04", SUnit_Sam_V_04, Alliance_Rom:armies(), 50);
SUnit_Sam_V_04.PM_Advance:set_intercept_time(3600000);
SUnit_Sam_V_04.PM_Advance:add_waypoint(v(-229.34, 199.35), true, -1, r_to_d(-1.52), 17.8);
SUnit_Sam_V_04.PM_Advance:add_waypoint(v(-289.3, 214.59), false, -1, r_to_d(-1.63), 17.8);

SUnit_Sam_V_05.PM_Advance = patrol_manager:new("Sam_V_05", SUnit_Sam_V_05, Alliance_Rom:armies(), 80);
SUnit_Sam_V_05.PM_Advance:set_intercept_time(3600000);
SUnit_Sam_V_05.PM_Advance:add_waypoint(v(-540.85, 412.1), true, -1, r_to_d(-0.35), 34.85);

SUnit_Sam_V_01.PM_Attack = patrol_manager:new("Sam_V_01_Attack", SUnit_Sam_V_01, Alliance_Rom:armies(), 60);
SUnit_Sam_V_01.PM_Attack:set_intercept_time(3600000);
-- SUnit_Sam_V_01.PM_Attack:set_stop_on_intercept();
SUnit_Sam_V_01.PM_Attack:set_completion_callback(function() SUnit_Sam_V_01.PM_Attack_02:start() end);
SUnit_Sam_V_01.PM_Attack:add_waypoint(v(-489, 265), false, 0, r_to_d(2.62), 33.57);

SUnit_Sam_V_01.PM_Attack_02 = patrol_manager:new("Sam_V_01_Attack_02", SUnit_Sam_V_01, Alliance_Rom:armies(), 100);
SUnit_Sam_V_01.PM_Attack_02:set_intercept_time(3600000);
SUnit_Sam_V_01.PM_Attack_02:add_waypoint(v(-370.06, 246.07), true, -1, r_to_d(2.62), 33.57);

SUnit_Sam_V_02.PM_Attack = patrol_manager:new("Sam_V_02_Attack", SUnit_Sam_V_02, Alliance_Rom:armies(), 80);
SUnit_Sam_V_02.PM_Attack:set_intercept_time(3600000);
-- SUnit_Sam_V_02.PM_Attack:set_stop_on_intercept();
SUnit_Sam_V_02.PM_Attack:set_completion_callback(function() SUnit_Sam_V_02.PM_Attack_02:start() end);
SUnit_Sam_V_02.PM_Attack:add_waypoint(v(-258.5, 210.7), true, 0, r_to_d(-1.8), 50);

SUnit_Sam_V_02.PM_Attack_02 = patrol_manager:new("Sam_V_02_Attack_02", SUnit_Sam_V_02, Alliance_Rom:armies(), 200);
SUnit_Sam_V_02.PM_Attack_02:set_intercept_time(3600000);
SUnit_Sam_V_02.PM_Attack_02:add_waypoint(v(-258.5, 210.7), true, -1, r_to_d(-1.8), 50);

SUnit_Sam_V_03.PM_Attack = patrol_manager:new("Sam_V_03_Attack", SUnit_Sam_V_03, Alliance_Rom:armies(), 50);
SUnit_Sam_V_03.PM_Attack:set_intercept_time(3600000);
-- SUnit_Sam_V_03.PM_Attack:set_stop_on_intercept();
SUnit_Sam_V_03.PM_Attack:set_completion_callback(function() SUnit_Sam_V_03.PM_Attack_02:start() end);
SUnit_Sam_V_03.PM_Attack:add_waypoint(v(-247.9, 184), true);
SUnit_Sam_V_03.PM_Attack:add_waypoint(SUnit_Allied_01.unit, true);

SUnit_Sam_V_03.PM_Attack_02 = patrol_manager:new("Sam_V_03_Attack_02", SUnit_Sam_V_03, Alliance_Rom:armies(), 150);
SUnit_Sam_V_03.PM_Attack_02:set_intercept_time(3600000);
SUnit_Sam_V_03.PM_Attack_02:add_waypoint(SUnit_Allied_02.unit, true);
SUnit_Sam_V_03.PM_Attack_02:add_waypoint(SUnit_Allied_03.unit, true);

SUnit_Sam_V_04.PM_Attack = patrol_manager:new("Sam_V_04_Attack", SUnit_Sam_V_04, Alliance_Rom:armies(), 50);
SUnit_Sam_V_04.PM_Attack:set_intercept_time(3600000);
-- SUnit_Sam_V_04.PM_Attack:set_stop_on_intercept();
SUnit_Sam_V_04.PM_Attack:set_completion_callback(function() SUnit_Sam_V_04.PM_Attack_02:start() end);
SUnit_Sam_V_04.PM_Attack:add_waypoint(v(-248, 200.7), true);
SUnit_Sam_V_04.PM_Attack:add_waypoint(SUnit_Allied_01.unit, true);

SUnit_Sam_V_04.PM_Attack_02 = patrol_manager:new("Sam_V_04_Attack_02", SUnit_Sam_V_04, Alliance_Rom:armies(), 150);
SUnit_Sam_V_04.PM_Attack_02:set_intercept_time(3600000);
SUnit_Sam_V_04.PM_Attack_02:add_waypoint(SUnit_Allied_03.unit, true);
SUnit_Sam_V_04.PM_Attack_02:add_waypoint(SUnit_Allied_02.unit, true);

SUnit_Sam_V_05.PM_Attack = patrol_manager:new("Sam_V_05_Attack", SUnit_Sam_V_05, Alliance_Rom:armies(), 60);
SUnit_Sam_V_05.PM_Attack:set_intercept_time(3600000);
-- SUnit_Sam_V_05.PM_Attack:set_stop_on_intercept();
SUnit_Sam_V_05.PM_Attack:set_completion_callback(function() SUnit_Sam_V_05.PM_Attack_02:start() end);
SUnit_Sam_V_05.PM_Attack:add_waypoint(v(-450, 340), false, 0, r_to_d(3.01), 33);

SUnit_Sam_V_05.PM_Attack_02 = patrol_manager:new("Sam_V_05_Attack_02", SUnit_Sam_V_05, Alliance_Rom:armies(), 100);
SUnit_Sam_V_05.PM_Attack_02:set_intercept_time(3600000);
SUnit_Sam_V_05.PM_Attack_02:add_waypoint(v(-312.37, 248.86), true, -1, r_to_d(3.01), 33);













--
-- Siege position attack
--

Pos_Rom_01_Siege_Attack_Start = v(-311.194,259.762)
Orient_Rom_01_Siege_Attack_Start = r_to_d(-1.30676)
Width_Rom_01_Siege_Attack_Start = 17.4106

Pos_Rom_02_Siege_Attack_Start = v(-332.565,246.248)
Orient_Rom_02_Siege_Attack_Start = r_to_d(1.81163)
Width_Rom_02_Siege_Attack_Start = 16.4177

Pos_Rom_03_Siege_Attack_Start = v(-323.888,281.628)
Orient_Rom_03_Siege_Attack_Start = r_to_d(1.81777)
Width_Rom_03_Siege_Attack_Start = 17.433

Pos_Rom_04_Siege_Attack_Start = v(-328.291,263.781)
Orient_Rom_04_Siege_Attack_Start = r_to_d(1.80454)
Width_Rom_04_Siege_Attack_Start = 16.5789

Pos_Rom_05_Siege_Attack_Start = v(-368.285,265.22)
Orient_Rom_05_Siege_Attack_Start = r_to_d(2)
Width_Rom_05_Siege_Attack_Start = 11.97

Pos_Rom_06_Siege_Attack_Start = v(-353.378,252.169)
Orient_Rom_06_Siege_Attack_Start = r_to_d(1.76695)
Width_Rom_06_Siege_Attack_Start = 31.1954

Pos_Rom_07_Siege_Attack_Start = v(-344.409,284.414)
Orient_Rom_07_Siege_Attack_Start = r_to_d(1.79869)
Width_Rom_07_Siege_Attack_Start = 33.4378

function Teleport_Rom_Siege_Attack_Start()
	SUnit_Rom_01.uc:teleport_to_location(Pos_Rom_01_Siege_Attack_Start, Orient_Rom_01_Siege_Attack_Start, Width_Rom_01_Siege_Attack_Start);
	SUnit_Rom_02.uc:teleport_to_location(Pos_Rom_02_Siege_Attack_Start, Orient_Rom_02_Siege_Attack_Start, Width_Rom_02_Siege_Attack_Start);
	SUnit_Rom_03.uc:teleport_to_location(Pos_Rom_03_Siege_Attack_Start, Orient_Rom_03_Siege_Attack_Start, Width_Rom_03_Siege_Attack_Start);
	SUnit_Rom_04.uc:teleport_to_location(Pos_Rom_04_Siege_Attack_Start, Orient_Rom_04_Siege_Attack_Start, Width_Rom_04_Siege_Attack_Start);
	SUnit_Rom_05.uc:teleport_to_location(Pos_Rom_05_Siege_Attack_Start, Orient_Rom_05_Siege_Attack_Start, Width_Rom_05_Siege_Attack_Start);
	SUnit_Rom_06.uc:teleport_to_location(Pos_Rom_06_Siege_Attack_Start, Orient_Rom_06_Siege_Attack_Start, Width_Rom_06_Siege_Attack_Start);
	SUnit_Rom_07.uc:teleport_to_location(Pos_Rom_07_Siege_Attack_Start, Orient_Rom_07_Siege_Attack_Start, Width_Rom_07_Siege_Attack_Start);
end;




--
-- Samnite Town Advance
--

SUnit_Sam_M_01.Pos_Advance_01 = v(174.6, -362.8)
SUnit_Sam_M_01.Orient_Advance_01 = r_to_d(-1.92)
SUnit_Sam_M_01.Width_Advance_01 = 16.78

SUnit_Sam_M_02.Pos_Advance_01 = v(168.2,-345.1)
SUnit_Sam_M_02.Orient_Advance_01 = r_to_d(-1.92)
SUnit_Sam_M_02.Width_Advance_01 = 16.78

SUnit_Sam_M_03.Pos_Advance_01 = v(161.7,-327.5)
SUnit_Sam_M_03.Orient_Advance_01 = r_to_d(-1.92)
SUnit_Sam_M_03.Width_Advance_01 = 16.78

SUnit_Sam_M_04.Pos_Advance_01 = v(136.7, -519.8)
SUnit_Sam_M_04.Orient_Advance_01 = r_to_d(-1.71)
SUnit_Sam_M_04.Width_Advance_01 = 14.2

SUnit_Sam_M_05.Pos_Advance_01 = v(123.7,-428.2)
SUnit_Sam_M_05.Orient_Advance_01 = r_to_d(-1.74)
SUnit_Sam_M_05.Width_Advance_01 = 14.7

SUnit_Sam_M_06.Pos_Advance_01 = v(129.4,-461.1)
SUnit_Sam_M_06.Orient_Advance_01 = r_to_d(-1.74)
SUnit_Sam_M_06.Width_Advance_01 = 14.7

SUnit_Sam_M_07.Pos_Advance_01 = v(139.0, -535.9)
SUnit_Sam_M_07.Orient_Advance_01 = r_to_d(-1.71)
SUnit_Sam_M_07.Width_Advance_01 = 14.2

SUnit_Sam_M_08.Pos_Advance_01 = v(108.8,-465.0)
SUnit_Sam_M_08.Orient_Advance_01 = r_to_d(-1.87)
SUnit_Sam_M_08.Width_Advance_01 = 9.7

SUnit_Sam_M_09.Pos_Advance_01 = v(105.4,-453.8)
SUnit_Sam_M_09.Orient_Advance_01 = r_to_d(-1.87)
SUnit_Sam_M_09.Width_Advance_01 = 9.7

SUnit_Sam_M_10.Pos_Advance_01 = v(64.8,-346.4)
SUnit_Sam_M_10.Orient_Advance_01 = r_to_d(-2.36)
SUnit_Sam_M_10.Width_Advance_01 = 10.7

SUnit_Sam_M_11.Pos_Advance_01 = v(162.2,-562.5)
SUnit_Sam_M_11.Orient_Advance_01 = r_to_d(-1.7)
SUnit_Sam_M_11.Width_Advance_01 = 25.9

SUnit_Sam_M_12.Pos_Advance_01 = v(155.2,-509.9)
SUnit_Sam_M_12.Orient_Advance_01 = r_to_d(-1.7)
SUnit_Sam_M_12.Width_Advance_01 = 24.1

SUnit_Sam_M_13.Pos_Advance_01 = v(157.6,-399.8)
SUnit_Sam_M_13.Orient_Advance_01 = r_to_d(-1.92)
SUnit_Sam_M_13.Width_Advance_01 = 27.7

SUnit_Sam_M_14.Pos_Advance_01 = v(97.8,-295.1)
SUnit_Sam_M_14.Orient_Advance_01 = r_to_d(-2.39)
SUnit_Sam_M_14.Width_Advance_01 = 27.7

SUnit_Sam_M_15.Pos_Advance_01 = v(75.4,-274.03)
SUnit_Sam_M_15.Orient_Advance_01 = r_to_d(-2.39)
SUnit_Sam_M_15.Width_Advance_01 = 27.7

SUnit_Sam_M_16.Pos_Advance_01 = v(97,-415.9)
SUnit_Sam_M_16.Orient_Advance_01 = r_to_d(-1.87)
SUnit_Sam_M_16.Width_Advance_01 = 32.6

SUnit_Sam_M_17.Pos_Advance_01 = v(141,-439.1)
SUnit_Sam_M_17.Orient_Advance_01 = r_to_d(-1.75)
SUnit_Sam_M_17.Width_Advance_01 = 57.3

SUnit_Sam_M_18.Pos_Advance_01 = v(82.9,-320.7)
SUnit_Sam_M_18.Orient_Advance_01 = r_to_d(-2.36)
SUnit_Sam_M_18.Width_Advance_01 = 48.8

SUnit_Sam_M_19.Pos_Advance_01 = v(115.9,-487.8)
SUnit_Sam_M_19.Orient_Advance_01 = r_to_d(-1.87)
SUnit_Sam_M_19.Width_Advance_01 = 10.6

SUnit_Sam_M_20.Pos_Advance_01 = v(112.3,-476.2)
SUnit_Sam_M_20.Orient_Advance_01 = r_to_d(-1.87)
SUnit_Sam_M_20.Width_Advance_01 = 9.7

SUnit_Sam_M_21.Pos_Advance_01 = v(126.5,-444.7)
SUnit_Sam_M_21.Orient_Advance_01 = r_to_d(-1.74)
SUnit_Sam_M_21.Width_Advance_01 = 14.7

SUnit_Sam_M_22.Pos_Advance_01 = v(55.8,-337.6)
SUnit_Sam_M_22.Orient_Advance_01 = r_to_d(-2.37)
SUnit_Sam_M_22.Width_Advance_01 = 10.7

SUnit_Sam_M_23.Pos_Advance_01 = v(85,-341.3)
SUnit_Sam_M_23.Orient_Advance_01 = r_to_d(-2.37)
SUnit_Sam_M_23.Width_Advance_01 = 14.7

SUnit_Sam_M_24.Pos_Advance_01 = v(73,-329.6)
SUnit_Sam_M_24.Orient_Advance_01 = r_to_d(-2.37)
SUnit_Sam_M_24.Width_Advance_01 = 14.7

SUnit_Sam_M_25.Pos_Advance_01 = v(61.1,-317.9)
SUnit_Sam_M_25.Orient_Advance_01 = r_to_d(-2.37)
SUnit_Sam_M_25.Width_Advance_01 = 14.7

SUnit_Sam_M_26.Pos_Advance_01 = v(158.6,-535.7)
SUnit_Sam_M_26.Orient_Advance_01 = r_to_d(-1.7)
SUnit_Sam_M_26.Width_Advance_01 = 24.1

SUnit_Sam_M_27.Pos_Advance_01 = v(151.7,-484)
SUnit_Sam_M_27.Orient_Advance_01 = r_to_d(-1.70)
SUnit_Sam_M_27.Width_Advance_01 = 24.1

SUnit_Sam_M_28.Pos_Advance_01 = v(147.4,-371.8)
SUnit_Sam_M_28.Orient_Advance_01 = r_to_d(-1.92)
SUnit_Sam_M_28.Width_Advance_01 = 25.9

SUnit_Sam_M_29.Pos_Advance_01 = v(137.6,-344.6)
SUnit_Sam_M_29.Orient_Advance_01 = r_to_d(-1.92)
SUnit_Sam_M_29.Width_Advance_01 = 25.9

SUnit_Sam_M_30.Pos_Advance_01 = v(120.1,-316.1)
SUnit_Sam_M_30.Orient_Advance_01 = r_to_d(-2.39)
SUnit_Sam_M_30.Width_Advance_01 = 27.7


SUnit_Sam_M_01.River_Advance_Waypoints = {
	waypoint:new(v(236.6, -261.2), false),
	waypoint:new(SUnit_Sam_M_01.Pos_Advance_01, true, 0, SUnit_Sam_M_01.Orient_Advance_01, SUnit_Sam_M_01.Width_Advance_01)
};

SUnit_Sam_M_02.River_Advance_Waypoints = {
	waypoint:new(v(226.4, -248.6), false),
	waypoint:new(SUnit_Sam_M_02.Pos_Advance_01, true, 0, SUnit_Sam_M_02.Orient_Advance_01, SUnit_Sam_M_02.Width_Advance_01)
};

SUnit_Sam_M_03.River_Advance_Waypoints = {
	waypoint:new(v(216.2, -236.1), false),
	waypoint:new(SUnit_Sam_M_03.Pos_Advance_01, true, 0, SUnit_Sam_M_03.Orient_Advance_01, SUnit_Sam_M_03.Width_Advance_01)
};

SUnit_Sam_M_04.River_Advance_Waypoints = {
	waypoint:new(SUnit_Sam_M_04.Pos_Advance_01, true, 0, SUnit_Sam_M_04.Orient_Advance_01, SUnit_Sam_M_04.Width_Advance_01)
};

SUnit_Sam_M_05.River_Advance_Waypoints = {
	waypoint:new(SUnit_Sam_M_05.Pos_Advance_01, true, 0, SUnit_Sam_M_05.Orient_Advance_01, SUnit_Sam_M_05.Width_Advance_01)
};

SUnit_Sam_M_06.River_Advance_Waypoints = {
	waypoint:new(SUnit_Sam_M_06.Pos_Advance_01, true, 0, SUnit_Sam_M_06.Orient_Advance_01, SUnit_Sam_M_06.Width_Advance_01)
};

SUnit_Sam_M_07.River_Advance_Waypoints = {
	waypoint:new(SUnit_Sam_M_07.Pos_Advance_01, true, 0, SUnit_Sam_M_07.Orient_Advance_01, SUnit_Sam_M_07.Width_Advance_01)
};

SUnit_Sam_M_08.River_Advance_Waypoints = {
	waypoint:new(SUnit_Sam_M_08.Pos_Advance_01, true, 0, SUnit_Sam_M_08.Orient_Advance_01, SUnit_Sam_M_08.Width_Advance_01)
};

SUnit_Sam_M_09.River_Advance_Waypoints = {
	waypoint:new(SUnit_Sam_M_09.Pos_Advance_01, true, 0, SUnit_Sam_M_09.Orient_Advance_01, SUnit_Sam_M_09.Width_Advance_01)
};

SUnit_Sam_M_10.River_Advance_Waypoints = {
	waypoint:new(SUnit_Sam_M_10.Pos_Advance_01, true, 0, SUnit_Sam_M_10.Orient_Advance_01, SUnit_Sam_M_10.Width_Advance_01)
};

SUnit_Sam_M_11.River_Advance_Waypoints = {
	waypoint:new(SUnit_Sam_M_11.Pos_Advance_01, true, 0, SUnit_Sam_M_11.Orient_Advance_01, SUnit_Sam_M_11.Width_Advance_01)
};

SUnit_Sam_M_12.River_Advance_Waypoints = {
	waypoint:new(SUnit_Sam_M_12.Pos_Advance_01, true, 0, SUnit_Sam_M_12.Orient_Advance_01, SUnit_Sam_M_12.Width_Advance_01)
};

SUnit_Sam_M_13.River_Advance_Waypoints = {
	waypoint:new(SUnit_Sam_M_13.Pos_Advance_01, true, 0, SUnit_Sam_M_13.Orient_Advance_01, SUnit_Sam_M_13.Width_Advance_01)
};

SUnit_Sam_M_14.River_Advance_Waypoints = {
	waypoint:new(SUnit_Sam_M_14.Pos_Advance_01, true, 0, SUnit_Sam_M_14.Orient_Advance_01, SUnit_Sam_M_14.Width_Advance_01)
};

SUnit_Sam_M_15.River_Advance_Waypoints = {
	waypoint:new(SUnit_Sam_M_15.Pos_Advance_01, true, 0, SUnit_Sam_M_15.Orient_Advance_01, SUnit_Sam_M_15.Width_Advance_01)
};

SUnit_Sam_M_16.River_Advance_Waypoints = {
	waypoint:new(SUnit_Sam_M_16.Pos_Advance_01, true, 0, SUnit_Sam_M_16.Orient_Advance_01, SUnit_Sam_M_16.Width_Advance_01)
};

SUnit_Sam_M_17.River_Advance_Waypoints = {
	waypoint:new(SUnit_Sam_M_17.Pos_Advance_01, true, 0, SUnit_Sam_M_17.Orient_Advance_01, SUnit_Sam_M_17.Width_Advance_01)
};

SUnit_Sam_M_18.River_Advance_Waypoints = {
	waypoint:new(SUnit_Sam_M_18.Pos_Advance_01, true, 0, SUnit_Sam_M_18.Orient_Advance_01, SUnit_Sam_M_18.Width_Advance_01)
};

SUnit_Sam_M_19.River_Advance_Waypoints = {
	waypoint:new(SUnit_Sam_M_19.Pos_Advance_01, true, 0, SUnit_Sam_M_19.Orient_Advance_01, SUnit_Sam_M_19.Width_Advance_01)
};

SUnit_Sam_M_20.River_Advance_Waypoints = {
	waypoint:new(SUnit_Sam_M_20.Pos_Advance_01, true, 0, SUnit_Sam_M_20.Orient_Advance_01, SUnit_Sam_M_20.Width_Advance_01)
};

SUnit_Sam_M_21.River_Advance_Waypoints = {
	waypoint:new(SUnit_Sam_M_21.Pos_Advance_01, true, 0, SUnit_Sam_M_21.Orient_Advance_01, SUnit_Sam_M_21.Width_Advance_01)
};

SUnit_Sam_M_22.River_Advance_Waypoints = {
	waypoint:new(SUnit_Sam_M_22.Pos_Advance_01, true, 0, SUnit_Sam_M_22.Orient_Advance_01, SUnit_Sam_M_22.Width_Advance_01)
};

SUnit_Sam_M_23.River_Advance_Waypoints = {
	waypoint:new(SUnit_Sam_M_23.Pos_Advance_01, true, 0, SUnit_Sam_M_23.Orient_Advance_01, SUnit_Sam_M_23.Width_Advance_01)
};

SUnit_Sam_M_24.River_Advance_Waypoints = {
	waypoint:new(SUnit_Sam_M_24.Pos_Advance_01, true, 0, SUnit_Sam_M_24.Orient_Advance_01, SUnit_Sam_M_24.Width_Advance_01)
};

SUnit_Sam_M_25.River_Advance_Waypoints = {
	waypoint:new(SUnit_Sam_M_25.Pos_Advance_01, true, 0, SUnit_Sam_M_25.Orient_Advance_01, SUnit_Sam_M_25.Width_Advance_01)
};

SUnit_Sam_M_26.River_Advance_Waypoints = {
	waypoint:new(SUnit_Sam_M_26.Pos_Advance_01, true, 0, SUnit_Sam_M_26.Orient_Advance_01, SUnit_Sam_M_26.Width_Advance_01)
};

SUnit_Sam_M_27.River_Advance_Waypoints = {
	waypoint:new(SUnit_Sam_M_27.Pos_Advance_01, true, 0, SUnit_Sam_M_27.Orient_Advance_01, SUnit_Sam_M_27.Width_Advance_01)
};

SUnit_Sam_M_28.River_Advance_Waypoints = {
	waypoint:new(SUnit_Sam_M_28.Pos_Advance_01, true, 0, SUnit_Sam_M_28.Orient_Advance_01, SUnit_Sam_M_28.Width_Advance_01)
};

SUnit_Sam_M_29.River_Advance_Waypoints = {
	waypoint:new(SUnit_Sam_M_29.Pos_Advance_01, true, 0, SUnit_Sam_M_29.Orient_Advance_01, SUnit_Sam_M_29.Width_Advance_01)
};

SUnit_Sam_M_30.River_Advance_Waypoints = {
	waypoint:new(SUnit_Sam_M_30.Pos_Advance_01, true, 0, SUnit_Sam_M_30.Orient_Advance_01, SUnit_Sam_M_30.Width_Advance_01)
};


-- South bridge attackers
Samnite_City_Sunits_South = {
	SUnit_Sam_M_04,
	SUnit_Sam_M_07,
	SUnit_Sam_M_11,
	SUnit_Sam_M_12,
	SUnit_Sam_M_16,
	SUnit_Sam_M_19,
	SUnit_Sam_M_20,
	SUnit_Sam_M_26,
	SUnit_Sam_M_27
};

-- North bridge attackers
Samnite_City_Sunits_North = {
	SUnit_Sam_M_01,
	SUnit_Sam_M_02,
	SUnit_Sam_M_03,
	SUnit_Sam_M_05,
	SUnit_Sam_M_06,
	SUnit_Sam_M_08,
	SUnit_Sam_M_09,
	SUnit_Sam_M_10,
	SUnit_Sam_M_13,
	SUnit_Sam_M_14,
	SUnit_Sam_M_15,
	SUnit_Sam_M_17,
	SUnit_Sam_M_18,
	SUnit_Sam_M_21,
	SUnit_Sam_M_22,
	SUnit_Sam_M_23,
	SUnit_Sam_M_24,
	SUnit_Sam_M_25,
	SUnit_Sam_M_28,
	SUnit_Sam_M_29,
	SUnit_Sam_M_30
};


function Populate_River_Advance_Callbacks(t, callback)
	for i = 1, #t do
		local current_sunit = t[i];
		current_sunit.River_Advance_Callback = callback;
	end;
end;



BOOL_River_Advance_Callbacks_Populated = false;

-- Start the Samnite advance from the hill to the river
function Start_Samnite_Advance_To_River()
	-- fill in the river advance callbacks if they're not already
	if not BOOL_River_Advance_Callbacks_Populated then
		BOOL_River_Advance_Callbacks_Populated = true;
		
		Populate_River_Advance_Callbacks(Samnite_City_Sunits_South, Samnite_Unit_At_River_South);
		Populate_River_Advance_Callbacks(Samnite_City_Sunits_North, Samnite_Unit_At_River_North);
	end;


	-- clean up any previous advances, as this function can be called multiple times
	bm:remove_process("Samnite_Advance_To_River");
	
	bm:out("Start_Samnite_Advance_To_River() called");
	
	for i = 1, #Samnite_City_Sunits do
		-- teleport all the attackers back to their start locations
		local current_sunit = Samnite_City_Sunits[i];
		current_sunit:teleport_to_start_location();
		
		current_sunit.PM_Advance_To_River = patrol_manager:new(current_sunit.name .. "_Advance_To_River", current_sunit, Alliance_Rom:armies(), 0);
		current_sunit.PM_Advance_To_River:set_completion_callback(current_sunit.River_Advance_Callback);
	
		-- build their list of waypoints
		for i = 1, #current_sunit.River_Advance_Waypoints do
			local current_wp = current_sunit.River_Advance_Waypoints[i];
			current_sunit.PM_Advance_To_River:add_waypoint(current_wp.pos, current_wp.speed, current_wp.wait_time, current_wp.orient, current_wp.width);
		end;
		
		-- wait if there's a delay programmed in, otherwise go immediately
		if current_sunit.Advance_River_Delay then
			bm:callback(function() current_sunit.PM_Advance_To_River:start() end, current_sunit.Advance_River_Delay, "Samnite_Advance_To_River");
		else
			current_sunit.PM_Advance_To_River:start();
		end;
	end;
end;






--
--	Samnite attack across bridge into town
--

Pos_Samnite_Town_Attack_North_Bridge = v(-14, -414);
Pos_Samnite_Town_Attack_Mid_Bridge = v(10, -495);
Pos_Samnite_Town_Attack_South_Bridge = v(19, -520);

SUnit_Sam_M_19.WP_List_Attack_Bridge_01 = {waypoint:new(Pos_Samnite_Town_Attack_South_Bridge, true)};
SUnit_Sam_M_20.WP_List_Attack_Bridge_01 = {waypoint:new(Pos_Samnite_Town_Attack_South_Bridge, true)};

SUnit_Sam_M_08.WP_List_Attack_Bridge_01 = {waypoint:new(Pos_Samnite_Town_Attack_Mid_Bridge, true)};
SUnit_Sam_M_09.WP_List_Attack_Bridge_01 = {waypoint:new(Pos_Samnite_Town_Attack_Mid_Bridge, true)};

SUnit_Sam_M_10.WP_List_Attack_Bridge_01 = {waypoint:new(Pos_Samnite_Town_Attack_North_Bridge, true)};
SUnit_Sam_M_22.WP_List_Attack_Bridge_01 = {waypoint:new(Pos_Samnite_Town_Attack_North_Bridge, true)};















--
-- Roman town response
--

POS_Bridge_Combat_South = v(56, -497);
POS_Bridge_Combat_Mid = v(52, -488);
POS_Bridge_Combat_North = v(7, -384);


-- north bridge melee
SUnit_Rom_T_02.WP_Defence_Bridge_01 = waypoint:new(POS_Bridge_Combat_North, false, -1, r_to_d(0.73), 8.2);	-- for checkpoint teleport later
SUnit_Rom_T_02.PM_Defence_Bridge_01 = patrol_manager:new("Rom_T_02_Defence_Bridge_01", SUnit_Rom_T_02, Alliance_Sam:armies(), 80);
SUnit_Rom_T_02.PM_Defence_Bridge_01:set_intercept_time(45000);
SUnit_Rom_T_02.PM_Defence_Bridge_01:add_waypoint(SUnit_Rom_T_02.start_position, true, -1, SUnit_Rom_T_02.start_bearing, SUnit_Rom_T_02.start_width);

-- north bridge ranged
SUnit_Rom_T_09.WP_Defence_Bridge_01 = waypoint:new(v(-14.1, -439.7), true, 0, r_to_d(1.13), 59.07);
SUnit_Rom_T_09.PM_Defence_Bridge_01 = patrol_manager:new("Rom_T_09_Defence_Bridge_01", SUnit_Rom_T_09, Alliance_Sam:armies(), 0);
SUnit_Rom_T_09.PM_Defence_Bridge_01:add_waypoint(SUnit_Rom_T_09.WP_Defence_Bridge_01);

-- mid bridge melee
SUnit_Rom_T_16.WP_Defence_Bridge_01 = waypoint:new(POS_Bridge_Combat_Mid, false, -1, r_to_d(1.45), 8.3);	-- for checkpoint teleport later
SUnit_Rom_T_16.PM_Defence_Bridge_01 = patrol_manager:new("Rom_T_16_Defence_Bridge_01", SUnit_Rom_T_16, Alliance_Sam:armies(), 75);
SUnit_Rom_T_16.PM_Defence_Bridge_01:set_intercept_time(45000);
SUnit_Rom_T_16.PM_Defence_Bridge_01:add_waypoint(SUnit_Rom_T_16.start_position, true, -1, SUnit_Rom_T_16.start_bearing, SUnit_Rom_T_16.start_width);

-- south bridge melee
SUnit_Rom_T_05.WP_Defence_Bridge_01 = waypoint:new(POS_Bridge_Combat_South, false, -1, r_to_d(1.52), 8.5);	-- for checkpoint teleport later
SUnit_Rom_T_05.PM_Defence_Bridge_01 = patrol_manager:new("Rom_T_05_Defence_Bridge_01", SUnit_Rom_T_05, Alliance_Sam:armies(), 50);
SUnit_Rom_T_05.PM_Defence_Bridge_01:set_intercept_time(45000);
SUnit_Rom_T_05.PM_Defence_Bridge_01:add_waypoint(SUnit_Rom_T_05.start_position, true, -1, SUnit_Rom_T_05.start_bearing, SUnit_Rom_T_05.start_width);


-- south bridge ranged
SUnit_Rom_T_10.WP_Defence_Bridge_01 = waypoint:new(v(22.4, -550.5), true, 0, r_to_d(1.01), 37.05);
SUnit_Rom_T_10.PM_Defence_Bridge_01 = patrol_manager:new("Rom_T_10_Defence_Bridge_01", SUnit_Rom_T_10, Alliance_Sam:armies(), 0);
SUnit_Rom_T_10.PM_Defence_Bridge_01:add_waypoint(SUnit_Rom_T_10.WP_Defence_Bridge_01);














--
-- Roman town defence 01
--

AI_Roman_Town_Defence_N_Victory_Point = Alliance_Rom:create_ai_unit_planner();
AI_Roman_Town_Defence_NW_Gate = Alliance_Rom:create_ai_unit_planner();
AI_Roman_Town_Defence_M_Victory_Point = Alliance_Rom:create_ai_unit_planner();
AI_Roman_Town_Defence_NW_Victory_Point = Alliance_Rom:create_ai_unit_planner();
AI_Roman_Town_Defence_S_Breach = Alliance_Rom:create_ai_unit_planner();
AI_Roman_Town_Defence_M_Gate = Alliance_Rom:create_ai_unit_planner();


POS_N_Victory_Point = v(-255, -390);
POS_NE_Gate = v(-275, -500);
POS_M_Victory_Point = v(-334, -644);
POS_NW_Victory_Point = v(-380, -465);
-- POS_S_Breach = v(-158, -775);
POS_S_Breach = v(-115, -630);
POS_M_Gate = v(-130, -568);



-- send a unit to a position with a patrol manager, and then 
function Send_Unit_To_Defend_Position(sunit, pos, enemy_alliance, ai_planner, range)
	sunit.pm_send_unit_to_defend_position = patrol_manager:new(sunit.name .. "_send_unit_to_defend_position", sunit, enemy_alliance:armies(), 20);
	sunit.pm_send_unit_to_defend_position:set_completion_callback(
		function()
			bm:out(sunit.name .. " has moved into position, starting defence");
			ai_planner:add_units(sunit.unit);
			ai_planner:defend_position(pos, range);
		end
	);
	sunit.pm_send_unit_to_defend_position:add_waypoint(pos, true);
	sunit.pm_send_unit_to_defend_position:start();
end;



function SUnit_Rom_T_01.Town_Defence_Action_01()
	Send_Unit_To_Defend_Position(SUnit_Rom_T_01, POS_M_Victory_Point, Alliance_Sam, AI_Roman_Town_Defence_M_Victory_Point, 80);
end;

function SUnit_Rom_T_02.Town_Defence_Action_01()
	SUnit_Rom_T_02.uc:release_control();		-- failsafe, should be routing
end;

function SUnit_Rom_T_03.Town_Defence_Action_01()
	Send_Unit_To_Defend_Position(SUnit_Rom_T_03, POS_NE_Gate, Alliance_Sam, AI_Roman_Town_Defence_NW_Gate, 100);
end;

function SUnit_Rom_T_04.Town_Defence_Action_01()
	Send_Unit_To_Defend_Position(SUnit_Rom_T_04, POS_NE_Gate, Alliance_Sam, AI_Roman_Town_Defence_NW_Gate, 100);
end;

function SUnit_Rom_T_05.Town_Defence_Action_01()
	SUnit_Rom_T_05.uc:release_control();		-- failsafe, should be routing
end;

function SUnit_Rom_T_06.Town_Defence_Action_01()
	Send_Unit_To_Defend_Position(SUnit_Rom_T_06, POS_M_Gate, Alliance_Sam, AI_Roman_Town_Defence_M_Gate, 50);
end;

function SUnit_Rom_T_07.Town_Defence_Action_01()	
	Send_Unit_To_Defend_Position(SUnit_Rom_T_07, POS_S_Breach, Alliance_Sam, AI_Roman_Town_Defence_S_Breach, 100);
end;

function SUnit_Rom_T_08.Town_Defence_Action_01()
	Send_Unit_To_Defend_Position(SUnit_Rom_T_08, POS_N_Victory_Point, Alliance_Sam, AI_Roman_Town_Defence_N_Victory_Point, 100);
end;

function SUnit_Rom_T_09.Town_Defence_Action_01()
	SUnit_Rom_T_09.PM_Defence_Bridge_01:stop();
	SUnit_Rom_T_09.uc:take_control();
	SUnit_Rom_T_09.uc:occupy_zone(v(-226, -500), true);
end;

function SUnit_Rom_T_10.Town_Defence_Action_01()
	SUnit_Rom_T_10.PM_Defence_Bridge_01:stop();
	SUnit_Rom_T_10.uc:take_control();
	SUnit_Rom_T_10.uc:occupy_zone(v(-155, -630), true);
end;

function SUnit_Rom_T_11.Town_Defence_Action_01()
	Send_Unit_To_Defend_Position(SUnit_Rom_T_11, POS_N_Victory_Point, Alliance_Sam, AI_Roman_Town_Defence_N_Victory_Point, 100);
end;
--
function SUnit_Rom_T_12.Town_Defence_Action_01()
	Send_Unit_To_Defend_Position(SUnit_Rom_T_12, POS_N_Victory_Point, Alliance_Sam, AI_Roman_Town_Defence_N_Victory_Point, 100);
end;

function SUnit_Rom_T_13.Town_Defence_Action_01()
	Send_Unit_To_Defend_Position(SUnit_Rom_T_13, POS_M_Victory_Point, Alliance_Sam, AI_Roman_Town_Defence_M_Victory_Point, 80);
end;

function SUnit_Rom_T_14.Town_Defence_Action_01()
	Send_Unit_To_Defend_Position(SUnit_Rom_T_14, POS_NW_Victory_Point, Alliance_Sam, AI_Roman_Town_Defence_NW_Victory_Point, 50);
end;

function SUnit_Rom_T_15.Town_Defence_Action_01()
	Send_Unit_To_Defend_Position(SUnit_Rom_T_15, POS_N_Victory_Point, Alliance_Sam, AI_Roman_Town_Defence_N_Victory_Point, 100);
end;

function SUnit_Rom_T_16.Town_Defence_Action_01()
	SUnit_Rom_T_16.uc:release_control();		-- failsafe, should be routing
end;

function SUnit_Rom_T_17.Town_Defence_Action_01()
	Send_Unit_To_Defend_Position(SUnit_Rom_T_17, POS_M_Gate, Alliance_Sam, AI_Roman_Town_Defence_M_Gate, 75);
end;

function SUnit_Rom_T_18.Town_Defence_Action_01()
	Send_Unit_To_Defend_Position(SUnit_Rom_T_18, POS_S_Breach, Alliance_Sam, AI_Roman_Town_Defence_S_Breach, 100);
end;

function SUnit_Rom_T_19.Town_Defence_Action_01()
	-- do nothing, slingers are already on the walls
end;

function SUnit_Rom_T_20.Town_Defence_Action_01()
	-- do nothing, slingers are already on the walls
end;

























--
--	SAMNITE CITY ATTACK (WITH SAI GROUPS)
--



SUnits_Sam_City_01 = {};		-- leading attack on NW Gate/Victory Point	
SUnits_Sam_City_02 = {};		-- welcoming committee for player
SUnits_Sam_City_03 = {};		-- following attack on N Victory Point	
SUnits_Sam_City_04 = {};		-- ranged, hangs around bridgehead
SUnits_Sam_City_05 = {};		-- attacks through M gate	
SUnits_Sam_City_06 = {};		-- attack on S Breach	



table.insert(SUnits_Sam_City_05, SUnit_Sam_M_01);
table.insert(SUnits_Sam_City_02, SUnit_Sam_M_02);
table.insert(SUnits_Sam_City_02, SUnit_Sam_M_03);
table.insert(SUnits_Sam_City_06, SUnit_Sam_M_04);
table.insert(SUnits_Sam_City_05, SUnit_Sam_M_05);
table.insert(SUnits_Sam_City_05, SUnit_Sam_M_06);
table.insert(SUnits_Sam_City_06, SUnit_Sam_M_07);
table.insert(SUnits_Sam_City_06, SUnit_Sam_M_08);
table.insert(SUnits_Sam_City_06, SUnit_Sam_M_09);
table.insert(SUnits_Sam_City_01, SUnit_Sam_M_10);
table.insert(SUnits_Sam_City_06, SUnit_Sam_M_11);
table.insert(SUnits_Sam_City_06, SUnit_Sam_M_12);
table.insert(SUnits_Sam_City_05, SUnit_Sam_M_13);
table.insert(SUnits_Sam_City_03, SUnit_Sam_M_14);
table.insert(SUnits_Sam_City_02, SUnit_Sam_M_15);
table.insert(SUnits_Sam_City_04, SUnit_Sam_M_16);
table.insert(SUnits_Sam_City_05, SUnit_Sam_M_17);
table.insert(SUnits_Sam_City_04, SUnit_Sam_M_18);
table.insert(SUnits_Sam_City_06, SUnit_Sam_M_19);
table.insert(SUnits_Sam_City_06, SUnit_Sam_M_20);
table.insert(SUnits_Sam_City_05, SUnit_Sam_M_21);
table.insert(SUnits_Sam_City_01, SUnit_Sam_M_22);
table.insert(SUnits_Sam_City_03, SUnit_Sam_M_23);
table.insert(SUnits_Sam_City_03, SUnit_Sam_M_24);
table.insert(SUnits_Sam_City_03, SUnit_Sam_M_25);
table.insert(SUnits_Sam_City_06, SUnit_Sam_M_26);
table.insert(SUnits_Sam_City_06, SUnit_Sam_M_27);
table.insert(SUnits_Sam_City_05, SUnit_Sam_M_28);
table.insert(SUnits_Sam_City_03, SUnit_Sam_M_29);
table.insert(SUnits_Sam_City_03, SUnit_Sam_M_30);



function Start_Samnite_SAI_Attack_On_City()
	bm:out("Start_Samnite_SAI_Attack_On_City() called");

	SAI_Sam_City_01 = script_ai_planner:new("SAI_Sam_City_01", SUnits_Sam_City_01);
	SAI_Sam_City_02 = script_ai_planner:new("SAI_Sam_City_02", SUnits_Sam_City_02);
	SAI_Sam_City_03 = script_ai_planner:new("SAI_Sam_City_03", SUnits_Sam_City_03);
	SAI_Sam_City_04 = script_ai_planner:new("SAI_Sam_City_04", SUnits_Sam_City_04);
	SAI_Sam_City_05 = script_ai_planner:new("SAI_Sam_City_05", SUnits_Sam_City_05);
	SAI_Sam_City_06 = script_ai_planner:new("SAI_Sam_City_06", SUnits_Sam_City_06);
	
	SAI_Sam_City_01:set_debug();
	SAI_Sam_City_02:set_debug();
	SAI_Sam_City_03:set_debug();
	SAI_Sam_City_04:set_debug();
	SAI_Sam_City_05:set_debug();
	SAI_Sam_City_06:set_debug();
	
	SAI_Sam_City_01:set_perform_patrol_prox_test(false);
	SAI_Sam_City_02:set_perform_patrol_prox_test(false);
	SAI_Sam_City_03:set_perform_patrol_prox_test(false);
	SAI_Sam_City_04:set_perform_patrol_prox_test(false);
	SAI_Sam_City_05:set_perform_patrol_prox_test(false);
	SAI_Sam_City_06:set_perform_patrol_prox_test(false);

	SAI_Sam_City_01:patrol({POS_NE_Gate, POS_NW_Victory_Point, POS_M_Victory_Point, POS_N_Victory_Point}, All_Roman_City_SUnits);
	
	-- wait at the opposite bridgehead for the player to advance
	SAI_Sam_City_02:defend_position(v(70, -260), 75);
	SAI_Sam_City_03:defend_position(v(140, -380), 100);	
	SAI_Sam_City_04:defend_position(v(-85, -425), 100);
	SAI_Sam_City_05:defend_position(v(140, -380), 100);
	
	bm:callback(function() SAI_Sam_City_06:patrol({POS_S_Breach, POS_M_Victory_Point, POS_N_Victory_Point, POS_NW_Victory_Point}, All_Roman_City_SUnits) end, 10000);
end;

























--
--	Player's units teleport to City Attack start position
--
SUnit_Rom_01.Pos_City_Attack_Pre_Start = v(1.98916,33.3713)
SUnit_Rom_01.Orient_City_Attack_Pre_Start = r_to_d(-2.80488)
SUnit_Rom_01.Width_City_Attack_Pre_Start = 13.1481

SUnit_Rom_02.Pos_City_Attack_Pre_Start = v(-13.2131,35.9356)
SUnit_Rom_02.Orient_City_Attack_Pre_Start = r_to_d(-2.83585)
SUnit_Rom_02.Width_City_Attack_Pre_Start = 13.4661

SUnit_Rom_03.Pos_City_Attack_Pre_Start = v(31.2641,19.8472)
SUnit_Rom_03.Orient_City_Attack_Pre_Start = r_to_d(-2.8301)
SUnit_Rom_03.Width_City_Attack_Pre_Start = 14.4462

SUnit_Rom_04.Pos_City_Attack_Pre_Start = v(16.0537,25.1411)
SUnit_Rom_04.Orient_City_Attack_Pre_Start = r_to_d(-2.82147)
SUnit_Rom_04.Width_City_Attack_Pre_Start = 14.4372

SUnit_Rom_05.Pos_City_Attack_Pre_Start = v(-27.3281,40.7951)
SUnit_Rom_05.Orient_City_Attack_Pre_Start = r_to_d(-2.80498)
SUnit_Rom_05.Width_City_Attack_Pre_Start = 13.6756

SUnit_Rom_06.Pos_City_Attack_Pre_Start = v(-21.0171,53.0547)
SUnit_Rom_06.Orient_City_Attack_Pre_Start = r_to_d(-2.82483)
SUnit_Rom_06.Width_City_Attack_Pre_Start = 37.5058

SUnit_Rom_07.Pos_City_Attack_Pre_Start = v(31.943,35.9689)
SUnit_Rom_07.Orient_City_Attack_Pre_Start = r_to_d(-2.83115)
SUnit_Rom_07.Width_City_Attack_Pre_Start = 37.8845



SUnit_Rom_01.Pos_City_Attack_Start = v(-2.66339,18.9003)
SUnit_Rom_01.Orient_City_Attack_Start = r_to_d(-2.77919)
SUnit_Rom_01.Width_City_Attack_Start = 13.1055

SUnit_Rom_02.Pos_City_Attack_Start = v(-17.7629,21.9364)
SUnit_Rom_02.Orient_City_Attack_Start = r_to_d(-2.79865)
SUnit_Rom_02.Width_City_Attack_Start = 13.5053

SUnit_Rom_03.Pos_City_Attack_Start = v(26.1497,4.37994)
SUnit_Rom_03.Orient_City_Attack_Start = r_to_d(-2.78906)
SUnit_Rom_03.Width_City_Attack_Start = 14.4546

SUnit_Rom_04.Pos_City_Attack_Start = v(11.114,10.147)
SUnit_Rom_04.Orient_City_Attack_Start = r_to_d(-2.77679)
SUnit_Rom_04.Width_City_Attack_Start = 14.4036

SUnit_Rom_05.Pos_City_Attack_Start = v(-31.7551,27.2303)
SUnit_Rom_05.Orient_City_Attack_Start = r_to_d(-2.78494)
SUnit_Rom_05.Width_City_Attack_Start = 13.5869

SUnit_Rom_06.Pos_City_Attack_Start = v(-25.0047,39.2487)
SUnit_Rom_06.Orient_City_Attack_Start = r_to_d(-2.79712)
SUnit_Rom_06.Width_City_Attack_Start = 37.5027

SUnit_Rom_07.Pos_City_Attack_Start = v(27.3637,20.4949)
SUnit_Rom_07.Orient_City_Attack_Start = r_to_d(-2.80009)
SUnit_Rom_07.Width_City_Attack_Start = 37.8149


function Teleport_Rom_Army_City_Attack_Pre_Start()
	for i = 1, #Player_Sunits do
		local current_sunit = Player_Sunits[i];
				
		current_sunit.uc:teleport_to_location(current_sunit.Pos_City_Attack_Pre_Start, current_sunit.Orient_City_Attack_Pre_Start, current_sunit.Width_City_Attack_Pre_Start);
	end;
end;


function Move_Rom_Army_City_Attack_Pre_Start()
	for i = 1, #Player_Sunits do
		local current_sunit = Player_Sunits[i];
		
		current_sunit.uc:goto_location_angle_width(current_sunit.Pos_City_Attack_Start, current_sunit.Orient_City_Attack_Start, current_sunit.Width_City_Attack_Start, true);
	end;
end;


function Teleport_Rom_Army_City_Attack_Start()
	for i = 1, #Player_Sunits do
		local current_sunit = Player_Sunits[i];
				
		current_sunit.uc:teleport_to_location(current_sunit.Pos_City_Attack_Start, current_sunit.Orient_City_Attack_Start, current_sunit.Width_City_Attack_Start);
	end;
end;










--
--	Samnite units teleport to City Attack start position
--

SUnit_Sam_M_04.WP_City_Attack_Start = waypoint:new(POS_Bridge_Combat_South, false, -1, r_to_d(-1.6), 8.1);
SUnit_Sam_M_07.WP_City_Attack_Start = waypoint:new(POS_Bridge_Combat_South, false, -1, r_to_d(-1.6), 8.1);

SUnit_Sam_M_08.WP_City_Attack_Start = waypoint:new(POS_Bridge_Combat_Mid, false, -1, r_to_d(-1.62), 8.1);
SUnit_Sam_M_09.WP_City_Attack_Start = waypoint:new(POS_Bridge_Combat_Mid, false, -1, r_to_d(-1.62), 8.1);

SUnit_Sam_M_10.WP_City_Attack_Start = waypoint:new(POS_Bridge_Combat_North, false, -1, r_to_d(-2.46), 8.1);
SUnit_Sam_M_22.WP_City_Attack_Start = waypoint:new(POS_Bridge_Combat_North, false, -1, r_to_d(-2.46), 8.1);


















--
-- Roman/Lucanian allies
--

POS_Bridgehead_Ford = v(-105, -140);
POS_Bridgehead_North = v(60, -343);
POS_Bridgehead_South_A = v(140, -471);
POS_Bridgehead_South_B = v(120, -440);

SUnit_Rom_R_01.Pos_Reinforcement_Start = v(413.214,-204.291)
SUnit_Rom_R_01.Orient_Reinforcement_Start = r_to_d(-2.20864)
SUnit_Rom_R_01.Width_Reinforcement_Start = 19.2542

SUnit_Rom_R_02.Pos_Reinforcement_Start = v(405.546,-186.135)
SUnit_Rom_R_02.Orient_Reinforcement_Start = r_to_d(-2.19455)
SUnit_Rom_R_02.Width_Reinforcement_Start = 19.3594

SUnit_Rom_R_03.Pos_Reinforcement_Start = v(395.815,-170.258)
SUnit_Rom_R_03.Orient_Reinforcement_Start = r_to_d(-2.21478)
SUnit_Rom_R_03.Width_Reinforcement_Start = 19.557

SUnit_Rom_R_04.Pos_Reinforcement_Start = v(387.113,-153.394)
SUnit_Rom_R_04.Orient_Reinforcement_Start = r_to_d(-2.16291)
SUnit_Rom_R_04.Width_Reinforcement_Start = 19.3267

SUnit_Rom_R_05.Pos_Reinforcement_Start = v(379.233,-135.395)
SUnit_Rom_R_05.Orient_Reinforcement_Start = r_to_d(-2.20097)
SUnit_Rom_R_05.Width_Reinforcement_Start = 19.4252

SUnit_Rom_R_06.Pos_Reinforcement_Start = v(368.117,-120.019)
SUnit_Rom_R_06.Orient_Reinforcement_Start = r_to_d(-2.19302)
SUnit_Rom_R_06.Width_Reinforcement_Start = 19.4885

SUnit_Rom_R_11.Pos_Reinforcement_Start = v(355.114,-105.5)
SUnit_Rom_R_11.Orient_Reinforcement_Start = r_to_d(-2.17365)
SUnit_Rom_R_11.Width_Reinforcement_Start = 19.1955

SUnit_Rom_R_12.Pos_Reinforcement_Start = v(341.236,-91.6981)
SUnit_Rom_R_12.Orient_Reinforcement_Start = r_to_d(-2.22533)
SUnit_Rom_R_12.Width_Reinforcement_Start = 19.1441

SUnit_Rom_R_13.Pos_Reinforcement_Start = v(327.824,-78.534)
SUnit_Rom_R_13.Orient_Reinforcement_Start = r_to_d(-2.11593)
SUnit_Rom_R_13.Width_Reinforcement_Start = 19.4969

SUnit_Rom_R_14.Pos_Reinforcement_Start = v(311.561,-67.3708)
SUnit_Rom_R_14.Orient_Reinforcement_Start = r_to_d(-2.20932)
SUnit_Rom_R_14.Width_Reinforcement_Start = 19.4914

SUnit_Rom_R_01.Pos_Reinforcement_Walkon = v(399.539,-214.425)
SUnit_Rom_R_01.Orient_Reinforcement_Walkon = r_to_d(-2.22293)
SUnit_Rom_R_01.Width_Reinforcement_Walkon = 19.2545

SUnit_Rom_R_02.Pos_Reinforcement_Walkon = v(387.447,-199.307)
SUnit_Rom_R_02.Orient_Reinforcement_Walkon = r_to_d(-2.20864)
SUnit_Rom_R_02.Width_Reinforcement_Walkon = 19.3607

SUnit_Rom_R_03.Pos_Reinforcement_Walkon = v(381.655,-180.64)
SUnit_Rom_R_03.Orient_Reinforcement_Walkon = r_to_d(-2.22945)
SUnit_Rom_R_03.Width_Reinforcement_Walkon = 19.5641

SUnit_Rom_R_04.Pos_Reinforcement_Walkon = v(370.971,-163.472)
SUnit_Rom_R_04.Orient_Reinforcement_Walkon = r_to_d(-2.23443)
SUnit_Rom_R_04.Width_Reinforcement_Walkon = 19.3246

SUnit_Rom_R_05.Pos_Reinforcement_Walkon = v(362.08,-146.275)
SUnit_Rom_R_05.Orient_Reinforcement_Walkon = r_to_d(-2.2561)
SUnit_Rom_R_05.Width_Reinforcement_Walkon = 19.4247

SUnit_Rom_R_06.Pos_Reinforcement_Walkon = v(353.512,-129.5)
SUnit_Rom_R_06.Orient_Reinforcement_Walkon = r_to_d(-2.23961)
SUnit_Rom_R_06.Width_Reinforcement_Walkon = 19.4969

SUnit_Rom_R_11.Pos_Reinforcement_Walkon = v(337.171,-118.196)
SUnit_Rom_R_11.Orient_Reinforcement_Walkon = r_to_d(-2.19714)
SUnit_Rom_R_11.Width_Reinforcement_Walkon = 19.199

SUnit_Rom_R_12.Pos_Reinforcement_Walkon = v(323.916,-103.97)
SUnit_Rom_R_12.Orient_Reinforcement_Walkon = r_to_d(-2.26233)
SUnit_Rom_R_12.Width_Reinforcement_Walkon = 19.1456

SUnit_Rom_R_13.Pos_Reinforcement_Walkon = v(311.537,-90.994)
SUnit_Rom_R_13.Orient_Reinforcement_Walkon = r_to_d(-2.23156)
SUnit_Rom_R_13.Width_Reinforcement_Walkon = 17.5021

SUnit_Rom_R_14.Pos_Reinforcement_Walkon = v(296.641,-79.5692)
SUnit_Rom_R_14.Orient_Reinforcement_Walkon = r_to_d(-2.30078)
SUnit_Rom_R_14.Width_Reinforcement_Walkon = 19.5303

SUnit_Rom_R_01.Pos_Charge = POS_Bridgehead_South_A;
SUnit_Rom_R_02.Pos_Charge = POS_Bridgehead_South_A;
SUnit_Rom_R_03.Pos_Charge = POS_Bridgehead_South_A;
SUnit_Rom_R_04.Pos_Charge = POS_Bridgehead_South_B;
SUnit_Rom_R_05.Pos_Charge = POS_Bridgehead_South_B;
SUnit_Rom_R_06.Pos_Charge = POS_Bridgehead_South_B;
SUnit_Rom_R_11.Pos_Charge = POS_Bridgehead_North;
SUnit_Rom_R_12.Pos_Charge = POS_Bridgehead_North;
SUnit_Rom_R_13.Pos_Charge = POS_Bridgehead_Ford;
SUnit_Rom_R_14.Pos_Charge = POS_Bridgehead_Ford;


--
-- Battle sounds
--

SFX_Rom_Pro_Capua_SI_Intro_02 = new_sfx("Play_Rom_Pro_Capua_SI_Intro_02_1");
SFX_Rom_Pro_Capua_SI_Intro_03 = new_sfx("Play_Rom_Pro_Capua_SI_Intro_03_1");
SFX_Rom_Pro_Capua_SI_Intro_04 = new_sfx("Play_Rom_Pro_Capua_SI_Intro_04_1");
SFX_Rom_Pro_Capua_SI_Intro_05 = new_sfx("Play_Rom_Pro_Capua_SI_Intro_05_1");
SFX_Rom_Pro_Capua_SI_Intro_06 = new_sfx("Play_Rom_Pro_Capua_SI_Intro_06_1");

SFX_Rom_Pro_Capua_Laenas_01 = new_sfx("Play_Rom_Pro_Capua_Leanas_01_1");

POS_Play_Sound = v(0,0);








C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\pa_prologue_capua\pa_main.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	MAIN BATTLE SCRIPT
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

startpos = STARTPOS_START;

BOOL_Skip_Camera_Objective = false;
BOOL_Skip_Village_Gameplay = false;
BOOL_Skip_To_Siege_Pos_Attack = false;
BOOL_Skip_To_City_Assault = false;

function Position_Roman_Slingers_On_Walls()
	SUnit_Rom_T_19.uc:occupy_zone(v(-202, -510));
	SUnit_Rom_T_20.uc:occupy_zone(v(-187, -552));
end;


-- called at start of deployment phase
function Deployment_Phase()
	bm:out("Battle is in deployment phase");
	
	bm:enable_cinematic_camera(true);
	cam:move_to(POS_Cam_First_Frame, POS_Targ_First_Frame, 0, true, 60);
	
	-- don't close the advisor after messages have finished playing
	bm:dont_close_queue_advice();
	
	-- where should battle start
	startpos = Where_Should_Battle_Start();
	
	Position_Roman_Slingers_On_Walls();
		
	-- hide Roman reinforcements
	Hide_Units(UC_Rom_04_All);
	Hide_Units(UC_Rom_05_All);
	
	-- make Start Battle button invisible
	UIComponent(bm:ui_component("finish_deployment")):SetVisible(false);
	
	-- put the camera at the first frame
	-- cam:move_to(POS_Cam_First_Frame, POS_Targ_First_Frame, 0, true, FOV_First_Frame);
		
	-- listen for loading screen being dismissed
	local uic = UIComponent(bm:ui_component("prologue"));
	
	if uic and uic:Visible() and uic:CurrentAnimationId() == "" then
		bm:out("Prologue loading screen is visible, waiting for it to be dismissed ...");
		eh:add_listener(
			"Loading_Screen_Dismissed",
			"LoadingScreenDismissed",
			true,
			function()
				bm:remove_process("loading_screen_watch");
				bm:end_current_battle_phase();
			end,
			false
		);
	else
		bm:out("Prologue loading screen is not visible, continuing immediately");
		bm:end_current_battle_phase();
	end;
end;



-- end of deployment phase i.e. battle start
function End_Deployment_Phase()
	Clear_Subtitles();

	if startpos == STARTPOS_START then
		bm:out("Initialising battle at beginning");
		Init_Battle();
		return;
	elseif startpos == STARTPOS_SIEGE_POSITION_ATTACK then
		bm:out("Initialising battle post-village");
		Init_Siege_Position_Attack();
		return;
	elseif startpos == STARTPOS_CITY_ATTACK then
		bm:out("Initialising battle post-siege position");
		Init_City_Attack();
		return;
	end;
	
	bm:out("Couldn't determine startpos " .. tostring(startpos) .. ", initialising at beginning");
	Init_Battle();
end;


-- determine whether we should start at the beginning or jump forwards
function Where_Should_Battle_Start()
	if BOOL_Skip_To_City_Assault then
		return STARTPOS_CITY_ATTACK;
	elseif BOOL_Skip_To_Siege_Pos_Attack then
		return STARTPOS_SIEGE_POSITION_ATTACK;
	else
		return STARTPOS_START;
	end;
end;





-- instantly loses the battle for the player
function Lose_Battle()
	Show_Units(UC_Rom_01_All);
	Show_Units(UC_Rom_02_All);
	Show_Units(UC_Rom_03_All);
	Show_Units(UC_Rom_04_All);
	Show_Units(UC_Rom_05_All);
		
	UC_Rom_01_All:morale_behavior_rout();
	UC_Rom_02_All:morale_behavior_rout();
	UC_Rom_03_All:morale_behavior_rout();
	UC_Rom_04_All:morale_behavior_rout();
	UC_Rom_05_All:morale_behavior_rout();
	
	bm:end_battle();
end;






BOOL_Battle_Is_Ending = false;

-- the game has gone to victory countdown phase, someone has won
function Battle_Is_Ending(reason)
	if not BOOL_Battle_Is_Ending then
		BOOL_Battle_Is_Ending = true;
					
		if is_routing_or_dead(Alliance_Rom) then	
			bm:out("Player has lost, army is routing");
							
			bm:callback(function() bm:end_battle() end, 10000);
		else
			bm:out("Player has won !");
			
			bm:callback(function() bm:end_battle() end, 10000);
		end;
	end;
end;






Samnite_Art_Targets = {
	{["targ"] = v(-130, -410), ["taken_by"] = nil},
	{["targ"] = v(-165, -332), ["taken_by"] = nil},
	{["targ"] = v(-210, -297), ["taken_by"] = nil},
	{["targ"] = v(-190, -310), ["taken_by"] = nil},
	{["targ"] = v(-220, -465), ["taken_by"] = nil},
	{["targ"] = v(-175, -543), ["taken_by"] = nil},
	{["targ"] = v(-270, -450), ["taken_by"] = nil},
	{["targ"] = v(-250, -460), ["taken_by"] = nil},
	{["targ"] = v(-305, -445), ["taken_by"] = nil},
	{["targ"] = v(-335, -410), ["taken_by"] = nil},
	{["targ"] = v(-320, -440), ["taken_by"] = nil},
	{["targ"] = v(-238, -300), ["taken_by"] = nil},
	{["targ"] = v(-193, -352), ["taken_by"] = nil}
};

Samnite_Art_Targets_Near_Town_Defenders = {
	{["targ"] = v(-80, -382), ["taken_by"] = nil},
	{["targ"] = v(-130, -410), ["taken_by"] = nil},
	{["targ"] = v(-165, -332), ["taken_by"] = nil},
	{["targ"] = v(-210, -297), ["taken_by"] = nil},
	{["targ"] = v(-190, -310), ["taken_by"] = nil},
	{["targ"] = v(-220, -465), ["taken_by"] = nil},
	{["targ"] = v(-175, -543), ["taken_by"] = nil},
	{["targ"] = v(-90, -415), ["taken_by"] = nil},
	{["targ"] = v(-68, -483), ["taken_by"] = nil},
	{["targ"] = v(-20, -452), ["taken_by"] = nil},
	{["targ"] = v(-62, -400), ["taken_by"] = nil},
	{["targ"] = v(-10, -473), ["taken_by"] = nil},
	{["targ"] = v(-270, -450), ["taken_by"] = nil},
	{["targ"] = v(-250, -460), ["taken_by"] = nil},
	{["targ"] = v(-305, -445), ["taken_by"] = nil},
	{["targ"] = v(-335, -410), ["taken_by"] = nil},
	{["targ"] = v(-320, -440), ["taken_by"] = nil},
	{["targ"] = v(-238, -300), ["taken_by"] = nil},
	{["targ"] = v(-193, -352), ["taken_by"] = nil},
	{["targ"] = v(-75, -515), ["taken_by"] = nil}
};




BOOL_Allow_Firing_Near_Town_Defenders = false;

function Start_Samnite_Artillery_Firing()
	-- stop this loop if siege engines are all routed
	if is_routing_or_dead(Samnite_Siege_Position_Engines) then
		bm:remove_process("Samnite_Artillery_Ammo_Watch");
		return;
	end;
	
	local target_list = Samnite_Art_Targets;
	
	if BOOL_Allow_Firing_Near_Town_Defenders then
		target_list = Samnite_Art_Targets_Near_Town_Defenders;
	end;
	
	for i = 1, #Samnite_Siege_Position_Engines do
		local current_engine = Samnite_Siege_Position_Engines[i];
				
		if not is_routing_or_dead(current_engine.unit) then
			local target_found = false;
			local random_target = -1;
		
			while not target_found do
				random_target = math.random(1, #target_list);
				
				if target_list[random_target].taken_by == nil then
					target_found = true;
				end;
			end;
			
			if current_engine.art_target then
				current_engine.art_target.taken_by = nil;
			end;
			current_engine.art_target = target_list[random_target];
			target_list[random_target].taken_by = current_engine;
		
			-- refresh ammo
			current_engine.unit:set_current_ammo_unary(1);
			
			current_engine.uc:halt();
			current_engine.uc:attack_location(current_engine.art_target.targ);
			
			bm:out(current_engine.name .. " now targeting " .. v_to_s(current_engine.art_target.targ));
		elseif current_engine.art_target.taken_by == current_engine then
			current_engine.art_target.taken_by = nil;
		end;
	end;
	
	bm:callback(function() Start_Samnite_Artillery_Firing() end, 45000, "Samnite_Artillery");
end;



function OnKeyPressed()
	bm:out("OnKeyPressed() called");
end;






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\pa_prologue_capua\pa_siege.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	SIEGE BATTLE SCRIPT
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

function Clean_Up_Skipped_Village_Attack()
	Add_Village_Units_To_Players_Army();
	
	-- disappear initial Roman village units
	for i = 1, #Allied_Village_Sunits do
		Disappear_Units(Allied_Village_Sunits[i]);
	end;
end;


function Init_Siege_Position_Attack()
	Clean_Up_Skipped_Village_Attack();
	
	Teleport_Village_Romans_To_Siege_Position_Attack();
	
	-- Samnite artillery
	Start_Samnite_Artillery_Firing();
	
	-- Samnite army invincible
	Set_Max_Casualties(Samnite_City_Sunits, 0.8);
		
	--bm:callback(function() Play_Siege_Attack_Intro_Cutscene() end, 200);
	Play_Siege_Attack_Intro_Cutscene();
end;


siege_position_timeout = 600000;

POS_Siege_Position_Forest_Approach_A = v(-270, -112);
POS_Siege_Position_Forest_Approach_B = v(-230, 225);

function Start_Siege_Position_Attack()
	bm:out("Start_Siege_Position_Attack() called");
	
	Show_Advisor_Dismiss_Button(true);
	
	-- hide control tabs (prevent player from accessing siege equipment)
	UIComponent(UIComponent(bm:ui_component("battle_orders")):Find("cf_land")):SetVisible(false);
	UIComponent(UIComponent(bm:ui_component("battle_orders")):Find("cf_buildings")):SetVisible(false);
	
	-- prevent players units from dying/set fire-at-will back on/
	for i = 1, #Player_Sunits do
		local current_sunit = Player_Sunits[i];
		current_sunit.uc:morale_behavior_fearless();
		current_sunit.uc:change_behaviour_active("fire_at_will", true);
		current_sunit.uc:change_fatigue_amount(0.2);
		unit_max_casualties(current_sunit, 0.75, true);
		
		cache_position(current_sunit);
		
		bm:watch(
			function() 
				return has_moved(current_sunit) 
			end, 
			2000, 
			function()
				bm:remove_process("Player_Starts_Moving_Towards_Siege_Position_Attack");
				add_infotext("Rom.Pro.Capua.Info.103", "Rom.Pro.Capua.Info.104");
			end,
			"Player_Starts_Moving_Towards_Siege_Position_Attack"
		);
		
		current_sunit.uc:release_control();
		
		bm:out("Releasing " .. current_sunit.name .. " to player");
	end;
	
	-- Roman army can't take colossal casualties
	Set_Max_Casualties(Roman_City_Sunits, 0.6);
	
	-- start Roman town response
	bm:callback(function() Start_Roman_Town_Defence_At_Bridge() end, 5000);
	
	-- start Samnite defence at siege position
	Start_Samnite_Siege_Position_Defence();
	
	-- startup infotext
	add_infotext("Rom.Pro.Capua.Info.100", "Rom.Pro.Capua.Info.101", "Rom.Pro.Capua.Info.102");
	
	-- show ping marker
	bm:add_ping_icon(68, 232, 30, 3, false);
		
	-- objective
	objectives:InterfaceFunction("set_objective", "Rom.Pro.Capua.Objective_06");
	
	-- watch for player crossing into forest
	bm:watch(
		function() return has_crossed_line(Player_Sunits, POS_Siege_Position_Forest_Approach_A, POS_Siege_Position_Forest_Approach_B, true) end, 
		0, 
		function() Player_Crosses_SP_First_Forest_Tripwire() end,
		"Siege_Position_Attack"
	);
	
	-- if all the units guarding the siege engines have routed and at least one of the siege engines also, rout the rest
	bm:watch(
		function() 
			return num_units_routing(Samnite_Siege_Position_Sunits) == #Samnite_Siege_Position_Sunits
				and num_units_routing(Samnite_Siege_Position_Engines) > 0
		end, 
		0, 
		function() 
			for i = 1, #Samnite_Siege_Position_Engines do
				Samnite_Siege_Position_Engines[i].uc:morale_behavior_rout();
			end;
		end, 
		"Siege_Position_Attack"
	);
	
	-- watch for siege-position units routing (player victory)
	bm:watch(
		function() 
			return num_units_routing(Samnite_Siege_Position_Engines) == #Samnite_Siege_Position_Engines 
		end, 
		0, 
		function() 
			Set_Up_Siege_Position_Captured() 
		end, 
		"Siege_Position_Attack"
	);
	
	-- watch for player wandering off or taking too long (player defeat)
	bm:watch(function() return Should_Player_Lose_Siege_Position() end, 0, function() Set_Up_Siege_Position_Failure() end, "Siege_Position_Failure_Watch");
	
	bm:callback(
		function()
			bm:out("Player has exceeded Siege Position timeout of " .. tostring(siege_position_timeout) .. "ms!"); 
			BOOL_Player_Taken_Too_Long_Siege_Position = true 
		end, 
		siege_position_timeout, 
		"Siege_Position_Failure_Watch"
	);
end;


function Should_Player_Lose_Siege_Position()
	if BOOL_Player_Taken_Too_Long_Siege_Position then
		return true;
	end;

	for i = 1, #Player_Sunits do
		local current_sunit = Player_Sunits[i];
			
		if not Area_SP_Attack:is_in_area(current_sunit.unit) and not is_routing_or_dead(current_sunit.unit) then
			bm:out("Found " .. current_sunit.name .. " outside Area_SP_Attack at " .. v_to_s(current_sunit.unit:position()) .. ", player will lose soon!");
		
			return true;
		end;
	end;
end;





function Siege_Position_Engines_Routing()
	for i = 1, #Samnite_Siege_Position_Engines do
		if not is_routing_or_dead(Samnite_Siege_Position_Engines[i]) then
			return false;
		end;
	end;
	
	return true;
end;



function Start_Roman_Town_Defence_At_Bridge()
	bm:out("Start_Roman_Town_Defence_At_Bridge() called");
	
	-- melee bridge defenders
	SUnit_Rom_T_02.PM_Defence_Bridge_01:start();
	SUnit_Rom_T_05.PM_Defence_Bridge_01:start();
	SUnit_Rom_T_16.PM_Defence_Bridge_01:start();
	
	-- ranged bridge defenders
	SUnit_Rom_T_09.PM_Defence_Bridge_01:start();
	bm:callback(function() SUnit_Rom_T_10.PM_Defence_Bridge_01:start() end, 3000);
end;


POS_Siege_Position_Forest_Mid_A = v(-230, -112);
POS_Siege_Position_Forest_Mid_B = v(-190, 225);



function Issue_SP_Forest_Advice()
	bm:out("Issue_SP_Forest_Advice() called");
	
	-- This forest will cover our approach if we move with care! The terrain is to our advantage!
	bm:queue_advisor("Rom.Pro.Capua.SI.102", 30000);
	
	-- infotext
	add_infotext(2, "Rom.Pro.Capua.Info.105", "Rom.Pro.Capua.Info.106", "Rom.Pro.Capua.Info.107", "Rom.Pro.Capua.Info.108", "Rom.Pro.Capua.Info.109");
end;


function Player_Crosses_SP_First_Forest_Tripwire()
	Issue_SP_Forest_Advice();

	-- watch for player approaching enemy units
	bm:watch(
		function() return Has_Player_Approached_SP_Defenders(160, 0.95) end,
		0,
		function() Player_Is_Approaching_SP_Defenders() end,
		"Siege_Position_Attack"
	);
end;




function Has_Player_Approached_SP_Defenders(distance, proportion)
	for i = 1, #Samnite_Siege_Position_All_Sunits do
		local current_sunit = Samnite_Siege_Position_All_Sunits[i];
		
		if is_close_to_position(Player_Sunits, current_sunit.unit:position(), distance) then
			bm:out("Has_Player_Approached_SP_Defenders:: Player is within threshold distance " .. tostring(distance) .. " of " .. current_sunit.name .. ", returning true");
			return true;
		end;
		
		if unit_proportion_alive(current_sunit.unit) < proportion then
			bm:out("Has_Player_Approached_SP_Defenders:: " .. current_sunit.name .. " has less than " .. tostring(proportion) .. " men alive, returning true");
			return true;
		end;
	end;
	
	return false;
end;


function Player_Is_Approaching_SP_Defenders()
	bm:out("Player_Is_Approaching_SP_Defenders() called");
	
	-- Our slingers can be placed upon the hill to rain fire upon the enemy below. Keep them out of the fray!
	bm:queue_advisor("Rom.Pro.Capua.AD.100", 15000);
	
	-- infotext
	add_infotext(2, "Rom.Pro.Capua.Info.110", "Rom.Pro.Capua.Info.111", "Rom.Pro.Capua.Info.112", "Rom.Pro.Capua.Info.113");
		
	-- watch for player closing right up on Samnites
	bm:watch(
		function() return Has_Player_Approached_SP_Defenders(140, 0.95) end,
		0,
		function() Player_Is_Upon_SP_Defenders() end,
		"Siege_Position_Attack"
	);
end;



function Player_Is_Upon_SP_Defenders()
	bm:out("Player_Is_Upon_SP_Defenders() called");
	
	bm:queue_advisor("Rom.Pro.Capua.SI.103", 10000);
	
	-- remove ping marker
	bm:remove_ping_icon(v(68, 232, 30));
	
	-- force the siege position defenders to attack
	bm:callback(function() SP_Defenders_Attack("Player has approached SP defenders") end, 3000);
end;



function SP_Defenders_Attack(reason)
	bm:out("SP_Defenders_Attack() called, reason is " .. tostring(reason));
	
	SAI_Sam_Siege_Pos_Defence:move_to_position_of_sunit(SUnit_Rom_01);
end;












function Start_Samnite_Siege_Position_Defence()
	bm:out("Start_Samnite_Siege_Position_Defence() called");
	
	SAI_Sam_Siege_Pos_Defence = script_ai_planner:new("SAI_Sam_Siege_Pos_Defence", Samnite_Siege_Position_Sunits);
	SAI_Sam_Siege_Pos_Defence:set_debug_all();
	SAI_Sam_Siege_Pos_Defence:defend_position(v(45, 50), 130);
end












--
-- Samnite Advance on town
--

Count_Samnite_Units_At_River_South = 0;
Count_Samnite_Units_At_River_North = 0;


function Samnite_Unit_At_River_South()
	Count_Samnite_Units_At_River_South = Count_Samnite_Units_At_River_South + 1;
	
	--bm:out("Samnite_Unit_At_River_South() called");
	
	if Count_Samnite_Units_At_River_South >= #Samnite_City_Sunits_South then
		Start_Samnite_Town_Attack_Bridge_South();
	end;
end;


function Samnite_Unit_At_River_North()
	Count_Samnite_Units_At_River_North = Count_Samnite_Units_At_River_North + 1;
	
	--bm:out("Samnite_Unit_At_River_North() called");
	
	if Count_Samnite_Units_At_River_North >= #Samnite_City_Sunits_North then
		Start_Samnite_Town_Attack_Bridge_North();
	end;
end;






function Start_Samnite_Town_Attack_Bridge_South()
	bm:out("Starting Samnite Town Attack Bridge South");
	
	Start_Samnite_Town_Attack(Samnite_City_Sunits_South);
end;


function Start_Samnite_Town_Attack_Bridge_North()
	bm:out("Starting Samnite Town Attack Bridge North");
	
	Start_Samnite_Town_Attack(Samnite_City_Sunits_North);
end;






function Start_Samnite_Town_Attack(t)
	for i = 1, #t do
		local current_sunit = t[i];
		
		current_sunit.PM_Attack_Bridge_01 = patrol_manager:new(current_sunit.name .. "_Attack_Bridge_01", current_sunit, Alliance_Rom:armies(), 75);
		
		if current_sunit.WP_List_Attack_Bridge_01 then
			for i = 1, #current_sunit.WP_List_Attack_Bridge_01 do
				local current_wp = current_sunit.WP_List_Attack_Bridge_01[i];
			
				current_sunit.PM_Attack_Bridge_01:add_waypoint(current_wp.pos, current_wp.speed, current_wp.wait_time, current_wp.orient, current_wp.width);		
			end;
		else
			current_sunit.PM_Attack_Bridge_01:add_waypoint(current_sunit.Pos_Advance_01, true, -1, current_sunit.Orient_Advance_01, current_sunit.Width_Advance_01);
		end;

		current_sunit.PM_Attack_Bridge_01:set_intercept_time(45000);
		current_sunit.PM_Attack_Bridge_01:start();
	end;
end;













function Set_Up_Siege_Position_Captured()
	bm:out("Set_Up_Siege_Position_Captured() called");
	
	bm:remove_process("Siege_Position_Failure");
	bm:remove_process("Siege_Position_Failure_Watch");
	bm:remove_process("Siege_Position_Attack");
		
	-- give the Roman bridge defenders a kicking so that hopefully they will rout
	SUnit_Rom_T_02.uc:morale_behavior_default();
	SUnit_Rom_T_05.uc:morale_behavior_default();
	SUnit_Rom_T_16.uc:morale_behavior_default();
	
	unit_max_casualties(SUnit_Rom_T_02, 0);
	unit_max_casualties(SUnit_Rom_T_05, 0);
	unit_max_casualties(SUnit_Rom_T_16, 0);
	
	kill_over_time(SUnit_Rom_T_02, 10, 0.5);
	kill_over_time(SUnit_Rom_T_05, 10, 0.5);
	kill_over_time(SUnit_Rom_T_16, 10, 0.5);
	
	-- objective completion
	objectives:InterfaceFunction("complete_objective", "Rom.Pro.Capua.Objective_06");
	
	bm:callback(function() Siege_Position_Captured() end, 10000);
end;


function Siege_Position_Captured()

	-- rout Romans on bridge
	SUnit_Rom_T_02.uc:morale_behavior_rout();
	SUnit_Rom_T_05.uc:morale_behavior_rout();
	SUnit_Rom_T_16.uc:morale_behavior_rout();
	
	-- halt Samnites on bridge, so they don't immediately surge forward
	do
		SUnit_Sam_M_05.PM_Attack_Bridge_01:stop();
		SUnit_Sam_M_06.PM_Attack_Bridge_01:stop();	
		SUnit_Sam_M_09.PM_Attack_Bridge_01:stop();
		SUnit_Sam_M_10.PM_Attack_Bridge_01:stop();
	
		SUnit_Sam_M_05.uc:halt();
		SUnit_Sam_M_06.uc:halt();
		SUnit_Sam_M_09.uc:halt();
		SUnit_Sam_M_10.uc:halt();
	end;
	
	-- rout Samnite Siege-Position defenders
	for i = 1, #Samnite_Siege_Position_Sunits do
		Samnite_Siege_Position_Sunits[i].uc:morale_behavior_rout();
	end;
	
	-- kill the siege engine combatants
	bm:callback(
		function()
			for i = 1, #Samnite_Siege_Position_Engines do
				Samnite_Siege_Position_Engines[i].uc:morale_behavior_rout();
			end;
		end,
		1000
	);
	
	-- army movements
	Battle_Moves_Into_Town();
	
	-- launch Romans-falling-back cutscene
	Play_Cutscene_Bridge_Retreat();
end;







-- Battle loss
-- The player has been naughty so we tell the onagers to target the Consul, 
-- kill him as soon as his unit takes casualties and take further action when that happens
function Set_Up_Siege_Position_Failure()
	bm:out("Set_Up_Siege_Position_Failure() called");
	
	bm:remove_process("Samnite_Artillery")
	
	SUnit_Sam_S_04.uc:attack_unit(SUnit_Rom_T_01.unit);
	SUnit_Sam_S_05.uc:attack_unit(SUnit_Rom_T_01.unit);
	-- SUnit_Sam_S_06.uc:attack_unit(SUnit_Rom_T_01.unit);
	-- SUnit_Sam_S_07.uc:attack_unit(SUnit_Rom_T_01.unit);
	
	unit_max_casualties(SUnit_Rom_T_01, 0);
	
	local rom_consul_hp_cache = unit_proportion_alive(SUnit_Rom_T_01.unit);
	
	-- watch for the Roman Consul taking casualties
	bm:watch(function() return unit_proportion_alive(SUnit_Rom_T_01.unit) < rom_consul_hp_cache end, 0, function() Siege_Position_Failure() end, "Siege_Position_Failure")
end;


function Siege_Position_Failure()
	bm:out("Siege_Position_Failure() called");

	bm:remove_process("Siege_Position_Attack");
	bm:remove_process("Siege_Position_Failure_Watch");
	
	-- kill Roman Consul
	Army_Rom_03:units():kill_commander();
	
	-- immediately rout bridge defenders
	unit_max_casualties(SUnit_Rom_T_02, 0);
	unit_max_casualties(SUnit_Rom_T_05, 0);
	unit_max_casualties(SUnit_Rom_T_16, 0);
	SUnit_Rom_T_02.uc:morale_behavior_rout();
	SUnit_Rom_T_05.uc:morale_behavior_rout();
	SUnit_Rom_T_16.uc:morale_behavior_rout();

	bm:stop_advisor_queue();
	
	-- Tribune, word has reached us that Leanas has fallen and the defenders are withdrawing! The onagers struck the decisive blow! Capua is being overrun!
	bm:queue_advisor("Rom.Pro.Capua.AD.101", 12000);
	
	-- fail objective
	objectives:InterfaceFunction("fail_objective", "Rom.Pro.Capua.Objective_06");
	
	local rout_time = 0;
	local rout_time_step = 300;
	
	-- rout remainder of defenders
	for i = 1, #Roman_City_Sunits do
		local current_sunit = Roman_City_Sunits[i];
		
		rout_time = rout_time + rout_time_step;
	
		bm:callback(function() unit_max_casualties(current_sunit, 0); current_sunit.uc:morale_behavior_rout() end, rout_time);
	end;
	
	-- player loses
	bm:callback(function() Lose_Battle() end, 12000);
end;



BOOL_Battle_Has_Moved_Into_Town = false;

function Battle_Moves_Into_Town()
	if BOOL_Battle_Has_Moved_Into_Town then
		return false;
	end;
	
	BOOL_Battle_Has_Moved_Into_Town = true;
	
	bm:out("Battle_Moves_Into_Town() called");

	local t = 0;
	local t_inc = 200;
	
	-- Romans retreat
	for i = 1, #Roman_City_Sunits do
		t = t + t_inc;
	
		local current_sunit = Roman_City_Sunits[i];
		
		unit_max_casualties(current_sunit, 0);
		current_sunit.uc:morale_behavior_default();
		current_sunit.unit:set_current_ammo_unary(1);
		
		bm:callback(function() current_sunit.Town_Defence_Action_01() end, t)
	end;
	
	t = 2000;
	t_inc = 500;
	
	
	-- Samnites advance
	for i = 1, #Samnite_City_Sunits do
		local current_sunit = Samnite_City_Sunits[i];
		
		unit_max_casualties(current_sunit, 0);
		current_sunit.uc:morale_behavior_default();
		
		current_sunit.uc:release_control();
	end;
	
	Start_Samnite_SAI_Attack_On_City();
end;




















C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\pa_prologue_capua\pa_start.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	INITIAL SCRIPT SETUP
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

-- clear out loaded files
system.ClearRequiredFiles();

-- load in battle script library
require "lua_scripts.Battle_Script_Header";

-- declare battlemanager object
bm = battle_manager:new(empire_battle:new());

-- get battle name from folder, and print header
battle_name, battle_shortform = get_folder_name_and_shortform();

bm:out("==============");
bm:out("==============");
bm:out("==============");
bm:out("Script started: Battle of " .. battle_name);
bm:out("==============");

-- load in other script files associated with this battle
package.path = package.path .. ";data/Script/" .. battle_name .. "/?.lua";

require (battle_shortform .. "_Common");
require (battle_shortform .. "_Declarations");
require (battle_shortform .. "_Cutscenes");
require (battle_shortform .. "_Main");
require (battle_shortform .. "_Village");
require (battle_shortform .. "_Siege");
require (battle_shortform .. "_City");

-- register functions to be called on phase changes
bm:register_phase_change_callback("Deployment", function() Deployment_Phase() end);			-- optional deployment phase callback
bm:setup_battle(function() End_Deployment_Phase() end);										-- called when battle starts

--bm:register_phase_change_callback("Deployment", function() Deployment_Phase() end);			-- optional deployment phase callback
--bm:register_phase_change_callback("Deployed", function() End_Deployment_Phase() end);
--bm:suspend_contextual_advice(true);






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\pa_prologue_capua\pa_village.lua

-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	VILLAGE BATTLE SCRIPT
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------


function Init_Battle()
	-- Hide additional player units
	Hide_Units(SUnit_Rom_05.uc);
	Hide_Units(SUnit_Rom_06.uc);
	Hide_Units(SUnit_Rom_07.uc);
	
	-- Start the Samnites jeering
	UC_Sam_M_All:start_taunting();
	
	-- Samnite artillery
	Start_Samnite_Artillery_Firing();
	
	-- Samnite and Roman armies invincible
	Set_Max_Casualties(Samnite_City_Sunits, 0.9);
	Set_Max_Casualties(Roman_City_Sunits, 0.9);
	
	-- limit casualties Roman town defenders can take
	for i = 1, #Roman_City_Sunits do
		local current_sunit = Roman_City_Sunits[i];
		
		unit_max_casualties(current_sunit, 0.9, true);
		current_sunit.uc:morale_behavior_fearless();
	end;
	
	-- prevent pausing
	bm:disable_shortcut("toggle_pause", true);
	
	
	-- bm:enable_cinematic_camera(false);

	Play_Cutscene_Intro();
	-- Start_Battle_No_Cutscene();
end;


function Start_Battle_No_Cutscene()
	cam:fade(false, 0.5);
	
	Start_Battle();
end;


-- the interactive battle has started
function Start_Battle()
	bm:out("Battle is Starting");
	
	-- hide ui
	-- make info_panel_holder invisible, otherwise it still partially stays in after tut_hide (when ui scale > 100%)
	UIComponent(bm:ui_component("info_panel_holder")):SetVisible(false);  
	UIComponent(bm:ui_component("info_panel_holder")):TriggerAnimation("tut_hide");
	UIComponent(bm:ui_component("battle_orders")):TriggerAnimation("tut_hide");
	UIComponent(bm:ui_component("capture_point_panel")):TriggerAnimation("hide");
	UIComponent(bm:ui_component("capture_point_3d_parent")):SetVisible(false);
	UIComponent(bm:ui_component("radar_holder")):TriggerAnimation("tut_hide");
	
	-- hide control tabs (prevent player from accessing siege equipment)
	UIComponent(UIComponent(bm:ui_component("battle_orders")):Find("cf_land")):SetVisible(false);
	UIComponent(UIComponent(bm:ui_component("battle_orders")):Find("cf_buildings")):SetVisible(false);
	
	-- disable pausing
	bm:disable_shortcut("toggle_pause", true);
	
	-- disable tactical map
	bm:disable_shortcut("show_tactical_map", true);
	
	--camera in start position
	cam:move_to(POS_Cam_Intro_Start, POS_Targ_Intro_Start, 0, false, 0);
	
	-- fade the camera in (leave small delay for teleporting units
	bm:callback(function() cam:fade(false, 0.5) end, 500);
		
	--start rout manager
	bm:start_rout_manager(1);
	
	-- register victory and defeat VO callbacks
	bm:setup_victory_callback(function() Battle_Is_Ending() end);
	
	Hide_Village_Combatants();
	--Hide_UI_Start();
	
	-- prevent players units from dying
	for i = 1, #Player_Sunits do
		unit_max_casualties(Player_Sunits[i], 0.85, true);
		Player_Sunits[i].uc:morale_behavior_fearless();
	end;
	
	-- prevent allied units from dying prematurely
	for i = 1, #Allied_Village_Sunits do
		unit_max_casualties(Allied_Village_Sunits[i], 0.9);
		Allied_Village_Sunits[i].uc:morale_behavior_fearless();
	end;
	
	-- prevent enemy units from dying prematurely
	for i = 1, #Samnite_Village_Sunits do
		unit_max_casualties(Samnite_Village_Sunits[i], 0.75);
		Samnite_Village_Sunits[i].uc:morale_behavior_fearless();
	end;
		
	Start_Camera_Objective();
end;


BOOL_Village_Combatants_Hidden = false;

function Hide_Village_Combatants()
	if not BOOL_Village_Combatants_Hidden then
		Hide_Units(UC_Sam_V_All);
		Hide_Units(UC_Rom_02_All);
		BOOL_Village_Combatants_Hidden = true;
	end;
end;


function Show_Village_Combatants()
	if BOOL_Village_Combatants_Hidden then
		Show_Units(UC_Sam_V_All);
		Show_Units(UC_Rom_02_All);
		BOOL_Village_Combatants_Hidden = false;
	end;
end;


--
--	Camera Objective
--

function Start_Camera_Objective()
	-- take control of player's army
	UC_Rom_01_All:take_control();
	
	-- Capua is in sight! Report!
	bm:queue_advisor("Rom.Pro.Capua.SI.008");
	add_infotext(1, "Rom.Pro.Capua.Info.050", "Rom.Pro.Capua.Info.051", "Rom.Pro.Capua.Info.052");
	
	-- highlight advice dismiss button
	bm:highlight_component("root", "button_newest", true, false);
	
	-- listen for advice being dismissed
	eh:add_listener(
		"startup_advice_dismissed",
		"AdviceDismissed",
		true,
		function() Prepare_To_Issue_Camera_Objective_Advice() end,
		false
	);
end;


function Prepare_To_Issue_Camera_Objective_Advice()
	-- unhighlight advice dismiss button
	bm:highlight_component("root", "button_newest", false, false);

	clear_infotext();
	bm:callback(function() Issue_Camera_Objective_Advice() end, 1.5);
end;



function Issue_Camera_Objective_Advice()

	-- Tribune Silanus! The Samnite army are massed on the hills around Capua. They are preparing an attack - see for yourself!
	bm:stop_advisor_queue();
	bm:queue_advisor(
		"Rom.Pro.Capua.AD.001", 
		10000, 
		false, 
		function() 
			add_infotext(2, "Rom.Pro.Capua.Info.001", "Rom.Pro.Capua.Info.002", "Rom.Pro.Capua.Info.003", "Rom.Pro.Capua.Info.004", "Rom.Pro.Capua.Info.000")
		end
	);
	
	if BOOL_Skip_Camera_Objective then
		bm:callback(function() Skip_Camera_Objective_Monitors() end, 10000);
	else
		bm:callback(function() Start_Camera_Objective_Monitors() end, 10000, "Camera_Objective_Monitors_Start");
	end;
	
	eh:add_listener(
		"Camera_Objective_Monitors_Start",
		"AdviceDismissed",
		true,
		function() Start_Camera_Objective_Monitors() end,
		false
	);
end;

BOOL_Bridge_Intel_Delivered = false;
BOOL_Capua_Intel_Delivered = false;
BOOL_Army_Intel_Delivered = false;
BOOL_Siege_Intel_Delivered = false;

POS_Marker_Bridge = v(-361, 216, -135);
POS_Marker_Capua = v(-83, 216, -435);
POS_Marker_Army = v(320, 234, -135);
POS_Marker_Siege = v(50, 229, 20);


function Skip_Camera_Objective_Monitors()
	if BOOL_Skip_Village_Gameplay then
		Village_Is_Won();
	else
		All_Intel_Delivered();
	end;
end;


Num_Camera_Objectives_Completed = 0;
Num_Camera_Objectives = 4;


function Start_Camera_Objective_Monitors()
	eh:remove_listener("Camera_Objective_Monitors_Start");
	bm:remove_process("Camera_Objective_Monitors_Start");

	-- show markers
	bm:add_ping_icon(POS_Marker_Bridge:get_x(), POS_Marker_Bridge:get_y(), POS_Marker_Bridge:get_z(), 3, false);
	bm:add_ping_icon(POS_Marker_Capua:get_x(), POS_Marker_Capua:get_y(), POS_Marker_Capua:get_z(), 3, false);
	bm:add_ping_icon(POS_Marker_Army:get_x(), POS_Marker_Army:get_y(), POS_Marker_Army:get_z(), 3, false);
	bm:add_ping_icon(POS_Marker_Siege:get_x(), POS_Marker_Siege:get_y(), POS_Marker_Siege:get_z(), 3, false);

	-- start watching camera position
	bm:watch(function() return Should_Trigger_Intel(cam, POS_Marker_Bridge) end, 0, function() Play_Cutscene_Bridge_Intel() end, "Camera_Objective");
	bm:watch(function() return Should_Trigger_Intel(cam, POS_Marker_Capua) end, 0, function() Play_Cutscene_Capua_Intel() end, "Camera_Objective");
	bm:watch(function() return Should_Trigger_Intel(cam, POS_Marker_Army) end, 0, function() Play_Cutscene_Army_Intel() end, "Camera_Objective");
	bm:watch(function() return Should_Trigger_Intel(cam, POS_Marker_Siege) end, 0, function() Play_Cutscene_Siege_Intel() end, "Camera_Objective");
	
	-- set objective
	objectives:InterfaceFunction("set_objective", "Rom.Pro.Capua.Objective_01", Num_Camera_Objectives_Completed, Num_Camera_Objectives);
end;

-- should we trigger a given intel cutscene
function Should_Trigger_Intel(cam, pos)
	local cam_distance = cam:position():distance(pos);

	--if cam_distance < 180 and cam:target():distance(pos) < cam_distance then
	if cam_distance < 180 then
		local cam_pos = cam:position();
		local cam_target = cam:target();
		local v_cam_to_targ	= v_subtract(cam_target, cam_pos);
		local v_cam_to_intel_pos = v_subtract(pos, cam_pos);
			
		if dot3d(v_cam_to_targ, v_cam_to_intel_pos) > 0 then
			return true;
		end;
	end;
	
	return false;
end;


BOOL_Shift_Camera_Movement_Infotext_Added = false;

function Add_Shift_Camera_Movement_Infotext()
	if BOOL_Shift_Camera_Movement_Infotext_Added then
		return;
	end;
	
	BOOL_Shift_Camera_Movement_Infotext_Added = true;
	add_infotext(2, "-Rom.Pro.Capua.Info.000", "Rom.Pro.Capua.Info.030");
end;


function Camera_Objective_Completed()
	-- increment the camera objective count
	Num_Camera_Objectives_Completed = Num_Camera_Objectives_Completed + 1;
		
	-- update objective on UI
	objectives:InterfaceFunction("set_objective", "Rom.Pro.Capua.Objective_01", Num_Camera_Objectives_Completed, Num_Camera_Objectives);
	
	if Num_Camera_Objectives_Completed >= Num_Camera_Objectives then
		objectives:InterfaceFunction("complete_objective", "Rom.Pro.Capua.Objective_01");
	end;
end;


function Bridge_Intel_Delivered()
	BOOL_Bridge_Intel_Delivered = true;
	
	-- disable pausing (seems to be re-enabled in cutscene)
	bm:modify_battle_speed(1);
	bm:disable_shortcut("toggle_pause", true);
	
	Show_Advisor_Dismiss_Button(true);
	
	Check_All_Intel_Delivered();
end;


function Capua_Intel_Delivered()
	BOOL_Capua_Intel_Delivered = true;
	
	-- disable pausing (seems to be re-enabled in cutscene)
	bm:modify_battle_speed(1);
	bm:disable_shortcut("toggle_pause", true);
	
	BOOL_Allow_Firing_Near_Town_Defenders = true;
	
	Show_Advisor_Dismiss_Button(true);
	
	Check_All_Intel_Delivered();
end;


function Army_Intel_Delivered()
	BOOL_Army_Intel_Delivered = true;
	
	-- disable pausing (seems to be re-enabled in cutscene)
	bm:modify_battle_speed(1);
	bm:disable_shortcut("toggle_pause", true);
	
	Show_Advisor_Dismiss_Button(true);
	
	Check_All_Intel_Delivered();
end;


function Siege_Intel_Delivered()
	BOOL_Siege_Intel_Delivered = true;
	
	-- disable pausing (seems to be re-enabled in cutscene)
	bm:modify_battle_speed(1);
	bm:disable_shortcut("toggle_pause", true);
	
	Show_Advisor_Dismiss_Button(true);
	
	Check_All_Intel_Delivered();
end;


function Check_All_Intel_Delivered()
	-- watch for all cutscenes delivered
	if BOOL_Bridge_Intel_Delivered and BOOL_Capua_Intel_Delivered and BOOL_Army_Intel_Delivered and BOOL_Siege_Intel_Delivered then
		All_Intel_Delivered();
	end;
end;





-- all intel has been delivered, proceed
function All_Intel_Delivered()
	bm:out("All Intel Delivered");
	
	-- make sure
	bm:remove_process("Camera_Objective");
			
	bm:callback(function() Play_Cutscene_Village_Attack() end, 1000);
end;



function Start_Village_Attack()
	bm:out("Start_Village_Attack() called");
	
	Show_Advisor_Dismiss_Button(true);
	
	-- release control of player's army
	UC_Rom_01_All:release_control();
	
	-- allow pausing
	bm:disable_shortcut("toggle_pause", false);
	
	-- enable tactical map
	bm:disable_shortcut("show_tactical_map", false);
		
	-- show infotext/objective
	add_infotext("Rom.Pro.Capua.Info.008", "Rom.Pro.Capua.Info.009", "Rom.Pro.Capua.Info.010", "Rom.Pro.Capua.Info.011");
	
	set_objective("Rom.Pro.Capua.Objective_02");
	remove_objective("Rom.Pro.Capua.Objective_01");
	
	-- show ping marker
	bm:add_ping_icon(-355, 230, 195, 3, false);
	
	-- start the Samnite attack
	SUnit_Sam_V_03.PM_Advance:stop();
	SUnit_Sam_V_03.PM_Attack:start();
	SUnit_Sam_V_04.PM_Advance:stop();
	SUnit_Sam_V_04.PM_Attack:start();
	bm:callback(function() SUnit_Sam_V_02.PM_Advance:stop(); SUnit_Sam_V_02.PM_Attack:start() end, 5000);
	
	-- allow the Romans in the village to start taking casualties
	bm:callback(function() Allow_Village_Allies_To_Take_Casualties() end, 90000);
	
	-- prevent the Roman defenders from routing until they have taken a fair few casualties
	for i = 1, #Allied_Village_Sunits do
		local curr_sunit = Allied_Village_Sunits[i];
		curr_sunit.uc:morale_behavior_fearless();
		bm:watch(function() return unit_proportion_alive(curr_sunit.unit) < 0.3 end, 0, function() curr_sunit.uc:morale_behavior_default() end, "allied_defenders_hp_watch");
	end;
			
	-- watch and warn for player inaction
	bm:callback(function() Issue_Village_Advisor_Warning("too long to get moving") end, 60000, "Player_Inaction_Watch_Village_Attack_Start");
	bm:callback(function() Allow_Village_Combatants_To_Die("timeout from start") end, 120000, "Player_Inaction_Watch_Village_Attack_Start");
		
	-- watch for all village defenders dying (section defeat)
	bm:watch(function() return is_routing_or_dead(Allied_Village_Sunits) end, 0, function() Village_Is_Lost() end, "Village_Routing_Watch");
	
	-- watch for all village attackers dying (section victory)
	bm:watch(function() return is_routing_or_dead(Samnite_Village_Sunits) end, 0, function() Village_Is_Won() end, "Village_Routing_Watch");
		
	bm:repeat_callback(function() Has_Player_Moved_Off_Start() end, 500, "Player_Movement_Watch_Start");
end;


BOOL_Move_Off_Start_Advice_Primed = false;

-- determine if the player has moved off. Player is deemed to have moved either when all units are mobile
-- or five seconds after first unit is moving
function Has_Player_Moved_Off_Start()
	local BOOL_All_Units_Moving = true;
	
	for i = 1, #Player_Sunits do
		local current_sunit = Player_Sunits[i];
		
		-- if the current unit has moved more than 2m then consider it "moving"
		if current_sunit.unit:ordered_position():distance_xz(current_sunit.start_position) > 2 then		
			if not BOOL_Move_Off_Start_Advice_Primed then
				BOOL_Move_Off_Start_Advice_Primed = true;
				
				bm:callback(function() Player_Is_Moving_Start("Five seconds since first movement") end, 5000, "Player_Movement_Watch_Start");
			end;
		else
			BOOL_All_Units_Moving = false;
		end;
	end;
	
	if BOOL_All_Units_Moving then
		Player_Is_Moving_Start("All units moving");
	end;
end;


function Allow_Village_Allies_To_Take_Casualties()
	-- allow allied units to take casualties
	for i = 1, #Allied_Village_Sunits do
		local curr_sunit = Allied_Village_Sunits[i];
		unit_max_casualties(curr_sunit, 0);
		curr_sunit.uc:morale_behavior_default();
		curr_sunit.uc:change_behaviour_active("skirmish", false);
	end;
end;


function Player_Is_Moving_Start(reason)
	bm:out("Player is moving :: " .. tostring(reason));
	
	bm:remove_process("Player_Movement_Watch_Start");
	
	bm:callback(
		function()
			--infotext
			add_infotext("Rom.Pro.Capua.Info.012");
	
			--unhide ui
			UIComponent(bm:ui_component("info_panel_holder")):SetVisible(true);
			UIComponent(bm:ui_component("battle_orders")):TriggerAnimation("tut_show");
			UIComponent(bm:ui_component("info_panel_holder")):TriggerAnimation("tut_show");			
			UIComponent(bm:ui_component("capture_point_panel")):TriggerAnimation("show");
			UIComponent(bm:ui_component("capture_point_3d_parent")):SetVisible(true);
			UIComponent(bm:ui_component("radar_holder")):TriggerAnimation("tut_show");
		end,
		2000
	);
	
	-- watch to see if the player leaves the combat area
	bm:watch(function() return Active_Units_Outside_Areas(Player_Sunits, Area_Village_Attack) end, 0, function() Player_Has_Abandoned_Village_Attack() end, "Player_Village_Attack_Movement_Watch");
		
	-- start the Samnites on the hill
	SUnit_Sam_V_01.uc:fire_at_will(true);
	SUnit_Sam_V_05.uc:fire_at_will(true);
	SUnit_Sam_V_01.PM_Advance:start();
	SUnit_Sam_V_05.PM_Advance:start();
	
	-- watch and warn for player inaction
	bm:remove_process("Player_Inaction_Watch_Village_Attack_Start");
	bm:callback(function() Issue_Village_Advisor_Warning("too long to approach village from moving") end, 120000, "Player_Inaction_Watch_Village_Attack_Approach")
	bm:callback(function() Allow_Village_Combatants_To_Die("timeout from village approach") end, 150000, "Player_Inaction_Watch_Village_Attack_Approach");
		
	-- advise about banners
	bm:callback(function() Issue_Banner_Advice() end, 5000);
end;

POS_Village_Approach_Slinger_Killzone_A = v(-600, 138);
POS_Village_Approach_Slinger_Killzone_B = v(-610, 255);


function Issue_Banner_Advice()
	-- advise about banners
	bm:queue_advisor("Rom.Pro.Capua.AD.003", 8000);
	
	-- watch for the player's units coming under missile fire
	bm:callback(
		function()
			bm:watch(function() return Any_Units_Under_Missile_Attack(Player_Sunits) end, 0, function() Player_Has_Taken_Casualties_Village_Approach(false) end, "Village_Approach_Player_Taking_Casualties")
			
			-- watch for player's army crossing through killzone without being shot at (because slingers don't work) - this should be removed when they do!
			bm:watch(
				function() return has_crossed_line(SUnit_Rom_01.unit:position(), POS_Village_Approach_Slinger_Killzone_A, POS_Village_Approach_Slinger_Killzone_B) end,
				0,
				function() Player_Has_Taken_Casualties_Village_Approach(true) end,
				"Village_Approach_Player_Taking_Casualties"
			);	
		end,
		25000	
	);
end;





POS_Village_Approach_Killzone_A = v(-540, 235);
POS_Village_Approach_Killzone_B = v(-515, 445);

function Player_Has_Taken_Casualties_Village_Approach(failsafe_triggered)
	bm:out("Player_Has_Taken_Casualties_Village_Approach() called");
	
	bm:remove_process("Village_Approach_Player_Taking_Casualties");
	
	if failsafe_triggered then
		script_error("WARNING: Player's army should have taken casualties at this point of the approach but hasn't (presumably the slingers are broken). Forcing advice as if they had, continuing.");
	end;
	
	-- We're under missile fire! Double-time!
	bm:queue_advisor(
		"Rom.Pro.Capua.SI.006", 
		6000, 
		false,
		function() 
			clear_infotext();
			
			add_infotext(2, "Rom.Pro.Capua.Info.013", "Rom.Pro.Capua.Info.014", "Rom.Pro.Capua.Info.015");
			
			-- watch for the player's units running (or timeout) and deliver SPACEBAR advice
			bm:callback(
				function()
					bm:watch(function() return Any_Units_Moving_Fast(Player_Sunits) end, 0, function() Player_Is_Running_Village_Attack() end, "Player_Moving_Fast_Village_Watch");
				end,
				5000,
				"Player_Moving_Fast_Village_Watch"
			);
			bm:callback(function() Player_Is_Running_Village_Attack() end, 20000, "Player_Moving_Fast_Village_Watch");
		end
	);
	
	-- watch for the player passing out of the killzone of the Samnite ranged, and move them into the town
	bm:watch(
		function() return has_crossed_line(Player_Sunits, POS_Village_Approach_Killzone_A, POS_Village_Approach_Killzone_B) end, 
		0, 
		function() Player_Has_Passed_Through_Village_Approach_Killzone() end
	);
end;


function Player_Is_Running_Village_Attack()
	-- spacebar infotext
	bm:callback(function() add_infotext("Rom.Pro.Capua.Info.016"); end, 2000);
	bm:remove_process("Player_Moving_Fast_Village_Watch");
end;




POS_Village_Approach_Entering_Battle_A = v(-510, 200);
POS_Village_Approach_Entering_Battle_B = v(-480, 310);

function Player_Has_Passed_Through_Village_Approach_Killzone()
	bm:out("Player_Has_Passed_Through_Village_Approach_Killzone() called");

	-- move Samnite ranged down off near hill
	SUnit_Sam_V_01.PM_Advance:stop();
	SUnit_Sam_V_05.PM_Advance:stop();
	SUnit_Sam_V_01.PM_Attack:start();
	SUnit_Sam_V_05.PM_Attack:start();
	
	-- watch and warn for player inaction
	bm:remove_process("Player_Inaction_Watch_Village_Attack_Approach");
	bm:callback(function() Issue_Village_Advisor_Warning("too long to approach village from killzone") end, 60000, "Player_Inaction_Watch_Village_Attack_Approach_Killzone")
	bm:callback(function() Allow_Village_Combatants_To_Die("timeout from village approach") end, 90000, "Player_Inaction_Watch_Village_Attack_Approach_Killzone");
	
	-- watch for the player getting into village centre
	bm:watch(
		function() return has_crossed_line(Player_Sunits, POS_Village_Approach_Entering_Battle_A, POS_Village_Approach_Entering_Battle_B) end, 
		0, 
		function() Player_Has_Approached_Village() end
	);
end;


function Player_Has_Approached_Village()
	bm:out("Player_Has_Approached_Village() called");

	-- This is it, draw swords men! Charge!
	bm:queue_advisor("Rom.Pro.Capua.SI.007", 30000);
	
	-- remove ping marker
	bm:remove_ping_icon(v(-355, 230, 195));
		
	-- infotext
	clear_infotext();
	
	bm:callback(
		function()
			add_infotext("Rom.Pro.Capua.Info.017", "Rom.Pro.Capua.Info.018", "Rom.Pro.Capua.Info.019");
		end,
		2000
	);
	
	-- complete "move to village" objective
	remove_objective("Rom.Pro.Capua.Objective_02");
	
	-- set "clear Samnite attackers" and "keep villagers alive" objectives
	set_objective("Rom.Pro.Capua.Objective_05");
	
	-- keep the village objective numbers updated
	Update_Village_Attack_Info(true);
	bm:repeat_callback(function() Update_Village_Attack_Info() end, 500, "Village_Objective_Update");

	-- stop village approach countdown
	bm:remove_process("Player_Inaction_Watch_Village_Attack_Approach_Killzone");
	
	-- allow enemy/allies to begin to die
	Allow_Village_Combatants_To_Die("player is approaching");
	
	-- when the player approaches the enemy infantry, have the advisor talk about it
	bm:watch(function() return Is_Player_Close_To_Village_Attackers() end, 0, function() Issue_Routing_Advice() end);
end;

Last_Village_Attackers_Defeated = 0;
Num_Village_Attackers = #Samnite_Village_Sunits;


function Update_Village_Attack_Info(force_update)
	local should_update = false;
	
	local current_village_attackers_defeated = num_units_routing(Samnite_Village_Sunits);
	
	if force_update or current_village_attackers_defeated > Last_Village_Attackers_Defeated then
		Last_Village_Attackers_Defeated = current_village_attackers_defeated;
		objectives:InterfaceFunction("set_objective", "Rom.Pro.Capua.Objective_04", current_village_attackers_defeated, Num_Village_Attackers);
		
		if current_village_attackers_defeated == Num_Village_Attackers then
			objectives:InterfaceFunction("complete_objective", "Rom.Pro.Capua.Objective_04");
			objectives:InterfaceFunction("complete_objective", "Rom.Pro.Capua.Objective_05");
			bm:remove_process("Village_Objective_Update");
		end;
	end;
end;


function Is_Player_Close_To_Village_Attackers()
	for i = 1, #Player_Sunits do
		if is_close_to_position(Samnite_Village_Sunits, Player_Sunits[i].unit:position(), 30) then
			return true;
		end;
	end;
	
	return false;
end;



BOOL_Village_Combatants_Can_Die = false;

function Allow_Village_Combatants_To_Die(reason)
	if BOOL_Village_Combatants_Can_Die then
		return;
	end;
	
	BOOL_Village_Combatants_Can_Die = true;
	
	bm:out("Allowing village combatants to die, reason = " .. tostring(reason));
	
	-- enemy units
	for i = 1, #Samnite_Village_Sunits do
		unit_max_casualties(Samnite_Village_Sunits[i], 0);
		bm:callback(function() Samnite_Village_Sunits[i].uc:morale_behavior_default() end, 30000);
	end;
	
	-- watch for first village defender routing and then warn player
	bm:watch(function() return num_units_routing(Allied_Village_Sunits) > 0 end, 0, function() Issue_Village_Routing_Advisor_Warning() end, "Village_Defender_Rout_Watch");
	
	-- watch for the first attacker routing and issue advice
	bm:watch(function() return num_units_routing(Samnite_Village_Sunits) > 1 end, 0, function() Enemy_Begin_To_Rout_Village_Attack() end);
end;


function Issue_Routing_Advice()
	bm:out("Issue_Routing_Advice() called");

	-- The enemy must be routed! Target their flanks or attack them from behind!
	bm:queue_advisor(
		"Rom.Pro.Capua.AD.004", 
		30000, 
		false, 
		function() 
			clear_infotext();
		
			add_infotext(2, "Rom.Pro.Capua.Info.020", "Rom.Pro.Capua.Info.021", "Rom.Pro.Capua.Info.022", "Rom.Pro.Capua.Info.024", "Rom.Pro.Capua.Info.024b");
		end
	);
end;







function Enemy_Begin_To_Rout_Village_Attack()
	bm:out("Enemy_Begin_To_Rout_Village_Attack() called");
	
	-- The Samnite infantry is strong, but their men are no match for Roman soldiers!
	bm:queue_advisor(
		"Rom.Pro.Capua.AD.005", 
		30000, 
		false, 
		function() 
			add_infotext(2, "Rom.Pro.Capua.Info.025", "Rom.Pro.Capua.Info.026", "Rom.Pro.Capua.Info.027", "Rom.Pro.Capua.Info.028", "Rom.Pro.Capua.Info.029");
		end
	);
	
	-- put the allies onto wide intercepts
	SUnit_Allied_01.PM_Advance:stop();
	SUnit_Allied_02.PM_Advance:stop();
	SUnit_Allied_03.PM_Advance:stop();
	
	SUnit_Allied_01.PM_Attack:start();
	SUnit_Allied_02.PM_Attack:start();
	SUnit_Allied_03.PM_Attack:start();
end;



function Issue_Village_Routing_Advisor_Warning()
	-- allies are fleeing advice
	bm:queue_advisor("Rom.Pro.Capua.AD.011", 6000);
end;


Num_Village_Advisor_Warnings_Issued = 0;

function Issue_Village_Advisor_Warning(reason)
	bm:out("Issuing Village advisor warning, reason = " .. tostring(reason));
	
	Allow_Village_Allies_To_Take_Casualties();

	if Num_Village_Advisor_Warnings_Issued == 0 then
		bm:queue_advisor("Rom.Pro.Capua.AD.009", 6000);
		Num_Village_Advisor_Warnings_Issued = 1;
	elseif Num_Village_Advisor_Warnings_Issued == 1 then
		bm:queue_advisor("Rom.Pro.Capua.AD.010", 10000);
		Num_Village_Advisor_Warnings_Issued = 2;

	end;
end;



function Player_Has_Abandoned_Village_Attack()
	Issue_Village_Advisor_Warning("Village attack abandoned");
	
	rout_on_next_casualty(SUnit_Allied_01);
	rout_on_next_casualty(SUnit_Allied_02);
	rout_on_next_casualty(SUnit_Allied_03);
	
	bm:callback(function() SUnit_Allied_01.unit:kill_number_of_men(2) end, 5000);
	bm:callback(function() SUnit_Allied_02.unit:kill_number_of_men(2) end, 10000);
	bm:callback(function() SUnit_Allied_03.unit:kill_number_of_men(2) end, 15000);
end;


function Village_Is_Lost()
	bm:out("Village is lost!");
	
	bm:stop_advisor_queue();
	Clear_Subtitles();
	
	Stop_Village_Watches();
	
	-- fail objectives
	objectives:InterfaceFunction("fail_objective", "Rom.Pro.Capua.Objective_04");
	objectives:InterfaceFunction("fail_objective", "Rom.Pro.Capua.Objective_05");
	bm:remove_process("Village_Objective_Update");
	
	--bm:enable_cinematic_ui(true, true, false);
	
	-- village is lost advice
	bm:queue_advisor("Rom.Pro.Capua.AD.012", 6000);

	bm:callback(
		function()
			Show_Units(UC_Rom_01_All);
			Disappear_Units(SUnit_Rom_05);
			Disappear_Units(SUnit_Rom_06);
			Disappear_Units(SUnit_Rom_07);
			
			Lose_Battle();
		end,
		8000
	);
end;


function Village_Is_Won()
	bm:out("Village is won!");
		
	-- in case they aren't shown i.e. we skipped here
	Show_Village_Combatants();
		
	bm:stop_advisor_queue();
	Clear_Subtitles();
	
	Stop_Village_Watches();
	
	cam:fade(true, 1);
	
	bm:callback(function() Setup_Cutscene_Village_Victory() end, 1000);
	
	bm:callback(function() Play_Cutscene_Village_Victory() end, 3000);
end;


function Stop_Village_Watches()
	bm:remove_process("allied_defenders_hp_watch");
	bm:remove_process("Village_Routing_Watch");
	bm:remove_process("Player_Village_Attack_Movement_Watch");
	bm:remove_process("Village_Defender_Rout_Watch");
end;



function Add_Village_Units_To_Players_Army()
	-- show hidden units
	Swap_In_Roman_Unit_End_Village_Section(SUnit_Rom_05, SUnit_Allied_01);
	Swap_In_Roman_Unit_End_Village_Section(SUnit_Rom_06, SUnit_Allied_02);
	Swap_In_Roman_Unit_End_Village_Section(SUnit_Rom_07, SUnit_Allied_03);

	-- add new units to player's list
	table.insert(Player_Sunits, SUnit_Rom_05);
	table.insert(Player_Sunits, SUnit_Rom_06);
	table.insert(Player_Sunits, SUnit_Rom_07);
end;


function Teleport_Village_Romans_To_Siege_Position_Attack()
	SUnit_Rom_05.uc:teleport_to_location(v(-353.45, 242.75), r_to_d(-0.06), 23.2);
	SUnit_Rom_06.uc:teleport_to_location(v(-311.98, 277.12), r_to_d(-0.38), 25.5);
	SUnit_Rom_07.uc:teleport_to_location(v(-303.6, 246.01), r_to_d(-0.06), 22.3);
end;




function Setup_Cutscene_Village_Victory()
	-- teleport routing enemy units into position
	for i = 1, #Samnite_Village_Sunits do
		Samnite_Village_Sunits[i].uc:morale_behavior_fearless();
	end;
	
	SUnit_Sam_V_01.uc:teleport_to_location(v(-343.3, 340.02), r_to_d(-0.28), 35.2);
	SUnit_Sam_V_02.uc:teleport_to_location(v(-337.2, 359.59), r_to_d(-0.29), 19.6);
	SUnit_Sam_V_03.uc:teleport_to_location(v(-320.2, 350), r_to_d(-0.36), 19.1);
	SUnit_Sam_V_04.uc:teleport_to_location(v(-352.4, 393.93), r_to_d(-0.34), 6.53);
	SUnit_Sam_V_05.uc:teleport_to_location(v(-337.8, 401.7), r_to_d(-0.35), 10.9);
	--SUnit_Sam_V_06.uc:teleport_to_location(v(-350, 409.9), r_to_d(-0.3), 18.1);
	
	for i = 1, #Samnite_Village_Sunits do
		Samnite_Village_Sunits[i].uc:morale_behavior_rout();
	end;
	
	
	-- teleport victorious player units into position
	SUnit_Rom_01.uc:teleport_to_location(v(-318.5, 327.91), r_to_d(-0.26), 20);
	SUnit_Rom_02.uc:teleport_to_location(v(-338.5, 266.6), r_to_d(-0.23), 22.8);
	SUnit_Rom_03.uc:teleport_to_location(v(-313, 314), r_to_d(-0.27), 19.6);
	SUnit_Rom_04.uc:teleport_to_location(v(-311.1, 299.44), r_to_d(-0.29), 18);
	
	Add_Village_Units_To_Players_Army();	
	
	bm:callback(function() Teleport_Village_Romans_To_Siege_Position_Attack() end, 200);
	
	-- all player units celebrating
	bm:callback(
		function()	
			for i = 1, #Player_Sunits do
				local sunit = Player_Sunits[i];
				sunit.uc:fire_at_will(false);
				sunit.uc:start_celebrating();
			end;
		end,
		500
	);
end;


function Swap_In_Roman_Unit_End_Village_Section(roman_sunit, allied_sunit)
	bm:out("Swap_In_Roman_Unit_End_Village_Section() called, roman_sunit is " .. roman_sunit.name .. " and allied_sunit is " .. allied_sunit.name);

	-- show player's unit
	Show_Units(roman_sunit.uc);

	-- work out how many of the player's unit to kill
	local prop_allied_sunit_alive = 0;
	
	if is_routing_or_dead(allied_sunit.unit) then
		prop_allied_sunit_alive = 0.4;
	else
		prop_allied_sunit_alive = unit_proportion_alive(allied_sunit.unit);
		
		if prop_allied_sunit_alive < 0.2 then
			prop_allied_sunit_alive = 0.4;
		else
			prop_allied_sunit_alive = prop_allied_sunit_alive * 1.5;
			
			if prop_allied_sunit_alive > 1 then
				prop_allied_sunit_alive = 1;
			end;
		end;
	end;
	
	bm:out("\tprop_allied_sunit_alive is " .. prop_allied_sunit_alive);
	
	-- kill appropriate proportion of player's unit
	kill_unit_proportion(roman_sunit.unit, 1 - prop_allied_sunit_alive);

	-- remove allied unit
	Disappear_Units(allied_sunit);
end;


function Remove_Village_Samnites()
	for i = 1, #Samnite_Village_Sunits do
		local current_sunit = Samnite_Village_Sunits[i];
		
		current_sunit.uc:morale_behavior_fearless();
		current_sunit.uc:teleport_to_location(POS_Body_Dump, 0, 20);
		Disappear_Units(current_sunit, true);
	end;
end;







C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\pb_prologue_vesuvius\pb_common.lua




-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	COMMON SCRIPT
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

function Hide_Units(uc)
	uc:fire_at_will(false);
	uc:change_enabled(false);
	uc:set_invisible_to_all(true);
end;

function Show_Units(uc)
	uc:fire_at_will(true);
	uc:change_enabled(true);
	uc:set_invisible_to_all(false);
	uc:halt();
end;

function Disappear_Units(sunit, suppress_comment)
	if not suppress_comment then
		bm:out("Disappearing " .. sunit.name);
	end;
	
	sunit.uc:kill();
	Hide_Units(sunit.uc);
end;


function Display_Subtitles(text, duration, position)
	local bm = get_bm();
	local subtitles = bm:subtitles();
	local position = position or "top_centre";

	bm:out("Displaying subtitle [" .. text .. "] for " .. tostring(duration) .. "ms");
	
	bm:remove_process("Subtitle_Clear");
	
	subtitles:end_subtitles();	
	subtitles:clear();
	subtitles:begin(position);
	subtitles:push_back_subtitle_entry(0, duration, text);
	
	bm:callback(function() subtitles:end_subtitles() end, duration, "Subtitle_Clear");
end;




























C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\pb_prologue_vesuvius\pb_cutscenes.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	CUTSCENES SCRIPT
--
--	Declare intro and other cutscenes
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

POS_Cam_Start = v(-178.1, 379.9, 180.2);
Targ_Cam_Start = v(-127.6, 348.7, 121.5);

BOOL_Advisor_Dismiss_Button_Hidden = false;

Cutscene_Intro = cutscene:new(
	"Cutscene_Intro", 							-- unique string name for cutscene
	UC_Rom_01_All, 								-- unitcontroller over player's army
	18000, 										-- duration of cutscene in ms
	function()									-- what to call when cutscene is finished
		if BOOL_Advisor_Dismiss_Button_Hidden then
			Show_Advisor_Dismiss_Button(true);
		end;
		Cutscene_Intro_Finished(); 
	end
);

Cutscene_Intro:set_skip_camera(POS_Cam_Start, Targ_Cam_Start);
Cutscene_Intro:set_skippable(true, function() Cutscene_Intro_Skipped() end);
Cutscene_Intro:set_close_advisor_on_end(false);
Cutscene_Intro:set_wait_for_advisor_on_end(false);

BOOL_Silanus_Intro_Response_Issued = false;

function Play_Cutscene_Intro()
	Cutscene_Intro:action(function() cam:fade(false, 1) end, 0);
	Cutscene_Intro:action(function() cam:move_to(v(-644.9, 434.5, -200.2), v(-772.5, 462.7, -282.7), 0, true, 40) end, 0);
	Cutscene_Intro:action(function() cam:move_to(POS_Cam_Start, Targ_Cam_Start, 18, false, 0) end, 0);
	
	-- Congratulations on your promotion, Propraetor, it was not before time. I am pleased to report that the men are ready to deploy for battle, despite the foul weather we have been dealt
	Cutscene_Intro:action(
		function()
			bm:queue_advisor("Rom.Pro.Ves.AD.001", 10000); 
			Show_Advisor_Dismiss_Button(false); 
			BOOL_Advisor_Dismiss_Button_Hidden = true; 
		end, 
		500
	);
	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_advisor() end, 10500);
	
	Cutscene_Intro:action(function() bm:close_advisor() end, 13500);
	
	-- Good! Our camp blocks this road and while we hold this position, the enemy cannot pass. Deploy the infantry in a line facing down the valley, so that each unit covers the flank of the next. See to it.
	Cutscene_Intro:action(function() BOOL_Silanus_Intro_Response_Issued = true; Issue_Silanus_Intro_Response() end, 14000);
	
	Cutscene_Intro:start();
end;


function Issue_Silanus_Intro_Response()
	bm:queue_advisor("Rom.Pro.Ves.SI.001", 13000, false, function() Issue_Deployment_Infotext_And_Objectives() end);
end;


function Cutscene_Intro_Skipped()
	cam:fade(true, 0);
	
	if not BOOL_Silanus_Intro_Response_Issued then
		Issue_Silanus_Intro_Response();
	end;
	
	bm:callback(function() cam:fade(false, 1) end, 500);
end;












Cutscene_Skirmishers = cutscene:new(
	"Cutscene_Skirmishers",							-- unique string name for cutscene
	UC_Rom_01_All, 									-- unitcontroller over player's army
	10000, 											-- duration of cutscene in ms
	function() Cutscene_Skirmishers_End() end 		-- what to call when cutscene is finished
);


--Cutscene_Skirmishers:set_debug();
Cutscene_Skirmishers:set_do_not_end();
Cutscene_Skirmishers:set_skippable(false);
Cutscene_Skirmishers:set_post_cutscene_fade_time(0);
Cutscene_Skirmishers:set_restore_cam_time(3);
Cutscene_Skirmishers:set_restore_cam(v(-64.0, 371.2, 58.7), v(-59.5, 368.0, 54.3));
Cutscene_Skirmishers:set_intro_pan_time(5000);


function Play_Cutscene_Skirmishers()
	Cutscene_Skirmishers:action(function() cam:move_to(v(188.9, 291.1, -313.5), v(249.4, 275.4, -316.4), 5, false, 50) end, 0);
	
	-- The Samnites are sending javelins against us. They mean to disrupt our line before their infantry engage.
	Cutscene_Skirmishers:action(function() bm:stop_advisor_queue() end, 0);
	Cutscene_Skirmishers:action(function() bm:queue_advisor("Rom.Pro.Ves.AD.002", 10000); end, 0);
	
	Cutscene_Skirmishers:action(function() add_infotext("Rom.Pro.Vesuvius.Info.008", "Rom.Pro.Vesuvius.Info.009", "Rom.Pro.Vesuvius.Info.010"); end, 2000);

	Cutscene_Skirmishers:action(function() Samnite_Skirmishers_Cheer(); end, 3500);
	
	Cutscene_Skirmishers:action(function() cam:move_to(v(231.7, 278.0, -322.2), v(285.1, 260.7, -349.7), 0, true, 40) end, 6500);
	Cutscene_Skirmishers:action(function() cam:move_to(v(258.1, 270.0, -295.2), v(311.5, 252.7, -322.6), 45, true, 40) end, 6500);
	
	-- show and highlight the advisor progress button
	Cutscene_Skirmishers:action(function() UIComponent(bm:ui_component("button_newest")):SetVisible(true); end, 9000);
	Cutscene_Skirmishers:action(function() bm:highlight_component("root", "button_newest", true, false); end, 9000);
	Cutscene_Skirmishers:action(function() bm:enable_cinematic_ui(true, true, true); end, 9000);
		
	Cutscene_Skirmishers:start();
		
	eh:add_listener(
		"Cutscene_Skirmishers_Advice_Dismissed",
		"ComponentLClickUp",
		function(context) return context.string == "button_newest" end,
		function(context) bm:stop_advisor_queue(); end,
		false
	);
	
	eh:add_listener(
		"Cutscene_Skirmishers_Advice_Dismissed",
		"AdviceDismissed",
		true,
		function(context) Cutscene_Skirmishers:skip(); end,
		false
	);
end;







Cutscene_Walkon = cutscene:new(
	"Cutscene_Walkon", 								-- unique string name for cutscene
	UC_Rom_01_All, 									-- unitcontroller over player's army
	10000, 											-- duration of cutscene in ms
	function() Start_Sam_Skirmisher_Attack() end 	-- what to call when cutscene is finished
);

-- Cutscene_Walkon:set_debug();
Cutscene_Walkon:set_intro_pan_time(4000);
Cutscene_Walkon:set_post_cutscene_fade_time(0);
Cutscene_Walkon:set_do_not_end();
Cutscene_Walkon:set_skippable(false);

function Play_Cutscene_Walkon()
	Reveal_Rom_Cav();
	
	-- hide progress button
	Advice_Progress_Button:SetVisible(false);
	bm:highlight_component("root", "button_newest", false, false);
		
	Cutscene_Walkon:action(function() cam:move_to(v(-517.7, 344.9, -66.9), v(-431.7, 325.9, -68.4), 4, false, 0) end, 0);
	
	Cutscene_Walkon:action(function() bm:stop_advisor_queue() end, 0);
	
	-- We can use our cavalry to chase them off. They remain hidden from the enemy behind this hill
	Cutscene_Walkon:action(function() bm:queue_advisor("Rom.Pro.Ves.SI.003", 10000) end, 0);
	
	Cutscene_Walkon:action(function() add_infotext("Rom.Pro.Vesuvius.Info.011", "Rom.Pro.Vesuvius.Info.012", "Rom.Pro.Vesuvius.Info.013", "Rom.Pro.Vesuvius.Info.014", "Rom.Pro.Vesuvius.Info.015"); end, 2000);
	
	-- show and highlight the advisor progress button
	Cutscene_Walkon:action(function() Advice_Progress_Button:SetVisible(true); end, 9000);
	Cutscene_Walkon:action(function() bm:highlight_component("root", "button_newest", true, false); end, 9000);
	Cutscene_Walkon:action(function() bm:enable_cinematic_ui(true, true, true); end, 9000);
	
	Cutscene_Walkon:start();
	
	eh:add_listener(
		"Cutscene_Skirmishers_Advice_Dismissed",
		"ComponentLClickUp",
		function(context) return context.string == "button_newest" end,
		function(context) bm:stop_advisor_queue(); end,
		false
	);
	
	eh:add_listener(
		"Cutscene_Skirmishers_Advice_Dismissed",
		"AdviceDismissed",
		true,
		function(context) Cutscene_Walkon:skip(); end,
		false
	);
end;


function Show_Advisor_Dismiss_Button(value)
	UIComponent(bm:ui_component("button_newest")):SetVisible(value);
end;








C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\pb_prologue_vesuvius\pb_declarations.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	DECLARATIONS SCRIPT
--
--	Declare alliances, armies, convex areas and anything else of note in here
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

cam = bm:camera();
eh = event_handler:new(AddEventCallBack);
start_advice_tickbox_listener(eh);
Advice_Progress_Button = false;

--
-- Army Declarations
--

Alliances = bm:alliances();

Alliance_Rom = Alliances:item(1);
Army_Rom_01 = Alliance_Rom:armies():item(1);

Alliance_Sam = Alliances:item(2); 
Army_Sam_01 = Alliance_Sam:armies():item(1);


--
-- Script Unit Declarations
--

SUnit_Rom_01 = script_unit:new(Army_Rom_01, "Rom_01");
SUnit_Rom_02 = script_unit:new(Army_Rom_01, "Rom_02");
SUnit_Rom_03 = script_unit:new(Army_Rom_01, "Rom_03");
SUnit_Rom_04 = script_unit:new(Army_Rom_01, "Rom_04");
SUnit_Rom_05 = script_unit:new(Army_Rom_01, "Rom_05");
SUnit_Rom_06 = script_unit:new(Army_Rom_01, "Rom_06");
SUnit_Rom_07 = script_unit:new(Army_Rom_01, "Rom_07");
SUnit_Rom_08 = script_unit:new(Army_Rom_01, "Rom_08");
SUnit_Rom_09 = script_unit:new(Army_Rom_01, "Rom_09");
SUnit_Rom_10 = script_unit:new(Army_Rom_01, "Rom_10");
SUnit_Rom_11 = script_unit:new(Army_Rom_01, "Rom_11");
SUnit_Rom_12 = script_unit:new(Army_Rom_01, "Rom_12");
SUnit_Rom_13 = script_unit:new(Army_Rom_01, "Rom_13");
SUnit_Rom_14 = script_unit:new(Army_Rom_01, "Rom_14");

UC_Rom_01_All = unitcontroller_from_army(Army_Rom_01);

Rom_Sunits = {
	SUnit_Rom_01,
	SUnit_Rom_02,
	SUnit_Rom_03,
	SUnit_Rom_04,
	SUnit_Rom_05,
	SUnit_Rom_06,
	SUnit_Rom_07,
	SUnit_Rom_08,
	SUnit_Rom_09,
	SUnit_Rom_10,
	SUnit_Rom_11,
	SUnit_Rom_12,
	SUnit_Rom_13,
	SUnit_Rom_14
};

Rom_Main_Sunits = {
	SUnit_Rom_01,
	SUnit_Rom_02,
	SUnit_Rom_03,
	SUnit_Rom_04,
	SUnit_Rom_05,
	SUnit_Rom_06,
	SUnit_Rom_07,
	SUnit_Rom_08,
	SUnit_Rom_09,
	SUnit_Rom_10
};

Rom_Static_Sunits = {
	SUnit_Rom_01,
	SUnit_Rom_02,
	SUnit_Rom_03,
	SUnit_Rom_04,
	SUnit_Rom_05,
	SUnit_Rom_06,
	SUnit_Rom_07,
	SUnit_Rom_08
};

Rom_Hidden_Cav_Sunits = {
	SUnit_Rom_11,
	SUnit_Rom_12,
	SUnit_Rom_13,
	SUnit_Rom_14
};











SUnit_Sam_01 = script_unit:new(Army_Sam_01, "Sam_01");
SUnit_Sam_02 = script_unit:new(Army_Sam_01, "Sam_02");
SUnit_Sam_03 = script_unit:new(Army_Sam_01, "Sam_03");
SUnit_Sam_04 = script_unit:new(Army_Sam_01, "Sam_04");
SUnit_Sam_05 = script_unit:new(Army_Sam_01, "Sam_05");
SUnit_Sam_06 = script_unit:new(Army_Sam_01, "Sam_06");
SUnit_Sam_07 = script_unit:new(Army_Sam_01, "Sam_07");
SUnit_Sam_08 = script_unit:new(Army_Sam_01, "Sam_08");
SUnit_Sam_09 = script_unit:new(Army_Sam_01, "Sam_09");
SUnit_Sam_10 = script_unit:new(Army_Sam_01, "Sam_10");
SUnit_Sam_11 = script_unit:new(Army_Sam_01, "Sam_11");
SUnit_Sam_12 = script_unit:new(Army_Sam_01, "Sam_12");
SUnit_Sam_13 = script_unit:new(Army_Sam_01, "Sam_13");
SUnit_Sam_14 = script_unit:new(Army_Sam_01, "Sam_14");
SUnit_Sam_15 = script_unit:new(Army_Sam_01, "Sam_15");
SUnit_Sam_16 = script_unit:new(Army_Sam_01, "Sam_16");

UC_Sam_01_All = unitcontroller_from_army(Army_Sam_01);
UC_Sam_01_All:take_control();



Sam_Sunits = {
	SUnit_Sam_01,
	SUnit_Sam_02,
	SUnit_Sam_03,
	SUnit_Sam_04,
	SUnit_Sam_05,
	SUnit_Sam_06,
	SUnit_Sam_07,
	SUnit_Sam_08,
	SUnit_Sam_09,
	SUnit_Sam_10,
	SUnit_Sam_11,
	SUnit_Sam_12,
	SUnit_Sam_13,
	SUnit_Sam_14,
	SUnit_Sam_15,
	SUnit_Sam_16
};

Sam_Main_Sunits = {
	SUnit_Sam_01,
	SUnit_Sam_02,
	SUnit_Sam_03,
	SUnit_Sam_04,
	SUnit_Sam_05,
	SUnit_Sam_06,
	SUnit_Sam_07,
	SUnit_Sam_08,
	SUnit_Sam_09,
	SUnit_Sam_10
};

Sam_Skirmisher_Sunits = {
	SUnit_Sam_11,
	SUnit_Sam_12,
	SUnit_Sam_13,
	SUnit_Sam_14,
	SUnit_Sam_15,
	SUnit_Sam_16
};

AI_Sam_Skirmishers = Alliance_Sam:create_ai_unit_planner();
AI_Sam_Main = Alliance_Sam:create_ai_unit_planner();


--
-- Buildings
--

-- Building_01 = get_building_near(bm, 0, 0);









--
-- Convex Areas
--


Area_Combat_Zone = convex_area:new(
	{
		v(-120, -740),
		v(-90, -60),
		v(200, 230),
		v(760, -100)
	}
);


Area_Cav_Visible_Zone = convex_area:new(
	{
		v(-160, -390),
		v(-80, -130),
		v(190, 170),
		v(340, 90)
	}
);


Area_Samnite_Skirmisher_Advance = convex_area:new(
	{
		v(370, -204),
		v(200, -375),
		v(240, -240)
	}
);



--
-- Start Positions for hidden Roman cavalry
--

SUnit_Rom_11.Pos_Start = v(-458.5, -57.1)
SUnit_Rom_11.Orient_Start = r_to_d(1.92)
SUnit_Rom_11.Width_Start = 19

SUnit_Rom_12.Pos_Start = v(-465.9, -76.7)
SUnit_Rom_12.Orient_Start = r_to_d(1.92)
SUnit_Rom_12.Width_Start = 17

SUnit_Rom_13.Pos_Start = v(-488, -46.3)
SUnit_Rom_13.Orient_Start = r_to_d(1.94)
SUnit_Rom_13.Width_Start = 17

SUnit_Rom_14.Pos_Start = v(-495.3, -64.9)
SUnit_Rom_14.Orient_Start = r_to_d(1.94)
SUnit_Rom_14.Width_Start = 17

function Hide_Rom_Cav()
	for i = 1, #Rom_Hidden_Cav_Sunits do
		local current_sunit = Rom_Hidden_Cav_Sunits[i];
		
		Hide_Units(current_sunit.uc);
	end;
end;





function Teleport_Rom_Cav_Into_Forest()
	for i = 1, #Rom_Hidden_Cav_Sunits do
		local current_sunit = Rom_Hidden_Cav_Sunits[i];
		
		current_sunit.uc:teleport_to_location(current_sunit.Pos_Start, current_sunit.Orient_Start, current_sunit.Width_Start);
	end;
end;


SUnit_Rom_11.Pos_Walkon = v(-434.7, -66)
SUnit_Rom_11.Orient_Walkon = r_to_d(1.93)
SUnit_Rom_11.Width_Walkon = 19

SUnit_Rom_12.Pos_Walkon = v(-442.1, -85.5)
SUnit_Rom_12.Orient_Walkon = r_to_d(1.93)
SUnit_Rom_12.Width_Walkon = 17

SUnit_Rom_13.Pos_Walkon = v(-464, -54.9)
SUnit_Rom_13.Orient_Walkon = r_to_d(1.95)
SUnit_Rom_13.Width_Walkon = 17

SUnit_Rom_14.Pos_Walkon = v(-471.5, -73.6)
SUnit_Rom_14.Orient_Walkon = r_to_d(1.95)
SUnit_Rom_14.Width_Walkon = 17


function Reveal_Rom_Cav()
	for i = 1, #Rom_Hidden_Cav_Sunits do
		local current_sunit = Rom_Hidden_Cav_Sunits[i];
		
		Show_Units(current_sunit.uc);
		
		current_sunit.uc:goto_location_angle_width(current_sunit.Pos_Walkon, current_sunit.Orient_Walkon, current_sunit.Width_Walkon);
		current_sunit.uc:release_control();
	end;
end;











-- Main army

SUnit_Sam_01.Pos_Advance = v(150.133,-244.049)
SUnit_Sam_01.Orient_Advance = r_to_d(-0.846662)
SUnit_Sam_01.Width_Advance = 17.8846

SUnit_Sam_02.Pos_Advance = v(163.203,-229.302)
SUnit_Sam_02.Orient_Advance = r_to_d(-0.851072)
SUnit_Sam_02.Width_Advance = 17.9539

SUnit_Sam_03.Pos_Advance = v(176.394,-214.576)
SUnit_Sam_03.Orient_Advance = r_to_d(-0.849346)
SUnit_Sam_03.Width_Advance = 17.9524

SUnit_Sam_04.Pos_Advance = v(189.561,-199.835)
SUnit_Sam_04.Orient_Advance = r_to_d(-0.848387)
SUnit_Sam_04.Width_Advance = 17.9007

SUnit_Sam_05.Pos_Advance = v(202.761,-185.469)
SUnit_Sam_05.Orient_Advance = r_to_d(-0.849729)
SUnit_Sam_05.Width_Advance = 17.0323

SUnit_Sam_06.Pos_Advance = v(215.385,-171.448)
SUnit_Sam_06.Orient_Advance = r_to_d(-0.851551)
SUnit_Sam_06.Width_Advance = 17.0099

SUnit_Sam_07.Pos_Advance = v(153.795,-268.283)
SUnit_Sam_07.Orient_Advance = r_to_d(-0.876574)
SUnit_Sam_07.Width_Advance = 29.1378

SUnit_Sam_08.Pos_Advance = v(236.891,-172.299)
SUnit_Sam_08.Orient_Advance = r_to_d(-0.852318)
SUnit_Sam_08.Width_Advance = 28.5418

SUnit_Sam_09.Pos_Advance = v(158.614,-214.55)
SUnit_Sam_09.Orient_Advance = r_to_d(-0.868041)
SUnit_Sam_09.Width_Advance = 40.8015

SUnit_Sam_10.Pos_Advance = v(186.535,-182.558)
SUnit_Sam_10.Orient_Advance = r_to_d(-0.868329)
SUnit_Sam_10.Width_Advance = 40.9989

-- Skirmishers

SUnit_Sam_11.Pos_Advance = v(230.161,-329.323)
SUnit_Sam_11.Orient_Advance = r_to_d(-0.8)
SUnit_Sam_11.Width_Advance = 27.7

SUnit_Sam_12.Pos_Advance = v(250.29,-308.725)
SUnit_Sam_12.Orient_Advance = r_to_d(-0.8)
SUnit_Sam_12.Width_Advance = 25.9

SUnit_Sam_13.Pos_Advance = v(269.784,-288.761)
SUnit_Sam_13.Orient_Advance = r_to_d(-0.8)
SUnit_Sam_13.Width_Advance = 25.9

SUnit_Sam_14.Pos_Advance = v(289.278,-268.798)
SUnit_Sam_14.Orient_Advance = r_to_d(-0.8)
SUnit_Sam_14.Width_Advance = 25.9

SUnit_Sam_15.Pos_Advance = v(308.762,-248.845)
SUnit_Sam_15.Orient_Advance = r_to_d(-0.8)
SUnit_Sam_15.Width_Advance = 25.9

SUnit_Sam_16.Pos_Advance = v(328.266,-228.891)
SUnit_Sam_16.Orient_Advance = r_to_d(-0.8)
SUnit_Sam_16.Width_Advance = 25.9



function Advance_Sam_Main_Army()
	for i = 1, #Sam_Main_Sunits do
		local current_sunit = Sam_Main_Sunits[i];
		
		current_sunit.uc:goto_location_angle_width(current_sunit.Pos_Advance, current_sunit.Orient_Advance, current_sunit.Width_Advance);
	end;
end;







C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\pb_prologue_vesuvius\pb_main.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	MAIN BATTLE SCRIPT
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------




-- called at start of deployment phase
function Deployment_Phase()
	bm:out("Battle is in deployment phase");
	
	-- hide Roman cavalry at start
	Hide_Rom_Cav();
	
	-- take units out of guard mode to start
	--for i = 1, #Rom_Sunits do
	--	Rom_Sunits[i].uc:change_behaviour_active("defend", false);
	--end;
	
	-- make the Start Battle button invisible and inactive
	UIComponent(bm:ui_component("finish_deployment")):SetVisible(false);
	
	UIComponent(bm:ui_component("button_battle_start")):SetState("inactive");
	
	-- listen for loading screen being dismissed
	local uic = UIComponent(bm:ui_component("prologue"));
	
	if uic and uic:Visible() and uic:CurrentAnimationId() == "" then
		bm:out("Prologue loading screen is visible, waiting for it to be dismissed ...");
		eh:add_listener(
			"Loading_Screen_Dismissed",
			"LoadingScreenDismissed",
			true,
			function() Play_Cutscene_Intro() end,
			false
		);
	else
		bm:out("Prologue loading screen is not visible, continuing immediately");
		Play_Cutscene_Intro();
	end;
	
	
end;


-- intro cutscene pan is finished
function Cutscene_Intro_Finished()
	bm:out("Cutscene_Intro_Finished() called");

	-- don't close advisor window by default
	bm:dont_close_queue_advice();
	
	-- enable Start Battle button when the player moves units
	bm:watch(
		function()
			return Has_Player_Moved_Units_During_Deployment()
		end,
		0,
		function()
			UIComponent(bm:ui_component("button_battle_start")):SetState("active");
		end
	);
	
	-- make the Start Battle button visible
	bm:callback(function() UIComponent(bm:ui_component("finish_deployment")):SetVisible(true) end, 1000);
end;


function Has_Player_Moved_Units_During_Deployment()
	for i = 1, #Rom_Main_Sunits do
		local current_sunit = Rom_Main_Sunits[i];
		
		if current_sunit.unit:position():distance(current_sunit.start_position) > 10 then
			return true;
		end;
	end;
	
	return false;
end;


function Issue_Deployment_Infotext_And_Objectives()		
	-- will get cancelled if this advice gets overwritten
	bm:callback(
		function()
			add_infotext("Rom.Pro.Vesuvius.Info.001", "Rom.Pro.Vesuvius.Info.002", "Rom.Pro.Vesuvius.Info.003", "Rom.Pro.Vesuvius.Info.004");
		end,
		2000,
		"battle_manager_advisor_queue"
	);
	
	-- won't get cancelled
	bm:callback(
		function()
			set_objective("Rom.Pro.Vesuvius.Objective_01");
		end,
		2000
	);
end;


-- the interactive battle has started
function Start_Battle()
	bm:out("Battle is Starting");
	
	cam:fade(false, 0.5);
		
	-- start rout manager
	bm:start_rout_manager(1);
	
	-- complete previous objective
	complete_objective("Rom.Pro.Vesuvius.Objective_01");
	
	-- register victory and defeat VO callbacks
	bm:setup_victory_callback(function() Battle_Is_Ending() end);
	
	Teleport_Rom_Cav_Into_Forest();	
	
	-- startup advice
	-- Send some scouts forward to observe the Samnite advance, commander. The brow of the hill obscures our view from here.
	bm:stop_advisor_queue();
	bm:callback(
		function() 
			bm:queue_advisor("Rom.Pro.Ves.AD.011", 10000, false, function() Issue_Start_Battle_Infotext_Objectives() end); 
		end, 
		2000
	);
	
	-- watch for player scouting Samnites
	bm:watch(function() return Has_Player_Scouted_Samnites() end, 0, function() Player_Has_Scouted_Samnites() end)
	
	-- watch for Silanus dying
	bm:watch(function() return not Army_Rom_01:is_commander_alive() end, 0, function() Battle_Is_Ending() end);
end;


function Issue_Start_Battle_Infotext_Objectives()
	add_infotext(2, "Rom.Pro.Vesuvius.Info.040", "Rom.Pro.Vesuvius.Info.041", "Rom.Pro.Vesuvius.Info.042", "Rom.Pro.Vesuvius.Info.043");

	bm:callback(function() remove_objective("Rom.Pro.Vesuvius.Objective_01") end, 1000);	
	bm:callback(function() set_objective("Rom.Pro.Vesuvius.Objective_04") end, 2000);
end;


----------------------------------------------
--
--	SCOUTING
--
----------------------------------------------

--	Area_Samnite_Scout_Zone_Approach = convex_area:new(
--		{
--			v(-200, -470),
--			v(-90, -155),
--			v(250, 200),
--			v(350, 100)
--		}
--	);


function Has_Player_Scouted_Samnites()
	--	return Area_Samnite_Scout_Zone_Approach:is_in_area(Rom_Sunits);
	
	-- count the number of visible Samnite units
	local counter = 0;
	
	for i = 1, #Sam_Sunits do
		local current_sunit = Sam_Sunits[i];
		
		if current_sunit.unit:is_visible_to_alliance(Alliance_Rom) then
			counter = counter + 1;
		end;
	end;
	
	bm:out("Has_Player_Scouted_Samnites() called, #Sam_Sunits is " .. tostring(#Sam_Sunits) .. ", counter is " .. tostring(counter));
	
	if counter > #Sam_Sunits / 2.5 then
		return true;
	end;
	
	return false;
end;

POS_Player_Forward_Line_Scouting_A = v(-30, -225);
POS_Player_Forward_Line_Scouting_B = v(275, 130);


function Player_Has_Scouted_Samnites()
	-- make Samnites advance immediately
	Start_Sam_Skirmisher_Advance();
	
	-- Force_Visibility(Sam_Skirmisher_Sunits, true);
	-- bm:out("Forcing Samnite skirmisher units to be visible");
	
	-- watch for player moving too far forward
	bm:watch(
		function()
			return has_crossed_line(Rom_Sunits, POS_Player_Forward_Line_Scouting_A, POS_Player_Forward_Line_Scouting_B);
		end,
		0,
		function()
			-- stop units
			UC_Rom_01_All:halt();
			
			-- force next cutscene
			Progress_To_Skirmisher_Cutscene();
		end,
		"Samnite_Scouted_Player_Approaches_Samnites_Pre_Cutscene_Watch"
	);
	
	-- wait a bit and then trigger some VO
	-- Hold positions, men! We are here to guard this pass, not chase them back to Samnium!
	bm:callback(
		function()
			bm:queue_advisor(
				"Rom.Pro.Ves.SI.002", 
				7000, 
				false, 
				function()
					complete_objective("Rom.Pro.Vesuvius.Objective_04");
					--add_infotext(2, "Rom.Pro.Vesuvius.Info.005", "Rom.Pro.Vesuvius.Info.006", "Rom.Pro.Vesuvius.Info.007");
					
					-- start checking halt button
					Check_Halt_Highlight();
					
					eh:add_listener(
						"halt_button_highlight",
						"ComponentLClickUp",
						function(context) return context.string == "button_halt" end,
						function() Remove_Halt_Highlight() end,
						false
					);
				end
			)
			Advice_Progress_Button = UIComponent(bm:ui_component("button_newest"));
			Advice_Progress_Button:SetVisible(false);
		end, 
		3000
	);
end;


BOOL_Halt_Highlight_Active = false;
BOOL_Stop_Halt_Highlight = false;

function Check_Halt_Highlight()
	local halt_highlight_state = UIComponent(bm:ui_component("button_halt")):CurrentState() == "active";
	
	if BOOL_Stop_Halt_Highlight then
		return;
	end;
	
	bm:out("Check_Halt_Highlight:: state of component: " .. tostring(UIComponent(bm:ui_component("button_halt")):CurrentState()) .. ", halt_highlight_state is " .. tostring(halt_highlight_state) .. ", BOOL_Halt_Highlight_Active is " .. tostring(BOOL_Halt_Highlight_Active));

	if not halt_highlight_state and BOOL_Halt_Highlight_Active then
		-- button is not active, highlight is active
		Ves_Highlight_Component("root", "button_halt", false, false);
		BOOL_Halt_Highlight_Active = false;
	elseif halt_highlight_state and not BOOL_Halt_Highlight_Active then
		-- button is active, highlight is not
		Ves_Highlight_Component("root", "button_halt", true, false);
		BOOL_Halt_Highlight_Active = true;
	end;
	
	bm:callback(function() Check_Halt_Highlight() end, 100, "halt_button_highlight");
end;

	
function Remove_Halt_Highlight()
	Ves_Highlight_Component("root", "button_halt", false, false);
	BOOL_Stop_Halt_Highlight = true;
	
	bm:remove_process("halt_button_highlight");
	eh:remove_listener("halt_button_highlight");
end;
	
	
	
	
	
	
	
function Start_Sam_Skirmisher_Advance()
	bm:out("Advancing Samnite Skirmishers");
	
	for i = 1, #Sam_Skirmisher_Sunits do
		local current_sunit = Sam_Skirmisher_Sunits[i];
		
		current_sunit.uc:goto_location_angle_width(current_sunit.Pos_Advance, current_sunit.Orient_Advance, current_sunit.Width_Advance, true);
	end;
	
	bm:watch(function() return Area_Samnite_Skirmisher_Advance:is_in_area(Sam_Skirmisher_Sunits) end, 0, function() Samnite_Skirmishers_In_Position() end, "Samnite_Skirmisher_Advance")
end;


function Samnite_Skirmishers_In_Position()
	-- make advice continue button visible//highlighted
	Advice_Progress_Button = UIComponent(bm:ui_component("button_newest"));
	Advice_Progress_Button:SetVisible(true);
	bm:highlight_component("root", "button_newest", true, false);
	
	
	bm:out("Samnite Skirmishers are in position");
	
	eh:add_listener(
		"Samnite_Skirmishers_In_Position",
		"ComponentLClickUp",
		function(context) return context.string == "button_newest" end,
		function(context) 
			--hide advice button//highlight
			Advice_Progress_Button:SetVisible(false);
			bm:highlight_component("root", "button_newest", false, false);
			bm:stop_advisor_queue();
		end,
		false
	);
	
	eh:add_listener(
		"Samnite_Skirmishers_In_Position",
		"AdviceDismissed",
		true,
		function(context) Progress_To_Skirmisher_Cutscene(); end,
		false
	);
end;


function Progress_To_Skirmisher_Cutscene()
	Force_Visibility(Sam_Skirmisher_Sunits, true);
	bm:out("Forcing Samnite skirmisher units to be visible");

	-- remove some listeners
	eh:remove_listener("Samnite_Skirmishers_In_Position");
	bm:remove_process("Samnite_Skirmisher_Advance");
	bm:remove_process("Samnite_Scouted_Player_Approaches_Samnites_Pre_Cutscene_Watch");
	
	-- remove objective
	remove_objective("Rom.Pro.Vesuvius.Objective_04");
	
	-- unhighlight guard mode button
	Remove_Halt_Highlight();
		
	Play_Cutscene_Skirmishers();
end;













----------------------------------------------
--
--	SKIRMISHER/CAVALRY CUTSCENES
--
----------------------------------------------


function Cutscene_Skirmishers_End()
	Play_Cutscene_Walkon();
	--bm:callback(function() Play_Cutscene_Walkon() end, 1000);
end;


function Samnite_Skirmishers_Cheer()
	for i = 1, #Sam_Skirmisher_Sunits do
		bm:callback(function() Sam_Skirmisher_Sunits[i].uc:start_celebrating() end, i * 200);
	end;
end;












----------------------------------------------
--
--	MAIN ADVANCE
--
----------------------------------------------

POS_SE_Corner = v(1000, -1000);


function Start_Sam_Skirmisher_Attack()
	-- start the main army advancing again
	Advance_Sam_Main_Army();
	
	Force_Visibility(Sam_Skirmisher_Sunits, false);
	bm:out("Forcing Samnite skirmisher units to be hidden");
	
	-- hide advice progress button and stop highlight
	UIComponent(bm:ui_component("button_newest")):SetVisible(false);
	bm:highlight_component("root", "button_newest", false, false);

	-- start Skirmishers attacking
	SAI_Sam_Skirmishers = script_ai_planner:new("SAI_Sam_Skirmishers", Sam_Skirmisher_Sunits);
	SAI_Sam_Skirmishers:set_debug_all();
	SAI_Sam_Skirmishers:move_to_position_of_sunit(SUnit_Rom_01);
	
	-- Advisor message
	bm:callback(
		function()
			bm:stop_advisor_queue();
			-- Advance the cavalry to the side of our position. Keep them concealed: use the brow of the hill, or the forest, as cover!
			bm:queue_advisor("Rom.Pro.Ves.SI.004", 10000, false, function() Issue_Visibility_Infotext() end);
		end,
		1000
	);
	
	-- objectives
	bm:callback(
		function()
			set_objective("Rom.Pro.Vesuvius.Objective_02");
			set_objective("Rom.Pro.Vesuvius.Objective_03");
		end,
		2000
	);
	
	-- Watch for player's army receiving casualties
	cache_health(Rom_Main_Sunits);
		
	-- Watch for conditions that mean the main Samnite army should engage
	-- (player's cavalry becoming visible, or for player's army moving forward, or timeout)
	cache_position(Rom_Main_Sunits);
	
	bm:watch(function() return has_moved(Rom_Static_Sunits, POS_SE_Corner, 250) end, 10000, function() Launch_Samnite_Main_Attack("Roman army moved forward") end, "Samnite_Main_Attack_Watch");
	bm:watch(function() return Is_Visible(Rom_Hidden_Cav_Sunits) end, 25000, function() Launch_Samnite_Main_Attack("Roman cav is visible") end, "Samnite_Main_Attack_Watch");
	bm:watch(function() return Is_Sam_Skirmisher_Ammo_Spent() end, 10000, function() Launch_Samnite_Main_Attack("Skirmisher ammo is spent") end, "Samnite_Main_Attack_Watch");
	bm:callback(function() Launch_Samnite_Main_Attack("Timeout") end, 240000, "Samnite_Main_Attack_Watch");
	
	-- watch for players units starting to rout
	-- Silanus! Our men start to rout!
	bm:watch(function() return num_units_routing(Army_Rom_01) > 1 end, 0, function() bm:queue_advisor("Rom.Pro.Ves.AD.010", 10000) end, "Samnite_Main_Attack_Watch");
	
	-- watch for cavalry moving into position
	bm:watch(function() return Is_Cavalry_In_Position() end, 0, function() Rom_Cavalry_In_Position() end, "Roman_Cavalry_Position_Watch");
end;


function Issue_Visibility_Infotext()
	add_infotext(2, "Rom.Pro.Vesuvius.Info.016", "Rom.Pro.Vesuvius.Info.017", "Rom.Pro.Vesuvius.Info.018", "Rom.Pro.Vesuvius.Info.019", "Rom.Pro.Vesuvius.Info.020");
end;








----------------------------------------------
--
--	ROMAN CAV IN POSITION
--
----------------------------------------------


-- redo
function Is_Cavalry_In_Position()
	for i = 1, #Rom_Hidden_Cav_Sunits do
		local current_sunit = Rom_Hidden_Cav_Sunits[i];
		
		if not Area_Combat_Zone:is_in_area(current_sunit.unit:position()) then
			return false;
		end;
	end;
	
	return true;
end;


function Rom_Cavalry_In_Position()
	-- The ambush is in place, commander !
	bm:queue_advisor("Rom.Pro.Ves.AD.008", 5000);
end;


-- check if Roman cav is visible to enemy
function Is_Visible(t)
	for i = 1, #Rom_Hidden_Cav_Sunits do
		local current_sunit = Rom_Hidden_Cav_Sunits[i];
		
		if current_sunit.unit:is_visible_to_alliance(Alliance_Sam) then
			bm:out("Roman cavalry unit(s) visible to enemy");
			bm:remove_process("Roman_Cavalry_Position_Watch");
			return true;
		end;
	end;

	return false;
end;








----------------------------------------------
--
--	SAMNITE AMMO SPENT
--
----------------------------------------------

function Is_Sam_Skirmisher_Ammo_Spent()
	for i = 1, #Sam_Skirmisher_Sunits do
		local current_sunit = Sam_Skirmisher_Sunits[i];
		
		if current_sunit.unit:ammo_left() == 0 then
			return true;
		end;
	end;
	
	return false;
end;








----------------------------------------------
--
--	UNDER MISSILE ATTACK
--
----------------------------------------------


function Is_Player_Under_Missile_Fire()
	for i = 1, #Rom_Main_Sunits do
		local current_sunit = Rom_Main_Sunits[i];
		
		if current_sunit.unit:is_under_missile_attack() then
			return true;
		end;
	end;
	
	return false;
end;




----------------------------------------------
--
--	MAIN ARMY ATTACK
--
----------------------------------------------



Area_Fort_Boundary = convex_area:new(
	{
		v(-14, 294),
		v(132, 136),
		v(18, 42),
		v(-120, 196)
	}
);


function Issue_Camp_Warning()
	bm:queue_advisor("Rom.Pro.Ves.AD.012", 25000);

	add_infotext(2, "Rom.Pro.Vesuvius.Info.044", "Rom.Pro.Vesuvius.Info.045", "Rom.Pro.Vesuvius.Info.046");
end;


BOOL_Main_Samnite_Attack_Launched = false;

function Launch_Samnite_Main_Attack(reason)
	if BOOL_Main_Samnite_Attack_Launched then
		return;
	end;

	bm:out("Launch_Samnite_Main_Attack() called, reason: " .. tostring(reason));
	
	BOOL_Main_Samnite_Attack_Launched = true;
	
	bm:remove_process("Samnite_Main_Attack_Watch");
	bm:remove_process("Roman_Cavalry_Position_Watch");
	
	-- create an AI planner for the main Samnite force down the hill, and instruct it to merge into the skirmisher force further up the hill
	SAI_Sam_Main = script_ai_planner:new("SAI_Sam_Main", Sam_Main_Sunits);
	SAI_Sam_Main:merge_into(SAI_Sam_Skirmishers);
	
	-- Advisor
	bm:callback(
		function()
			-- The main body of the enemy are advancing, Silanus!
			bm:queue_advisor("Rom.Pro.Ves.AD.004", 4000);
	
			-- Let them approach. That muddy ground will sap their strength!
			bm:queue_advisor("Rom.Pro.Ves.SI.006", 20000, false, function() add_infotext(2, "Rom.Pro.Vesuvius.Info.028", "Rom.Pro.Vesuvius.Info.029", "Rom.Pro.Vesuvius.Info.030") end);
		end,
		10000
	);
		
	bm:watch(function() return distance_between_forces(Rom_Sunits, Sam_Main_Sunits, true) < 30 end, 20000, function() Issue_Battle_Joined_Advice() end);
	
	bm:watch(function() return Area_Fort_Boundary:is_in_area(Sam_Sunits, true) end, 1000, function() Issue_Camp_Warning() end);
	
end;


function Issue_Battle_Joined_Advice()
	-- Fight well, men, and hold your ground! The fate of Rutilus and all of Rome depends on us!
	bm:queue_advisor("Rom.Pro.Ves.SI.007", 8000);
	
	bm:callback(function() Issue_General_Abilities_Advice() end, 50000);
end;











----------------------------------------------
--
--	GENERALS ABILITIES ADVICE
--
----------------------------------------------

function Issue_General_Abilities_Advice()
	-- Advisor
	-- Propraetor, your very presence can sway this battle! Your word can rally and inspire the men before you. Use your influence!
	bm:queue_advisor("Rom.Pro.Ves.AD.005", 12000, false, function() Issue_General_Abilities_Infotext() end);
end;


function Issue_General_Abilities_Infotext()
	add_infotext(2, "Rom.Pro.Vesuvius.Info.031","Rom.Pro.Vesuvius.Info.032","Rom.Pro.Vesuvius.Info.033","Rom.Pro.Vesuvius.Info.034","Rom.Pro.Vesuvius.Info.035");
end;









----------------------------------------------
--
--	FORCE VISIBILITY
--
----------------------------------------------

function Force_Visibility(sunits, value)

	for i = 1, #sunits do
		local current_sunit = sunits[i];
		
		current_sunit.uc:set_always_visible_to_all(value)
	end;
	
end;







----------------------------------------------
--
--	GAME FLOW
--
----------------------------------------------

-- pretty basic component highlighting wrapper

__component_highlighted = nil;
__component_highlighted_parent = nil;
__component_highlighted_circle = nil;


function Ves_Highlight_Component(parent, component, enabled, circle)
	bm:highlight_component(parent, component, enabled, circle);

	if enabled then
		__component_highlighted = component;
		__component_highlighted_parent = parent;
		__component_highlighted_circle = circle;
	else
		__component_highlighted = nil;
		__component_highlighted_parent = nil;
		__component_highlighted_circle = nil;
	end;
end;




-- stop any ui highlights that are currently running
function Ves_Stop_All_Highlights()
	if __component_highlighted then
		Ves_Highlight_Component(__component_highlighted_parent, __component_highlighted, false, __component_highlighted_circle);
	end;
end;



BOOL_Battle_Is_Ending = false;

-- the game has gone to victory countdown phase, someone has won
function Battle_Is_Ending()
	if not BOOL_Battle_Is_Ending then
		BOOL_Battle_Is_Ending = true;
					
		if is_routing_or_dead(Alliance_Rom) then	
			bm:out("Player has lost, army is routing");
			
			Player_Has_Lost();
			
		elseif not Army_Rom_01:is_commander_alive() then
			bm:out("Player has lost, general is dead");
			
			-- Silanus has fallen, a black day! Men, retreat!
			bm:queue_advisor("Rom.Pro.Ves.AD.007", 10000);
			fail_objective("Rom.Pro.Vesuvius.Objective_03");
			
			bm:callback(function() UC_Rom_01_All:morale_behavior_rout(); bm:end_battle() end, 10000);
		elseif is_routing_or_dead(Alliance_Sam) then
			bm:out("Player has won !");
			
			complete_objective("Rom.Pro.Vesuvius.Objective_02");
			complete_objective("Rom.Pro.Vesuvius.Objective_03");
			
			-- The Samnites flee! Commander, you are surely feted by the Gods! No previous leader has driven the Samnites back so quickly!
			bm:queue_advisor("Rom.Pro.Ves.AD.009", 10000);
			
			-- Soldiers! Victory is yours! Your descendants will dine on your achievements here today! When he walks free, the Consul will bestow great privileges to you all! You make Rome proud!
			bm:queue_advisor("Rom.Pro.Ves.SI.008", 17000, false, function() Final_Victory_VO_Issued() end);
		else
			-- player has lost because the camp was captured
			bm:out("Player has lost, camp was captured");
			
			Player_Has_Lost();
		end;
	end;
end;


function Player_Has_Lost()
	-- The Samnites have won this day! Come, Silanus, we must flee! Every man, regroup in Rome!
	bm:queue_advisor("Rom.Pro.Ves.AD.006", 10000);
	
	fail_objective("Rom.Pro.Vesuvius.Objective_02");
	
	bm:callback(function() bm:end_battle() end, 10000);
end


function Final_Victory_VO_Issued()
	bm:callback(function() bm:end_battle() end, 17000);
end;







C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\pb_prologue_vesuvius\pb_start.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	INITIAL SCRIPT SETUP
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

-- clear out loaded files
system.ClearRequiredFiles();

-- load in battle script library
require "lua_scripts.Battle_Script_Header";

-- declare battlemanager object
bm = battle_manager:new(empire_battle:new());

-- get battle name from folder, and print header
battle_name, battle_shortform = get_folder_name_and_shortform();

bm:out("==============");
bm:out("==============");
bm:out("==============");
bm:out("Script started: Battle of " .. battle_name);
bm:out("==============");

-- load in other script files associated with this battle
package.path = package.path .. ";data/Script/" .. battle_name .. "/?.lua";

require (battle_shortform .. "_Common");
require (battle_shortform .. "_Declarations");
require (battle_shortform .. "_Cutscenes");
require (battle_shortform .. "_Main");

-- register functions to be called on phase changes
bm:register_phase_change_callback("Deployment", function() Deployment_Phase() end);			-- optional deployment phase callback
bm:register_phase_change_callback("Deployed", function() Start_Battle() end);
bm:suspend_contextual_advice(true);







C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\py_pydna\py_cutscenes.lua
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	CUTSCENES SCRIPT
--
--	Declare intro and other cutscenes
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------


POS_Cam_Cutscene_Intro_Final = v(-162.1, 114.6, -217.4);
Targ_Cam_Cutscene_Intro_Final = v(-42.2, 65.4, -209.3);

SFX_Rom_HB_PY_Intro_02 = new_sfx("Play_Rom_HB_PY_Intro_02_1");
SFX_Rom_HB_PY_Intro_03 = new_sfx("Play_Rom_HB_PY_Intro_03_1");
SFX_Rom_HB_PY_Intro_04 = new_sfx("Play_Rom_HB_PY_Intro_04_1");
SFX_Rom_HB_PY_Intro_05 = new_sfx("Play_Rom_HB_PY_Intro_05_1");
SFX_Rom_HB_PY_Intro_06 = new_sfx("Play_Rom_HB_PY_Intro_06_1");
SFX_Rom_HB_PY_Intro_07 = new_sfx("Play_Rom_HB_PY_Intro_07_1");


Cutscene_Intro = cutscene:new(
	"Cutscene_Intro", 							-- unique string name for cutscene
	UC_Rom_01_All, 								-- unitcontroller over player's army
	45500, 										-- duration of cutscene in ms
	function() Start_Battle() end 				-- what to call when cutscene is finished
);


Cutscene_Intro:set_skippable(true, function() Skip_Cutscene_Intro() end);
Cutscene_Intro:set_skip_camera(POS_Cam_Cutscene_Intro_Final, Targ_Cam_Cutscene_Intro_Final);
-- Cutscene_Intro:set_debug();

BOOL_Egy_Army_In_Start_Position = false;
BOOL_Sel_Army_In_Start_Position = false;


function Play_Cutscene_Intro()

	local subtitles = Cutscene_Intro:subtitles();
	subtitles:set_alignment("bottom_centre");
	subtitles:clear();
	
	Teleport_Rom_Army_Cutscene_Intro_Start();
	Move_Rom_Army_Cutscene_Intro_Start();
	Set_Visible(SUnits_Rom_All, false);
	Set_Visible(SUnits_Mac_All, false);
			
	Cutscene_Intro:action(function() cam:move_to(v(677.1, 16.3, -202.3), v(590.6, 20.7, -192.8), 0, true, 33) end, 0);
	Cutscene_Intro:action(function() cam:move_to(v(677.1, 16.3, -202.3), v(590.6, 20.7, -192.8), 7, true, 31) end, 0);
	Cutscene_Intro:action(function() cam:fade(false, 0.5) end, 0);
	
	-- June 22nd, 168BC
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.PY.Intro_01") end, 2500);
	
	-- A Roman army under Lucius Aemilius Paullus has been sent into Macedon to confront Perseus.
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.PY.Intro_02") end, 6500);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Rom_HB_PY_Intro_02) end, 6500);
	
	Cutscene_Intro:action(function() Set_Visible(SUnits_Rom_All, true) end, 6500);
	Cutscene_Intro:action(function() Set_Visible(SUnits_Mac_All, true) end, 6500);

	Cutscene_Intro:action(function() cam:move_to(v(-693.9, 86.8, -370.6), v(-778.0, 94, -357.7), 0, true, 30) end, 6500);
	Cutscene_Intro:action(function() cam:move_to(v(-693.9, 86.8, -370.6), v(-778.0, 84.5, -357.7), 6.5, false, 31) end, 6500);
	
	Cutscene_Intro:action(
		function()
			local h_camera_bearing = 20;
			local v_camera_bearing = 5;
			local camera_distance = 3.5;
			local commander_height = 1.15;
			local unit_speed = 1.75
			
			local tracking_time_offset = 0.5;
			local tracking_time = 6;
			
			local change_in_terrain_height = -0.2;
			
			-- computer current commander/camera positions and future commander/camera positions
		
			local current_commander_pos = predict_commander_position(SUnit_Rom_01.unit, unit_speed, tracking_time_offset, commander_height);
			local current_camera_pos = get_tracking_offset(current_commander_pos, SUnit_Rom_01.unit:bearing() + h_camera_bearing, v_camera_bearing, camera_distance);
			
			local future_commander_pos = predict_commander_position(SUnit_Rom_01.unit, unit_speed, tracking_time, commander_height);
			local future_camera_pos = get_tracking_offset(future_commander_pos, SUnit_Rom_01.unit:bearing() + h_camera_bearing, v_camera_bearing, camera_distance);
			
			-- compensate for drop in terrain
			future_commander_pos = v_offset(future_commander_pos, 0, change_in_terrain_height, 0);
			future_camera_pos = v_offset(future_camera_pos, 0, change_in_terrain_height, 0);
			
			bm:out("current_commander_pos is " .. v_to_s(current_commander_pos) .. ", current_camera_pos is " .. v_to_s(current_camera_pos));
			bm:out("future_commander_pos is " .. v_to_s(future_commander_pos) .. ", future_camera_pos is " .. v_to_s(future_camera_pos));
						
			cam:move_to(current_camera_pos, current_commander_pos, 0, true, 18);
			cam:move_to(future_camera_pos, future_commander_pos, tracking_time - tracking_time_offset, true, 18);
		end, 
		10000
	);
	
	Cutscene_Intro:action(function() SUnit_Rom_18.uc:teleport_to_location(v(-288.24, -157.47), r_to_d(1.43), 32.5) end, 12000);
	Cutscene_Intro:action(function() SUnit_Rom_18.uc:goto_location(v(-271.4, -155), true) end, 12000);
	
	Cutscene_Intro:action(function() Teleport_Mac_Army_Cutscene_Intro_Walkon_01() end, 12000);
	Cutscene_Intro:action(function() Move_Mac_Army_Cutscene_Intro_Walkon_01() end, 12000);
	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 13500);
	Cutscene_Intro:action(function() subtitles:clear() end, 13500);
	
	-- After days of manoeuvring, the two armies now face each other near Pydna.
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.PY.Intro_03") end, 14000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Rom_HB_PY_Intro_03) end, 14000);
	
	Cutscene_Intro:action(function() cam:move_to(v(-325.4, 93.9, -159.5), v(-316.4, 92.7, -158.7), 0, true, 30) end, 14000);
	Cutscene_Intro:action(function() cam:move_to(v(-276.5, 93.9, -155.2), v(-267.6, 92.7, -154.4), 6, true, 30) end, 14000);
	
	Cutscene_Intro:action(function() cam:move_to(v(698.9, 10, -5.6), v(590.5, 9.1, -33.3), 0, true, 35) end, 18500);
	Cutscene_Intro:action(function() cam:move_to(v(698.9, 10, -5.6), v(590.5, 14.7, -33.3), 5, true, 35) end, 18500);
	
	Cutscene_Intro:action(function() Teleport_Rom_Army_Cutscene_Intro_Skirmish_01() end, 19000);
	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 20000);
	Cutscene_Intro:action(function() subtitles:clear() end, 20000);
	
	-- The Romans, camped in the hills, send a foraging party too close to the Macedonian line.
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.PY.Intro_04") end, 20500);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Rom_HB_PY_Intro_04) end, 20500);
	
	Cutscene_Intro:action(function() Move_Rom_Army_Cutscene_Intro_Skirmish_01() end, 20500);
	
	Cutscene_Intro:action(function() cam:move_to(v(133.3, 65.3, -276.8), v(140.6, 62.6, -272.3), 0, true, 45) end, 22000);
	Cutscene_Intro:action(function() cam:move_to(v(145.3, 67.9, -281.4), v(152.5, 65.2, -276.9), 6, true, 44) end, 22000);
	
	Cutscene_Intro:action(function() Teleport_Mac_Army_Cutscene_Intro_Skirmish_01() end, 22000);
	Cutscene_Intro:action(function() Move_Mac_Army_Cutscene_Intro_Skirmish_01(false) end, 22000);
		
	Cutscene_Intro:action(function() SUnit_Rom_18.uc:attack_unit(SUnit_Mac_17.unit, true, true) end, 24700);
	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 26000);
	Cutscene_Intro:action(function() subtitles:clear() end, 27000);
	
	-- A skirmish breaks out, and increasing numbers of men from either side are drawn in to the fighting.
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.PY.Intro_05") end, 27500);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Rom_HB_PY_Intro_05) end, 27500);
	
	Cutscene_Intro:action(function() cam:move_to(v(288, 35, -234.3), v(279.1, 35.7, -235.3), 0, true, 25) end, 27500);
	Cutscene_Intro:action(function() cam:move_to(v(288, 35, -234.3), v(279.1, 36, -235.3), 4, true, 24) end, 27500);
	
	Cutscene_Intro:action(function() Teleport_Rom_Army_Cutscene_Intro_Walkon_02() end, 27500);
	Cutscene_Intro:action(function() Move_Mac_Army_Cutscene_Intro_Skirmish_01(true) end, 27500);

	Cutscene_Intro:action(function() cam:move_to(v(372.0, 39.4, -271.8), v(314.6, 33.1, -240.4), 0, true, 50) end, 30500);
	Cutscene_Intro:action(function() cam:move_to(v(372.0, 39.4, -271.8), v(311.5, 37.4, -246.3), 4, true, 50) end, 30500);
	
	Cutscene_Intro:action(function() Move_Rom_Army_Cutscene_Intro_Walkon_02() end, 32000);
	Cutscene_Intro:action(function() SUnit_Rom_18.uc:halt() end, 32000);
	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 33500);
	Cutscene_Intro:action(function() subtitles:clear() end, 33500);	
	
	-- The Romans begin to advance, and King Perseus readies his forces.
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.PY.Intro_06") end, 34000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Rom_HB_PY_Intro_06) end, 34000);
	
	Cutscene_Intro:action(function() cam:move_to(v(-158.8, 88.1, -363.5), v(-173.8, 83.4, -339.7), 0, true, 50) end, 34000);
	Cutscene_Intro:action(function() cam:move_to(v(-158.8, 88.1, -363.5), v(-168.6, 82.4, -337.3), 0, true, 50) end, 34000);
	
	Cutscene_Intro:action(function() Teleport_Mac_Army_Cutscene_Intro_Walkon_End() end, 34000);
	Cutscene_Intro:action(function() Move_Mac_Army_Cutscene_Intro_Walkon_End() end, 36000);
	Cutscene_Intro:action(function() Reset_Mac_Army_Cutscene_Intro_End() end, 36000);
	
	Cutscene_Intro:action(function() cam:move_to(v(485.6, 24.2, -170.1), v(600.6, 11.1, -118.7), 0, true, 35) end, 38000);
	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 39000);
	Cutscene_Intro:action(function() subtitles:clear() end, 39000);
		
	Cutscene_Intro:action(function() Teleport_Rom_Army_Cutscene_Intro_End() end, 39000);
	Cutscene_Intro:action(function() Reset_Rom_Army_Cutscene_Intro_End() end, 39000);
	
	-- Roman control of Macedon will be decided today on the field of battle.
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.PY.Intro_07") end, 39500);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Rom_HB_PY_Intro_07) end, 39500);
	
	Cutscene_Intro:action(function() cam:move_to(POS_Cam_Cutscene_Intro_Final, Targ_Cam_Cutscene_Intro_Final, 6, false, 0) end, 40000);	
	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 45500);
	Cutscene_Intro:action(function() subtitles:clear() end, 45500);	
	
	Cutscene_Intro:start();
end;


function Skip_Cutscene_Intro()
	cam:fade(true, 0);
	
	stop_sound(SFX_Rom_HB_PY_Intro_02);
	stop_sound(SFX_Rom_HB_PY_Intro_03);
	stop_sound(SFX_Rom_HB_PY_Intro_04);
	stop_sound(SFX_Rom_HB_PY_Intro_05);
	stop_sound(SFX_Rom_HB_PY_Intro_06);
	stop_sound(SFX_Rom_HB_PY_Intro_07);
	
	bm:callback(
		function()
			Teleport_Rom_Army_Cutscene_Intro_End();
			Reset_Rom_Army_Cutscene_Intro_End();
			
			Teleport_Mac_Army_Cutscene_Intro_End();
			Reset_Mac_Army_Cutscene_Intro_End();
			
			UC_Rom_01_All:release_control();
		end,
		200
	);
			
	bm:callback(function() cam:fade(false, 0.5) end, 1000);
end;








function Set_Visible(sunits, value)
	for i = 1, #sunits do
		local current_sunit = sunits[i];
		-- current_sunit.uc:set_always_visible_to_all(value);
		current_sunit.uc:set_invisible_to_all(not value);
	end;
end;


SUnit_Rom_01.POS_Cutscene_Intro_Start = v(-738.307,-366.679)
SUnit_Rom_01.Orient_Cutscene_Intro_Start = r_to_d(1.31711)
SUnit_Rom_01.Width_Cutscene_Intro_Start = 19.9314

SUnit_Rom_02.POS_Cutscene_Intro_Start = v(-755.649,-367.989)
SUnit_Rom_02.Orient_Cutscene_Intro_Start = r_to_d(1.44616)
SUnit_Rom_02.Width_Cutscene_Intro_Start = 32.4515

SUnit_Rom_03.POS_Cutscene_Intro_Start = v(-783.429,-360.29)
SUnit_Rom_03.Orient_Cutscene_Intro_Start = r_to_d(1.48029)
SUnit_Rom_03.Width_Cutscene_Intro_Start = 17.7642

SUnit_Rom_04.POS_Cutscene_Intro_Start = v(-781.592,-379.601)
SUnit_Rom_04.Orient_Cutscene_Intro_Start = r_to_d(1.46754)
SUnit_Rom_04.Width_Cutscene_Intro_Start = 17.7325

SUnit_Rom_05.POS_Cutscene_Intro_Start = v(-808.115,-372.341)
SUnit_Rom_05.Orient_Cutscene_Intro_Start = r_to_d(1.49525)
SUnit_Rom_05.Width_Cutscene_Intro_Start = 37.5533

SUnit_Rom_06.POS_Cutscene_Intro_Start = v(-824.455,-361.897)
SUnit_Rom_06.Orient_Cutscene_Intro_Start = r_to_d(1.56945)
SUnit_Rom_06.Width_Cutscene_Intro_Start = 16.0053

SUnit_Rom_07.POS_Cutscene_Intro_Start = v(-824.227,-380.661)
SUnit_Rom_07.Orient_Cutscene_Intro_Start = r_to_d(1.56667)
SUnit_Rom_07.Width_Cutscene_Intro_Start = 16.0402

SUnit_Rom_08.POS_Cutscene_Intro_Start = v(-840.323,-362.361)
SUnit_Rom_08.Orient_Cutscene_Intro_Start = r_to_d(1.54587)
SUnit_Rom_08.Width_Cutscene_Intro_Start = 15.9829

SUnit_Rom_09.POS_Cutscene_Intro_Start = v(-839.763,-381.071)
SUnit_Rom_09.Orient_Cutscene_Intro_Start = r_to_d(1.54501)
SUnit_Rom_09.Width_Cutscene_Intro_Start = 15.9886

SUnit_Rom_10.POS_Cutscene_Intro_Start = v(-854.808,-362.475)
SUnit_Rom_10.Orient_Cutscene_Intro_Start = r_to_d(1.56313)
SUnit_Rom_10.Width_Cutscene_Intro_Start = 15.9509

SUnit_Rom_11.POS_Cutscene_Intro_Start = v(-854.589,-381.239)
SUnit_Rom_11.Orient_Cutscene_Intro_Start = r_to_d(1.56015)
SUnit_Rom_11.Width_Cutscene_Intro_Start = 15.9747

SUnit_Rom_12.POS_Cutscene_Intro_Start = v(-868.98,-362.167)
SUnit_Rom_12.Orient_Cutscene_Intro_Start = r_to_d(1.57904)
SUnit_Rom_12.Width_Cutscene_Intro_Start = 15.897

SUnit_Rom_13.POS_Cutscene_Intro_Start = v(-869.101,-381.024)
SUnit_Rom_13.Orient_Cutscene_Intro_Start = r_to_d(1.5847)
SUnit_Rom_13.Width_Cutscene_Intro_Start = 15.9857

SUnit_Rom_14.POS_Cutscene_Intro_Start = v(-882.085,-381.236)
SUnit_Rom_14.Orient_Cutscene_Intro_Start = r_to_d(1.57607)
SUnit_Rom_14.Width_Cutscene_Intro_Start = 16.0341

SUnit_Rom_15.POS_Cutscene_Intro_Start = v(-882.049,-362.449)
SUnit_Rom_15.Orient_Cutscene_Intro_Start = r_to_d(1.57281)
SUnit_Rom_15.Width_Cutscene_Intro_Start = 16.1098

SUnit_Rom_16.POS_Cutscene_Intro_Start = v(-898.191,-371.395)
SUnit_Rom_16.Orient_Cutscene_Intro_Start = r_to_d(1.58853)
SUnit_Rom_16.Width_Cutscene_Intro_Start = 35.8154

SUnit_Rom_17.POS_Cutscene_Intro_Start = v(-915.195,-371.208)
SUnit_Rom_17.Orient_Cutscene_Intro_Start = r_to_d(1.56562)
SUnit_Rom_17.Width_Cutscene_Intro_Start = 35.4453

SUnit_Rom_18.POS_Cutscene_Intro_Start = v(-930.772,-371.268)
SUnit_Rom_18.Orient_Cutscene_Intro_Start = r_to_d(1.56706)
SUnit_Rom_18.Width_Cutscene_Intro_Start = 36.0663


function Teleport_Rom_Army_Cutscene_Intro_Start()
	for i = 1, #SUnits_Rom_All do
		local current_sunit = SUnits_Rom_All[i];
		
		current_sunit.uc:teleport_to_location(current_sunit.POS_Cutscene_Intro_Start, current_sunit.Orient_Cutscene_Intro_Start, current_sunit.Width_Cutscene_Intro_Start);
	end;
end;


function Move_Rom_Army_Cutscene_Intro_Start()
	for i = 1, #SUnits_Rom_All do
		local current_sunit = SUnits_Rom_All[i];
		
		current_sunit.uc:goto_location(v(-562, -343));
	end;
end;



function Teleport_Mac_Army_Cutscene_Intro_Walkon_01()
	SUnit_Mac_11.uc:teleport_to_location(v(697.7, -17.70), r_to_d(-1.88), 19.11);
	SUnit_Mac_12.uc:teleport_to_location(v(691.3, 3.24), r_to_d(-1.88), 18.16);
end;

function Move_Mac_Army_Cutscene_Intro_Walkon_01()
	SUnit_Mac_11:move_to_position_offset(0, 100);
	SUnit_Mac_12:move_to_position_offset(0, 100);
end;


function Teleport_Rom_Army_Cutscene_Intro_Skirmish_01()
	SUnit_Rom_16.uc:teleport_to_location(v(156.5, -263.6), r_to_d(1.48), 35.8);
	SUnit_Rom_17.uc:teleport_to_location(v(136.0, -237.6), r_to_d(1.37), 34.0);
	SUnit_Rom_18.uc:teleport_to_location(v(199.92, -242.7), r_to_d(1.40), 46.4);
	
	SUnit_Rom_16.uc:set_invincible(true);
	SUnit_Rom_17.uc:set_invincible(true);
	SUnit_Rom_18.uc:set_invincible(true);
	
	SUnit_Rom_16.uc:fire_at_will(false);
	SUnit_Rom_17.uc:fire_at_will(false);
	SUnit_Rom_18.uc:fire_at_will(false);
end;

function Move_Rom_Army_Cutscene_Intro_Skirmish_01()
	SUnit_Rom_16.uc:goto_location_angle_width(v(216.3, -267.5), r_to_d(1.25), 35.8, true);
	SUnit_Rom_17.uc:goto_location_angle_width(v(204.5, -209.2), r_to_d(1.28), 34.0, true);
end;


function Teleport_Mac_Army_Cutscene_Intro_Skirmish_01()
	SUnit_Mac_17.uc:teleport_to_location(v(275, -236), r_to_d(4.71), 70);
	SUnit_Mac_18.uc:teleport_to_location(v(340, -193), r_to_d(-1.57), 40);
	
	SUnit_Mac_17.uc:set_invincible(true);
	SUnit_Mac_18.uc:set_invincible(true);
	
	SUnit_Mac_17.uc:fire_at_will(false);
	SUnit_Mac_18.uc:fire_at_will(false);
	
	SUnit_Mac_11.uc:teleport_to_location(v(363, -252), r_to_d(-1.43), 23.45);
	SUnit_Mac_12.uc:teleport_to_location(v(369.7, -195.5), r_to_d(-1.41), 24.6);
	SUnit_Mac_13.uc:teleport_to_location(v(381.0, -155.5), r_to_d(-1.82), 27.6);
	SUnit_Mac_14.uc:teleport_to_location(v(370.4, -105.7), r_to_d(-1.55), 26.9);
end;


function Move_Mac_Army_Cutscene_Intro_Skirmish_01(should_run)
	local should_run = should_run or false;

	SUnit_Mac_18.uc:goto_location(v(285, -200), should_run);
	
	SUnit_Mac_11.uc:goto_location(v(300, -251), should_run);
	SUnit_Mac_12.uc:goto_location(v(285, -200), should_run);
	SUnit_Mac_13.uc:goto_location(v(285, -200), should_run);
	SUnit_Mac_14.uc:goto_location(v(285, -200), should_run);
end;


function Teleport_Rom_Army_Cutscene_Intro_Walkon_02()
	SUnit_Rom_01.uc:teleport_to_location(v(-231.1, -302.5), r_to_d(1.56), 15.3);
	SUnit_Rom_02.uc:teleport_to_location(v(-204.7, -285.1), r_to_d(1.50), 17.4);
	SUnit_Rom_03.uc:teleport_to_location(v(-191.2, -263.0), r_to_d(1.51), 21.9);
	SUnit_Rom_04.uc:teleport_to_location(v(-202.1, -342.2), r_to_d(1.48), 17.0);
	SUnit_Rom_05.uc:teleport_to_location(v(-211.7, -315.4), r_to_d(1.49), 30.4);
	SUnit_Rom_06.uc:teleport_to_location(v(-179.1, -348.3), r_to_d(1.50), 16.2);
	SUnit_Rom_07.uc:teleport_to_location(v(-166.3, -270.9), r_to_d(1.51), 14.7);
	SUnit_Rom_08.uc:teleport_to_location(v(-172.4, -251.3), r_to_d(1.49), 17.4);
	SUnit_Rom_09.uc:teleport_to_location(v(-183.8, -320.0), r_to_d(1.49), 22.4);
	SUnit_Rom_10.uc:teleport_to_location(v(-168.7, -227.3), r_to_d(1.49), 14.1);
	SUnit_Rom_11.uc:teleport_to_location(v(-173.1, -288.5), r_to_d(1.52), 11.5);
	SUnit_Rom_12.uc:teleport_to_location(v(-176.3, -301.0), r_to_d(1.52), 11.8);
	SUnit_Rom_13.uc:teleport_to_location(v(-197.2, -238.6), r_to_d(1.46), 14.2);
	SUnit_Rom_14.uc:teleport_to_location(v(-191.7, -216.7), r_to_d(1.49), 14.9);
	SUnit_Rom_15.uc:teleport_to_location(v(-212.9, -218.5), r_to_d(1.48), 11.8);
end;


function Move_Rom_Army_Cutscene_Intro_Walkon_02()
	SUnit_Rom_01:move_to_position_offset(0, 100);
	SUnit_Rom_02:move_to_position_offset(0, 100);
	SUnit_Rom_03:move_to_position_offset(0, 100);
	SUnit_Rom_04:move_to_position_offset(0, 100);
	SUnit_Rom_05:move_to_position_offset(0, 100);
	
	SUnit_Rom_06:move_to_position_offset(0, 100, true);
	SUnit_Rom_07:move_to_position_offset(0, 100, true);
	SUnit_Rom_08:move_to_position_offset(0, 100, true);
	SUnit_Rom_09:move_to_position_offset(0, 100, true);
	SUnit_Rom_10:move_to_position_offset(0, 100, true);
	SUnit_Rom_11:move_to_position_offset(0, 100, true);
	SUnit_Rom_12:move_to_position_offset(0, 100, true);
	SUnit_Rom_13:move_to_position_offset(0, 100, true);
	SUnit_Rom_14:move_to_position_offset(0, 100, true);
	SUnit_Rom_15:move_to_position_offset(0, 100, true);
end;


function Teleport_Mac_Army_Cutscene_Intro_Walkon_End()
	for i = 1, #SUnits_Mac_Main do
		local current_sunit = SUnits_Mac_Main[i];
		current_sunit:teleport_to_start_location_offset(0, -20);
	end;
end;


function Move_Mac_Army_Cutscene_Intro_Walkon_End()
	for i = 1, #SUnits_Mac_Main do
		local current_sunit = SUnits_Mac_Main[i];
		current_sunit:goto_start_location();
	end;
end;


function Teleport_Rom_Army_Cutscene_Intro_End()
	for i = 1, #SUnits_Rom_All do
		local current_sunit = SUnits_Rom_All[i];
		
		current_sunit:teleport_to_start_location();
	end;
end;


function Reset_Rom_Army_Cutscene_Intro_End()
	for i = 1, #SUnits_Rom_All do
		local current_sunit = SUnits_Rom_All[i];
		
		current_sunit.uc:fire_at_will(true);
		current_sunit.uc:set_invincible(false);
		
		refill_ammo(current_sunit.unit, 1);
		current_sunit.uc:change_fatigue_amount(0.001);
		
		current_sunit.uc:set_always_visible_to_all(false);
		current_sunit.uc:set_invisible_to_all(false);
	end;
end;


function Teleport_Mac_Army_Cutscene_Intro_End()
	for i = 1, #SUnits_Mac_Main do
		local current_sunit = SUnits_Mac_Main[i];
		
		current_sunit:teleport_to_start_location();
	end;
end;


function Reset_Mac_Army_Cutscene_Intro_End()
	for i = 1, #SUnits_Mac_Main do
		local current_sunit = SUnits_Mac_Main[i];
				
		current_sunit.uc:fire_at_will(true);
		current_sunit.uc:set_invincible(false);
		
		refill_ammo(current_sunit.unit, 1);
		current_sunit.uc:change_fatigue_amount(0.01);
		
		current_sunit.uc:set_always_visible_to_all(false);
		current_sunit.uc:set_invisible_to_all(false);
	end;
end;






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\py_pydna\py_declarations.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	DECLARATIONS SCRIPT
--
--	Declare alliances, armies, convex areas and anything else of note in here
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

cam = bm:camera();

--
-- Army Declarations
--

Alliances = bm:alliances();

Alliance_Rom = Alliances:item(1);
Army_Rom_01 = Alliance_Rom:armies():item(1);

Alliance_Mac = Alliances:item(2); 
Army_Mac_01 = Alliance_Mac:armies():item(1);




--
-- Script Unit Declarations
--

SUnit_Rom_01 = script_unit:new(Army_Rom_01, "Rom_01");
SUnit_Rom_02 = script_unit:new(Army_Rom_01, "Rom_02");
SUnit_Rom_03 = script_unit:new(Army_Rom_01, "Rom_03");
SUnit_Rom_04 = script_unit:new(Army_Rom_01, "Rom_04");
SUnit_Rom_05 = script_unit:new(Army_Rom_01, "Rom_05");
SUnit_Rom_06 = script_unit:new(Army_Rom_01, "Rom_06");
SUnit_Rom_07 = script_unit:new(Army_Rom_01, "Rom_07");
SUnit_Rom_08 = script_unit:new(Army_Rom_01, "Rom_08");
SUnit_Rom_09 = script_unit:new(Army_Rom_01, "Rom_09");
SUnit_Rom_10 = script_unit:new(Army_Rom_01, "Rom_10");
SUnit_Rom_11 = script_unit:new(Army_Rom_01, "Rom_11");
SUnit_Rom_12 = script_unit:new(Army_Rom_01, "Rom_12");
SUnit_Rom_13 = script_unit:new(Army_Rom_01, "Rom_13");
SUnit_Rom_14 = script_unit:new(Army_Rom_01, "Rom_14");
SUnit_Rom_15 = script_unit:new(Army_Rom_01, "Rom_15");
SUnit_Rom_16 = script_unit:new(Army_Rom_01, "Rom_16");
SUnit_Rom_17 = script_unit:new(Army_Rom_01, "Rom_17");
SUnit_Rom_18 = script_unit:new(Army_Rom_01, "Rom_18");

UC_Rom_01_All = unitcontroller_from_army(Army_Rom_01);

SUnits_Rom_All = {
	SUnit_Rom_01,
	SUnit_Rom_02,
	SUnit_Rom_03,
	SUnit_Rom_04,
	SUnit_Rom_05,
	SUnit_Rom_06,
	SUnit_Rom_07,
	SUnit_Rom_08,
	SUnit_Rom_09,
	SUnit_Rom_10,
	SUnit_Rom_11,
	SUnit_Rom_12,
	SUnit_Rom_13,
	SUnit_Rom_14,
	SUnit_Rom_15,
	SUnit_Rom_16,
	SUnit_Rom_17,
	SUnit_Rom_18
};





















SUnit_Mac_01 = script_unit:new(Army_Mac_01, "Mac_01");
SUnit_Mac_02 = script_unit:new(Army_Mac_01, "Mac_02");
SUnit_Mac_03 = script_unit:new(Army_Mac_01, "Mac_03");
SUnit_Mac_04 = script_unit:new(Army_Mac_01, "Mac_04");
SUnit_Mac_05 = script_unit:new(Army_Mac_01, "Mac_05");
SUnit_Mac_06 = script_unit:new(Army_Mac_01, "Mac_06");
SUnit_Mac_07 = script_unit:new(Army_Mac_01, "Mac_07");
SUnit_Mac_08 = script_unit:new(Army_Mac_01, "Mac_08");
SUnit_Mac_09 = script_unit:new(Army_Mac_01, "Mac_09");
SUnit_Mac_10 = script_unit:new(Army_Mac_01, "Mac_10");
SUnit_Mac_11 = script_unit:new(Army_Mac_01, "Mac_11");
SUnit_Mac_12 = script_unit:new(Army_Mac_01, "Mac_12");
SUnit_Mac_13 = script_unit:new(Army_Mac_01, "Mac_13");
SUnit_Mac_14 = script_unit:new(Army_Mac_01, "Mac_14");
SUnit_Mac_15 = script_unit:new(Army_Mac_01, "Mac_15");
SUnit_Mac_16 = script_unit:new(Army_Mac_01, "Mac_16");
SUnit_Mac_17 = script_unit:new(Army_Mac_01, "Mac_17");
SUnit_Mac_18 = script_unit:new(Army_Mac_01, "Mac_18");
SUnit_Mac_19 = script_unit:new(Army_Mac_01, "Mac_19");
SUnit_Mac_20 = script_unit:new(Army_Mac_01, "Mac_20");
SUnit_Mac_21 = script_unit:new(Army_Mac_01, "Mac_21");
SUnit_Mac_22 = script_unit:new(Army_Mac_01, "Mac_22");
SUnit_Mac_23 = script_unit:new(Army_Mac_01, "Mac_23");
SUnit_Mac_24 = script_unit:new(Army_Mac_01, "Mac_24");
SUnit_Mac_25 = script_unit:new(Army_Mac_01, "Mac_25");
SUnit_Mac_26 = script_unit:new(Army_Mac_01, "Mac_26");
SUnit_Mac_27 = script_unit:new(Army_Mac_01, "Mac_27");
SUnit_Mac_28 = script_unit:new(Army_Mac_01, "Mac_28");
SUnit_Mac_29 = script_unit:new(Army_Mac_01, "Mac_29");
SUnit_Mac_30 = script_unit:new(Army_Mac_01, "Mac_30");
SUnit_Mac_31 = script_unit:new(Army_Mac_01, "Mac_31");
SUnit_Mac_32 = script_unit:new(Army_Mac_01, "Mac_32");

UC_Mac_01_All = unitcontroller_from_army(Army_Mac_01);
UC_Mac_01_All:take_control();

SUnits_Mac_All = {
	SUnit_Mac_01,
	SUnit_Mac_02,
	SUnit_Mac_03,
	SUnit_Mac_04,
	SUnit_Mac_05,
	SUnit_Mac_06,
	SUnit_Mac_07,
	SUnit_Mac_08,
	SUnit_Mac_09,
	SUnit_Mac_10,
	SUnit_Mac_11,
	SUnit_Mac_12,
	SUnit_Mac_13,
	SUnit_Mac_14,
	SUnit_Mac_15,
	SUnit_Mac_16,
	SUnit_Mac_17,
	SUnit_Mac_18,
	SUnit_Mac_19,
	SUnit_Mac_20,
	SUnit_Mac_21,
	SUnit_Mac_22,
	SUnit_Mac_23,
	SUnit_Mac_24,
	SUnit_Mac_25,
	SUnit_Mac_26,
	SUnit_Mac_27,
	SUnit_Mac_28,
	SUnit_Mac_29,
	SUnit_Mac_30,
	SUnit_Mac_31,
	SUnit_Mac_32
};


SUnits_Mac_Main = {
	SUnit_Mac_01,
	SUnit_Mac_02,
	SUnit_Mac_03,
	SUnit_Mac_04,
	SUnit_Mac_05,
	SUnit_Mac_06,
	SUnit_Mac_07,
	SUnit_Mac_08,
	SUnit_Mac_09,
	SUnit_Mac_10,
	SUnit_Mac_11,
	SUnit_Mac_12,
	SUnit_Mac_13,
	SUnit_Mac_14,
	SUnit_Mac_15,
	SUnit_Mac_16,
	SUnit_Mac_17,
	SUnit_Mac_18,
	SUnit_Mac_19,
	SUnit_Mac_20
};


SUnits_Mac_Cav_01 = {
	SUnit_Mac_21,
	SUnit_Mac_22,
	SUnit_Mac_23,
	SUnit_Mac_24,
	SUnit_Mac_25,
	SUnit_Mac_26
};


SUnits_Mac_Cav_02 = {
	SUnit_Mac_27,
	SUnit_Mac_28,
	SUnit_Mac_29,
	SUnit_Mac_30,
	SUnit_Mac_31,
	SUnit_Mac_32
};


SUnits_Mac_Cav_All = {
	SUnit_Mac_21,
	SUnit_Mac_22,
	SUnit_Mac_23,
	SUnit_Mac_24,
	SUnit_Mac_25,
	SUnit_Mac_26,
	SUnit_Mac_27,
	SUnit_Mac_28,
	SUnit_Mac_29,
	SUnit_Mac_30,
	SUnit_Mac_31,
	SUnit_Mac_32
};







C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\py_pydna\py_main.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	MAIN BATTLE SCRIPT
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------


BOOL_Should_Release_To_AI = true;


-- called at start of deployment phase
function Deployment_Phase()
	bm:out("Battle is in deployment phase");
end;



-- end of deployment phase i.e. battle start
function End_Deployment_Phase()
		
	-- launch cutscene, or straight into battle without it
	Play_Cutscene_Intro();
end;


function Start_Battle_No_Cutscene()
	cam:fade(false, 0.5);
	
	Start_Battle();
end;



-- the interactive battle has started
function Start_Battle()
	bm:out("Battle is Starting");
		
	--start rout manager
	bm:start_rout_manager(1);
	
	-- register victory and defeat VO callbacks
	bm:setup_victory_callback(function() Battle_Is_Ending() end);
		
	-- startup advice
	-- Draw swords, men! We must secure these hills for Rome!
	bm:callback(function() bm:queue_advisor("Rom.HB.PY.001", 8000) end, 2000);
	
	-- objective
	bm:callback(function() set_objective("Rom.HB.PY.Objective_01") end, 5000);
	
	-- Tell the main Macedonian army to defend
	SAI_Mac_Main = script_ai_planner:new("SAI_Mac_Main", SUnits_Mac_Main);
	SAI_Mac_Main:defend_position(v(435, -200), 200);
	
	-- Teleport ambushers into position
	Position_Ambushers();
	
	Watch_For_Player_Attempting_Flank();
		
	bm:watch(
		function()
			--returns true if the player's general is dead
			return not Army_Rom_01:is_commander_alive()
		end,
		0,
		function()
			-- The enemy have wounded our general, commander, and he can no longer influence the battle! The news has already reached the men, they are disheartened!
			bm:stop_advisor_queue();
			bm:queue_advisor("Rom.HB.PY.003", 6000);
		end,
		"Allied_Commander_Watch"
	);
end;








BOOL_Battle_Is_Ending = false;

-- the game has gone to victory countdown phase, someone has won
function Battle_Is_Ending()
	if not BOOL_Battle_Is_Ending then
		BOOL_Battle_Is_Ending = true;
					
		if is_routing_or_dead(Alliance_Mac) then
			bm:out("Player has won !");
		
			bm:stop_advisor_queue();
			bm:queue_advisor("Rom.HB.PY.004", 8000);
			complete_objective("Rom.HB.PY.Objective_01")
			
			--  achievement
			local difficulty = Army_Rom_01:army_handicap();
	
			if difficulty <= 0 then			-- difficulty is "normal" or harder
				bm:unlock_achievement("ACHIEVEMENT_HISTORICAL_BATTLE_5");
			end;
			
			bm:callback(function() bm:end_battle() end, 12000);
		else
			bm:out("Player has lost, army is routing");
		
			bm:stop_advisor_queue();
			bm:queue_advisor("Rom.HB.PY.005", 8000);
			fail_objective("Rom.HB.PY.Objective_01")
							
			bm:callback(function() bm:end_battle() end, 10000);
		end;
	end;
end;









--
--	Hiding place logic
--



Area_Ambush_NW = convex_area:new(
	{
		v(-20, 63),
		v(-1020, -45),
		v(-1020, 1020),
		v(20, 1020)
	}
);

HP_Ambush_NW = hiding_place:new("HP_Ambush_NW");
HP_Ambush_NW:add_position(v(-208.6, 260.6), r_to_d(2.83), 18.9);
HP_Ambush_NW:add_position(v(-229.4, 253.9),r_to_d(2.83), 18.9);
HP_Ambush_NW:add_position(v(-250.3, 247.1), r_to_d(2.83), 18.9);
HP_Ambush_NW:add_position(v(-219.4, 291.6), r_to_d(2.80), 20.7);
HP_Ambush_NW:add_position(v(-240.8, 284.1), r_to_d(2.80), 20.7);
HP_Ambush_NW:add_position(v(-262.3, 276.5), r_to_d(2.80), 20.7);
-- HP_Ambush_NW:set_trigger_radius(140);
-- HP_Ambush_NW:add_trigger_area(Area_Ambush_NW);
HP_Ambush_NW:set_taken_callback(function() NW_Ambush_Spot_Taken() end);




Area_Ambush_SW = convex_area:new(
	{
		v(-205, -534),
		v(276, -653),
		v(475, -1050),
		v(-450, -1050)
	}
);

HP_Ambush_SW = hiding_place:new("HP_Ambush_SW");
HP_Ambush_SW:add_position(v(60.1, -754.84), r_to_d(-0.96), 20.8);
HP_Ambush_SW:add_position(v(73.2, -736.21), r_to_d(-0.96), 20.8);
HP_Ambush_SW:add_position(v(86.37, -717.57), r_to_d(-0.96), 20.8);
HP_Ambush_SW:add_position(v(75.93, -764.86), r_to_d(-0.95), 20.8);
HP_Ambush_SW:add_position(v(88.87, -746.69), r_to_d(-0.95), 19.8);
HP_Ambush_SW:add_position(v(101.52, -728.94), r_to_d(-0.95), 19.8);
-- HP_Ambush_SW:set_trigger_radius(140);
-- HP_Ambush_SW:add_trigger_area(Area_Ambush_SW);
HP_Ambush_SW:set_taken_callback(function() SW_Ambush_Spot_Taken() end);





Area_Ambush_SE = convex_area:new(
	{
		v(180, -643),
		v(1020, -390),
		v(1020, -1020),
		v(180, -1020)
	}
);

HP_Ambush_SE = hiding_place:new("HP_Ambush_SE");
HP_Ambush_SE:add_position(v(420.6, -716.94), r_to_d(1.48), 20.8);
HP_Ambush_SE:add_position(v(418.5, -694.24), r_to_d(1.47), 20.8);
HP_Ambush_SE:add_position(v(416.32, -671.54), r_to_d(1.47), 20.8);
HP_Ambush_SE:add_position(v(401.71, -718.16), r_to_d(1.48), 19.8);
HP_Ambush_SE:add_position(v(399.77, -696.45), r_to_d(1.48), 19.8);
HP_Ambush_SE:add_position(v(397.78, -674.23), r_to_d(1.48), 20.8);
HP_Ambush_SE:set_trigger_radius(140);
HP_Ambush_SE:add_trigger_area(Area_Ambush_SE);






Area_Ambush_NE = convex_area:new(
	{
		v(200, 95),
		v(-95, 105),
		v(-95, 1050),
		v(1050, 1050)
	}
);

HP_Ambush_NE = hiding_place:new("HP_Ambush_NE");
HP_Ambush_NE:add_position(v(110.6, 340.7), r_to_d(-0.03), 20.8);
HP_Ambush_NE:add_position(v(87.82, 340.0), r_to_d(-0.03), 20.8);
HP_Ambush_NE:add_position(v(65.02, 339.3), r_to_d(-0.03), 20.8);
HP_Ambush_NE:add_position(v(110.62, 321.76), r_to_d(-0.03), 19.8);
HP_Ambush_NE:add_position(v(88.82, 321.2), r_to_d(-0.03), 19.8);
HP_Ambush_NE:add_position(v(66.53, 320.64), r_to_d(-0.03), 20.8);
HP_Ambush_NE:set_trigger_radius(140);
HP_Ambush_NE:add_trigger_area(Area_Ambush_NE);












function NW_Ambush_Spot_Taken()
	bm:out("NW_Ambush_Spot_Taken() called");
	
	bm:watch(
		function()
			return Area_Ambush_NW:is_in_area(SUnits_Rom_All)
		end,
		0,
		function()
			Player_Is_Approaching_NW_Ambush()
		end,
		"West_Ambush_Approach"
	);
end;


function Player_Is_Approaching_NW_Ambush()
	if not HP_Ambush_NE:is_taken() then
		HP_Ambush_NW:taken_by():force_teleport(HP_Ambush_NE);
	elseif not HP_Ambush_SE:is_taken() then
		HP_Ambush_NW:taken_by():force_teleport(HP_Ambush_SE);
	else
		script_error("WARNING :: Player_Is_Approaching_NW_Ambush() called but both HP_Ambush_NE and HP_Ambush_SE are taken, how can this be? Triggering ambush");
		Mac_Cav_01_Ambush_Provoked();
		Mac_Cav_02_Ambush_Provoked();
	end;
end;





function SW_Ambush_Spot_Taken()
	bm:out("SW_Ambush_Spot_Taken() called");
	
	bm:watch(
		function()
			return Area_Ambush_SW:is_in_area(SUnits_Rom_All)
		end,
		0,
		function()
			Player_Is_Approaching_SW_Ambush()
		end,
		"West_Ambush_Approach"
	);
end;


function Player_Is_Approaching_SW_Ambush()
	if not HP_Ambush_SE:is_taken() then
		HP_Ambush_SW:taken_by():force_teleport(HP_Ambush_SE);
	elseif not HP_Ambush_NE:is_taken() then
		HP_Ambush_SW:taken_by():force_teleport(HP_Ambush_NE);
	else
		script_error("WARNING :: Player_Is_Approaching_SW_Ambush() called but both HP_Ambush_NE and HP_Ambush_SE are taken, how can this be? Triggering ambush");
		Mac_Cav_01_Ambush_Provoked();
		Mac_Cav_02_Ambush_Provoked();
	end;
end;
















function Hide_Ambushers(sunits, value)
	for i = 1, #sunits do
		sunits[i].uc:set_invisible_to_all(value);
	end;
end;


function Position_Ambushers()
	-- make cavalry units invisible
	Hide_Ambushers(SUnits_Mac_Cav_01, true);
	Hide_Ambushers(SUnits_Mac_Cav_02, true);
	
	-- set up teleport squads
	TS_Mac_Cav_01 = teleport_squad:new("Mac_Cav_01", SUnits_Rom_All);
	TS_Mac_Cav_01:add_sunits(SUnits_Mac_Cav_01);
	TS_Mac_Cav_01:add_hiding_places(HP_Ambush_NW, HP_Ambush_NE, HP_Ambush_SW, HP_Ambush_SE);
	TS_Mac_Cav_01:set_attack_callback(function() Mac_Cav_01_Ambush_Provoked() end);
	TS_Mac_Cav_01:set_should_attack(false);
	
	TS_Mac_Cav_02 = teleport_squad:new("Mac_Cav_02", SUnits_Rom_All);
	TS_Mac_Cav_02:add_sunits(SUnits_Mac_Cav_02);
	TS_Mac_Cav_02:add_hiding_places(HP_Ambush_NW, HP_Ambush_NE, HP_Ambush_SW, HP_Ambush_SE);
	TS_Mac_Cav_02:set_attack_callback(function() Mac_Cav_02_Ambush_Provoked() end);
	TS_Mac_Cav_02:set_should_attack(false);
	
	-- teleport the cavalry into position
	TS_Mac_Cav_01:teleport();
	TS_Mac_Cav_02:teleport();
	
	-- unhide the cavalry after a short while
	bm:callback(
		function() 
			Hide_Ambushers(SUnits_Mac_Cav_01, false);
			Hide_Ambushers(SUnits_Mac_Cav_02, false);
		end, 
		10000
	);
	
	-- start additional monitors - should the player approach the enemy army the ambushers get triggered
	bm:watch(
		function()
			return distance_between_forces(SUnits_Mac_Main, SUnits_Rom_All, true) < 120
		end, 
		0, 
		function()
			TS_Mac_Cav_01:attack("Romans have approached main Macedonian army");
			TS_Mac_Cav_02:attack("Romans have approached main Macedonian army");
		end,
		"force_proximity_watch"
	);
	
	-- test script
	--[[
	bm:callback(
		function()
			TS_Mac_Cav_01:attack("Romans have approached main Macedonian army");
			TS_Mac_Cav_02:attack("Romans have approached main Macedonian army");
		end,
		5000
	);
	]]
end;





Mac_Cav_01_Distance_To_Romans = 5000;
Mac_Cav_02_Distance_To_Romans = 5000;

function Mac_Cav_01_Ambush_Provoked()
	Ambush_Provoked();
	Train_Mac_Cav_01();
end;


function Mac_Cav_02_Ambush_Provoked()
	Ambush_Provoked();
	Train_Mac_Cav_02();
end;









BOOL_Stop_All_Trains = false;

SAI_Mac_Cav_01 = nil;
SAI_Mac_Cav_02 = nil;

function Train_Mac_Cav_01()
	if BOOL_Stop_All_Trains then
		return;
	end;

	-- bm:out("Train_Mac_Cav_01() called");

	if not Train_Mac_Cav_On_Romans(SUnits_Mac_Cav_01, SUnits_Rom_All) then
		-- couldn't retrain for whatever reason, so set up an AI group and attack
		bm:out("\tSetting up SAI_Mac_Cav_01 and sending it to attack");
		
		SAI_Mac_Cav_01 = script_ai_planner:new("Mac_Cav_01", SUnits_Mac_Cav_01);
		SAI_Mac_Cav_01:attack_force(SUnits_Rom_All);
		
		return;
	end;
	
	bm:callback(function() Train_Mac_Cav_01() end, 10000);
end;


function Train_Mac_Cav_02()
	if BOOL_Stop_All_Trains then
		return;
	end;

	-- bm:out("Train_Mac_Cav_02() called");

	if not Train_Mac_Cav_On_Romans(SUnits_Mac_Cav_02, SUnits_Rom_All) then
		-- couldn't retrain for whatever reason, so set up an AI group and attack
		bm:out("\tSetting up SAI_Mac_Cav_02 and sending it to attack");
		
		SAI_Mac_Cav_02 = script_ai_planner:new("Mac_Cav_02", SUnits_Mac_Cav_02);
		SAI_Mac_Cav_02:attack_force(SUnits_Rom_All);
		
		return;
	end;
	
	bm:callback(function() Train_Mac_Cav_02() end, 10000);
end;







function Train_Mac_Cav_On_Romans(sunits, enemy_sunits)
	for i = 1, #sunits do
		local current_sunit = sunits[i];
	
		-- clear current target, if it has one
		if current_sunit.target_sunit then
			current_sunit.target_sunit.marked_as_target = false;
		end;
		
		local current_position = current_sunit.unit:position();		
		local target = Find_Closest_Unmarked_Roman_SUnit(current_position);
		
		if not target then
			bm:out("\tTrain_Mac_Cav_On_Romans() couldn't find a target for " .. current_sunit.name .. ", they are all taken?");
			return false;
		end;
		
 		-- we have a target of some description
		target.marked_as_target = true;
		current_sunit.target_sunit = target;
		
		local target_position = target.unit:position();
		local target_distance = current_position:distance_xz(target_position);
					
		if target_distance < 100 then
			bm:out("\tTrain_Mac_Cav_On_Romans() tried to assign target for " .. current_sunit.name .. " but it's too close");
			return false;
		end;
	end;
	
	-- we have successfully assigned a target for all our sunits, send them to attack
	for i = 1, #sunits do
		local current_sunit = sunits[i];
		local current_position = current_sunit.unit:position();
		local target = current_sunit.target_sunit;
		local target_position = target.unit:position();
		
		-- bm:out("\tTrain_Mac_Cav_On_Romans() is sending " .. current_sunit.name .. " at position " .. v_to_s(current_position) .. " to attack " .. target.name .. " at position " .. v_to_s(target_position));
		current_sunit.uc:goto_location(target_position, true);
	end;

	return true;
end;

function Find_Closest_Unmarked_Roman_SUnit(pos)
	local closest_sunit = nil;
	local closest_distance = 5000;

	for i = 1, #SUnits_Rom_All do
		local current_sunit = SUnits_Rom_All[i];
		local current_distance = current_sunit.unit:position():distance_xz(pos);
		
		if not current_sunit.marked_as_target and current_distance < closest_distance and not is_routing_or_dead(current_sunit) then
			closest_sunit = current_sunit;
			closest_distance = current_distance;
		end;
	end;
	
	return closest_sunit;
end;

















Count_Ambush_Provoked = 0;

function Ambush_Provoked()
	if Count_Ambush_Provoked == 0 then
		Count_Ambush_Provoked = 1;
		
		bm:remove_process("force_proximity_watch");
		
		bm:watch(
			function()
				return Num_Ambushers_Visible() >= 6
			end,
			5000,
			function()
				-- General! The enemy are sending their cavalry force at our flank. They seek to overwhelm us! We must act!
				bm:queue_advisor("Rom.HB.PH.002", 8000);
			end,
			"Ambush_Advice_Watch"
		);
		
		Release_Macedonian_Army();
		
	elseif Count_Ambush_Provoked == 1 then
		Count_Ambush_Provoked = 2;
		
		bm:out("Both ambushes now provoked");
		bm:remove_process("West_Ambush_Approach");
	end;
end;


function Num_Ambushers_Visible()
	local count = 0;
	
	for i = 1, #SUnits_Mac_Cav_01 do
		local current_sunit = SUnits_Mac_Cav_01[i];
		
		if current_sunit.unit:is_visible_to_alliance(Alliance_Rom) then
			count = count + 1;
		end;
	end;
	
	for i = 1, #SUnits_Mac_Cav_02 do
		local current_sunit = SUnits_Mac_Cav_02[i];
		
		if current_sunit.unit:is_visible_to_alliance(Alliance_Rom) then
			count = count + 1;
		end;
	end;
	
	return count;
end;



BOOL_Macedonian_Army_Released = false;

function Release_Macedonian_Army()
	if not BOOL_Macedonian_Army_Released then
		BOOL_Macedonian_Army_Released = true;
		bm:out("Macedonian army attacking");
		
		SAI_Mac_Main:set_debug();
		SAI_Mac_Main:set_should_reorder(false);
		SAI_Mac_Main:defend_force(SUnits_Rom_All, 200);
	end;
end;








Area_South_Flank = convex_area:new(
	{
		v(100, -650),
		v(1000, -780),
		v(1000, -1000),
		v(100, -1000)
	}
);

Area_North_Flank = convex_area:new(
	{
		v(-20, 160),
		v(-20, 1000),
		v(1000, 1000),
		v(1000, 160)
	}
);

function Watch_For_Player_Attempting_Flank()
	bm:watch(function() return Area_South_Flank:number_in_area(SUnits_Rom_All, true) > 4 end, 0, function() Player_Is_Attempting_Flank("south") end, "Player_Flank_Watch");
	bm:watch(function() return Area_North_Flank:number_in_area(SUnits_Rom_All, true) > 4 end, 0, function() Player_Is_Attempting_Flank("north") end, "Player_Flank_Watch");
end;

function Player_Is_Attempting_Flank(flank)
	bm:out("Player_Is_Attempting_Flank() called, flank is " .. tostring(flank));
	
	BOOL_Stop_All_Trains = true;
	BOOL_Macedonian_Army_Released = true;
	
	bm:remove_process("Player_Flank_Watch");
	bm:remove_process("Ambush_Advice_Watch");
	bm:remove_process("force_proximity_watch");
	bm:remove_process("West_Ambush_Approach");
	
	TS_Mac_Cav_01:stop_watches();
	TS_Mac_Cav_02:stop_watches();
	
	-- Tell the whole Macedonian army to defend
	SAI_Mac_All = script_ai_planner:new("SAI_Mac_All", SUnits_Mac_All);
	SAI_Mac_All:defend_position(v(-405, -275), 200);
end;






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\py_pydna\py_start.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	INITIAL SCRIPT SETUP
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

-- clear out loaded files
system.ClearRequiredFiles();

-- load in battle script library
require "lua_scripts.Battle_Script_Header";

-- declare battlemanager object
bm = battle_manager:new(empire_battle:new());

-- get battle name from folder, and print header
battle_name, battle_shortform = get_folder_name_and_shortform();

bm:out("==============");
bm:out("==============");
bm:out("==============");
bm:out("Script started: Battle of " .. battle_name);
bm:out("==============");

-- load in other script files associated with this battle
package.path = package.path .. ";data/Script/" .. battle_name .. "/?.lua";

require (battle_shortform .. "_Declarations");
require (battle_shortform .. "_Cutscenes");
require (battle_shortform .. "_Main");

-- register functions to be called on phase changes
bm:register_phase_change_callback("Deployment", function() Deployment_Phase() end);			-- optional deployment phase callback
bm:setup_battle(function() End_Deployment_Phase() end);										-- called when battle starts








C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ra_raphia\ra_cutscenes.lua
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	CUTSCENES SCRIPT
--
--	Declare intro and other cutscenes
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------


POS_Cam_Cutscene_Intro_Final = v(-214.1, 324.3, -440.5);
Targ_Cam_Cutscene_Intro_Final = v(-149.1, 275.1, -339.4);

SFX_Rom_HB_RA_Intro_02 = new_sfx("Play_Rom_HB_RA_Intro_02_1");
SFX_Rom_HB_RA_Intro_03 = new_sfx("Play_Rom_HB_RA_Intro_03_1");
SFX_Rom_HB_RA_Intro_04 = new_sfx("Play_Rom_HB_RA_Intro_04_1");
SFX_Rom_HB_RA_Intro_05 = new_sfx("Play_Rom_HB_RA_Intro_05_1");
SFX_Rom_HB_RA_Intro_06 = new_sfx("Play_Rom_HB_RA_Intro_06_1");


Cutscene_Intro = cutscene:new(
	"Cutscene_Intro", 							-- unique string name for cutscene
	UC_Egy_01_All, 								-- unitcontroller over player's army
	45000, 										-- duration of cutscene in ms
	function() Start_Battle() end 				-- what to call when cutscene is finished
);


Cutscene_Intro:set_skippable(true, function() Skip_Cutscene_Intro() end);
Cutscene_Intro:set_skip_camera(POS_Cam_Cutscene_Intro_Final, Targ_Cam_Cutscene_Intro_Final);
-- Cutscene_Intro:set_debug();

BOOL_Egy_Army_In_Start_Position = false;
BOOL_Sel_Army_In_Start_Position = false;


function Play_Cutscene_Intro()

	local subtitles = Cutscene_Intro:subtitles();
	subtitles:set_alignment("bottom_centre");
	subtitles:clear();
	
	Teleport_Egy_Army_Intro_Start();
	Move_Egy_Army_Intro_Start();
	
	Teleport_Sel_Army_Intro_Start();
	Move_Sel_Army_Intro_Start();
	Show_Sel_Army(true);
	
	Cutscene_Intro:action(function() cam:move_to(v(575.2, 334.8, 480.2), v(532.9, 328.9, 502.2), 0, true, 35) end, 0);
	Cutscene_Intro:action(function() cam:move_to(v(575.2, 334.8, 480.2), v(532.9, 328.9, 502.2), 7, true, 33) end, 0);
	Cutscene_Intro:action(function() cam:fade(false, 0.5) end, 0);
	
	-- 22 June, 217BC
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.RA.Intro_01") end, 2500);

	Cutscene_Intro:action(function() subtitles:clear() end, 5500);
	
	
	-- Antiochus, conqueror of Syria, and his Seleucid army now marches on Egypt. 
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.RA.Intro_02") end, 6000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Rom_HB_RA_Intro_02) end, 6000);
	
	Cutscene_Intro:action(function() cam:move_to(v(90.4, 292.0, 430.1), v(135.8, 291.6, 414.3), 0, false, 25) end, 6000);
	Cutscene_Intro:action(function() cam:move_to(v(89.2, 292.0, 427.0), v(133.7, 291.5, 408.9), 4, true, 25) end, 6000);
	
	Cutscene_Intro:action(function() cam:move_to(v(142.0, 292.1, 469.5), v(128.7, 287.8, 423.5), 0, false, 25) end, 10000);
	Cutscene_Intro:action(function() cam:move_to(v(142.0, 292.1, 469.5), v(128.1, 288.5, 423.6), 5, true, 23) end, 10000);
	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 14000);
	Cutscene_Intro:action(function() subtitles:clear() end, 14000);
	
	-- Ptolemy has amassed a large and varied force to meet the Seleucid threat.
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.RA.Intro_03") end, 14000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Rom_HB_RA_Intro_03) end, 14000);
	
	Cutscene_Intro:action(function() cam:move_to(v(-182.0, 275.2, -297.2), v(-140.2, 275.1, -247.7), 0, false, 30) end, 14000);
	
	Cutscene_Intro:action(function() cam:move_to(v(-235.8, 273.4, -267.5), v(-199.2, 270.0, -320.8), 0, false, 30) end, 17500);
	Cutscene_Intro:action(function() cam:move_to(v(-235.8, 273.4, -267.5), v(-194.1, 270.0, -316.9), 5, true, 30) end, 17500);
	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 21000);
	Cutscene_Intro:action(function() subtitles:clear() end, 21000);
	
	-- However, Ptolemy???s African elephants are panicked by the larger Indian breed commanded by Antiochus.
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.RA.Intro_04") end, 22000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Rom_HB_RA_Intro_04) end, 22000);

	Cutscene_Intro:action(function() cam:move_to(v(-129, 278.0, -374.8), v(-106.3, 61.9, -3083.0), 0, true, 43) end, 22000);
	Cutscene_Intro:action(function() cam:move_to(v(-129, 278.0, -374.8), v(488.4, 69.2, -3022.8), 4, true, 44) end, 22000);
	
	Cutscene_Intro:action(function() cam:move_to(v(175.8, 296.9, 277.2), v(2847.4, 484.4, -224.0), 0, true, 20) end, 26000);
	Cutscene_Intro:action(function() cam:move_to(v(174.6, 296.9, 272.4), v(2803.3, 443.6, -429.2), 8, true, 22) end, 26000);
	
	Cutscene_Intro:action(function() Teleport_Egy_Army_Battle_Start(); BOOL_Egy_Army_In_Start_Position = true end, 26500);
	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 32000);
	Cutscene_Intro:action(function() subtitles:clear() end, 32000);
	
	-- They will not bear being close to them in the coming battle.
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.RA.Intro_05") end, 33000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Rom_HB_RA_Intro_05) end, 33000);
	
	Cutscene_Intro:action(function() cam:move_to(v(209.3, 306.4, 303.9), v(195.8, 298.7, 258.3), 0, true, 27) end, 33000);
	Cutscene_Intro:action(function() cam:move_to(v(209.3, 306.4, 303.9), v(193.5, 299.6, 258.9), 8, true, 27) end, 33000);
	
	Cutscene_Intro:action(
		function() 
			for i = 1, #Egyptian_Sunits do
				local current_sunit = Egyptian_Sunits[i];
				current_sunit.uc:step_forward();
			end;
		end,
		33000
	);
	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 39000);
	Cutscene_Intro:action(function() subtitles:clear() end, 39000);
	
	-- Ptolemy must be victorious at Raphia or his kingdom will surely fall.
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.RA.Intro_06") end, 40000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Rom_HB_RA_Intro_06) end, 40000);
	
	Cutscene_Intro:action(function() cam:move_to(v(-182.1, 281.3, -195.6), v(-166.5, 265.4, -240.2), 0, true, 0) end, 40000);
	
	Cutscene_Intro:action(function() Teleport_Sel_Army_Battle_Start(); BOOL_Sel_Army_In_Start_Position = true end, 40500);
	
	Cutscene_Intro:action(function() cam:move_to(POS_Cam_Cutscene_Intro_Final, Targ_Cam_Cutscene_Intro_Final, 4, false, 0) end, 41000);
	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 45000);
	Cutscene_Intro:action(function() subtitles:clear() end, 45000);
	
	Cutscene_Intro:start();
end;


function Skip_Cutscene_Intro()
	cam:fade(true, 0);
	
	stop_sound(SFX_Rom_HB_RA_Intro_02);
	stop_sound(SFX_Rom_HB_RA_Intro_03);
	stop_sound(SFX_Rom_HB_RA_Intro_04);
	stop_sound(SFX_Rom_HB_RA_Intro_05);
	stop_sound(SFX_Rom_HB_RA_Intro_06);
	
	if not BOOL_Egy_Army_In_Start_Position then
		Teleport_Egy_Army_Battle_Start();
	end;
	
	if not BOOL_Sel_Army_In_Start_Position then
		Teleport_Sel_Army_Battle_Start();
	end;
		
	bm:callback(function() cam:fade(false, 0.5) end, 1000);
end;






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ra_raphia\ra_declarations.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	DECLARATIONS SCRIPT
--
--	Declare alliances, armies, convex areas and anything else of note in here
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

cam = bm:camera();

--
-- Army Declarations
--

Alliances = bm:alliances();

Alliance_Egy = Alliances:item(1);
Army_Egy_01 = Alliance_Egy:armies():item(1);

Alliance_Sel = Alliances:item(2); 
Army_Sel_01 = Alliance_Sel:armies():item(1);




--
-- Script Unit Declarations
--

SUnit_Egy_01 = script_unit:new(Army_Egy_01, "Egy_01");
SUnit_Egy_02 = script_unit:new(Army_Egy_01, "Egy_02");
SUnit_Egy_03 = script_unit:new(Army_Egy_01, "Egy_03");
SUnit_Egy_04 = script_unit:new(Army_Egy_01, "Egy_04");
SUnit_Egy_05 = script_unit:new(Army_Egy_01, "Egy_05");
SUnit_Egy_06 = script_unit:new(Army_Egy_01, "Egy_06");
SUnit_Egy_07 = script_unit:new(Army_Egy_01, "Egy_07");
SUnit_Egy_08 = script_unit:new(Army_Egy_01, "Egy_08");
SUnit_Egy_09 = script_unit:new(Army_Egy_01, "Egy_09");
SUnit_Egy_10 = script_unit:new(Army_Egy_01, "Egy_10");
SUnit_Egy_11 = script_unit:new(Army_Egy_01, "Egy_11");
SUnit_Egy_12 = script_unit:new(Army_Egy_01, "Egy_12");
SUnit_Egy_13 = script_unit:new(Army_Egy_01, "Egy_13");
SUnit_Egy_14 = script_unit:new(Army_Egy_01, "Egy_14");
SUnit_Egy_15 = script_unit:new(Army_Egy_01, "Egy_15");
SUnit_Egy_16 = script_unit:new(Army_Egy_01, "Egy_16");
SUnit_Egy_17 = script_unit:new(Army_Egy_01, "Egy_17");
SUnit_Egy_18 = script_unit:new(Army_Egy_01, "Egy_18");
SUnit_Egy_19 = script_unit:new(Army_Egy_01, "Egy_19");
SUnit_Egy_20 = script_unit:new(Army_Egy_01, "Egy_20");
SUnit_Egy_21 = script_unit:new(Army_Egy_01, "Egy_21");
SUnit_Egy_22 = script_unit:new(Army_Egy_01, "Egy_22");
SUnit_Egy_23 = script_unit:new(Army_Egy_01, "Egy_23");
SUnit_Egy_24 = script_unit:new(Army_Egy_01, "Egy_24");
SUnit_Egy_25 = script_unit:new(Army_Egy_01, "Egy_25");

UC_Egy_01_All = unitcontroller_from_army(Army_Egy_01);

Egyptian_Sunits = {
	SUnit_Egy_01,
	SUnit_Egy_02,
	SUnit_Egy_03,
	SUnit_Egy_04,
	SUnit_Egy_05,
	SUnit_Egy_06,
	SUnit_Egy_07,
	SUnit_Egy_08,
	SUnit_Egy_09,
	SUnit_Egy_10,
	SUnit_Egy_11,
	SUnit_Egy_12,
	SUnit_Egy_13,
	SUnit_Egy_14,
	SUnit_Egy_15,
	SUnit_Egy_16,
	SUnit_Egy_17,
	SUnit_Egy_18,
	SUnit_Egy_19,
	SUnit_Egy_20,
	SUnit_Egy_21,
	SUnit_Egy_22,
	SUnit_Egy_23,
	SUnit_Egy_24,
	SUnit_Egy_25
};


SUnit_Sel_01 = script_unit:new(Army_Sel_01, "Sel_01");
SUnit_Sel_02 = script_unit:new(Army_Sel_01, "Sel_02");
SUnit_Sel_03 = script_unit:new(Army_Sel_01, "Sel_03");
SUnit_Sel_04 = script_unit:new(Army_Sel_01, "Sel_04");
SUnit_Sel_05 = script_unit:new(Army_Sel_01, "Sel_05");
SUnit_Sel_06 = script_unit:new(Army_Sel_01, "Sel_06");
SUnit_Sel_07 = script_unit:new(Army_Sel_01, "Sel_07");
SUnit_Sel_08 = script_unit:new(Army_Sel_01, "Sel_08");
--SUnit_Sel_09 = script_unit:new(Army_Sel_01, "Sel_09");
--SUnit_Sel_10 = script_unit:new(Army_Sel_01, "Sel_10");
SUnit_Sel_11 = script_unit:new(Army_Sel_01, "Sel_11");
SUnit_Sel_12 = script_unit:new(Army_Sel_01, "Sel_12");
SUnit_Sel_13 = script_unit:new(Army_Sel_01, "Sel_13");
SUnit_Sel_14 = script_unit:new(Army_Sel_01, "Sel_14");
SUnit_Sel_15 = script_unit:new(Army_Sel_01, "Sel_15");
SUnit_Sel_16 = script_unit:new(Army_Sel_01, "Sel_16");
SUnit_Sel_17 = script_unit:new(Army_Sel_01, "Sel_17");
SUnit_Sel_18 = script_unit:new(Army_Sel_01, "Sel_18");
SUnit_Sel_19 = script_unit:new(Army_Sel_01, "Sel_19");
--SUnit_Sel_20 = script_unit:new(Army_Sel_01, "Sel_20");
SUnit_Sel_21 = script_unit:new(Army_Sel_01, "Sel_21");
SUnit_Sel_22 = script_unit:new(Army_Sel_01, "Sel_22");
SUnit_Sel_23 = script_unit:new(Army_Sel_01, "Sel_23");
SUnit_Sel_24 = script_unit:new(Army_Sel_01, "Sel_24");
SUnit_Sel_25 = script_unit:new(Army_Sel_01, "Sel_25");
--SUnit_Sel_26 = script_unit:new(Army_Sel_01, "Sel_26");

UC_Sel_01_All = unitcontroller_from_army(Army_Sel_01);
UC_Sel_01_All:take_control();

Seleucid_Sunits = {
	SUnit_Sel_01,
	SUnit_Sel_02,
	SUnit_Sel_03,
	SUnit_Sel_04,
	SUnit_Sel_05,
	SUnit_Sel_06,
	SUnit_Sel_07,
	SUnit_Sel_08,
	--SUnit_Sel_09,
	--SUnit_Sel_10,
	SUnit_Sel_11,
	SUnit_Sel_12,
	SUnit_Sel_13,
	SUnit_Sel_14,
	SUnit_Sel_15,
	SUnit_Sel_16,
	SUnit_Sel_17,
	SUnit_Sel_18,
	SUnit_Sel_19,
	--SUnit_Sel_20,
	SUnit_Sel_21,
	SUnit_Sel_22,
	SUnit_Sel_23,
	SUnit_Sel_24,
	SUnit_Sel_25,
	--SUnit_Sel_26
};







SUnit_Egy_01.POS_Intro_Start = v(-207.625,-426.028)
SUnit_Egy_01.Orient_Intro_Start = r_to_d(0.560095)
SUnit_Egy_01.Width_Intro_Start = 21.5896

SUnit_Egy_02.POS_Intro_Start = v(-273.346,-338.143)
SUnit_Egy_02.Orient_Intro_Start = r_to_d(0.604484)
SUnit_Egy_02.Width_Intro_Start = 31.6758

SUnit_Egy_03.POS_Intro_Start = v(-246.237,-356.108)
SUnit_Egy_03.Orient_Intro_Start = r_to_d(0.587131)
SUnit_Egy_03.Width_Intro_Start = 30.2753

SUnit_Egy_04.POS_Intro_Start = v(-220.042,-373.371)
SUnit_Egy_04.Orient_Intro_Start = r_to_d(0.581475)
SUnit_Egy_04.Width_Intro_Start = 31.0396

SUnit_Egy_05.POS_Intro_Start = v(-195.053,-390.715)
SUnit_Egy_05.Orient_Intro_Start = r_to_d(0.582146)
SUnit_Egy_05.Width_Intro_Start = 30.7219

SUnit_Egy_06.POS_Intro_Start = v(-169.122,-407.486)
SUnit_Egy_06.Orient_Intro_Start = r_to_d(0.594034)
SUnit_Egy_06.Width_Intro_Start = 30.1992

SUnit_Egy_07.POS_Intro_Start = v(-73.0689,-477.569)
SUnit_Egy_07.Orient_Intro_Start = r_to_d(0.598348)
SUnit_Egy_07.Width_Intro_Start = 33.8024

SUnit_Egy_08.POS_Intro_Start = v(-140.87,-423.807)
SUnit_Egy_08.Orient_Intro_Start = r_to_d(0.602471)
SUnit_Egy_08.Width_Intro_Start = 30.6936

SUnit_Egy_09.POS_Intro_Start = v(-204.118,-354.682)
SUnit_Egy_09.Orient_Intro_Start = r_to_d(0.588953)
SUnit_Egy_09.Width_Intro_Start = 36.1006

SUnit_Egy_10.POS_Intro_Start = v(-173.445,-375.033)
SUnit_Egy_10.Orient_Intro_Start = r_to_d(0.59087)
SUnit_Egy_10.Width_Intro_Start = 35.5783

SUnit_Egy_11.POS_Intro_Start = v(-142.717,-395.442)
SUnit_Egy_11.Orient_Intro_Start = r_to_d(0.582433)
SUnit_Egy_11.Width_Intro_Start = 35.5706

SUnit_Egy_12.POS_Intro_Start = v(-109.807,-450.931)
SUnit_Egy_12.Orient_Intro_Start = r_to_d(0.574092)
SUnit_Egy_12.Width_Intro_Start = 45.6439

SUnit_Egy_13.POS_Intro_Start = v(-206.734,-322.92)
SUnit_Egy_13.Orient_Intro_Start = r_to_d(0.589528)
SUnit_Egy_13.Width_Intro_Start = 20.6699

SUnit_Egy_14.POS_Intro_Start = v(-187.448,-335.673)
SUnit_Egy_14.Orient_Intro_Start = r_to_d(0.590295)
SUnit_Egy_14.Width_Intro_Start = 20.6246

SUnit_Egy_15.POS_Intro_Start = v(-168.989,-348.493)
SUnit_Egy_15.Orient_Intro_Start = r_to_d(0.593459)
SUnit_Egy_15.Width_Intro_Start = 19.7301

SUnit_Egy_16.POS_Intro_Start = v(-150.101,-359.674)
SUnit_Egy_16.Orient_Intro_Start = r_to_d(0.593363)
SUnit_Egy_16.Width_Intro_Start = 20.7723

SUnit_Egy_17.POS_Intro_Start = v(-113.573,-387.993)
SUnit_Egy_17.Orient_Intro_Start = r_to_d(0.585981)
SUnit_Egy_17.Width_Intro_Start = 21.0757

SUnit_Egy_18.POS_Intro_Start = v(-132.525,-374.752)
SUnit_Egy_18.Orient_Intro_Start = r_to_d(0.59413)
SUnit_Egy_18.Width_Intro_Start = 22.4669

SUnit_Egy_19.POS_Intro_Start = v(-230.401,-308.489)
SUnit_Egy_19.Orient_Intro_Start = r_to_d(0.58972)
SUnit_Egy_19.Width_Intro_Start = 22.9198

SUnit_Egy_20.POS_Intro_Start = v(-93.3685,-401.184)
SUnit_Egy_20.Orient_Intro_Start = r_to_d(0.587994)
SUnit_Egy_20.Width_Intro_Start = 19.6739

SUnit_Egy_21.POS_Intro_Start = v(-235.143,-335.959)
SUnit_Egy_21.Orient_Intro_Start = r_to_d(0.588282)
SUnit_Egy_21.Width_Intro_Start = 27.0431

SUnit_Egy_22.POS_Intro_Start = v(-110.754,-418.54)
SUnit_Egy_22.Orient_Intro_Start = r_to_d(0.592021)
SUnit_Egy_22.Width_Intro_Start = 30.7825

SUnit_Egy_23.POS_Intro_Start = v(-177.569,-318.678)
SUnit_Egy_23.Orient_Intro_Start = r_to_d(0.595856)
SUnit_Egy_23.Width_Intro_Start = 29.9193

SUnit_Egy_24.POS_Intro_Start = v(-124.47,-355.102)
SUnit_Egy_24.Orient_Intro_Start = r_to_d(0.586364)
SUnit_Egy_24.Width_Intro_Start = 30.4782

SUnit_Egy_25.POS_Intro_Start = v(-150.925,-335.42)
SUnit_Egy_25.Orient_Intro_Start = r_to_d(0.583967)
SUnit_Egy_25.Width_Intro_Start = 30.3396



function Teleport_Egy_Army_Intro_Start()
	for i = 1, #Egyptian_Sunits do
		local current_sunit = Egyptian_Sunits[i];
		current_sunit.uc:teleport_to_location(current_sunit.POS_Intro_Start, current_sunit.Orient_Intro_Start, current_sunit.Width_Intro_Start);
	end;
end;

function Move_Egy_Army_Intro_Start()
	for i = 1, #Egyptian_Sunits do
		local current_sunit = Egyptian_Sunits[i];
		current_sunit:goto_start_location();
	end;
end;

function Teleport_Egy_Army_Battle_Start()
	for i = 1, #Egyptian_Sunits do
		local current_sunit = Egyptian_Sunits[i];
		current_sunit:teleport_to_start_location();
	end;
end;







SUnit_Sel_01.POS_Intro_Start = v(312.104,346.19)
SUnit_Sel_01.Orient_Intro_Start = r_to_d(-2.51333)
SUnit_Sel_01.Width_Intro_Start = 18.8492

SUnit_Sel_02.POS_Intro_Start = v(157.461,442.721)
SUnit_Sel_02.Orient_Intro_Start = r_to_d(-2.51285)
SUnit_Sel_02.Width_Intro_Start = 35.5914

SUnit_Sel_03.POS_Intro_Start = v(127.624,464.307)
SUnit_Sel_03.Orient_Intro_Start = r_to_d(-2.51017)
SUnit_Sel_03.Width_Intro_Start = 35.4511

SUnit_Sel_04.POS_Intro_Start = v(466.817,217.711)
SUnit_Sel_04.Orient_Intro_Start = r_to_d(-2.50911)
SUnit_Sel_04.Width_Intro_Start = 35.6642

SUnit_Sel_05.POS_Intro_Start = v(406.908,261.086)
SUnit_Sel_05.Orient_Intro_Start = r_to_d(-2.51391)
SUnit_Sel_05.Width_Intro_Start = 35.3848

SUnit_Sel_06.POS_Intro_Start = v(436.986,239.269)
SUnit_Sel_06.Orient_Intro_Start = r_to_d(-2.51372)
SUnit_Sel_06.Width_Intro_Start = 35.5464

SUnit_Sel_07.POS_Intro_Start = v(187.515,420.825)
SUnit_Sel_07.Orient_Intro_Start = r_to_d(-2.50998)
SUnit_Sel_07.Width_Intro_Start = 35.6469

SUnit_Sel_08.POS_Intro_Start = v(210.678,399.153)
SUnit_Sel_08.Orient_Intro_Start = r_to_d(-2.51439)
SUnit_Sel_08.Width_Intro_Start = 17.7745

--SUnit_Sel_09.POS_Intro_Start = v(286.286,344.172)
--SUnit_Sel_09.Orient_Intro_Start = r_to_d(-2.51314)
--SUnit_Sel_09.Width_Intro_Start = 17.8012

--SUnit_Sel_10.POS_Intro_Start = v(226.701,387.482)
--SUnit_Sel_10.Orient_Intro_Start = r_to_d(-2.51247)
--SUnit_Sel_10.Width_Intro_Start = 17.8768

SUnit_Sel_11.POS_Intro_Start = v(362.953,287.809)
SUnit_Sel_11.Orient_Intro_Start = r_to_d(-2.51333)
SUnit_Sel_11.Width_Intro_Start = 19.7944

SUnit_Sel_12.POS_Intro_Start = v(302.568,332.344)
SUnit_Sel_12.Orient_Intro_Start = r_to_d(-2.51467)
SUnit_Sel_12.Width_Intro_Start = 17.8849

SUnit_Sel_13.POS_Intro_Start = v(380.008,276.599)
SUnit_Sel_13.Orient_Intro_Start = r_to_d(-2.51218)
SUnit_Sel_13.Width_Intro_Start = 16.8316

SUnit_Sel_14.POS_Intro_Start = v(242.645,376.511)
SUnit_Sel_14.Orient_Intro_Start = r_to_d(-2.51381)
SUnit_Sel_14.Width_Intro_Start = 16.7957

SUnit_Sel_15.POS_Intro_Start = v(318.73,321.19)
SUnit_Sel_15.Orient_Intro_Start = r_to_d(-2.5141)
SUnit_Sel_15.Width_Intro_Start = 16.7685

SUnit_Sel_16.POS_Intro_Start = v(302.608,252.437)
SUnit_Sel_16.Orient_Intro_Start = r_to_d(-2.51918)
SUnit_Sel_16.Width_Intro_Start = 30.1926

SUnit_Sel_17.POS_Intro_Start = v(225.894,308.067)
SUnit_Sel_17.Orient_Intro_Start = r_to_d(-2.58505)
SUnit_Sel_17.Width_Intro_Start = 28.3386

SUnit_Sel_18.POS_Intro_Start = v(419.138,214.718)
SUnit_Sel_18.Orient_Intro_Start = r_to_d(-2.52858)
SUnit_Sel_18.Width_Intro_Start = 21.6786

SUnit_Sel_19.POS_Intro_Start = v(128.503,421.755)
SUnit_Sel_19.Orient_Intro_Start = r_to_d(-2.50624)
SUnit_Sel_19.Width_Intro_Start = 30.5348

--SUnit_Sel_20.POS_Intro_Start = v(152.813,408.36)
--SUnit_Sel_20.Orient_Intro_Start = r_to_d(-2.53241)
--SUnit_Sel_20.Width_Intro_Start = 21.5826

SUnit_Sel_21.POS_Intro_Start = v(395.906,229.863)
SUnit_Sel_21.Orient_Intro_Start = r_to_d(-2.50048)
SUnit_Sel_21.Width_Intro_Start = 25.1529

SUnit_Sel_22.POS_Intro_Start = v(175.925,390.423)
SUnit_Sel_22.Orient_Intro_Start = r_to_d(-2.48956)
SUnit_Sel_22.Width_Intro_Start = 29.0498

SUnit_Sel_23.POS_Intro_Start = v(369.911,248.17)
SUnit_Sel_23.Orient_Intro_Start = r_to_d(-2.52388)
SUnit_Sel_23.Width_Intro_Start = 27.1903

SUnit_Sel_24.POS_Intro_Start = v(339.237,303.103)
SUnit_Sel_24.Orient_Intro_Start = r_to_d(-2.42273)
SUnit_Sel_24.Width_Intro_Start = 27.8222

SUnit_Sel_25.POS_Intro_Start = v(264.281,358.963)
SUnit_Sel_25.Orient_Intro_Start = r_to_d(-2.46348)
SUnit_Sel_25.Width_Intro_Start = 25.7684

--SUnit_Sel_26.POS_Intro_Start = v(288.494,313.885)
--SUnit_Sel_26.Orient_Intro_Start = r_to_d(-2.46271)
--SUnit_Sel_26.Width_Intro_Start = 23.7773


function Teleport_Sel_Army_Intro_Start()
	for i = 1, #Seleucid_Sunits do
		local current_sunit = Seleucid_Sunits[i];
		current_sunit.uc:teleport_to_location(current_sunit.POS_Intro_Start, current_sunit.Orient_Intro_Start, current_sunit.Width_Intro_Start);
	end;
end;


function Move_Sel_Army_Intro_Start()
	for i = 1, #Seleucid_Sunits do
		local current_sunit = Seleucid_Sunits[i];
		current_sunit:goto_start_location();
	end;
end;

	
function Teleport_Sel_Army_Battle_Start()
	for i = 1, #Seleucid_Sunits do
		local current_sunit = Seleucid_Sunits[i];
		current_sunit:teleport_to_start_location();
	end;
end;


function Show_Sel_Army(value)
	for i = 1, #Seleucid_Sunits do
		local current_sunit = Seleucid_Sunits[i];
		current_sunit.uc:set_always_visible_to_all(value);
	end;
end;






--
-- Buildings
--

-- Building_01 = get_building_near(bm, 0, 0);









--
-- Convex Areas
--

--[[
Area_01 = convex_area:new(
	{
		v(-500, -500),
		v(-500, 0),
		v(0, 0),
		v(0, -500)
	}
);
]]





--
-- Patrol_Managers
--

--PM_Sel_01 = patrol_manager:new("Sel_01", SUnit_Sel_01, Alliance_Rom:armies(), 100);
--PM_Sel_01:add_waypoint(v(120, 70), false, 5000);









C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ra_raphia\ra_main.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	MAIN BATTLE SCRIPT
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------


BOOL_Should_Release_To_AI = true;


-- called at start of deployment phase
function Deployment_Phase()
	bm:out("Battle is in deployment phase");
end;



-- end of deployment phase i.e. battle start
function End_Deployment_Phase()
		
	-- launch cutscene, or straight into battle without it
	Play_Cutscene_Intro();
	
	-- force units to be visible for cutscene
	Force_Visibility(Seleucid_Sunits, true);
	bm:out("Forcing Seleucid units to be visible");
	-- Start_Battle_No_Cutscene();
end;


function Start_Battle_No_Cutscene()
	cam:fade(false, 0.5);
	
	Start_Battle();
end;



-- the interactive battle has started
function Start_Battle()
	bm:out("Battle is Starting");
	
	-- hide units again
	Force_Visibility(Seleucid_Sunits, false);
	bm:out("Forcing Seleucid units to be hidden");
		
	--start rout manager
	bm:start_rout_manager(1);
	
	-- register victory and defeat VO callbacks
	bm:setup_victory_callback(function() Battle_Is_Ending() end);
	
	-- create seleucid ai planner
	--bm:callback(
		--function()
			--SAI_Sel_All = script_ai_planner:new("SAI_Sel_All", Seleucid_Sunits);
			--SAI_Sel_All:set_debug_all();
			--SAI_Sel_All:move_to_position_of_sunit(SUnit_Egy_01);
			--SAI_Sel_All:attack_force(Egyptian_Sunits);
		--end,
		--1000
	--);
		
	-- startup advice
	bm:callback(function() bm:queue_advisor("Rom.HB.RA.001", 8000) end, 2000);
	
	-- objective
	bm:callback(function() set_objective("Rom.HB.RA.Objective_01") end, 5000);

	-- start elephant monitors
	Start_Elephant_Monitor_External(SUnit_Egy_08, SUnit_Sel_16, true);
	Start_Elephant_Monitor_External(SUnit_Egy_08, SUnit_Sel_17, true);
	
	bm:watch(
		function()
			--returns true if the commander of Army_Egy is dead
			return not Army_Egy_01:is_commander_alive()
		end,
		0,
		function()
			--"Ptolemy has been wounded and carried to his tent! His absense will be noticed by the men, commander!"
			bm:stop_advisor_queue();
			bm:queue_advisor("Rom.HB.RA.006", 6000);
		end,
		"Allied_Commander_Watch"
	);
	
	if BOOL_Should_Release_To_AI then
		bm:out("\tReleasing all Seleucid units to AI");
		UC_Sel_01_All:release_control();
		return;
	end;
end;








BOOL_Battle_Is_Ending = false;

-- the game has gone to victory countdown phase, someone has won
function Battle_Is_Ending()
	if not BOOL_Battle_Is_Ending then
		BOOL_Battle_Is_Ending = true;
					
		if is_routing_or_dead(Alliance_Egy) then	
			bm:out("Player has lost, army is routing");
		
			bm:stop_advisor_queue();
			bm:queue_advisor("Rom.HB.RA.005", 8000);
			fail_objective("Rom.HB.RA.Objective_01")
							
			bm:callback(function() bm:end_battle() end, 10000);
		else
			bm:out("Player has won !");
		
			bm:stop_advisor_queue();
			bm:queue_advisor("Rom.HB.RA.004", 8000);
			complete_objective("Rom.HB.RA.Objective_01")
			
			--  achievement
			local difficulty = Army_Egy_01:army_handicap();
	
			if difficulty <= 0 then			-- difficulty is "normal" or harder
				bm:unlock_achievement("ACHIEVEMENT_HISTORICAL_BATTLE_9");
			end;
			
			bm:callback(function() bm:end_battle() end, 12000);
		end;
	end;
end;



Elephant_Danger_Radius = 75;		-- in m
Elephant_Danger_Countdown = 30000; 	-- in ms

function Start_Elephant_Monitor_External(allied_sunit, enemy_sunit, is_starting)
	
	if is_starting then
		bm:out("Starting Elephant monitor on " .. allied_sunit.name .. " and " .. enemy_sunit.name);
		
		bm:watch(
			function() 
				return is_routing_or_dead(allied_sunit.unit) 
			end,
			0,
			function()
				-- the allied elephant is routing, shut the system down
				bm:out(allied_sunit.name .. " is routing, shutting down monitor");
				bm:remove_process(allied_sunit.name .. "_Danger_Monitor_" .. enemy_sunit.name);
				bm:remove_process(allied_sunit.name .. "_Rout_Monitor_" .. enemy_sunit.name);
			end,
			allied_sunit.name .. "_Rout_Monitor_" .. enemy_sunit.name
		);
		
	else
		bm:out("\t" .. allied_sunit.name .. " has passed out of danger radius (" .. Elephant_Danger_Radius .. "m) of " .. enemy_sunit.name);
	end;
	
	bm:watch(
		function()
			-- check if the Seleucid elephants are dead or routing
			return is_routing_or_dead(enemy_sunit.unit)
		end,
		0,
		function()
			-- if so, stop watching them
			bm:out(enemy_sunit.name .. " is routing or dead, shutting down monitor");
			bm:remove_process(allied_sunit.name .. "_Danger_Monitor_" .. enemy_sunit.name);
			bm:remove_process(allied_sunit.name .. "_Rout_Monitor_" .. enemy_sunit.name);
		end,
		allied_sunit.name .. "_Rout_Monitor_" .. enemy_sunit.name
	);

	bm:remove_process(allied_sunit.name .. "_Danger_Monitor_" .. enemy_sunit.name);

	bm:watch(
		function() 
			local dist = allied_sunit.unit:position():distance_xz(enemy_sunit.unit:position());
			-- bm:out("Distance from " .. allied_sunit.name .. " to " .. enemy_sunit.name .. " is " .. tostring(dist));
			return dist < Elephant_Danger_Radius
		end,
		0,
		function()
			Start_Elephant_Monitor_Internal(allied_sunit, enemy_sunit)
		end,
		allied_sunit.name .. "_Danger_Monitor_" .. enemy_sunit.name
	);
end;


function Start_Elephant_Monitor_Internal(allied_sunit, enemy_sunit)
	Warn_Of_Elephant_Proximity(allied_sunit);
	
	bm:out("\t" .. allied_sunit.name .. " has passed within danger radius (" .. Elephant_Danger_Radius .. "m) of " .. enemy_sunit.name .. " !");
	
	bm:watch(
		function() 
			local dist = allied_sunit.unit:position():distance_xz(enemy_sunit.unit:position());
			-- bm:out("Distance from " .. allied_sunit.name .. " to " .. enemy_sunit.name .. " is " .. tostring(dist));
			return dist >= Elephant_Danger_Radius
		end,
		0,
		function()
			Start_Elephant_Monitor_External(allied_sunit, enemy_sunit)
		end,
		allied_sunit.name .. "_Danger_Monitor_" .. enemy_sunit.name
	);
	
	bm:callback(function() Rout_Elephant(allied_sunit) end, Elephant_Danger_Countdown, allied_sunit.name .. "_Danger_Monitor_" .. enemy_sunit.name);
end;



BOOL_Dont_Warn_Of_Elephant_Proximity = false;
Elephant_Proximity_Warning_Cooldown = 30000;

function Warn_Of_Elephant_Proximity(sunit)
	if not BOOL_Dont_Warn_Of_Elephant_Proximity and not is_routing_or_dead(sunit) then
		bm:queue_advisor("Rom.HB.RA.002", 8000);
		
		BOOL_Dont_Warn_Of_Elephant_Proximity = true;
		
		bm:callback(function() BOOL_Dont_Warn_Of_Elephant_Proximity = false end, Elephant_Proximity_Warning_Cooldown, "Elephant_Proximity_Warning");
	end;
end;



BOOL_Elephant_Rout_Message_Delivered = false;

function Rout_Elephant(sunit)
	if not BOOL_Elephant_Rout_Message_Delivered and not is_routing_or_dead(sunit) then
		sunit.uc:morale_behavior_rout();
		
		bm:out("Routing elephant " .. sunit.name .. " !!!");
		
		BOOL_Elephant_Rout_Message_Delivered = true;
		
		bm:stop_advisor_queue();
		bm:queue_advisor("Rom.HB.RA.003", 8000);
	end;
end;






----------------------------------------------
--
--	FORCE VISIBILITY
--
----------------------------------------------

function Force_Visibility(sunits, value)

	for i = 1, #sunits do
		local current_sunit = sunits[i];
		
		current_sunit.uc:set_always_visible_to_all(value)
	end;
	
end;












C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ra_raphia\ra_start.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	INITIAL SCRIPT SETUP
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

-- clear out loaded files
system.ClearRequiredFiles();

-- load in battle script library
require "lua_scripts.Battle_Script_Header";

-- declare battlemanager object
bm = battle_manager:new(empire_battle:new());

-- get battle name from folder, and print header
battle_name, battle_shortform = get_folder_name_and_shortform();

bm:out("==============");
bm:out("==============");
bm:out("==============");
bm:out("Script started: Battle of " .. battle_name);
bm:out("==============");

-- load in other script files associated with this battle
package.path = package.path .. ";data/Script/" .. battle_name .. "/?.lua";

require (battle_shortform .. "_Declarations");
require (battle_shortform .. "_Cutscenes");
require (battle_shortform .. "_Main");

-- register functions to be called on phase changes
bm:register_phase_change_callback("Deployment", function() Deployment_Phase() end);			-- optional deployment phase callback
bm:setup_battle(function() End_Deployment_Phase() end);										-- called when battle starts








C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\sc_siege_of_carthage\sc_cutscenes.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	CUTSCENES SCRIPT
--
--	Declare intro and other cutscenes
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

POS_Cam_Cutscene_Intro_Final = v(69.6, 64.2, -940.8);
Targ_Cam_Cutscene_Intro_Final = v(68.0, 41.7, -882.5);

SFX_Rom_HB_SC_Intro_01 = new_sfx("Play_Rom_HB_SC_Pre_01_1");
SFX_Rom_HB_SC_Intro_02 = new_sfx("Play_Rom_HB_SC_Pre_02_1");
SFX_Rom_HB_SC_Intro_03 = new_sfx("Play_Rom_HB_SC_Pre_03_1");
SFX_Rom_HB_SC_Intro_04 = new_sfx("Play_Rom_HB_SC_Pre_04_1");
SFX_Rom_HB_SC_Intro_05 = new_sfx("Play_Rom_HB_SC_Pre_05_1");


Cutscene_Intro = cutscene:new(
	"Cutscene_Intro", 							-- unique string name for cutscene
	UC_Rom_01_All, 								-- unitcontroller over player's army
	47000, 										-- duration of cutscene in ms
	function() Start_Battle() end 				-- what to call when cutscene is finished
);

Cutscene_Intro:set_skippable(true, function() Skip_Cutscene_Intro() end);
Cutscene_Intro:set_skip_camera(POS_Cam_Cutscene_Intro_Final, Targ_Cam_Cutscene_Intro_Final);
-- Cutscene_Intro:set_debug();


function Play_Cutscene_Intro()

	Show_Car_Army(true);
	Teleport_Rom_Ships_Intro_Start();
	Teleport_Rom_Army_Intro_Start();
	
	local subtitles = Cutscene_Intro:subtitles();
	subtitles:set_alignment("bottom_centre");
	subtitles:clear();

	Cutscene_Intro:action(function() cam:move_to(v(644.0, 41.6, -365.8), v(594.1, 42.4, -328.1), 0, true, 25) end, 0);
	Cutscene_Intro:action(function() cam:move_to(v(644.0, 41.6, -365.8), v(594.1, 42.4, -328.1), 8, true, 23) end, 0);
	Cutscene_Intro:action(function() cam:fade(false, 0.5) end, 0);
	
	-- 22 June, 217BC
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.SC.Intro_01") end, 2500);

	Cutscene_Intro:action(function() subtitles:clear() end, 5500);
	
	-- Carthage had been subjugated by Rome since the conclusion of the Second Punic War.
	
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.SC.Pre_01") end, 6500);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Rom_HB_SC_Intro_01) end, 6500);
		
	Cutscene_Intro:action(function() cam:move_to(v(-319.7, 108.7, 261.7), v(-363.3, 112.7, 306.3), 0, true, 25) end, 6500);
	Cutscene_Intro:action(function() cam:move_to(v(-319.7, 108.7, 261.7), v(-363.3, 112.7, 306.3), 5, true, 24) end, 6500);
	
	Cutscene_Intro:action(
		function()
			cache_position(SUnit_Car_25);
			cache_position(SUnit_Car_26);
			cache_position(SUnit_Car_27);
			cache_position(SUnit_Car_28);
			SUnit_Car_25.uc:teleport_to_location(v(-248, 3), 180, 19.6);
			SUnit_Car_26.uc:teleport_to_location(v(-248, 20), 180, 19.7);
			SUnit_Car_27.uc:teleport_to_location(v(-248, 37), 180, 19.7);
			SUnit_Car_28.uc:teleport_to_location(v(-248, 54), 180, 18.3);
		end, 
		7500
	);
	
	Cutscene_Intro:action(
		function()
			SUnit_Car_25.uc:goto_location(v(-248, -128));
			SUnit_Car_26.uc:goto_location(v(-248, -116));
			SUnit_Car_27.uc:goto_location(v(-248, -85));
			SUnit_Car_28.uc:goto_location(v(-248, -78));
		end, 
		7800
	);
	
	
	Cutscene_Intro:action(function() cam:move_to(v(-233.0, 10.9, -7.0), v(-257.3, 13.9, 31.2), 0, true, 35) end, 9500);
	Cutscene_Intro:action(function() cam:move_to(v(-233.0, 10.9, -7.0), v(-257.3, 13.9, 31.2), 5, true, 37) end, 9500);
	
	Cutscene_Intro:action(
		function()
			cache_position(SUnit_Car_04);
			cache_position(SUnit_Car_05);
			SUnit_Car_04.uc:teleport_to_location(v(-122, 75), 180, 16);
			SUnit_Car_05.uc:teleport_to_location(v(-122, 108), 180, 16);
		end, 
		10500
	);
	
	Cutscene_Intro:action(
		function() 
			SUnit_Car_04.uc:goto_location(v(-122, -40));
			SUnit_Car_05.uc:goto_location(v(-122, -40));
		end, 
		10700
	);
			
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 11500);
	Cutscene_Intro:action(function() subtitles:clear() end, 11500);
		
	-- For 50 years Carthage paid a crippling indemnity and submitted to Roman authority.
	
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.SC.Pre_02") end, 12500);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Rom_HB_SC_Intro_02) end, 12500);
	
	Cutscene_Intro:action(function() cam:move_to(v(-100.7, 14.8, 54.7), v(-138.6, 18.8, 104.1), 0, true, 30) end, 12500);
	Cutscene_Intro:action(function() cam:move_to(v(-101.7, 14.8, 53.9), v(-139.7, 18.8, 103.3), 12, true, 30) end, 12500);
	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 18000);
	Cutscene_Intro:action(function() subtitles:clear() end, 18000);
	
	Cutscene_Intro:action(function() Move_Rom_Ships_Intro_Start() end, 18000);
	Cutscene_Intro:action(function() Move_Rom_Army_Intro_Start() end, 18000);
	
	-- By 151BC, the debt was paid. However Rome had her eye on Carthage's territory, and excuses were found to resume hostilities.
	
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.SC.Pre_03") end, 19000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Rom_HB_SC_Intro_03) end, 19000);
	
	Cutscene_Intro:action(function() cam:move_to(v(-39.7, 2.3, -844.9), v(-60.8, 5.0, -786.1), 0, true, 20) end, 19000);
	Cutscene_Intro:action(function() bm:fade_volume(VOLUME_TYPE_SFX, 20, 0) end, 19000);
		
	Cutscene_Intro:action(function() cam:move_to(v(178.6, 5.2, -770.4), v(128.6, 7.6, -807.9), 0, true, 40) end, 25000);
	Cutscene_Intro:action(function() cam:move_to(v(178.4, 5.2, -775.0), v(125.1, 7.4, -802.8), 8, true, 38) end, 25000);
	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 30000);
	Cutscene_Intro:action(function() subtitles:clear() end, 30000);	
	
	-- Carthage found itself under siege, but resisted Rome's attacks for two years.
	
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.SC.Pre_04") end, 31000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Rom_HB_SC_Intro_04) end, 31000);
	
	Cutscene_Intro:action(function() cam:move_to(v(-573.0, 1.3, -644.7), v(-574.3, 8.8, -582.7), 0, true, 30) end, 31000);
	Cutscene_Intro:action(function() cam:move_to(v(-573.0, 1.3, -644.7), v(-574.3, 8.8, -582.7), 4, true, 29) end, 31000);
	
	Cutscene_Intro:action(function() bm:fade_volume(VOLUME_TYPE_SFX, 100, 4) end, 31000);
	
	Cutscene_Intro:action(function() cam:move_to(v(-554.5, 5.4, -614.3), v(-579.1, -0.4, -671.5), 0, true, 40) end, 34500);
	Cutscene_Intro:action(function() cam:move_to(v(-554.5, 5.4, -614.3), v(-597.0, -1.4, -659.7), 10, true, 40) end, 34500);
	
	Cutscene_Intro:action(function() SUnit_Rom_01:teleport_to_start_location_offset(0, -32) end, 34500);
	Cutscene_Intro:action(function() SUnit_Rom_01:goto_start_location() end, 34700);
			
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 37000);
	Cutscene_Intro:action(function() subtitles:clear() end, 37000);	
	
	-- In 147BC Rome sent the popular young commander Scipio Aemilianus to end the war once and for all.
	
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.SC.Pre_05") end, 38000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Rom_HB_SC_Intro_05) end, 38000);
	
	Cutscene_Intro:action(function() cam:move_to(v(-82.3, 5.7, -769.9), v(-51.3, 2.9, -793.8), 0, true, 0) end, 39500);
	Cutscene_Intro:action(function() cam:move_to(v(-86.9, 5.7, -781.9), v(-49.9, 2.8, -794.5), 6, true, 0) end, 39500);
	
	Cutscene_Intro:action(function() Teleport_Rom_Army_Battle_Start() end, 40000);
	
	Cutscene_Intro:action(function() cam:move_to(POS_Cam_Cutscene_Intro_Final, Targ_Cam_Cutscene_Intro_Final, 4, false, 0) end, 43000);
	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 47000);
	Cutscene_Intro:action(function() subtitles:clear() end, 47000);	
	
	Cutscene_Intro:start();
end;


function Skip_Cutscene_Intro()
	cam:fade(true, 0);
	
	stop_sound(SFX_Rom_HB_SC_Intro_01);
	stop_sound(SFX_Rom_HB_SC_Intro_02);
	stop_sound(SFX_Rom_HB_SC_Intro_03);
	stop_sound(SFX_Rom_HB_SC_Intro_04);
	stop_sound(SFX_Rom_HB_SC_Intro_05);
	
	bm:fade_volume(VOLUME_TYPE_SFX, 100, 1);
	
	Teleport_Rom_Ships_Battle_Start();
	Teleport_Rom_Army_Battle_Start();
	
	bm:callback(function() cam:fade(false, 0.5) end, 1000);
end;










C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\sc_siege_of_carthage\sc_declarations.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	DECLARATIONS SCRIPT
--
--	Declare alliances, armies, convex areas and anything else of note in here
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

cam = bm:camera();

--
-- Army Declarations
--

Alliances = bm:alliances();

Alliance_Rom = Alliances:item(1);
Army_Rom_01 = Alliance_Rom:armies():item(1);

Alliance_Car = Alliances:item(2); 
Army_Car_01 = Alliance_Car:armies():item(1);
Army_Car_02 = Alliance_Car:armies():item(2);




--
-- Script Unit Declarations
--

-- ships
SUnit_Rom_01 = script_unit:new(Army_Rom_01, "Rom_01");
SUnit_Rom_02 = script_unit:new(Army_Rom_01, "Rom_02");
SUnit_Rom_03 = script_unit:new(Army_Rom_01, "Rom_03");
SUnit_Rom_04 = script_unit:new(Army_Rom_01, "Rom_04");
SUnit_Rom_05 = script_unit:new(Army_Rom_01, "Rom_05");
SUnit_Rom_06 = script_unit:new(Army_Rom_01, "Rom_06");
SUnit_Rom_07 = script_unit:new(Army_Rom_01, "Rom_07");
SUnit_Rom_08 = script_unit:new(Army_Rom_01, "Rom_08");
SUnit_Rom_09 = script_unit:new(Army_Rom_01, "Rom_09");
SUnit_Rom_10 = script_unit:new(Army_Rom_01, "Rom_10");

-- on beach
SUnit_Rom_15 = script_unit:new(Army_Rom_01, "Rom_15");
SUnit_Rom_16 = script_unit:new(Army_Rom_01, "Rom_16");

-- cav
SUnit_Rom_21 = script_unit:new(Army_Rom_01, "Rom_21");
SUnit_Rom_22 = script_unit:new(Army_Rom_01, "Rom_22");
SUnit_Rom_23 = script_unit:new(Army_Rom_01, "Rom_23");
SUnit_Rom_24 = script_unit:new(Army_Rom_01, "Rom_24");
SUnit_Rom_25 = script_unit:new(Army_Rom_01, "Rom_25");
SUnit_Rom_26 = script_unit:new(Army_Rom_01, "Rom_26");

-- inf
SUnit_Rom_31 = script_unit:new(Army_Rom_01, "Rom_31");
SUnit_Rom_32 = script_unit:new(Army_Rom_01, "Rom_32");
SUnit_Rom_33 = script_unit:new(Army_Rom_01, "Rom_33");
SUnit_Rom_34 = script_unit:new(Army_Rom_01, "Rom_34");
SUnit_Rom_35 = script_unit:new(Army_Rom_01, "Rom_35");
SUnit_Rom_36 = script_unit:new(Army_Rom_01, "Rom_36");
SUnit_Rom_37 = script_unit:new(Army_Rom_01, "Rom_37");

-- ranged
SUnit_Rom_41 = script_unit:new(Army_Rom_01, "Rom_41");
SUnit_Rom_42 = script_unit:new(Army_Rom_01, "Rom_42");
SUnit_Rom_43 = script_unit:new(Army_Rom_01, "Rom_43");
SUnit_Rom_44 = script_unit:new(Army_Rom_01, "Rom_44");
SUnit_Rom_45 = script_unit:new(Army_Rom_01, "Rom_45");
SUnit_Rom_46 = script_unit:new(Army_Rom_01, "Rom_46");

UC_Rom_01_All = unitcontroller_from_army(Army_Rom_01);


Roman_SUnits_All = {
	SUnit_Rom_01,
	SUnit_Rom_02,
	SUnit_Rom_03,
	SUnit_Rom_04,
	SUnit_Rom_05,
	SUnit_Rom_06,
	SUnit_Rom_07,
	SUnit_Rom_08,
	SUnit_Rom_09,
	SUnit_Rom_10,
	SUnit_Rom_15,
	SUnit_Rom_16,
	SUnit_Rom_21,
	SUnit_Rom_22,
	SUnit_Rom_23,
	SUnit_Rom_24,
	SUnit_Rom_25,
	SUnit_Rom_26,
	SUnit_Rom_31,
	SUnit_Rom_32,
	SUnit_Rom_33,
	SUnit_Rom_34,
	SUnit_Rom_35,
	SUnit_Rom_36,
	SUnit_Rom_37,
	SUnit_Rom_41,
	SUnit_Rom_42,
	SUnit_Rom_43,
	SUnit_Rom_44,
	SUnit_Rom_45,
	SUnit_Rom_46 
};

Roman_Ship_SUnits = {
	SUnit_Rom_01,
	SUnit_Rom_02,
	SUnit_Rom_03,
	SUnit_Rom_04,
	SUnit_Rom_05,
	SUnit_Rom_06,
	SUnit_Rom_07,
	SUnit_Rom_08,
	SUnit_Rom_09,
	SUnit_Rom_10
};

Roman_Land_SUnits = {
	SUnit_Rom_21,
	SUnit_Rom_22,
	SUnit_Rom_23,
	SUnit_Rom_24,
	SUnit_Rom_25,
	SUnit_Rom_26,
	SUnit_Rom_31,
	SUnit_Rom_32,
	SUnit_Rom_33,
	SUnit_Rom_34,
	SUnit_Rom_35,
	SUnit_Rom_36,
	-- SUnit_Rom_37,
	SUnit_Rom_41,
	SUnit_Rom_42,
	SUnit_Rom_43,
	SUnit_Rom_44,
	SUnit_Rom_45,
	SUnit_Rom_46
};

Roman_Ranged_SUnits = {
	SUnit_Rom_41,
	SUnit_Rom_42,
	SUnit_Rom_43,
	SUnit_Rom_44,
	SUnit_Rom_45,
	SUnit_Rom_46	
};






-- cav
SUnit_Car_01 = script_unit:new(Army_Car_01, "Car_01");
SUnit_Car_02 = script_unit:new(Army_Car_01, "Car_02");
SUnit_Car_03 = script_unit:new(Army_Car_01, "Car_03");
SUnit_Car_04 = script_unit:new(Army_Car_01, "Car_04");
SUnit_Car_05 = script_unit:new(Army_Car_01, "Car_05");
SUnit_Car_06 = script_unit:new(Army_Car_01, "Car_06");

-- inf
SUnit_Car_11 = script_unit:new(Army_Car_01, "Car_11");
SUnit_Car_12 = script_unit:new(Army_Car_01, "Car_12");
SUnit_Car_13 = script_unit:new(Army_Car_01, "Car_13");
SUnit_Car_14 = script_unit:new(Army_Car_01, "Car_14");
SUnit_Car_15 = script_unit:new(Army_Car_01, "Car_15");
SUnit_Car_16 = script_unit:new(Army_Car_01, "Car_16");
--SUnit_Car_17 = script_unit:new(Army_Car_01, "Car_17");
--SUnit_Car_18 = script_unit:new(Army_Car_01, "Car_18");
SUnit_Car_19 = script_unit:new(Army_Car_01, "Car_19");
SUnit_Car_20 = script_unit:new(Army_Car_01, "Car_20");
--SUnit_Car_21 = script_unit:new(Army_Car_01, "Car_21");
SUnit_Car_22 = script_unit:new(Army_Car_01, "Car_22");
--SUnit_Car_23 = script_unit:new(Army_Car_01, "Car_23");
--SUnit_Car_24 = script_unit:new(Army_Car_01, "Car_24");
SUnit_Car_25 = script_unit:new(Army_Car_01, "Car_25");
SUnit_Car_26 = script_unit:new(Army_Car_01, "Car_26");
SUnit_Car_27 = script_unit:new(Army_Car_01, "Car_27");
SUnit_Car_28 = script_unit:new(Army_Car_01, "Car_28");
SUnit_Car_29 = script_unit:new(Army_Car_01, "Car_29");
SUnit_Car_30 = script_unit:new(Army_Car_01, "Car_30");

-- ranged
SUnit_Car_31 = script_unit:new(Army_Car_01, "Car_31");
SUnit_Car_32 = script_unit:new(Army_Car_01, "Car_32");
SUnit_Car_33 = script_unit:new(Army_Car_01, "Car_33");
SUnit_Car_34 = script_unit:new(Army_Car_01, "Car_34");
SUnit_Car_35 = script_unit:new(Army_Car_01, "Car_35");
SUnit_Car_36 = script_unit:new(Army_Car_01, "Car_36");

-- art
SUnit_Car_41 = script_unit:new(Army_Car_01, "Car_41");
SUnit_Car_42 = script_unit:new(Army_Car_01, "Car_42");
--SUnit_Car_43 = script_unit:new(Army_Car_01, "Car_43");
--SUnit_Car_44 = script_unit:new(Army_Car_01, "Car_44");
SUnit_Car_45 = script_unit:new(Army_Car_01, "Car_45");
SUnit_Car_46 = script_unit:new(Army_Car_01, "Car_46");
SUnit_Car_47 = script_unit:new(Army_Car_01, "Car_47");
--SUnit_Car_48 = script_unit:new(Army_Car_01, "Car_48");

UC_Car_01_All = unitcontroller_from_army(Army_Car_01);
UC_Car_01_All:take_control();


-- hidden additionals

SUnit_Car_51 = script_unit:new(Army_Car_02, "Car_51");
SUnit_Car_52 = script_unit:new(Army_Car_02, "Car_52");
SUnit_Car_53 = script_unit:new(Army_Car_02, "Car_53");
SUnit_Car_54 = script_unit:new(Army_Car_02, "Car_54");
SUnit_Car_55 = script_unit:new(Army_Car_02, "Car_55");
SUnit_Car_56 = script_unit:new(Army_Car_02, "Car_56");
SUnit_Car_57 = script_unit:new(Army_Car_02, "Car_57");

UC_Car_02_All = unitcontroller_from_army(Army_Car_02);
UC_Car_02_All:take_control();

UC_Car_02_All:set_invisible_to_all(true);
UC_Car_02_All:change_enabled(false);

SUnits_Car_Ambush = {
	SUnit_Car_51,
	SUnit_Car_52,
	SUnit_Car_53,
	SUnit_Car_54,
	SUnit_Car_55,
	SUnit_Car_56,
	SUnit_Car_57
};

SUnits_Carthage = {
	SUnit_Car_01,
	SUnit_Car_02,
	SUnit_Car_03,
	SUnit_Car_04,
	SUnit_Car_05,
	SUnit_Car_06,
	SUnit_Car_11,
	SUnit_Car_12,
	SUnit_Car_13,
	SUnit_Car_14,
	SUnit_Car_15,
	SUnit_Car_16,
	--SUnit_Car_17,
	--SUnit_Car_18,
	SUnit_Car_19,
	SUnit_Car_20,
	--SUnit_Car_21,
	SUnit_Car_22,
	--SUnit_Car_23,
	--SUnit_Car_24,
	SUnit_Car_25,
	SUnit_Car_26,
	SUnit_Car_27,
	SUnit_Car_28,
	SUnit_Car_29,
	SUnit_Car_30,
	SUnit_Car_31,
	SUnit_Car_32,
	SUnit_Car_33,
	SUnit_Car_34,
	SUnit_Car_35,
	SUnit_Car_36,
	SUnit_Car_41,
	SUnit_Car_42,
	--SUnit_Car_43,
	--SUnit_Car_44,
	SUnit_Car_45,
	SUnit_Car_46,
	SUnit_Car_47,
	--SUnit_Car_48,
	SUnit_Car_51,
	SUnit_Car_52,
	SUnit_Car_53,
	SUnit_Car_54,
	SUnit_Car_55,
	SUnit_Car_56,
	SUnit_Car_57
};


SUnits_Carthage_Ranged = {
	SUnit_Car_31,
	SUnit_Car_32,
	SUnit_Car_33,
	SUnit_Car_34,
	SUnit_Car_35,
	SUnit_Car_36
};



--
-- Buildings
--

-- Building_01 = get_building_near(bm, 0, 0);









--
-- Convex Areas
--

Area_Ambush_Trigger = convex_area:new(
	{
		v(-20, 627),
		v(150, 290),
		v(-220, 30),
		v(-685, 525)
	}
);









SUnit_Rom_01.POS_Intro_Start = v(-113.688,-847.614)
SUnit_Rom_01.Orient_Intro_Start = r_to_d(0.0162027)
SUnit_Rom_01.Width_Intro_Start = 10.4

SUnit_Rom_02.POS_Intro_Start = v(-73.498,-848.273)
SUnit_Rom_02.Orient_Intro_Start = r_to_d(0.0162027)
SUnit_Rom_02.Width_Intro_Start = 10.4

SUnit_Rom_03.POS_Intro_Start = v(-33.0082,-848.897)
SUnit_Rom_03.Orient_Intro_Start = r_to_d(0.0162027)
SUnit_Rom_03.Width_Intro_Start = 10.4

SUnit_Rom_04.POS_Intro_Start = v(7.27815,-849.692)
SUnit_Rom_04.Orient_Intro_Start = r_to_d(0.0162027)
SUnit_Rom_04.Width_Intro_Start = 10.4

SUnit_Rom_05.POS_Intro_Start = v(47.7346,-850.249)
SUnit_Rom_05.Orient_Intro_Start = r_to_d(0.0162027)
SUnit_Rom_05.Width_Intro_Start = 10.4

SUnit_Rom_06.POS_Intro_Start = v(248.535,-853.645)
SUnit_Rom_06.Orient_Intro_Start = r_to_d(0.0162027)
SUnit_Rom_06.Width_Intro_Start = 10.4

SUnit_Rom_07.POS_Intro_Start = v(88.0984,-851.089)
SUnit_Rom_07.Orient_Intro_Start = r_to_d(0.0162027)
SUnit_Rom_07.Width_Intro_Start = 10.4

SUnit_Rom_08.POS_Intro_Start = v(128.401,-851.666)
SUnit_Rom_08.Orient_Intro_Start = r_to_d(0.0162027)
SUnit_Rom_08.Width_Intro_Start = 10.4

SUnit_Rom_09.POS_Intro_Start = v(168.858,-852.193)
SUnit_Rom_09.Orient_Intro_Start = r_to_d(0.0162027)
SUnit_Rom_09.Width_Intro_Start = 10.4

SUnit_Rom_10.POS_Intro_Start = v(208.769,-852.137)
SUnit_Rom_10.Orient_Intro_Start = r_to_d(0.0162027)
SUnit_Rom_10.Width_Intro_Start = 9.12

SUnit_Rom_21.POS_Intro_Start = v(-627.838,-667.509)
SUnit_Rom_21.Orient_Intro_Start = r_to_d(0.060017)
SUnit_Rom_21.Width_Intro_Start = 20.1956

SUnit_Rom_22.POS_Intro_Start = v(-604.566,-663.443)
SUnit_Rom_22.Orient_Intro_Start = r_to_d(0.00738228)
SUnit_Rom_22.Width_Intro_Start = 19.7763

SUnit_Rom_23.POS_Intro_Start = v(-584.432,-663.263)
SUnit_Rom_23.Orient_Intro_Start = r_to_d(0.0193665)
SUnit_Rom_23.Width_Intro_Start = 19.7287

SUnit_Rom_24.POS_Intro_Start = v(-561.913,-660.497)
SUnit_Rom_24.Orient_Intro_Start = r_to_d(0.00997088)
SUnit_Rom_24.Width_Intro_Start = 19.4842

SUnit_Rom_25.POS_Intro_Start = v(-590.171,-727.917)
SUnit_Rom_25.Orient_Intro_Start = r_to_d(-0.116007)
SUnit_Rom_25.Width_Intro_Start = 22.1981

SUnit_Rom_26.POS_Intro_Start = v(-565.006,-724.188)
SUnit_Rom_26.Orient_Intro_Start = r_to_d(-0.0988459)
SUnit_Rom_26.Width_Intro_Start = 22.4788

SUnit_Rom_31.POS_Intro_Start = v(-606.967,-693.987)
SUnit_Rom_31.Orient_Intro_Start = r_to_d(-0.082835)
SUnit_Rom_31.Width_Intro_Start = 19.9518

SUnit_Rom_32.POS_Intro_Start = v(-584.285,-692.078)
SUnit_Rom_32.Orient_Intro_Start = r_to_d(-0.0792876)
SUnit_Rom_32.Width_Intro_Start = 20.0671

SUnit_Rom_33.POS_Intro_Start = v(-561.351,-690.222)
SUnit_Rom_33.Orient_Intro_Start = r_to_d(-0.0811092)
SUnit_Rom_33.Width_Intro_Start = 20.2456

SUnit_Rom_34.POS_Intro_Start = v(-604.474,-708.253)
SUnit_Rom_34.Orient_Intro_Start = r_to_d(-0.116583)
SUnit_Rom_34.Width_Intro_Start = 20.9297

SUnit_Rom_35.POS_Intro_Start = v(-582.438,-705.699)
SUnit_Rom_35.Orient_Intro_Start = r_to_d(-0.117637)
SUnit_Rom_35.Width_Intro_Start = 20.2241

SUnit_Rom_36.POS_Intro_Start = v(-560.646,-702.861)
SUnit_Rom_36.Orient_Intro_Start = r_to_d(-0.117733)
SUnit_Rom_36.Width_Intro_Start = 19.8945

SUnit_Rom_41.POS_Intro_Start = v(-605.29,-753.18)
SUnit_Rom_41.Orient_Intro_Start = r_to_d(-0.153)
SUnit_Rom_41.Width_Intro_Start = 20.6

SUnit_Rom_42.POS_Intro_Start = v(-581.97,-749.58)
SUnit_Rom_42.Orient_Intro_Start = r_to_d(-0.153)
SUnit_Rom_42.Width_Intro_Start = 20.6

SUnit_Rom_43.POS_Intro_Start = v(-558.65,-745.98)
SUnit_Rom_43.Orient_Intro_Start = r_to_d(-0.153)
SUnit_Rom_43.Width_Intro_Start = 20.6

SUnit_Rom_44.POS_Intro_Start = v(-535.32,-742.37)
SUnit_Rom_44.Orient_Intro_Start = r_to_d(-0.153)
SUnit_Rom_44.Width_Intro_Start = 20.6

SUnit_Rom_45.POS_Intro_Start = v(-582.03,-783.29)
SUnit_Rom_45.Orient_Intro_Start = r_to_d(-0.139)
SUnit_Rom_45.Width_Intro_Start = 23.54

SUnit_Rom_46.POS_Intro_Start = v(-553.76,-779.34)
SUnit_Rom_46.Orient_Intro_Start = r_to_d(-0.139)
SUnit_Rom_46.Width_Intro_Start = 23.54


function Teleport_Rom_Ships_Intro_Start()
	for i = 1, #Roman_Ship_SUnits do
		local current_sunit = Roman_Ship_SUnits[i];
		current_sunit:teleport_to_start_location_offset(0, -50);
	end;
end;

-- add some noise to the ship's movements so they don't all move together
SUnit_Rom_01.intro_delay = 0;
SUnit_Rom_02.intro_delay = 1000;
SUnit_Rom_03.intro_delay = 1500;
SUnit_Rom_04.intro_delay = 3500;
SUnit_Rom_05.intro_delay = 500;
SUnit_Rom_06.intro_delay = 4000;
SUnit_Rom_07.intro_delay = 5000;
SUnit_Rom_08.intro_delay = 3200;
SUnit_Rom_09.intro_delay = 800;
SUnit_Rom_10.intro_delay = 4500;


function Move_Rom_Ships_Intro_Start()
	for i = 1, #Roman_Ship_SUnits do
		local current_sunit = Roman_Ship_SUnits[i];
		bm:callback(function() current_sunit:goto_start_location() end, current_sunit.intro_delay);
	end;
end;

function Teleport_Rom_Ships_Battle_Start()
	for i = 1, #Roman_Ship_SUnits do
		local current_sunit = Roman_Ship_SUnits[i];
		current_sunit:teleport_to_start_location();
	end;
end;



function Teleport_Rom_Army_Intro_Start()
	for i = 1, #Roman_Land_SUnits do
		local current_sunit = Roman_Land_SUnits[i];
		current_sunit.uc:teleport_to_location(current_sunit.POS_Intro_Start, current_sunit.Orient_Intro_Start, current_sunit.Width_Intro_Start);
	end;
end;

function Move_Rom_Army_Intro_Start()
	for i = 1, #Roman_Land_SUnits do
		local current_sunit = Roman_Land_SUnits[i];
		current_sunit:move_to_position_offset(0, 100, false);
	end;
end;

function Teleport_Rom_Army_Battle_Start()
	for i = 1, #Roman_Land_SUnits do
		local current_sunit = Roman_Land_SUnits[i];
		current_sunit:teleport_to_start_location();
	end;
end;









function Show_Car_Army(value)
	for i = 1, #SUnits_Carthage do
		local current_sunit = SUnits_Carthage[i];
		current_sunit.uc:set_always_visible_to_all(value);
	end;
end;









C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\sc_siege_of_carthage\sc_main.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	MAIN BATTLE SCRIPT
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------



-- called at start of deployment phase
function Deployment_Phase()
	bm:out("Battle is in deployment phase");
	
	-- move the Roman units that should have been given siege towers to the siege tower positions which should stop them pivoting around whilst sorting themselves out
	SUnit_Rom_15.uc:goto_location_angle_width(v(-240, -297), 0, 10);
	SUnit_Rom_37.uc:goto_location_angle_width(v(-730, -530), 0, 10);
	
	-- position Carthaginian units on walls
	SUnit_Car_31.uc:occupy_zone(v(-381, -157));
	SUnit_Car_32.uc:occupy_zone(v(-552, -324));
	SUnit_Car_33.uc:occupy_zone(v(-605, -325));
	SUnit_Car_34.uc:occupy_zone(v(-660, -328));
	SUnit_Car_35.uc:occupy_zone(v(-190, -145));
	SUnit_Car_36.uc:occupy_zone(v(-290, -145));
end;



-- end of deployment phase i.e. battle start
function End_Deployment_Phase()
		
	-- launch cutscene, or straight into battle without it
	Play_Cutscene_Intro();
	-- Start_Battle_No_Cutscene();
end;


function Start_Battle_No_Cutscene()
	cam:fade(false, 0.5);
	
	Start_Battle();
end;



-- the interactive battle has started
function Start_Battle()
	bm:out("Battle is Starting");
			
	--start rout manager
	bm:start_rout_manager(1);
	
	-- teleport some units back that were moved in the intro cutscene
	SUnit_Car_04:teleport_to_cached_location();
	SUnit_Car_05:teleport_to_cached_location();
	SUnit_Car_25:teleport_to_cached_location();
	SUnit_Car_26:teleport_to_cached_location();
	SUnit_Car_27:teleport_to_cached_location();
	SUnit_Car_28:teleport_to_cached_location();
	
	-- boost starting ammo
	Boost_Ammo(Roman_Ranged_SUnits, 3);	
	Boost_Ammo(SUnits_Carthage_Ranged, 3);	
	
	-- register victory and defeat VO callbacks
	bm:setup_victory_callback(function() Battle_Is_Ending() end);
	
	-- startup advice
	bm:callback(
		function()
			bm:queue_advisor("Rom.HB.SC.001", 10000);
		end,
		2000
	);
	
	-- objective
	bm:callback(function() set_objective("Rom.HB.SC.Objective_01") end, 5000);
	
	-- watch player's general
	bm:watch(function() return not Army_Rom_01:is_commander_alive() end, 0, function() bm:queue_advisor("Rom.HB.SC.007", 10000) end, "Allied_Commander_Watch");
	
	-- trigger ambush
	bm:watch(function() return Should_Carthage_Release_Ambush() end, 0, function() Release_Carthage_Ambush() end, "Carthage_Ambush");
	
	UC_Car_01_All:release_control();
end;


function Boost_Ammo(sunits, modifier)
	for i = 1, #sunits do
		local current_sunit = sunits[i];
		refill_ammo(current_sunit.unit, modifier);
	end;
end;




function Are_Ambush_Units_Visible()
	for i = 1, #SUnits_Car_Ambush do
		local current_sunit = SUnits_Car_Ambush[i];
		if current_sunit.unit:is_visible_to_alliance(Alliance_Rom) then
			return true;
		end;
	end;

	return false;
end;


function Should_Carthage_Release_Ambush()
	if Area_Ambush_Trigger:is_in_area(Army_Rom_01, true) then
		bm:out("Army_Rom_01 is in Area_Ambush_Trigger");
		return true;
	-- elseif Are_Ambush_Units_Visible() then
	--	bm:out("Ambushing units are visible to the Romans");
	--	return true;
	elseif num_units_routing(SUnits_Carthage) > 20 then
		bm:out("More than 20 Carthaginian units are routing");
		return true;
	end;
	
	return false;
end;


function Release_Carthage_Ambush()
	bm:out("Releasing Carthaginian extra units");
	
	UC_Car_02_All:set_invisible_to_all(false);
	UC_Car_02_All:change_enabled(true);
	
	SAI_Car_Ambush = script_ai_planner:new("SAI_Car_Ambush", SUnits_Car_Ambush);
	
	-- SAI_RomAI:patrol(Rom_Waypoints, Egy_Land_SUnits);
	SAI_Car_Ambush:attack_force(Roman_SUnits_All);
	
	-- advice
	bm:callback(
		function()
			bm:queue_advisor("Rom.HB.SC.006", 10000);
		end,
		20000,
		"Carthage_Ambush"
	);
end;










BOOL_Battle_Is_Ending = false;

-- the game has gone to victory countdown phase, someone has won
function Battle_Is_Ending()
	if not BOOL_Battle_Is_Ending then
		BOOL_Battle_Is_Ending = true;
		
		bm:remove_process("Allied_Commander_Watch");
		bm:remove_process("Carthage_Ambush");
					
		if is_routing_or_dead(Alliance_Rom) then	
			bm:out("Player has lost, army is routing");
			
			bm:queue_advisor("Rom.HB.SC.008", 10000);
			fail_objective("Rom.HB.SC.Objective_01");
							
			bm:callback(function() bm:end_battle() end, 10000);
		else
			bm:out("Player has won !");
			
			bm:queue_advisor("Rom.HB.SC.009", 10000);
			complete_objective("Rom.HB.SC.Objective_01");
			
			--  achievement
			local difficulty = Army_Rom_01:army_handicap();
	
			if difficulty <= 0 then			-- difficulty is "normal" or harder
				bm:unlock_achievement("ACHIEVEMENT_HISTORICAL_BATTLE_6");
			end;
			
			bm:callback(function() bm:end_battle() end, 10000);
		end;
	end;
end;







C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\sc_siege_of_carthage\sc_start.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	INITIAL SCRIPT SETUP
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

-- clear out loaded files
system.ClearRequiredFiles();

-- load in battle script library
require "lua_scripts.Battle_Script_Header";

-- declare battlemanager object
bm = battle_manager:new(empire_battle:new());

-- get battle name from folder, and print header
battle_name, battle_shortform = get_folder_name_and_shortform();

bm:out("==============");
bm:out("==============");
bm:out("==============");
bm:out("Script started: Battle of " .. battle_name);
bm:out("==============");

-- load in other script files associated with this battle
package.path = package.path .. ";data/Script/" .. battle_name .. "/?.lua";

require (battle_shortform .. "_Declarations");
require (battle_shortform .. "_Cutscenes");
require (battle_shortform .. "_Main");

-- register functions to be called on phase changes
bm:register_phase_change_callback("Deployment", function() Deployment_Phase() end);			-- optional deployment phase callback
bm:setup_battle(function() End_Deployment_Phase() end);										-- called when battle starts








C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\tb_template_battle\tb_cutscenes.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	CUTSCENES SCRIPT
--
--	Declare intro and other cutscenes
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------


Cutscene_Intro = cutscene:new(
	"Cutscene_Intro", 							-- unique string name for cutscene
	UC_Rom_01_All, 								-- unitcontroller over player's army
	1000, 										-- duration of cutscene in ms
	function() Start_Battle() end 				-- what to call when cutscene is finished
);


function Play_Cutscene_Intro()

	--Cutscene_Intro:action(function() cam:fade(false, 0.5) end, 0);
	--Cutscene_Intro:action(function() cam:move_to(v(-156.7, 20.7, -682.8), v(-150, 21.1, -744.9), 0, true, 25) end, 2000);
	
	Cutscene_Intro:start();
end;










C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\tb_template_battle\tb_declarations.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	DECLARATIONS SCRIPT
--
--	Declare alliances, armies, convex areas and anything else of note in here
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

cam = bm:camera();

--
-- Army Declarations
--

Alliances = bm:alliances();

Alliance_Rom = Alliances:item(1);
Army_Rom_01 = Alliance_Rom:armies():item(1);

Alliance_Car = Alliances:item(2); 
Army_Car_01 = Alliance_Car:armies():item(1);




--
-- Script Unit Declarations
--

SUnit_Rom_01 = script_unit:new(Army_Rom_01, "Rom_01");
SUnit_Rom_02 = script_unit:new(Army_Rom_01, "Rom_02");
SUnit_Rom_03 = script_unit:new(Army_Rom_01, "Rom_03");
SUnit_Rom_04 = script_unit:new(Army_Rom_01, "Rom_04");

UC_Rom_01_All = unitcontroller_from_army(Army_Rom_01);


SUnit_Car_01 = script_unit:new(Army_Car_01, "Car_01");
SUnit_Car_02 = script_unit:new(Army_Car_01, "Car_02");
SUnit_Car_03 = script_unit:new(Army_Car_01, "Car_03");
SUnit_Car_04 = script_unit:new(Army_Car_01, "Car_04");

UC_Car_01_All = unitcontroller_from_army(Army_Car_01);
UC_Car_01_All:take_control();




--
-- Buildings
--

-- Building_01 = get_building_near(bm, 0, 0);









--
-- Convex Areas
--

--[[
Area_01 = convex_area:new(
	{
		v(-500, -500),
		v(-500, 0),
		v(0, 0),
		v(0, -500)
	}
);
]]





--
-- Patrol_Managers
--

--PM_Car_01 = patrol_manager:new("Car_01", SUnit_Car_01, Alliance_Rom:armies(), 100);
--PM_Car_01:add_waypoint(v(120, 70), false, 5000);









C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\tb_template_battle\tb_main.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	MAIN BATTLE SCRIPT
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------



-- called at start of deployment phase
function Deployment_Phase()
	bm:out("Battle is in deployment phase");
end;



-- end of deployment phase i.e. battle start
function End_Deployment_Phase()
		
	-- launch cutscene, or straight into battle without it
	Play_Cutscene_Intro();
	-- Start_Battle_No_Cutscene();
end;


function Start_Battle_No_Cutscene()
	cam:fade(false, 0.5);
	
	Start_Battle();
end;



-- the interactive battle has started
function Start_Battle()
	bm:out("Battle is Starting");
		
	--start rout manager
	bm:start_rout_manager(1);
	
	-- register victory and defeat VO callbacks
	bm:setup_victory_callback(function() Battle_Is_Ending() end);
end;








BOOL_Battle_Is_Ending = false;

-- the game has gone to victory countdown phase, someone has won
function Battle_Is_Ending()
	if not BOOL_Battle_Is_Ending then
		BOOL_Battle_Is_Ending = true;
					
		if is_routing_or_dead(Alliance_Rom) then	
			bm:out("Player has lost, army is routing");
							
			bm:callback(function() bm:end_battle() end, 10000);
		else
			bm:out("Player has won !");
			
			bm:callback(function() bm:end_battle() end, 10000);
		end;
	end;
end;







C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\tb_template_battle\tb_start.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	INITIAL SCRIPT SETUP
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

-- clear out loaded files
system.ClearRequiredFiles();

-- load in battle script library
require "lua_scripts.Battle_Script_Header";

-- declare battlemanager object
bm = battle_manager:new(empire_battle:new());

-- get battle name from folder, and print header
battle_name, battle_shortform = get_folder_name_and_shortform();

bm:out("==============");
bm:out("==============");
bm:out("==============");
bm:out("Script started: Battle of " .. battle_name);
bm:out("==============");

-- load in other script files associated with this battle
package.path = package.path .. ";data/Script/" .. battle_name .. "/?.lua";

require (battle_shortform .. "_Declarations");
require (battle_shortform .. "_Cutscenes");
require (battle_shortform .. "_Main");

-- register functions to be called on phase changes
bm:register_phase_change_callback("Deployment", function() Deployment_Phase() end);			-- optional deployment phase callback
bm:setup_battle(function() End_Deployment_Phase() end);										-- called when battle starts








C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\tf_teutoburg_forest\tf_blockade.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	BLOCKADE SCRIPT
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

function Start_Varus_Escape()
	PM_Rom_Var_Escape:start();
end;

BOOL_Arminius_Chase_Started = false;

function Start_Arminius_Chase()
	if BOOL_Arminius_Chase_Started then
		return;
	end;
	
	BOOL_Arminius_Chase_Started = true;

	-- Arminius follows
	bm:callback(
		function()
			PM_Ger_AR_01_Escape:start();
		end,
		2000
	);
	
	bm:callback(
		function()
			PM_Ger_AR_02_Escape:start();
		end,
		2500
	);
	
	bm:callback(
		function()
			PM_Ger_AR_04_Escape:start();
		end,
		2900
	);
	
	bm:callback(
		function()
			PM_Ger_AR_03_Escape:start();
			PM_Ger_AR_05_Escape:start();
		end,
		3300
	);
end;



POS_Blockade_Approach_A = v(-295, 140);
POS_Blockade_Approach_B = v(-185, 0);

BOOL_Blockade_Started = false;

function Start_Blockade()
	bm:out("Starting Blockade!");
	
	bm:add_ping_icon(-360, 42, 85, 2, false);
	
	BOOL_Blockade_Started = true;
			
	-- Setup German army
	unit_rout_on_casualties(SUnit_Ger_F1_01, 0.75);
	unit_rout_on_casualties(SUnit_Ger_F1_02, 0.5);
	unit_rout_on_casualties(SUnit_Ger_F1_03, 0.5);
	unit_rout_on_casualties(SUnit_Ger_F1_04, 0.5);
	unit_rout_on_casualties(SUnit_Ger_F1_05, 0.75);
	
	unit_rout_on_casualties(SUnit_Ger_F3_01, 0.7);
	unit_rout_on_casualties(SUnit_Ger_F3_02, 0.8);
	unit_rout_on_casualties(SUnit_Ger_F3_03, 0.8);
	unit_rout_on_casualties(SUnit_Ger_F3_04, 0.8);
	unit_rout_on_casualties(SUnit_Ger_F3_05, 0.95);
	unit_rout_on_casualties(SUnit_Ger_F3_06, 0.8);
	unit_rout_on_casualties(SUnit_Ger_F3_07, 0.8);
	unit_rout_on_casualties(SUnit_Ger_F3_08, 0.8);
	
	unit_rout_on_casualties(SUnit_Ger_F4_01, 0.8);
	unit_rout_on_casualties(SUnit_Ger_F4_02, 0.8);
	unit_rout_on_casualties(SUnit_Ger_F4_03, 0.8);
	unit_rout_on_casualties(SUnit_Ger_F4_04, 0.8);
	
	
	-- watch for forest being escaped
	bm:watch(function() return Is_Forest_Escaped() end, 0, function() Forest_Escaped() end, "Forest_Escaped_Monitor");
	
	
	-- Officer advice
	bm:callback(function() bm:queue_advisor("Rom.HB.TF_Gameplay_05", 8000) end, 3000);
	bm:callback(function() bm:close_advisor() end, 13000);
	
	-- remove "Varus" from player sunits list
	for i = 1, #Rom_Sunits do
		if Rom_Sunits[i] == SUnit_Rom_Var then
			table.remove(Rom_Sunits, i);
			break;
		end;
	end;
	
	-- Player's army released
	for i = 1, #Rom_Sunits do
		Rom_Sunits[i].uc:release_control();
	end;
	
	-- watch for player's army going places they shouldn't
	bm:watch(
		function() return Players_Army_Moving_Away_From_Blockade() end,
		0,
		function() Start_Berserker_March("Player moving away from blockade") end,
		"Berserker_March_On"
	);
	
	-- failsafe
	local delay_after_berserker_approach = 20000;
	bm:watch(function() return has_crossed_line(Rom_Sunits, POS_Blockade_Approach_A, POS_Blockade_Approach_B, true) end, delay_after_berserker_approach, function() Start_Berserker_March(tostring(delay_after_berserker_approach) .. "ms after blockade approach tripwire passed [failsafe]") end, "Berserker_March_On");
	
	-- super-failsafe
	local failsafe_berserker = 100000;
	bm:callback(function() Start_Berserker_March(tostring(failsafe_berserker) .. "ms after section started [super-failsafe!]") end, failsafe_berserker, "Berserker_March_On");
end;


-- return true if any of the player's units are in any of the boundary areas
function Players_Army_Moving_Away_From_Blockade()
	for i = 1, #Rom_Sunits do
		local curr_sunit = Rom_Sunits[i];
		
		for j = 1, #Blockade_Boundary_Areas do
			local curr_area = Blockade_Boundary_Areas[j];
			
			if curr_area:standing_is_in_area(curr_sunit.unit) then
				return true;
			end;
		end;
	end;
	
	return false;
end;




Ger_Blockade_Sunits = {
	SUnit_Ger_S1_02,
	SUnit_Ger_S1_03,
	SUnit_Ger_S1_04
};



function Start_Berserker_March_Delayed(reason)
	bm:callback(function() Start_Berserker_March(reason) end, 10000);
end;


BOOL_Berserkers_Marching_On = false;

function Start_Berserker_March(reason)
	if BOOL_Berserkers_Marching_On then
		return false;
	end;
	
	BOOL_Berserkers_Marching_On = true;
	
	bm:remove_process("Berserker_March_On");

	bm:out("Starting Berserker walk on, reason is " .. tostring(reason));
	
	Show_Units(SUnit_Ger_F2_01.uc);
	Show_Units(SUnit_Ger_F2_02.uc);
	Show_Units(SUnit_Ger_F2_03.uc);
	Show_Units(SUnit_Ger_F2_04.uc);
	Show_Units(SUnit_Ger_F2_05.uc);
	Show_Units(SUnit_Ger_F2_06.uc);
	Show_Units(SUnit_Ger_F2_07.uc);
	Show_Units(SUnit_Ger_F2_08.uc);
	Show_Units(SUnit_Ger_F2_09.uc);
	Show_Units(SUnit_Ger_F2_10.uc);
	Show_Units(SUnit_Ger_F2_11.uc);
	Show_Units(SUnit_Ger_F2_12.uc);
	
	SUnit_Ger_F2_01.uc:set_always_visible_to_all(true);
	SUnit_Ger_F2_02.uc:set_always_visible_to_all(true);
	SUnit_Ger_F2_03.uc:set_always_visible_to_all(true);
	SUnit_Ger_F2_04.uc:set_always_visible_to_all(true);
	SUnit_Ger_F2_05.uc:set_always_visible_to_all(true);
	SUnit_Ger_F2_06.uc:set_always_visible_to_all(true);
	SUnit_Ger_F2_07.uc:set_always_visible_to_all(true);
	SUnit_Ger_F2_08.uc:set_always_visible_to_all(true);
	SUnit_Ger_F2_09.uc:set_always_visible_to_all(true);
	SUnit_Ger_F2_10.uc:set_always_visible_to_all(true);
	SUnit_Ger_F2_11.uc:set_always_visible_to_all(true);
	SUnit_Ger_F2_12.uc:set_always_visible_to_all(true);
	
	PM_Ger_F2_01_Berserker_Attack_Start:start();
	
	bm:callback(
		function()
			PM_Ger_F2_02_Berserker_Attack_Start:start();
			PM_Ger_F2_03_Berserker_Attack_Start:start();
		end,
		2500
	);
	
	bm:callback(
		function()
			PM_Ger_F2_04_Berserker_Attack_Start:start();
			PM_Ger_F2_05_Berserker_Attack_Start:start();
			PM_Ger_F2_06_Berserker_Attack_Start:start();
			PM_Ger_F2_07_Berserker_Attack_Start:start();
			PM_Ger_F2_08_Berserker_Attack_Start:start();
			PM_Ger_F2_09_Berserker_Attack_Start:start();
			PM_Ger_F2_10_Berserker_Attack_Start:start();
			PM_Ger_F2_11_Berserker_Attack_Start:start();
			PM_Ger_F2_12_Berserker_Attack_Start:start();
		end,
		6000
	);
end;


BOOL_Berserkers_In_Position = false;

function Berserkers_In_Position(berserkers_intercepted)
	if BOOL_Berserkers_In_Position then
		return false;
	end;
	
	BOOL_Berserkers_In_Position = true;

	local berserkers_intercepted = berserkers_intercepted or false;
	
	bm:remove_ping_icon(-360, 42, 85);
	
	if berserkers_intercepted then
		bm:out("Berserkers in position - they were intercepted!");
		
		Start_Berserker_Attack();
	else
		bm:out("Berserkers in position - they were not intercepted!");
		
		Play_Cutscene_Berserkers();
	end;
end;


POS_Berserker_End_A = v(-488, -4);
POS_Berserker_End_B = v(-447, -50);

BOOL_Berserker_Attack_Started = false;

function Start_Berserker_Attack()
	bm:out("Starting Berserker Attack!");
	
	bm:add_ping_icon(-550, 35, -98, 2, false);
	
	BOOL_Berserker_Attack_Started = true;
	
	-- ambient barbarian taunts
	bm:out("SFX_TF_Group_Taunt_Mid is " .. tostring(SFX_TF_Group_Taunt_Mid));
	Start_Ambient_Taunts(Taunts_F_Mid, SFX_TF_Group_Taunt_Mid);
	bm:out("SFX_TF_Group_Taunt_Far is " .. tostring(SFX_TF_Group_Taunt_Far));
	Start_Ambient_Taunts(Taunts_F_Far, SFX_TF_Group_Taunt_Far);
	bm:out("SFX_TF_Dog_Taunt is " .. tostring(SFX_TF_Dog_Taunt));
	Start_Ambient_Taunts(Dogs_F_Far, SFX_TF_Dog_Taunt);	
		
	bm:callback(function() bm:queue_advisor("Rom.HB.TF_Gameplay_08", 8000) end, 1500);
	bm:callback(function() bm:close_advisor() end, 10000);
	
	Train_On_Closest_Enemy(SUnit_Ger_F2_01, Units_Rom, false, 90, 90000, 0, function() return has_crossed_line(SUnit_Ger_F2_01.unit, POS_Berserker_End_A, POS_Berserker_End_B) end, function() PM_Ger_F2_01_Guard:start() end);
	Train_On_Closest_Enemy(SUnit_Ger_F2_02, Units_Rom, false, 90, 90000, 0, function() return has_crossed_line(SUnit_Ger_F2_02.unit, POS_Berserker_End_A, POS_Berserker_End_B) end, function() PM_Ger_F2_02_Guard:start() end);
	Train_On_Closest_Enemy(SUnit_Ger_F2_03, Units_Rom, false, 90, 90000, 0, function() return has_crossed_line(SUnit_Ger_F2_03.unit, POS_Berserker_End_A, POS_Berserker_End_B) end, function() PM_Ger_F2_03_Guard:start() end);
	Train_On_Closest_Enemy(SUnit_Ger_F2_04, Units_Rom, false, 90, 90000, 0, function() return has_crossed_line(SUnit_Ger_F2_04.unit, POS_Berserker_End_A, POS_Berserker_End_B) end, function() PM_Ger_F2_04_Guard:start() end);
	Train_On_Closest_Enemy(SUnit_Ger_F2_05, Units_Rom, false, 90, 90000, 0, function() return has_crossed_line(SUnit_Ger_F2_05.unit, POS_Berserker_End_A, POS_Berserker_End_B) end, function() PM_Ger_F2_05_Guard:start() end);
	Train_On_Closest_Enemy(SUnit_Ger_F2_06, Units_Rom, false, 90, 90000, 0, function() return has_crossed_line(SUnit_Ger_F2_06.unit, POS_Berserker_End_A, POS_Berserker_End_B) end, function() PM_Ger_F2_06_Guard:start() end);
	Train_On_Closest_Enemy(SUnit_Ger_F2_07, Units_Rom, false, 90, 90000);
	Train_On_Closest_Enemy(SUnit_Ger_F2_08, Units_Rom, false, 90, 90000);
	Train_On_Closest_Enemy(SUnit_Ger_F2_09, Units_Rom, false, 90, 90000);
	Train_On_Closest_Enemy(SUnit_Ger_F2_10, Units_Rom, false, 90, 90000, 0, function() return has_crossed_line(SUnit_Ger_F2_10.unit, POS_Berserker_End_A, POS_Berserker_End_B) end, function() PM_Ger_F2_10_Guard:start() end);
	Train_On_Closest_Enemy(SUnit_Ger_F2_11, Units_Rom, false, 90, 90000, 0, function() return has_crossed_line(SUnit_Ger_F2_11.unit, POS_Berserker_End_A, POS_Berserker_End_B) end, function() PM_Ger_F2_11_Guard:start() end);
	Train_On_Closest_Enemy(SUnit_Ger_F2_12, Units_Rom, false, 90, 90000, 0, function() return has_crossed_line(SUnit_Ger_F2_12.unit, POS_Berserker_End_A, POS_Berserker_End_B) end, function() PM_Ger_F2_12_Guard:start() end);
	
	--sounds
	SUnit_Ger_F2_01.unit:trigger_sound_warcry();
	bm:callback(function() SUnit_Ger_F2_02.unit:trigger_sound_warcry() end, 300);
	bm:callback(function() SUnit_Ger_F2_03.unit:trigger_sound_warcry() end, 500);
	SUnit_Ger_F2_04.unit:trigger_sound_warcry();
	SUnit_Ger_F2_05.unit:trigger_sound_warcry();
	SUnit_Ger_F2_06.unit:trigger_sound_warcry();
	bm:callback(function() play_sound(SUnit_Ger_F2_07.unit:position(), SFX_TF_Group_Response_M) end, 1000);
	bm:callback(function() play_sound(SUnit_Ger_F2_08.unit:position(), SFX_TF_Group_Response_M) end, 1800);
	bm:callback(function() play_sound(SUnit_Ger_F2_09.unit:position(), SFX_TF_Group_Response_L) end, 800);
	bm:callback(function() play_sound(SUnit_Ger_F2_10.unit:position(), SFX_TF_Group_Response_L) end, 1500);
	
	bm:watch(
		function() 
			return (is_routing_or_dead(SUnit_Ger_F1_03.unit) and is_routing_or_dead(SUnit_Ger_F1_02.unit)) or 
				is_routing_or_dead(SUnit_Ger_F1_04.unit) 
		end,
		0,
		function()
			Start_Final_Attack_01()
		end
	);
end;



POS_Final_Attack_02_A = v(-327, 68);
POS_Final_Attack_02_B = v(-255, -2);

BOOL_Final_Attack_01_Started = false;

function Start_Final_Attack_01()
	if BOOL_Final_Attack_01_Started then
		return false;
	end;
	
	BOOL_Final_Attack_01_Started = true;

	bm:out("Starting Final Blockade 01");
		
	Show_Units(SUnit_Ger_F3_02.uc);
	Train_On_Closest_Enemy(SUnit_Ger_F3_02, Units_Rom, true);
	bm:callback(function() play_sound(SUnit_Ger_F2_02.unit:position(), SFX_TF_Group_Response_S) end, 1900);
	
	Show_Units(SUnit_Ger_F3_03.uc);
	PM_Ger_F3_03:start();
	bm:callback(function() play_sound(SUnit_Ger_F2_03.unit:position(), SFX_TF_Group_Response_S) end, 2100);
	
	bm:watch(function() return has_crossed_line(Units_Rom, POS_Final_Attack_02_A, POS_Final_Attack_02_B, true) end, 0, function() Start_Final_Attack_02() end);
end;


POS_Final_Attack_03_A = v(-392, 51);
POS_Final_Attack_03_B = v(-276, -67);

BOOL_Final_Attack_02_Started = false;

function Start_Final_Attack_02()
	if BOOL_Final_Attack_02_Started then
		return false;
	end;
	
	BOOL_Final_Attack_02_Started = true;
	
	bm:out("Starting Final Blockade 02");
	
	bm:callback(
		function()
			bm:queue_advisor("Rom.HB.TF_Gameplay_06", 8000);
			bm:callback(function() bm:close_advisor() end, 10000)
		end,
		2000
	);
	
	Show_Units(SUnit_Ger_F3_04.uc);
	PM_Ger_F3_04:start();
	bm:callback(function() play_sound(SUnit_Ger_F3_04.unit:position(), SFX_TF_Group_Response_S) end, 400);
	
	Show_Units(SUnit_Ger_F4_01.uc);
	PM_Ger_F4_01:start();
	bm:callback(function() play_sound(SUnit_Ger_F4_01.unit:position(), SFX_TF_Group_Response_S) end, 900);
	
	Show_Units(SUnit_Ger_F4_04.uc);
	Train_On_Closest_Enemy(SUnit_Ger_F4_04, Units_Rom, false, 150, 90000);
	bm:callback(function() play_sound(SUnit_Ger_F4_04.unit:position(), SFX_TF_Group_Response_M) end, 1600);
	
	-- F3 berserkers
	bm:callback(
		function()
			Show_Units(SUnit_Ger_F3_06.uc);
			Train_On_Closest_Enemy(SUnit_Ger_F3_06, Units_Rom, false, 150, 120000);
			bm:callback(function() play_sound(SUnit_Ger_F3_06.unit:position(), SFX_TF_Group_Response_S) end, 1600);
		end,
		20000
	);
	
	bm:watch(function() return has_crossed_line(Units_Rom, POS_Final_Attack_03_A, POS_Final_Attack_03_B, true) end, 0, function() Start_Final_Attack_03() end);
end;


BOOL_Final_Attack_03_Started = false;

function Start_Final_Attack_03()
	if BOOL_Final_Attack_03_Started then
		return false;
	end;
	
	BOOL_Final_Attack_03_Started = true;
	
	-- forest exit guard
	Show_Units(SUnit_Ger_F3_01.uc);
	PM_Ger_F3_01:start();
	bm:callback(function() play_sound(SUnit_Ger_F3_01.unit:position(), SFX_TF_Group_Response_S) end, 1600);
	
	-- forest exit guard
	Show_Units(SUnit_Ger_F3_08.uc);
	PM_Ger_F3_08:start();
	bm:callback(function() play_sound(SUnit_Ger_F3_08.unit:position(), SFX_TF_Group_Response_M) end, 200);
	
	Show_Units(SUnit_Ger_F3_05.uc);
	PM_Ger_F3_05:start();
	bm:callback(function() play_sound(SUnit_Ger_F3_05.unit:position(), SFX_TF_Group_Response_S) end, 900);
	
	Show_Units(SUnit_Ger_F4_02.uc);
	PM_Ger_F4_02:start();
	bm:callback(function() play_sound(SUnit_Ger_F4_02.unit:position(), SFX_TF_Group_Response_S) end, 300);
	
	Show_Units(SUnit_Ger_F4_03.uc);
	Train_On_Closest_Enemy(SUnit_Ger_F4_03, Units_Rom, false, 150, 120000);
	bm:callback(function() play_sound(SUnit_Ger_F4_03.unit:position(), SFX_TF_Group_Response_S) end, 2200);
	
	-- F3 berserkers
	bm:callback(
		function()
			Show_Units(SUnit_Ger_F3_07.uc);
			Train_On_Closest_Enemy(SUnit_Ger_F3_07, Units_Rom, false, 150, 120000);
			bm:callback(function() play_sound(SUnit_Ger_F3_07.unit:position(), SFX_TF_Group_Response_M) end, 300);
		end,
		20000
	);
	
	bm:out("Starting Final Blockade 03");
end;


POS_Tripwire_Finish_A = v(-600, -102);
POS_Tripwire_Finish_B = v(-560, -142);

function Is_Forest_Escaped()
	for i = 1, #Rom_Eagle_Sunits do
		local current_sunit = Rom_Eagle_Sunits[i];
	
		if Area_Finish:standing_is_in_area(current_sunit.unit, true) then
			-- Roman unit has entered escape area

			if has_crossed_line(current_sunit.unit:position(), POS_Tripwire_Finish_A, POS_Tripwire_Finish_B) then
				-- Roman unit has crossed deep into escape area, so consider forest escaped
				return true;
			end;
				
			if is_routing_or_dead(SUnit_Ger_F3_01.unit) and is_routing_or_dead(SUnit_Ger_F3_08.unit) then
				-- German edge-of-forest guard are routing, consider forest escaped
				return true;
			end;
		end;
	end;
	
	return false;
end;









function Forest_Escaped()
	-- if we've already lost then do not process this
	if BOOL_Battle_Is_Ending then
		return;
	end;

	bm:out("Forest is escaped!");
	
	BOOL_Battle_Is_Ending = true;
	
	-- make all remaining Roman units invulnerable
	for i = 1, #Rom_Sunits do
		local curr_sunit = Rom_Sunits[i];
		
		if not is_routing_or_dead(curr_sunit.unit) then
			curr_sunit.uc:morale_behavior_fearless();
			curr_sunit.uc:set_invincible(true);
		end;
	end;
	
	bm:remove_ping_icon(-550, 35, -98);
	
	bm:remove_process("Player_Position_Monitor");
	bm:remove_process("Initial_Attack");
	bm:remove_process("Roman_Routing_Check");
	
	bm:unregister_esc_key_callback("Fade_To_End");
	
	BOOL_Dont_Play_Early_Advice = true;

	bm:stop_advisor_queue();
	bm:queue_advisor("Rom.HB.TF_Battle_Won_01", 7000);
	
	-- achievements	
	local difficulty = Army_Rom:army_handicap();
	
	if difficulty <= 0 then			-- difficulty is "normal" or harder
		if Count_Eagle_Units_Standing == 3 then
			bm:unlock_achievement("ACHIEVEMENT_HISTORICAL_BATTLE_11");
			bm:unlock_achievement("ACHIEVEMENT_HISTORICAL_BATTLE_14");
			bm:unlock_achievement("ACHIEVEMENT_HISTORICAL_BATTLE_15");
		elseif Count_Eagle_Units_Standing == 2 then
			bm:unlock_achievement("ACHIEVEMENT_HISTORICAL_BATTLE_11");
			bm:unlock_achievement("ACHIEVEMENT_HISTORICAL_BATTLE_14");
		elseif Count_Eagle_Units_Standing == 1 then
			bm:unlock_achievement("ACHIEVEMENT_HISTORICAL_BATTLE_11");
		else
			script_error("Teutoburg Forest battle won but no Legionary Eagles still standing - how can this be? Count_Eagle_Units_Standing is " .. tostring(Count_Eagle_Units_Standing));
		end;
	end;
	
	bm:callback(function() cam:fade(true, 1.5) end, 8000);
	bm:callback(
		function() 
			bm:fade_volume(VOLUME_TYPE_MUSIC, 0, 1.5);
			bm:fade_volume(VOLUME_TYPE_SFX, 0, 1.5);
			bm:fade_volume(VOLUME_TYPE_ADVISOR, 0, 1.5);
		end, 
		8000
	);
	
	bm:callback(
		function()
			stop_sound(SFX_TF_Group_Taunt_Mid);
			stop_sound(SFX_TF_Group_Taunt_Far);
			stop_sound(SFX_TF_Dog_Taunt);
			bm:stop_advisor_queue();
		end, 
		9000
	);
		
	bm:callback(
		function()
			Play_Cutscene_Outro()
			bm:fade_volume(VOLUME_TYPE_SFX, 50, 0.5);
			bm:fade_volume(VOLUME_TYPE_ADVISOR, 100, 0.5);
		end, 
		11000
	);
end;


function Cutscene_Outro_Finished()
	Show_Units(UC_Ger_01_All);
	Show_Units(UC_Ger_02_All);
	Show_Units(UC_Ger_03_All);
	
	bm:callback(function() Rout_German_Army() end, 200);
end;


function Rout_German_Army()
	bm:out("Routing all German units");
	
	UC_Ger_01_All:morale_behavior_rout();
	UC_Ger_02_All:morale_behavior_rout();
	UC_Ger_03_All:morale_behavior_rout();
	
	bm:end_battle();
end;






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\tf_teutoburg_forest\tf_common.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	COMMON SCRIPT
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------


function Attack_Closest_Enemy(sunit, enemy_alliance)
	local closest_enemy = get_closest_unit(enemy_alliance, sunit.unit:position());

	sunit.uc:attack_unit(closest_enemy, true, true);
end;



function Disappear_Units(sunit, suppress_comment)
	if not suppress_comment then
		bm:out("Disappearing " .. sunit.name);
	end;
	
	sunit.uc:kill();
	Hide_Units(sunit.uc);
end;

function Hide_Units(uc)
	uc:change_behaviour_active("fire_at_will", false);
	uc:change_enabled(false);
	uc:set_invisible_to_all(true);
end;

function Show_Units(uc)
	uc:change_behaviour_active("fire_at_will", true);
	uc:change_enabled(true);
	uc:set_invisible_to_all(false);
	uc:halt();
end;


function Prevent_Rallying(sunits, verbose)
	local bm = get_bm();
	
	for i = 1, #sunits do
		local current_sunit = sunits[i];
	
		bm:watch(
			function() 
				return is_routing_or_dead(current_sunit.unit) 
			end, 
			0, 
			function() 
				if verbose then
					bm:out(current_sunit.name .. ":: forcing rout");
				end;
				
				current_sunit.uc:morale_behavior_fearless();
				current_sunit.uc:morale_behavior_rout();
			end
		);
	end;
end;



function unit_rout_on_casualties(sunit, proportion)
	local bm = get_bm();
	local name = sunit.name;
	
	if not name then
		script_error("unit_rout_on_casualties() called but sunit " .. tostring(sunit) .. " doesn't exist?")
	end;
	
	local watchname = name .. "_rout_on_casualties";

	bm:remove_process(watchname);
	
	if proportion == 0 then
		return;
	end;
	
	bm:watch(function() return unit_proportion_alive(sunit.unit) < proportion end, 0, function() sunit.uc:morale_behavior_rout() end, watchname)
	bm:watch(function() return is_routing_or_dead(sunit.unit) end, 0, function() bm:remove_process(watchname) end, watchname);
end;



function unit_fearless_until_casualties(sunit, proportion)
	local bm = get_bm();
	local name = sunit.name;
	
	if not name then
		script_error("unit_fearless_until_casualties() called but sunit " .. tostring(sunit) .. " doesn't exist?")
	end;
	
	local watchname = name .. "_fearless_until_casualties";

	bm:remove_process(watchname);
	
	if proportion == 0 then
		return;
	end;
	
	if unit_proportion_alive(sunit.unit) > proportion then
		sunit.uc:morale_behavior_fearless();
	end;
	
	bm:watch(function() return unit_proportion_alive(sunit.unit) < proportion end, 0, function() sunit.uc:morale_behavior_default() end, watchname)
	bm:watch(function() return is_routing_or_dead(sunit.unit) end, 0, function() bm:remove_process(watchname) end, watchname);
end;





function Get_Closest_Visible_Unit(unit, units)
	local closest_distance = 5000;
	local closest_unit = nil;
	local current_distance = 0;
	local current_unit = nil;
	
	if not is_units(units) then
		script_error("Get_Closest_Visible_Unit() called but parameter " .. tostring(units) .. " is not a units collection!");
	end;

	for i = 1, units:count() do
		current_unit = units:item(i);
		current_distance = unit:position():distance(current_unit:position());
		
		if current_distance < closest_distance and current_unit:is_valid_target() and not is_routing_or_dead(current_unit) then
			closest_unit = current_unit;
			closest_distance = current_distance;
		end;
	end;
	
	return closest_unit;
end;




function Train_On_Closest_Enemy(sunit, enemy_units, always_run, prox_threshold, prox_timeout, prox_timestamp, pos_test, pos_callback)
	local always_run = always_run or false;
	local name = sunit.name;
	
	local closest_enemy = Get_Closest_Visible_Unit(sunit.unit, enemy_units);
	
	if not is_unit(closest_enemy) then
		bm:out("Train_On_Closest_Enemy() exiting for " .. sunit.name .. " as no enemy units found, are they all routing or hiding?");
		return;
	end;	
	
	local should_run = true;
	local current_distance = 0;
	
	if not always_run then
		if pos_test and pos_test() then
			pos_callback();
			
			-- exit here
			return;
		end;
	
		current_distance = sunit.unit:position():distance(closest_enemy:position());
		--bm:out(name .. " about to test distance, it is " .. tostring(current_distance));
		if current_distance < prox_threshold then
			should_run = false;
		end;
			
			-- THIS SUBSYSTEM IS SHITE
			--[[
			if current_distance < prox_threshold * 0.6 then
				if not prox_timestamp then
					--bm:out(name .. " is now within inner proximity, starting timer");
					prox_timestamp = timestamp_tick;
				
				elseif prox_timestamp + prox_timeout > timestamp_tick then
					--bm:out(name .. " is within inner proximity, but hasn't reached timeout yet, timestamp_tick is " .. timestamp_tick .. ", prox_timestamp is " .. prox_timestamp .. " and prox_timeout is " .. prox_timeout);
				else
					bm:out(name .. " is within inner proximity and has exceeded timeout, timestamp_tick is " .. timestamp_tick .. ", prox_timestamp is " .. prox_timestamp .. " and prox_timeout is " .. prox_timeout);
					should_run = true;
				end;
			else
				--bm:out(name .. " is now within proximity, but not inner proximity");
			end;
		else
			--bm:out(name .. " is not within proximity");
			prox_timestamp = nil;
		end;
		]]
	end;
	
	if should_run then
		--bm:out(name .. " ordering to attack fast");
		sunit.uc:attack_unit(closest_enemy, true, true);
	else
		--bm:out(name .. " ordering to attack slow");
		
		if sunit.unit:is_moving_fast() then
			--bm:out(name .. " (halting first)");
			sunit.uc:halt();
		end;
		
		sunit.uc:attack_unit(closest_enemy, true, false);
	end;
		
	bm:callback(function() Train_On_Closest_Enemy(sunit, enemy_units, always_run, prox_threshold, prox_timeout, prox_timestamp, pos_test, pos_callback) end, 5000, name .. "_Train_On_Closest_Enemy");
end;


function Stop_Train(sunit)
	get_bm():remove_process(sunit.name .. "_Train_On_Closest_Enemy");
end;





function kill_over_time(sunit, t, min_proportion)
	if not is_sunit(sunit) then
		script_error("ERROR: kill_unit_over_time() called but first parameter " .. tostring(sunit) .. " is not a sunit, exiting");
		
		return false;
	end;
	
	if not is_number(t) or t <= 0 then
		script_error("ERROR: kill_unit_over_time() called but second parameter " .. tostring(t) .. " is not a positive number, exiting");
		
		return false;
	end;

	local bm = get_bm();
	local min_proportion = min_proportion or 0;
		
	local tick_time = 200;
	local current_men_alive = sunit.unit:number_of_men_alive();
	
	local min_men_alive = min_proportion * (sunit.unit:initial_number_of_men() / 100);
	local number_of_ticks = math.ceil(t * (1000 / tick_time));
	
	if number_of_ticks > current_men_alive then
		if t > 1000 then
			script_error("ERROR: kill_unit_over_time() called on " .. sunit.name .. " over duration " .. tostring(t) .. " but number_of_ticks works outs out to a LOT more than current_men_alive! Did you specify the duration in ms instead of s?");
		
			return false;
		end;
		
		number_or_ticks = current_men_alive;
	end;
	
	local callback_name = sunit.name .. "_kill_unit_over_time";
	
	bm:remove_process(callback_name);
	
	local men_to_kill_per_tick = math.ceil((current_men_alive - min_men_alive) / number_of_ticks);
	
	-- failsafe
	if men_to_kill_per_tick < 1 then
		men_to_kill_per_tick = 1;
	end;
	
	sunit.uc:set_invincible(false);
			
	for i = 1, number_of_ticks do
		bm:callback(
			function()
				sunit.unit:kill_number_of_men(men_to_kill_per_tick) 
			end, 
			tick_time * i, 
			callback_name
		);
	end;
end;



function get_closest_sunit(sunit_list, position, standing_only)
	local standing_only = standing_only or false;

	local closest_distance = 5000;
	local closest_sunit = false;
	local current_distance = 0;
	
	if not is_table(sunit_list) or #sunit_list == 0 then
		script_error("ERROR: get_closest_sunit() called but first parameter " .. tostring(sunit_list) .. " is not a list of sunits!");
		
		return false;
	end;
	
	if not is_vector(position) then
		script_error("ERROR: get_closest_sunit() called but second parameter " .. tostring(position) .. " is not a vector!");
		
		return false;
	end;

	for i = 1, #sunit_list do
		local current_sunit = sunit_list[i];
	
		-- if we're not limited to standing units, or we are and this unit IS standing, do the range test
		if not standing_only or (standing_only and not is_routing_or_dead(current_sunit.unit)) then
			current_distance = current_sunit.unit:position():distance(position);
		
			if current_distance < closest_distance then
				closest_distance = current_distance;
				closest_sunit = current_sunit;
			end;
		end;
	end;
	
	return closest_sunit, closest_distance;
end;








C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\tf_teutoburg_forest\tf_cutscenes.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	CUTSCENES SCRIPT
--
--	Declare intro and other cutscenes
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------




Basic_Intro_Duration = 77000;
Extended_Intro_Duration = 35000;

Intro_Duration = Basic_Intro_Duration;

if BOOL_Benchmark_Mode then 
	Intro_Duration = Basic_Intro_Duration + Extended_Intro_Duration;
end;

POS_Cam_Cutscene_Intro_Final = v(494.9, 22.7, -191.7);
Targ_Cam_Cutscene_Intro_Final = v(495.255, 22.518, -174.194);

Cutscene_Intro = cutscene:new(
	"Cutscene_Intro", 								-- unique string name for cutscene
	UC_Rom_All, 									-- unitcontroller over player's army
	Intro_Duration, 								-- duration of cutscene in ms
	function() Post_Cutscene_Intro_Action() end 	-- what to call when cutscene is finished
);

Cutscene_Intro:set_skip_camera(POS_Cam_Cutscene_Intro_Final, Targ_Cam_Cutscene_Intro_Final);
-- Cutscene_Intro:enable_debug_timestamps();
-- Cutscene_Intro:set_post_cutscene_fade_time(0.5);
-- Cutscene_Intro:set_debug();

function Play_Cutscene_Intro()
	local subtitles = Cutscene_Intro:subtitles();
	subtitles:set_alignment("bottom_centre");
	subtitles:clear();
				
	if BOOL_Benchmark_Mode then
		Cutscene_Intro:set_skippable(false);
		Cutscene_Intro:enable_ui_on_end(false);
		Cutscene_Intro:action(function() bm:cindy_playback("Script\\TF_Teutoburg_Forest\\Cutscene\\Teutoburg_Intro_Extended.CindySceneManager", true) end, 0);
	else
		Cutscene_Intro:set_skippable(true, function() Skip_Cutscene_Intro() end);
		Cutscene_Intro:action(function() bm:cindy_playback("Script\\TF_Teutoburg_Forest\\Cutscene\\Teutoburg_Intro.CindySceneManager", true) end, 0);
	end;
	
	Cutscene_Intro:action(function() cam:fade(false, 0) end, 0);
	Cutscene_Intro:action(function() bm:set_volume(VOLUME_TYPE_SFX, 0) end, 0);
	
	Cutscene_Intro:action(function() Populate_German_Intro_Speech_Audience() end, 0);
	
	Cutscene_Intro:action(function() play_sound(POS_Play_Sound, SFX_HB_TF_Intro_SFX_01) end, 0);
		
	--Augustus: "Varus ??? O! Quintillus Varus??? give me back my legions!"
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_HB_TF_Intro_01) end, 5200); 
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.TF.Intro_01") end, 5600); 
	
	Cutscene_Intro:action(function() Rom_Teleport_To_Intro_Patrol_01() end, 9000);
	
	Cutscene_Intro:action(function() subtitles:clear() end, 11000);
	Cutscene_Intro:action(function() subtitles:set_alignment("mid_centre") end, 11000);
	
	Cutscene_Intro:action(function() bm:show_objective("Rom.HB.TF.Intro_Date", 2500, 500) end, 13900);
	Cutscene_Intro:action(function() UIComponent(bm:ui_component("objective_panel")):SetDockingPoint(1, 5) end, 13900);
	--Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.TF.Intro_Date") end, 13900);
	
	Cutscene_Intro:action(function() bm:fade_volume(VOLUME_TYPE_SFX, 100, 1) end, 15000);
	
	Cutscene_Intro:action(function() subtitles:clear() end, 17400);
	
	-- Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.TF.Intro_Text_01") end, 18000);
	Cutscene_Intro:action(function() bm:show_objective("Rom.HB.TF.Intro_Text_01", 7000, 500) end, 18000);
	
	Cutscene_Intro:action(function() subtitles:clear() end, 26500);
	
	Cutscene_Intro:action(function() bm:show_objective("Rom.HB.TF.Intro_Text_02", 3500, 500) end, 26500);
	
	Cutscene_Intro:action(function() subtitles:clear() end, 31000);
	Cutscene_Intro:action(function() subtitles:set_alignment("bottom_centre") end, 31000);
	
	--Segestes: "You are walking into a trap, Varus!"
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_HB_TF_Intro_02) end, 32000); 
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.TF.Intro_02") end, 32000); 
	
	-- slow the infantry right down at this point	
	Cutscene_Intro:action(
		function()
			local slow_speed = 0.1;
			
			bm:out("Slowing infantry down");
			
			PM_Rom_03_Intro_01:set_walk_speed(slow_speed);
			PM_Rom_04_Intro_01:set_walk_speed(slow_speed);
			PM_Rom_05_Intro_01:set_walk_speed(slow_speed);
			SUnit_Rom_03.uc:change_current_walk_speed(slow_speed);
			SUnit_Rom_04.uc:change_current_walk_speed(slow_speed);
			SUnit_Rom_05.uc:change_current_walk_speed(slow_speed);
		end,
		32000
	);
	
	Cutscene_Intro:action(function() subtitles:clear() end, 34000);
	
	--"Arminius will betray you.  He will betray Rome!"
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_HB_TF_Intro_03) end, 35000); 
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.TF.Intro_03") end, 35000); 
	
	Cutscene_Intro:action(function() subtitles:clear() end, 41000);
	
	--Varus: "The german? A traitor? I think not."
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_HB_TF_Intro_04) end, 42000);
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.TF.Intro_04") end, 42000);
	
	Cutscene_Intro:action(function() subtitles:clear() end, 45000);
	
	-- back to normal speed	
	Cutscene_Intro:action(
		function()
			local normal_speed = 1;
			
			bm:out("Speeding infantry up");
			
			PM_Rom_03_Intro_01:set_walk_speed(normal_speed);
			PM_Rom_04_Intro_01:set_walk_speed(normal_speed);
			PM_Rom_05_Intro_01:set_walk_speed(normal_speed);
			SUnit_Rom_03.uc:change_current_walk_speed(normal_speed);
			SUnit_Rom_04.uc:change_current_walk_speed(normal_speed);
			SUnit_Rom_05.uc:change_current_walk_speed(normal_speed);
		end,
		35500
	);
	
	Cutscene_Intro:action(function() PM_Rom_AR_Intro_01:set_force_run(true) end, 49500);
		
	--Arminius: "Rome may have raised me, trained me."
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_HB_TF_Intro_05) end, 54900);
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.TF.Intro_05") end, 54900);
                
	--Arminius: "But my loyalty is to my people."
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_HB_TF_Intro_06) end, 58500);
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.TF.Intro_06") end, 58500);

	Cutscene_Intro:action(function() German_Intro_Speech_Audience_Cheer() end, 51000);
	
	Cutscene_Intro:action(function() subtitles:clear() end, 62500);
		
	Cutscene_Intro:action(function() Prepare_Final_Intro_Walkon(false) end, 64000);
		
	--menny sounds
	Cutscene_Intro:action(function() play_sound(v(210, 24, 40), SFX_TF_Group_Taunt_Mid) end, 65800);
	Cutscene_Intro:action(function() play_sound(v(310, 30, 0), SFX_TF_Group_Taunt_Mid) end, 66200);
	Cutscene_Intro:action(function() play_sound(v(286, 18, -127), SFX_TF_Group_Taunt_Mid) end, 67100);
	Cutscene_Intro:action(function() play_sound(v(315, 20, -171), SFX_TF_Group_Taunt_Mid) end, 67600);
	Cutscene_Intro:action(function() play_sound(v(500, 48, -80), SFX_TF_Group_Taunt_Mid) end, 69900);
	Cutscene_Intro:action(function() play_sound(v(530, 50, -90), SFX_TF_Group_Taunt_Mid) end, 70300);
	Cutscene_Intro:action(function() play_sound(v(525, 31, -340), SFX_TF_Group_Taunt_Mid) end, 74300);
	
	Cutscene_Intro:action(function() Restore_German_Intro_Speech_Audience() end, 70000);
	
	Cutscene_Intro:action(function() play_sound(POS_Play_Sound, SFX_HB_TF_Intro_SFX_02) end, Basic_Intro_Duration - 28000);
	
	-- first wave of fireballs
	Cutscene_Intro:action(function() Launch_Initial_Fireballs() end, Basic_Intro_Duration - 5000);
	
	Cutscene_Intro:action(function() UC_Rom_All:halt() end, Basic_Intro_Duration - 2000);
	
	if not BOOL_Benchmark_Mode then
		Cutscene_Intro:action(function() cam:move_to(POS_Cam_Cutscene_Intro_Final, Targ_Cam_Cutscene_Intro_Final, 0, true, 0) end, Basic_Intro_Duration);
	else
		-- do extended cutscene actions
		Cutscene_Intro:action(function() Start_S1_Attack(); end, Basic_Intro_Duration);
		Cutscene_Intro:action(function() Start_S3_Attack("benchmarking mode"); end, Basic_Intro_Duration);
		
		Cutscene_Intro:action(function() Start_S2_Attack() end, Basic_Intro_Duration + 5000);
	
		Cutscene_Intro:action(function() Attack_Closest_Enemy(SUnit_Rom_07, Alliance_Ger) end, Basic_Intro_Duration + 10000);
		Cutscene_Intro:action(function() Attack_Closest_Enemy(SUnit_Rom_08, Alliance_Ger) end, Basic_Intro_Duration + 11000);
		Cutscene_Intro:action(function() Attack_Closest_Enemy(SUnit_Rom_09, Alliance_Ger) end, Basic_Intro_Duration + 11000);
	
		Cutscene_Intro:action(function() SUnit_Rom_06.uc:attack_unit(SUnit_Ger_S2_02.unit, true, true) end, Basic_Intro_Duration + 12500);
	
		Cutscene_Intro:action(function() Attack_Closest_Enemy(SUnit_Rom_10, Alliance_Ger) end, Basic_Intro_Duration + 15000);
		Cutscene_Intro:action(function() Attack_Closest_Enemy(SUnit_Rom_11, Alliance_Ger) end, Basic_Intro_Duration + 15000);
	
		Cutscene_Intro:action(function() Attack_Closest_Enemy(SUnit_Rom_01, Alliance_Ger) end, Basic_Intro_Duration + 20000);
		Cutscene_Intro:action(function() Attack_Closest_Enemy(SUnit_Rom_02, Alliance_Ger) end, Basic_Intro_Duration + 21000);
		Cutscene_Intro:action(function() Attack_Closest_Enemy(SUnit_Rom_03, Alliance_Ger) end, Basic_Intro_Duration + 22000);
		Cutscene_Intro:action(function() Attack_Closest_Enemy(SUnit_Rom_04, Alliance_Ger) end, Basic_Intro_Duration + 23000);
		Cutscene_Intro:action(function() Attack_Closest_Enemy(SUnit_Rom_05, Alliance_Ger) end, Basic_Intro_Duration + 24000);
	
		Cutscene_Intro:action(function() cam:fade(true, 3) end, Intro_Duration - 4500);
	end;
	
	Cutscene_Intro:start();
end;


function Post_Cutscene_Intro_Action()
	if BOOL_Benchmark_Mode then
		bm:end_benchmark();
	else
		Start_Battle();
	end;
end;


function Populate_German_Intro_Speech_Audience()
	Show_Units(SUnit_Ger_M3_01.uc);
	Show_Units(SUnit_Ger_M3_02.uc);
	Show_Units(SUnit_Ger_M3_03.uc);
	Show_Units(SUnit_Ger_M3_04.uc);
	
	SUnit_Ger_M3_01.uc:set_always_visible_to_all(true);
	SUnit_Ger_M3_02.uc:set_always_visible_to_all(true);
	SUnit_Ger_M3_03.uc:set_always_visible_to_all(true);
	SUnit_Ger_M3_04.uc:set_always_visible_to_all(true);
	
	SUnit_Ger_M3_01.uc:teleport_to_location(v(56.1, 184.2), r_to_d(-3.04), 13.5);
	SUnit_Ger_M3_02.uc:teleport_to_location(v(65.2, 196.8), r_to_d(-3.03), 20.7);
	SUnit_Ger_M3_03.uc:teleport_to_location(v(40.9, 181.5), r_to_d(2.75), 17.6);
	SUnit_Ger_M3_04.uc:teleport_to_location(v(45.8, 195.1), r_to_d(2.82), 19);
end;


function German_Intro_Speech_Audience_Cheer()
	SUnit_Ger_M3_01.uc:start_celebrating();
	bm:callback(function() SUnit_Ger_M3_02.uc:start_celebrating() end, 300);
	bm:callback(function() SUnit_Ger_M3_03.uc:start_celebrating() end, 500);
	bm:callback(function() SUnit_Ger_M3_04.uc:start_celebrating() end, 900);
end;


function Skip_Cutscene_Intro()
	cam:fade(true, 0);
	
	Restore_German_Intro_Speech_Audience();
	
	bm:remove_process("Roman_Intro_Teleport");
	
	bm:stop_cindy_playback(true);
	
	stop_sound(SFX_HB_TF_Intro_01);
	stop_sound(SFX_HB_TF_Intro_02);
	stop_sound(SFX_HB_TF_Intro_03);
	stop_sound(SFX_HB_TF_Intro_04);
	stop_sound(SFX_HB_TF_Intro_05);
	stop_sound(SFX_HB_TF_Intro_06);
	stop_sound(SFX_HB_TF_Intro_SFX_01);
	stop_sound(SFX_HB_TF_Intro_SFX_02);
	
	-- will need tidying up;
	if not BOOL_Initial_Fireballs_Launched then
		Launch_Initial_Fireballs();
	end;
	
	Prepare_Final_Intro_Walkon(true);	
	
	UC_Rom_All:release_control();
	
	cam:fade(false, 0.5);
end;


BOOL_German_Intro_Speech_Audience_Restored = false;

function Restore_German_Intro_Speech_Audience()
	if BOOL_German_Intro_Speech_Audience_Restored then
		return;
	end;
	
	BOOL_German_Intro_Speech_Audience_Restored = true;
	
	SUnit_Ger_M3_01.uc:teleport_to_location(SUnit_Ger_M3_01.start_position, SUnit_Ger_M3_01.start_bearing, SUnit_Ger_M3_01.start_width);
	SUnit_Ger_M3_02.uc:teleport_to_location(SUnit_Ger_M3_02.start_position, SUnit_Ger_M3_02.start_bearing, SUnit_Ger_M3_02.start_width);
	SUnit_Ger_M3_03.uc:teleport_to_location(SUnit_Ger_M3_03.start_position, SUnit_Ger_M3_03.start_bearing, SUnit_Ger_M3_03.start_width);
	SUnit_Ger_M3_04.uc:teleport_to_location(SUnit_Ger_M3_04.start_position, SUnit_Ger_M3_04.start_bearing, SUnit_Ger_M3_04.start_width);
	
	Hide_Units(SUnit_Ger_M3_01.uc);
	Hide_Units(SUnit_Ger_M3_02.uc);
	Hide_Units(SUnit_Ger_M3_03.uc);
	Hide_Units(SUnit_Ger_M3_04.uc);
end;



function Prepare_Final_Intro_Walkon(cutscene_skipped)
	bm:out("Prepare_Final_Intro_Walkon(" .. tostring(cutscene_skipped) .. ") called");

	Stop_Intro_Patrols();
	Hide_Roman_Arminius();
	Unhide_S2_Germans();
	
	if cutscene_skipped then
		for i = 1, #Rom_Sunits do
			local current_sunit = Rom_Sunits[i];
	
			--bm:out("Teleporting " .. current_sunit.name .. " to position " .. v_to_s(current_sunit.start_position) .. ", orientation " .. tostring(current_sunit.start_bearing) .. " and width " .. tostring(current_sunit.start_width));
			current_sunit.uc:teleport_to_location(current_sunit.start_position, current_sunit.start_bearing, current_sunit.start_width);
		end;
	else
		Rom_Teleport_To_Pre_Ambush();
	end;
end;






--Mid_Cutscene_Duration = 21500;
Mid_Cutscene_Duration = 21400;

Cutscene_Mid = cutscene:new(
	"Cutscene_Mid",								-- unique string name for cutscene
	UC_Rom_All,									-- unitcontroller over player's army
	Mid_Cutscene_Duration,						-- duration of cutscene in ms
	function() Play_Cutscene_Varus_Exit() end	-- what to call when cutscene is finished
);

Cutscene_Mid:set_skippable(true, function() Cutscene_Mid_Skipped() end);
--Cutscene_Mid:set_debug();

function Play_Cutscene_Mid()
	bm:out("SFX_TF_Group_Taunt_Mid is " .. tostring(SFX_TF_Group_Taunt_Mid));
	
	play_sound(POS_Ger_AR_01_Emerge_From_Forest, SFX_TF_Group_Taunt_Near);
	play_sound(POS_Ger_AR_02_Emerge_From_Forest, SFX_TF_Group_Taunt_Near);
	play_sound(POS_Ger_AR_03_Emerge_From_Forest, SFX_TF_Group_Taunt_Near);
	play_sound(POS_Ger_AR_04_Emerge_From_Forest, SFX_TF_Group_Taunt_Near);
	play_sound(POS_Ger_AR_05_Emerge_From_Forest, SFX_TF_Group_Taunt_Near);
	
	play_sound(SUnit_Ger_AR_01.start_position, SFX_TF_Group_Taunt_Mid);
	play_sound(SUnit_Ger_AR_02.start_position, SFX_TF_Group_Taunt_Mid);
	play_sound(SUnit_Ger_AR_03.start_position, SFX_TF_Group_Taunt_Mid);
	play_sound(SUnit_Ger_AR_04.start_position, SFX_TF_Group_Taunt_Mid);
	play_sound(SUnit_Ger_AR_05.start_position, SFX_TF_Group_Taunt_Mid);
	
	Advance_Arminius();
	
	Cutscene_Mid:action(function() Move_Rom_Army_Blockade_Cutscene() end, 500);
	Cutscene_Mid:action(function() cam:fade(false, 0.2) end, 900);
		
	Cutscene_Mid:action(function() bm:cindy_playback("Script\\TF_Teutoburg_Forest\\Cutscene\\Teutoburg_Mid.CindySceneManager", true) end, 0); 

	Cutscene_Mid:action(function() SUnit_Rom_Var.uc:halt(); UC_Rom_All:halt() end, 7400);
	
	
	
	--Cutscene_Mid:action(function() play_sound(POS_Play_Sound, SFX_HB_TF_Gameplay_03) end, 18500);
		
	Cutscene_Mid:action(function() cam:fade(true, 0.2) end, Mid_Cutscene_Duration - 400);
	
	Cutscene_Mid:start();
end;


function Cutscene_Mid_Skipped()
	bm:stop_cindy_playback();
end;



POS_Cam_Blockade_Start = v(-18.4, 55.3, 169.3);
POS_Targ_Blockade_Start = v(-71.2, 31.2, 171.2);

Varus_Exit_Cutscene_Duration = 18200;

Cutscene_Varus_Exit = cutscene:new(
	"Cutscene_Varus_Exit",					-- unique string name for cutscene
	UC_Rom_All,								-- unitcontroller over player's army
	Varus_Exit_Cutscene_Duration,			-- duration of cutscene in ms
	function() Start_Blockade() end			-- what to call when cutscene is finished
);

Cutscene_Varus_Exit:set_skippable(true, function() Cutscene_Varus_Exit_Skipped() end);
--Cutscene_Varus_Exit:set_debug(true);
--Cutscene_Varus_Exit:enable_debug_timestamps();

function Play_Cutscene_Varus_Exit()
	--bm:stop_cindy_playback();
	
	stop_sound(SFX_TF_Group_Taunt_Near);
	stop_sound(SFX_TF_Group_Taunt_Mid);

	-- Teleport German blockade into position
	Teleport_Blockade();

	-- Teleport Romans into final position
	Teleport_Rom_Army_Blockade_Start();
	
	-- Varus runs off
	bm:callback(function() Start_Varus_Escape() end, 2000);
	
	-- Varus advice
	bm:callback(function() bm:queue_advisor("Rom.HB.TF_Gameplay_04", 6000) end, 3100);
	bm:callback(function() bm:close_advisor() end, 9000);
	
	
	Cutscene_Varus_Exit:action(function() cam:fade(false, 0.5) end, 1500);
	Cutscene_Varus_Exit:action(function() cam:move_to(v(-62.2, 26.1, 175.3), v(-116.3, 8, 186.5), 0, true, 45) end, 1500);
	Cutscene_Varus_Exit:action(function() cam:move_to(v(-69.1, 26.1, 176.7), v(-123.2, 8, 187.9), 10, true, 45) end, 1500);
	
	Cutscene_Varus_Exit:action(function() cam:move_to(v(-107.1, 10.8, 222.5), v(-78.4, 20.9, 173.1), 0, false, 36) end, 4000);
	Cutscene_Varus_Exit:action(function() cam:move_to(v(-107.1, 10.8, 222.5), v(-78.4, 20.9, 173.1), 4.5, true, 40) end, 4000);
	
	--Cutscene_Varus_Exit:action(function() cam:fade(true, 0.1) end, 6300);
	
	Cutscene_Varus_Exit:action(function() cam:move_to(v(-90.2, 13.9, 224.5), v(-147.6, 7.3, 222.1), 0, false, 27) end, 6500);
	Cutscene_Varus_Exit:action(function() cam:move_to(v(-90.2, 13.9, 224.5), v(-147.6, 9.2, 222.1), 4, false, 23) end, 6500);
	
	--Cutscene_Varus_Exit:action(function() cam:fade(false, 0.2) end, 6600);
	
	Cutscene_Varus_Exit:action(function() Start_Arminius_Chase() end, 6900);
	
	Cutscene_Varus_Exit:action(function() cam:move_to(v(-237.8, 9, 167.1), v(-289.5, 4.3, 193), 0, true, 50) end, 9700);
	Cutscene_Varus_Exit:action(function() cam:move_to(v(-237.8, 9, 167.1), v(-284.6, 3.5, 200.8), 4, false, 50) end, 9700);
		
	Cutscene_Varus_Exit:action(function() cam:move_to(v(-281.2, 13.6, 173), v(-235.6, -5.9, 203), 0, true, 0) end, 11500);
	Cutscene_Varus_Exit:action(function() cam:move_to(v(-281.2, 13.6, 173), v(-235.6, 0.7, 206.4), 6, true, 0) end, 11500);
		
	Cutscene_Varus_Exit:action(function() cam:move_to(POS_Cam_Blockade_Start, POS_Targ_Blockade_Start, 1.8, false, 0) end, Varus_Exit_Cutscene_Duration - 2000);
	
	Cutscene_Varus_Exit:start();
end;


function Cutscene_Varus_Exit_Skipped()
	cam:move_to(POS_Cam_Blockade_Start, POS_Targ_Blockade_Start, 0, true, 0);
	cam:fade(false, 0.5);
	
	bm:callback(function() Start_Arminius_Chase() end, 3000);
end;





Cutscene_Berserkers_Duration = 9500;

Cutscene_Berserkers = cutscene:new(
	"Cutscene_Berserkers",							-- unique string name for cutscene
	UC_Rom_All, 									-- unitcontroller over player's army
	Cutscene_Berserkers_Duration, 					-- duration of cutscene in ms
	function() Start_Berserker_Attack() end			-- what to call when cutscene is finished
);

--Cutscene_Berserkers:set_post_cutscene_fade_time(0.5);
Cutscene_Berserkers:set_restore_cam_time(2);
--Cutscene_Berserkers:set_debug(true);

function Play_Cutscene_Berserkers()
	local subtitles = Cutscene_Berserkers:subtitles();

	-- panning over pass
	Cutscene_Berserkers:action(function() cam:move_to(v(-112.6, 13.6, 262.4), v(-85.1, 10.8, 313.5), 3, false, 50) end, 0);
	
	Cutscene_Berserkers:action(function() Cutscene_Berserkers:play_sound(SFX_HB_TF_Gameplay_07) end, 1000);
	
	Cutscene_Berserkers:action(function() cam:move_to(v(-108.6, 12.2, 282.6), v(-56.1, 21.3, 305.6), 0, false, 35) end, 5000);
	Cutscene_Berserkers:action(function() cam:move_to(v(-110, 11.6, 287.2), v(-57.5, 20.8, 310.2), 8, true, 35) end, 5000);
	
	Cutscene_Berserkers:action(function() cam:move_to(v(-130.7, 21.2, 231.7), v(-112.8, 11.9, 286.2), 0, false, 0) end, Cutscene_Berserkers_Duration - 1000);
	--Cutscene_Berserkers:action(function() cam:fade(true, 0.5) end, Cutscene_Berserkers_Duration - 500);
		
	Cutscene_Berserkers:start();
end;















Outro_Cutscene_Duration = 28700;

Cutscene_Outro = cutscene:new(
	"Cutscene_Outro", 							-- unique string name for cutscene
	UC_Rom_All, 								-- unitcontroller over player's army
	Outro_Cutscene_Duration, 					-- duration of cutscene in ms
	function() Cutscene_Outro_Finished() end	-- what to call when cutscene is finished
);

Cutscene_Outro:enable_ui_on_end(false);
-- Cutscene_Outro:set_debug();
-- Cutscene_Outro:enable_debug_timestamps();

function Play_Cutscene_Outro()
	local subtitles = Cutscene_Outro:subtitles();

	Cutscene_Outro:action(function() cam:move_to(v(233.8, 82.94, 668.2), v(289.4, 78.8, 709.7), 0, false, 35) end, 0);
	
	Cutscene_Outro:action(function() Cutscene_Outro:play_sound(SFX_HB_TF_Outro_01) end, 0);
	Cutscene_Outro:action(function() subtitles:set_text("Rom.HB.TF.Outro_01") end, 0);
	
	Cutscene_Outro:action(function() Cutscene_Outro:wait_for_vo() end, 6800);
	Cutscene_Outro:action(function() subtitles:clear() end, 6800);
	
	Cutscene_Outro:action(function() Cutscene_Outro:play_sound(SFX_HB_TF_Outro_02) end, 7800);
	Cutscene_Outro:action(function() subtitles:set_text("Rom.HB.TF.Outro_02") end, 7800);
	
	Cutscene_Outro:action(function() Cutscene_Outro:wait_for_vo() end, 8600);
	Cutscene_Outro:action(function() subtitles:clear() end, 8600);
	
	Cutscene_Outro:action(function() Cutscene_Outro:play_sound(SFX_HB_TF_Outro_03) end, 9600);
	Cutscene_Outro:action(function() subtitles:set_text("Rom.HB.TF.Outro_03") end, 9600);
	
	Cutscene_Outro:action(function() Cutscene_Outro:wait_for_vo() end, 12000);
	Cutscene_Outro:action(function() subtitles:clear() end, 12000);
	
	Cutscene_Outro:action(function() cam:fade(false, 1) end, 12000);
	Cutscene_Outro:action(function() bm:fade_volume(VOLUME_TYPE_SFX, 100, 1) end, 12000);
	
	Cutscene_Outro:action(function() bm:cindy_playback("Script\\TF_Teutoburg_Forest\\Cutscene\\Teutoburg_Outro.CindySceneManager", true) end, 12000);
	Cutscene_Outro:action(function() play_sound(POS_Play_Sound, SFX_HB_TF_Outro_SFX_01) end, 12000);
	
	Cutscene_Outro:action(function() play_sound(POS_Play_Sound, SFX_HB_TF_Outro_SFX_02) end, 21000);
	
	Cutscene_Outro:action(function() play_sound(POS_Play_Sound, SFX_HB_TF_Outro_04) end, 24200);
	Cutscene_Outro:action(function() subtitles:set_text("Rom.HB.TF.Outro_04") end, 24200);
	
	Cutscene_Outro:action(function() subtitles:clear() end, 27500);
	Cutscene_Outro:action(function() bm:fade_volume(VOLUME_TYPE_SFX, 0, 1) end, 27500);
		
	Cutscene_Outro:action(function() cam:fade(true, 0) end, 27500);
	
	Cutscene_Outro:action(function() bm:set_volume(VOLUME_TYPE_MOVIE, 100) end, Outro_Cutscene_Duration);
	
	Cutscene_Outro:start();
end;




function Cutscene_Outro_Skipped()
	bm:stop_cindy_playback(true);
	
	bm:set_volume(VOLUME_TYPE_MOVIE, 100);
	
	stop_sound(SFX_HB_TF_Outro_01);
	stop_sound(SFX_HB_TF_Outro_02);
	stop_sound(SFX_HB_TF_Outro_03);
	stop_sound(SFX_HB_TF_Outro_04);
end;





Outro_Cutscene_No_Centurions_Duration = 16700;

Cutscene_Outro_No_Centurions = cutscene:new(
	"Cutscene_Outro_No_Centurions", 							-- unique string name for cutscene
	UC_Rom_All, 												-- unitcontroller over player's army
	Outro_Cutscene_No_Centurions_Duration,						-- duration of cutscene in ms
	function() Cutscene_Outro_Finished() end					-- what to call when cutscene is finished
);

Cutscene_Outro_No_Centurions:enable_ui_on_end(false);
-- Cutscene_Outro:set_debug();

function Play_Cutscene_Outro_No_Centurions()	
	Cutscene_Outro_No_Centurions:action(function() cam:fade(false, 1) end, 500);
	Cutscene_Outro_No_Centurions:action(function() bm:fade_volume(VOLUME_TYPE_SFX, 100, 1) end, 500);
	Cutscene_Outro_No_Centurions:action(function() bm:fade_volume(VOLUME_TYPE_ADVISOR, 100, 1) end, 500);
	
	Cutscene_Outro_No_Centurions:action(function() bm:cindy_playback("Script\\TF_Teutoburg_Forest\\Cutscene\\Teutoburg_Outro.CindySceneManager", true) end, 500);
	Cutscene_Outro_No_Centurions:action(function() play_sound(POS_Play_Sound, SFX_HB_TF_Outro_SFX_01) end, 500);
	
	Cutscene_Outro_No_Centurions:action(function() play_sound(POS_Play_Sound, SFX_HB_TF_Outro_SFX_02) end, 9500);
	
	Cutscene_Outro_No_Centurions:action(function() play_sound(POS_Play_Sound, SFX_HB_TF_Outro_04) end, 12700);
	
	Cutscene_Outro_No_Centurions:action(function() bm:fade_volume(VOLUME_TYPE_SFX, 0, 1) end, 17000);
	Cutscene_Outro_No_Centurions:action(function() bm:set_volume(VOLUME_TYPE_MOVIE, 100) end, 17000);
	
	Cutscene_Outro_No_Centurions:action(function() cam:fade(true, 0) end, 15500);
	
	Cutscene_Outro_No_Centurions:start();
end;








C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\tf_teutoburg_forest\tf_declarations.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	DECLARATIONS SCRIPT
--
--	Declare alliances, armies, convex areas and anything else of note in here
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

cam = bm:camera();
draw = bm:debug_drawing();
red = battle_colour(255, 0, 0);

--
-- Army Declarations
--

Alliances = bm:alliances();

Alliance_Rom = Alliances:item(1);
Army_Rom = Alliance_Rom:armies():item(1);
Units_Rom = Army_Rom:units();
Army_Rom_Hidden = Alliance_Rom:armies():item(2);

Alliance_Ger = Alliances:item(2); 
Army_Ger_01 = Alliance_Ger:armies():item(1);
Army_Ger_02 = Alliance_Ger:armies():item(2);
Army_Ger_03 = Alliance_Ger:armies():item(3);



--
-- Roman army
--

SUnit_Rom_01 = script_unit:new(Army_Rom, "Rom_01");
SUnit_Rom_02 = script_unit:new(Army_Rom, "Rom_02");
SUnit_Rom_03 = script_unit:new(Army_Rom, "Rom_03");
SUnit_Rom_04 = script_unit:new(Army_Rom, "Rom_04");
SUnit_Rom_05 = script_unit:new(Army_Rom, "Rom_05");
SUnit_Rom_06 = script_unit:new(Army_Rom, "Rom_06");
SUnit_Rom_07 = script_unit:new(Army_Rom, "Rom_07");
SUnit_Rom_08 = script_unit:new(Army_Rom, "Rom_08");
SUnit_Rom_09 = script_unit:new(Army_Rom, "Rom_09");
SUnit_Rom_10 = script_unit:new(Army_Rom, "Rom_10");
SUnit_Rom_11 = script_unit:new(Army_Rom, "Rom_11");
SUnit_Rom_AR = script_unit:new(Army_Rom, "Rom_AR");

SUnit_Rom_Var = script_unit:new(Army_Rom_Hidden, "Rom_Var");
Hide_Units(SUnit_Rom_Var.uc);
SUnit_Rom_Var.uc:take_control();


Rom_Sunits = {
	SUnit_Rom_01,
	SUnit_Rom_02,
	SUnit_Rom_03,
	SUnit_Rom_04,
	SUnit_Rom_05,
	SUnit_Rom_06,
	SUnit_Rom_07,
	SUnit_Rom_08,
	SUnit_Rom_09,
	SUnit_Rom_10,
	SUnit_Rom_11
};

Rom_Eagle_Sunits = {
	SUnit_Rom_03,
	SUnit_Rom_06,
	SUnit_Rom_09
};

UC_Rom_All = unitcontroller_from_army(Army_Rom);


--
-- First Germanic army
--

SUnit_Ger_AR_01 = script_unit:new(Army_Ger_01, "Ger_AR_01");
SUnit_Ger_AR_02 = script_unit:new(Army_Ger_01, "Ger_AR_02");
SUnit_Ger_AR_03 = script_unit:new(Army_Ger_01, "Ger_AR_03");
SUnit_Ger_AR_04 = script_unit:new(Army_Ger_01, "Ger_AR_04");
SUnit_Ger_AR_05 = script_unit:new(Army_Ger_01, "Ger_AR_05");

SUnit_Ger_M1_01 = script_unit:new(Army_Ger_01, "Ger_M1_01");
SUnit_Ger_M1_02 = script_unit:new(Army_Ger_01, "Ger_M1_02");
--SUnit_Ger_M1_03 = script_unit:new(Army_Ger_01, "Ger_M1_03");
SUnit_Ger_M1_04 = script_unit:new(Army_Ger_01, "Ger_M1_04");
SUnit_Ger_M1_05 = script_unit:new(Army_Ger_01, "Ger_M1_05");
SUnit_Ger_M1_06 = script_unit:new(Army_Ger_01, "Ger_M1_06");
SUnit_Ger_M1_07 = script_unit:new(Army_Ger_01, "Ger_M1_07");
SUnit_Ger_M1_08 = script_unit:new(Army_Ger_01, "Ger_M1_08");

SUnit_Ger_M2_01 = script_unit:new(Army_Ger_01, "Ger_M2_01");
SUnit_Ger_M2_02 = script_unit:new(Army_Ger_01, "Ger_M2_02");
SUnit_Ger_M2_03 = script_unit:new(Army_Ger_01, "Ger_M2_03");
SUnit_Ger_M2_04 = script_unit:new(Army_Ger_01, "Ger_M2_04");
SUnit_Ger_M2_05 = script_unit:new(Army_Ger_01, "Ger_M2_05");
SUnit_Ger_M2_06 = script_unit:new(Army_Ger_01, "Ger_M2_06");

SUnit_Ger_M3_01 = script_unit:new(Army_Ger_01, "Ger_M3_01");
SUnit_Ger_M3_02 = script_unit:new(Army_Ger_01, "Ger_M3_02");
SUnit_Ger_M3_03 = script_unit:new(Army_Ger_01, "Ger_M3_03");
SUnit_Ger_M3_04 = script_unit:new(Army_Ger_01, "Ger_M3_04");

UC_Ger_01_All = unitcontroller_from_army(Army_Ger_01);
UC_Ger_01_All:take_control();

--
-- Second Germanic army
--

SUnit_Ger_F1_01 = script_unit:new(Army_Ger_02, "Ger_F1_01");
SUnit_Ger_F1_02 = script_unit:new(Army_Ger_02, "Ger_F1_02");
SUnit_Ger_F1_03 = script_unit:new(Army_Ger_02, "Ger_F1_03");
SUnit_Ger_F1_04 = script_unit:new(Army_Ger_02, "Ger_F1_04");
SUnit_Ger_F1_05 = script_unit:new(Army_Ger_02, "Ger_F1_05");

SUnit_Ger_F2_01 = script_unit:new(Army_Ger_02, "Ger_F2_01");
SUnit_Ger_F2_02 = script_unit:new(Army_Ger_02, "Ger_F2_02");
SUnit_Ger_F2_03 = script_unit:new(Army_Ger_02, "Ger_F2_03");
SUnit_Ger_F2_04 = script_unit:new(Army_Ger_02, "Ger_F2_04");
SUnit_Ger_F2_05 = script_unit:new(Army_Ger_02, "Ger_F2_05");
SUnit_Ger_F2_06 = script_unit:new(Army_Ger_02, "Ger_F2_06");
SUnit_Ger_F2_07 = script_unit:new(Army_Ger_02, "Ger_F2_07");
SUnit_Ger_F2_08 = script_unit:new(Army_Ger_02, "Ger_F2_08");
SUnit_Ger_F2_09 = script_unit:new(Army_Ger_02, "Ger_F2_09");
SUnit_Ger_F2_10 = script_unit:new(Army_Ger_02, "Ger_F2_10");
SUnit_Ger_F2_11 = script_unit:new(Army_Ger_02, "Ger_F2_11");
SUnit_Ger_F2_12 = script_unit:new(Army_Ger_02, "Ger_F2_12");

SUnit_Ger_F3_01 = script_unit:new(Army_Ger_02, "Ger_F3_01");
SUnit_Ger_F3_02 = script_unit:new(Army_Ger_02, "Ger_F3_02");
SUnit_Ger_F3_03 = script_unit:new(Army_Ger_02, "Ger_F3_03");
SUnit_Ger_F3_04 = script_unit:new(Army_Ger_02, "Ger_F3_04");
SUnit_Ger_F3_05 = script_unit:new(Army_Ger_02, "Ger_F3_05");
SUnit_Ger_F3_06 = script_unit:new(Army_Ger_02, "Ger_F3_06");
SUnit_Ger_F3_07 = script_unit:new(Army_Ger_02, "Ger_F3_07");
SUnit_Ger_F3_08 = script_unit:new(Army_Ger_02, "Ger_F3_08");

SUnit_Ger_F4_01 = script_unit:new(Army_Ger_02, "Ger_F4_01");
SUnit_Ger_F4_02 = script_unit:new(Army_Ger_02, "Ger_F4_02");
SUnit_Ger_F4_03 = script_unit:new(Army_Ger_02, "Ger_F4_03");
SUnit_Ger_F4_04 = script_unit:new(Army_Ger_02, "Ger_F4_04");

UC_Ger_02_All = unitcontroller_from_army(Army_Ger_02);
UC_Ger_02_All:take_control();

Berserker_Units = {
	SUnit_Ger_F2_01.unit,
	SUnit_Ger_F2_02.unit,
	SUnit_Ger_F2_03.unit,
	SUnit_Ger_F2_04.unit,
	SUnit_Ger_F2_05.unit,
	SUnit_Ger_F2_06.unit
};

--
-- Second Germanic army
--

SUnit_Ger_S1_01 = script_unit:new(Army_Ger_03, "Ger_S1_01");
SUnit_Ger_S1_02 = script_unit:new(Army_Ger_03, "Ger_S1_02");
SUnit_Ger_S1_03 = script_unit:new(Army_Ger_03, "Ger_S1_03");
SUnit_Ger_S1_04 = script_unit:new(Army_Ger_03, "Ger_S1_04");
SUnit_Ger_S1_05 = script_unit:new(Army_Ger_03, "Ger_S1_05");
SUnit_Ger_S1_06 = script_unit:new(Army_Ger_03, "Ger_S1_06");
SUnit_Ger_S1_07 = script_unit:new(Army_Ger_03, "Ger_S1_07");
SUnit_Ger_S1_08 = script_unit:new(Army_Ger_03, "Ger_S1_08");
SUnit_Ger_S1_09 = script_unit:new(Army_Ger_03, "Ger_S1_09");
SUnit_Ger_S1_10 = script_unit:new(Army_Ger_03, "Ger_S1_10");
SUnit_Ger_S1_11 = script_unit:new(Army_Ger_03, "Ger_S1_11");

SUnit_Ger_S2_01 = script_unit:new(Army_Ger_03, "Ger_S2_01");
SUnit_Ger_S2_02 = script_unit:new(Army_Ger_03, "Ger_S2_02");
SUnit_Ger_S2_03 = script_unit:new(Army_Ger_03, "Ger_S2_03");
SUnit_Ger_S2_04 = script_unit:new(Army_Ger_03, "Ger_S2_04");
SUnit_Ger_S2_05 = script_unit:new(Army_Ger_03, "Ger_S2_05");
SUnit_Ger_S2_06 = script_unit:new(Army_Ger_03, "Ger_S2_06");

SUnit_Ger_S3_01 = script_unit:new(Army_Ger_03, "Ger_S3_01");
SUnit_Ger_S3_02 = script_unit:new(Army_Ger_03, "Ger_S3_02");
SUnit_Ger_S3_03 = script_unit:new(Army_Ger_03, "Ger_S3_03");
SUnit_Ger_S3_04 = script_unit:new(Army_Ger_03, "Ger_S3_04");
SUnit_Ger_S3_05 = script_unit:new(Army_Ger_03, "Ger_S3_05");
SUnit_Ger_S3_16 = script_unit:new(Army_Ger_03, "Ger_S3_16");
SUnit_Ger_S3_17 = script_unit:new(Army_Ger_03, "Ger_S3_17");
SUnit_Ger_S3_18 = script_unit:new(Army_Ger_03, "Ger_S3_18");
SUnit_Ger_S3_19 = script_unit:new(Army_Ger_03, "Ger_S3_19");
SUnit_Ger_S3_07 = script_unit:new(Army_Ger_03, "Ger_S3_07");
SUnit_Ger_S3_08 = script_unit:new(Army_Ger_03, "Ger_S3_08");
SUnit_Ger_S3_25 = script_unit:new(Army_Ger_03, "Ger_S3_25");
SUnit_Ger_S3_26 = script_unit:new(Army_Ger_03, "Ger_S3_26");
SUnit_Ger_S3_27 = script_unit:new(Army_Ger_03, "Ger_S3_27");
SUnit_Ger_S3_28 = script_unit:new(Army_Ger_03, "Ger_S3_28");
SUnit_Ger_S3_11 = script_unit:new(Army_Ger_03, "Ger_S3_11");
SUnit_Ger_S3_12 = script_unit:new(Army_Ger_03, "Ger_S3_12");
SUnit_Ger_S3_13 = script_unit:new(Army_Ger_03, "Ger_S3_13");
SUnit_Ger_S3_14 = script_unit:new(Army_Ger_03, "Ger_S3_14");

UC_Ger_03_All = unitcontroller_from_army(Army_Ger_03);
UC_Ger_03_All:take_control();

-- pre-Arminius army
Ger_Starting_Army = {
	SUnit_Ger_S1_01,
	SUnit_Ger_S1_02,
	SUnit_Ger_S1_03,
	SUnit_Ger_S1_04,
	SUnit_Ger_S1_05,
	SUnit_Ger_S1_06,
	SUnit_Ger_S1_07,
	SUnit_Ger_S1_08,
	SUnit_Ger_S1_09,
	SUnit_Ger_S1_10,
	SUnit_Ger_S1_11,
	SUnit_Ger_S2_01,
	SUnit_Ger_S2_02,
	SUnit_Ger_S2_03,
	SUnit_Ger_S2_04,
	SUnit_Ger_S2_05,
	SUnit_Ger_S2_06,
	SUnit_Ger_S3_01,
	SUnit_Ger_S3_02,
	SUnit_Ger_S3_03,
	SUnit_Ger_S3_04,
	SUnit_Ger_S3_05,
	SUnit_Ger_S3_16,
	SUnit_Ger_S3_17,
	SUnit_Ger_S3_18,
	SUnit_Ger_S3_19,
	SUnit_Ger_S3_07,
	SUnit_Ger_S3_08,
	SUnit_Ger_S3_25,
	SUnit_Ger_S3_26,
	SUnit_Ger_S3_27,
	SUnit_Ger_S3_28,
	SUnit_Ger_S3_11,
	SUnit_Ger_S3_12,
	SUnit_Ger_S3_13,
	SUnit_Ger_S3_14,
	SUnit_Ger_M1_01,
	SUnit_Ger_M1_02,
	--SUnit_Ger_M1_03,
	SUnit_Ger_M1_04,
	SUnit_Ger_M1_05,
	SUnit_Ger_M1_06,
	SUnit_Ger_M1_07,
	SUnit_Ger_M1_08,
	SUnit_Ger_M2_01,
	SUnit_Ger_M2_02,
	SUnit_Ger_M2_03,
	SUnit_Ger_M2_04,
	SUnit_Ger_M2_05,
	SUnit_Ger_M2_06,
	SUnit_Ger_M3_01,
	SUnit_Ger_M3_02,
	SUnit_Ger_M3_03,
	SUnit_Ger_M3_04
};


-- units that will teleport into place and kill the player general if the player misbehaves
Ger_Teleport_Assassins = {
	SUnit_Ger_F1_01,
	SUnit_Ger_F1_05,
	SUnit_Ger_F2_08,
	SUnit_Ger_F2_09,
	SUnit_Ger_F3_04
};


S1_Assassin_Positions = {
	{
		pos = v(464.4, -410.4),
		bearing = r_to_d(0.4),
		width = 39.8
	},
	{
		pos = v(564.9, -432.8),
		bearing = r_to_d(0.03),
		width = 48.8
	},
	{
		pos = v(726.4, -404.8),
		bearing = r_to_d(-0.69),
		width = 42
	},
	{
		pos = v(785.4, -215.3),
		bearing = r_to_d(-2.35),
		width = 42.2
	},
	{
		pos = v(626.8, -175.1),
		bearing = r_to_d(-2.93),
		width = 44.3
	}
};


S2_Assassin_Positions = {
	{
		pos = v(617.4, -210.6),
		bearing = r_to_d(-0.93),
		width = 32.2
	},
	{
		pos = v(682.1, -88.2),
		bearing = r_to_d(-1.5),
		width = 40.3
	},
	{
		pos = v(600.3, 1.6),
		bearing = r_to_d(-2.96),
		width = 41.9
	},
	{
		pos = v(483.5, 24.3),
		bearing = r_to_d(-3.0),
		width = 33.8
	},
	{
		pos = v(366.4, -19.8),
		bearing = r_to_d(2.36),
		width = 30.6
	}
};


S3_Assassin_Positions = {
	{
		pos = v(143.1, -242.9),
		bearing = r_to_d(0.46),
		width = 44.5
	},
	{
		pos = v(214.3, -297.7),
		bearing = r_to_d(0.36),
		width = 42.2
	},
	{
		pos = v(306.3, -314.1),
		bearing = r_to_d(-0.04),
		width = 44.1
	},
	{
		pos = v(411.8, 30.8),
		bearing = r_to_d(-2.52),
		width = 37.1
	},
	{
		pos = v(302.5, 101.7),
		bearing = r_to_d(-2.66),
		width = 40.5
	}
};


M_Assassin_Positions = {
	{
		pos = v(-13.5, -241.1),
		bearing = r_to_d(-0.05),
		width = 29.0
	},
	{
		pos = v(40.2, -243.5),
		bearing = r_to_d(-0.05),
		width = 28.6
	},
	{
		pos = v(278.5, 139.6),
		bearing = r_to_d(-0.85),
		width = 25.5
	},
	{
		pos = v(220.1, 250.7),
		bearing = r_to_d(-2.46),
		width = 24.0
	},
	{
		pos = v(194.8, 267.6),
		bearing = r_to_d(-2.68),
		width = 25.9
	}
};












POS_Ger_AR_01_Emerge_From_Forest = v(-276, 177);
POS_Ger_AR_02_Emerge_From_Forest = v(-281, 197);
POS_Ger_AR_03_Emerge_From_Forest = v(-290, 216);
POS_Ger_AR_04_Emerge_From_Forest = v(-298, 235);
POS_Ger_AR_05_Emerge_From_Forest = v(-302, 257);







--
-- Convex Areas
--

Area_S1 = convex_area:new(
	{
		v(500, -268),
		v(570, -230),
		v(770, -180),
		v(720, -450),
		v(375, -420)
	}
);

Area_S2 = convex_area:new(
	{
		v(500, -268),
		v(355, -334),
		v(440, 50),
		v(710, -50),
		v(570, -230)
	}
);

Area_S3 = convex_area:new(
	{
		v(355, -334),
		v(70, -230),
		v(250, 215),
		v(440, 50)
	}
);


Area_S3_East = convex_area:new(
	{
		v(370, 60),
		v(210, -250),
		v(-360, -100),
		v(-250, 430)
	}
);

Area_M = convex_area:new(
	{
		v(70, -230),
		v(-100, -205),
		v(-220, 300),
		v(50, 340),
		v(250, 215)
	}
);

Area_Blockade_Boundary_01 = convex_area:new(
	{
		v(-90, 250),
		v(-125, 340),
		v(150, 275)
	}
);

Area_Blockade_Boundary_02 = convex_area:new(
	{
		v(-125, 340),
		v(-260, 400),
		v(-260, 700),
		v(150, 275)
	}
);

Area_Blockade_Boundary_03 = convex_area:new(
	{
		v(-260, 400),
		v(-340, 190),
		v(-670, 350),
		v(-260, 700)
	}
);

Area_Blockade_Boundary_04 = convex_area:new(
	{
		v(-50, 95),
		v(30, 125),
		v(50, -26)
	}
);

Blockade_Boundary_Areas = {
	Area_Blockade_Boundary_01,
	Area_Blockade_Boundary_02,
	Area_Blockade_Boundary_03,
	Area_Blockade_Boundary_04
};


--
-- Battle sounds
--

SFX_HB_TF_Intro_01 = new_sfx("Play_Rom_HB_TF_Intro_01_1");
SFX_HB_TF_Intro_02 = new_sfx("Play_Rom_HB_TF_Intro_02_1");
SFX_HB_TF_Intro_03 = new_sfx("Play_Rom_HB_TF_Intro_03_1");
SFX_HB_TF_Intro_04 = new_sfx("Play_Rom_HB_TF_Intro_04_1");
SFX_HB_TF_Intro_05 = new_sfx("Play_Rom_HB_TF_Intro_05_1");
SFX_HB_TF_Intro_06 = new_sfx("Play_Rom_HB_TF_Intro_06_1");

SFX_HB_TF_Intro_SFX_01 = new_sfx("scripted_HB_TF_Intro_SFX");
SFX_HB_TF_Intro_SFX_02 = new_sfx("scripted_HB_TF_Intro_Barbarian_Taunts_01");

SFX_HB_TF_Gameplay_03 = new_sfx("Play_Rom_HB_TF_Gameplay_03_1");
SFX_HB_TF_Gameplay_07 = new_sfx("Play_Rom_HB_TF_Gameplay_07_1");


SFX_HB_TF_Outro_SFX_01 = new_sfx("scripted_HB_TF_Outro_Sfx_01");
SFX_HB_TF_Outro_SFX_02 = new_sfx("scripted_HB_TF_Outro_Sfx_02");

SFX_HB_TF_Outro_01 = new_sfx("Play_Rom_HB_TF_Outro_01_1");
SFX_HB_TF_Outro_02 = new_sfx("Play_Rom_HB_TF_Outro_02_1");
SFX_HB_TF_Outro_03 = new_sfx("Play_Rom_HB_TF_Outro_03_1");
SFX_HB_TF_Outro_04 = new_sfx("Play_Rom_HB_TF_Outro_04_1");
SFX_HB_TF_Outro_Logo = new_sfx("scripted_HB_TF_Outro_Logo");

SFX_TF_Group_Taunt_Near = new_sfx("scripted_barbarian_male_group_taunts_near");
SFX_TF_Group_Taunt_Mid = new_sfx("scripted_barbarian_male_group_taunts_medium");
SFX_TF_Group_Taunt_Far = new_sfx("scripted_barbarian_male_group_taunts_far");

SFX_TF_Dog_Taunt = new_sfx("scripted_dogs_group");

SFX_TF_Group_Response_L = new_sfx("scripted_barbarian_male_group_response_large");
SFX_TF_Group_Response_M = new_sfx("scripted_barbarian_male_group_response_medium");
SFX_TF_Group_Response_S = new_sfx("scripted_barbarian_male_group_response_small");



POS_Play_Sound = v(0,0);






--
-- Patrol_Managers
--

--PM_Ger_01 = patrol_manager:new("Ger_01", SUnit_Ger_01, Alliance_Rom:armies(), 100);
--PM_Ger_01:add_waypoint(v(120, 70), false, 5000);

PM_Ger_S1_01_Exit = patrol_manager:new("Ger_S1_01_Exit", SUnit_Ger_S1_01, Alliance_Rom:armies(), 40);
PM_Ger_S1_01_Exit:set_completion_callback(function() Disappear_Units(SUnit_Ger_S1_01) end);
PM_Ger_S1_01_Exit:add_waypoint(v(420, -80));

PM_Ger_S1_02_Exit = patrol_manager:new("Ger_S1_02_Exit", SUnit_Ger_S1_02, Alliance_Rom:armies(), 40);
PM_Ger_S1_02_Exit:set_completion_callback(function() Disappear_Units(SUnit_Ger_S1_02) end);
PM_Ger_S1_02_Exit:add_waypoint(v(415, -15));

PM_Ger_S1_03_Exit = patrol_manager:new("Ger_S1_03_Exit", SUnit_Ger_S1_03, Alliance_Rom:armies(), 40);
PM_Ger_S1_03_Exit:set_completion_callback(function() Disappear_Units(SUnit_Ger_S1_03) end);
PM_Ger_S1_03_Exit:add_waypoint(v(375, -20));

PM_Ger_S1_04_Exit = patrol_manager:new("Ger_S1_04_Exit", SUnit_Ger_S1_04, Alliance_Rom:armies(), 40);
PM_Ger_S1_04_Exit:set_completion_callback(function() Disappear_Units(SUnit_Ger_S1_04) end);
PM_Ger_S1_04_Exit:add_waypoint(v(275, -200));

PM_Ger_S1_05_Exit = patrol_manager:new("Ger_S1_05_Exit", SUnit_Ger_S1_05, Alliance_Rom:armies(), 40);
PM_Ger_S1_05_Exit:set_completion_callback(function() Disappear_Units(SUnit_Ger_S1_05) end);
PM_Ger_S1_05_Exit:add_waypoint(v(386, -230));

PM_Ger_S1_06_Exit = patrol_manager:new("Ger_S1_06_Exit", SUnit_Ger_S1_06, Alliance_Rom:armies(), 40);
PM_Ger_S1_06_Exit:set_completion_callback(function() Disappear_Units(SUnit_Ger_S1_06) end);
PM_Ger_S1_06_Exit:add_waypoint(v(515, -50));

PM_Ger_S1_07_Exit = patrol_manager:new("Ger_S1_07_Exit", SUnit_Ger_S1_07, Alliance_Rom:armies(), 40);
PM_Ger_S1_07_Exit:set_completion_callback(function() Disappear_Units(SUnit_Ger_S1_07) end);
PM_Ger_S1_07_Exit:add_waypoint(v(510, -10));

PM_Ger_S1_08_Exit = patrol_manager:new("Ger_S1_08_Exit", SUnit_Ger_S1_08, Alliance_Rom:armies(), 40);
PM_Ger_S1_08_Exit:set_completion_callback(function() Disappear_Units(SUnit_Ger_S1_08) end);
PM_Ger_S1_08_Exit:add_waypoint(v(475, -100));

PM_Ger_S1_09_Exit = patrol_manager:new("Ger_S1_09_Exit", SUnit_Ger_S1_09, Alliance_Rom:armies(), 40);
PM_Ger_S1_09_Exit:set_completion_callback(function() Disappear_Units(SUnit_Ger_S1_09) end);
PM_Ger_S1_09_Exit:add_waypoint(v(280, -200));

PM_Ger_S1_10_Exit = patrol_manager:new("Ger_S1_10_Exit", SUnit_Ger_S1_10, Alliance_Rom:armies(), 40);
PM_Ger_S1_10_Exit:set_completion_callback(function() Disappear_Units(SUnit_Ger_S1_10) end);
PM_Ger_S1_10_Exit:add_waypoint(v(340, 30));

PM_Ger_S1_11_Exit = patrol_manager:new("Ger_S1_11_Exit", SUnit_Ger_S1_11, Alliance_Rom:armies(), 40);
PM_Ger_S1_11_Exit:set_completion_callback(function() Disappear_Units(SUnit_Ger_S1_11) end);
PM_Ger_S1_11_Exit:add_waypoint(v(230, -100));






PM_Ger_S2_03_Start = patrol_manager:new("PM_Ger_S2_03_Start", SUnit_Ger_S2_03, Alliance_Rom:armies(), 50);
PM_Ger_S2_03_Start:add_waypoint(SUnit_Ger_S2_03.start_position, true, -1);

PM_Ger_S2_03 = patrol_manager:new("Ger_S2_03", SUnit_Ger_S2_03, Alliance_Rom:armies(), 30);
PM_Ger_S2_03:set_completion_callback(function() Train_On_Closest_Enemy(SUnit_Ger_S2_03, Units_Rom, false, 250, 60000) end);
PM_Ger_S2_03:add_waypoint(v(568, -143));

PM_Ger_S2_04_Start = patrol_manager:new("Ger_S2_04_Start", SUnit_Ger_S2_04, Alliance_Rom:armies(), 50);
PM_Ger_S2_04_Start:add_waypoint(SUnit_Ger_S2_04.start_position, true, -1);

PM_Ger_S2_04 = patrol_manager:new("Ger_S2_04", SUnit_Ger_S2_04, Alliance_Rom:armies(), 30);
PM_Ger_S2_04:set_completion_callback(function() Train_On_Closest_Enemy(SUnit_Ger_S2_04, Units_Rom, false, 250, 60000) end);
PM_Ger_S2_04:add_waypoint(v(535, -126));

PM_Ger_S2_05_Start = patrol_manager:new("Ger_S2_05_Start", SUnit_Ger_S2_05, Alliance_Rom:armies(), 50);
PM_Ger_S2_05_Start:add_waypoint(SUnit_Ger_S2_05.start_position, true, -1);

PM_Ger_S2_05 = patrol_manager:new("Ger_S2_05", SUnit_Ger_S2_05, Alliance_Rom:armies(), 30);
PM_Ger_S2_05:set_completion_callback(function() Train_On_Closest_Enemy(SUnit_Ger_S2_05, Units_Rom, false, 250, 60000) end);
PM_Ger_S2_05:add_waypoint(v(488, -115));

PM_Ger_S2_06_Start = patrol_manager:new("Ger_S2_06_Start", SUnit_Ger_S2_06, Alliance_Rom:armies(), 50);
PM_Ger_S2_06_Start:add_waypoint(SUnit_Ger_S2_06.start_position, true, -1);

PM_Ger_S2_06 = patrol_manager:new("Ger_S2_06", SUnit_Ger_S2_06, Alliance_Rom:armies(), 30);
PM_Ger_S2_06:set_completion_callback(function() Train_On_Closest_Enemy(SUnit_Ger_S2_06, Units_Rom, false, 250, 60000) end);
PM_Ger_S2_06:add_waypoint(v(463, -106));

PM_Ger_S2_01_Exit = patrol_manager:new("Ger_S2_01_Exit", SUnit_Ger_S2_01, Alliance_Rom:armies(), 40);
PM_Ger_S2_01_Exit:set_completion_callback(function() Disappear_Units(SUnit_Ger_S2_01) end);
PM_Ger_S2_01_Exit:add_waypoint(v(420, -80));

PM_Ger_S2_02_Exit = patrol_manager:new("Ger_S2_02_Exit", SUnit_Ger_S2_02, Alliance_Rom:armies(), 40);
PM_Ger_S2_02_Exit:set_completion_callback(function() Disappear_Units(SUnit_Ger_S2_02) end);
PM_Ger_S2_02_Exit:add_waypoint(v(415, -15));

PM_Ger_S2_03_Exit = patrol_manager:new("Ger_S2_03_Exit", SUnit_Ger_S2_03, Alliance_Rom:armies(), 40);
PM_Ger_S2_03_Exit:set_completion_callback(function() Disappear_Units(SUnit_Ger_S2_03) end);
PM_Ger_S2_03_Exit:add_waypoint(v(375, -20));

PM_Ger_S2_04_Exit = patrol_manager:new("Ger_S2_04_Exit", SUnit_Ger_S2_04, Alliance_Rom:armies(), 40);
PM_Ger_S2_04_Exit:set_completion_callback(function() Disappear_Units(SUnit_Ger_S2_04) end);
PM_Ger_S2_04_Exit:add_waypoint(v(275, -200));

PM_Ger_S2_05_Exit = patrol_manager:new("Ger_S2_05_Exit", SUnit_Ger_S2_05, Alliance_Rom:armies(), 40);
PM_Ger_S2_05_Exit:set_completion_callback(function() Disappear_Units(SUnit_Ger_S2_05) end);
PM_Ger_S2_05_Exit:add_waypoint(v(386, -230));

PM_Ger_S2_06_Exit = patrol_manager:new("Ger_S2_06_Exit", SUnit_Ger_S2_06, Alliance_Rom:armies(), 40);
PM_Ger_S2_06_Exit:set_completion_callback(function() Disappear_Units(SUnit_Ger_S2_06) end);
PM_Ger_S2_06_Exit:add_waypoint(v(515, -50));



PM_Ger_S3_05 = patrol_manager:new("Ger_S3_05", SUnit_Ger_S3_05, Alliance_Rom:armies(), 40);
PM_Ger_S3_05:set_stop_on_intercept();
PM_Ger_S3_05:set_completion_callback(function() Train_On_Closest_Enemy(SUnit_Ger_S3_05, Units_Rom, true) end);
PM_Ger_S3_05:add_waypoint(v(390, -155), true, -1);

PM_Ger_S3_16 = patrol_manager:new("Ger_S3_16", SUnit_Ger_S3_16, Alliance_Rom:armies(), 50);
PM_Ger_S3_16:set_intercept_callback(function() Reveal_S3_To_Mid_Ambush() end);
PM_Ger_S3_16:add_waypoint(v(228.89, 2.64), true, -1, r_to_d(1.95), 14.2);

PM_Ger_S3_17 = patrol_manager:new("Ger_S3_17", SUnit_Ger_S3_17, Alliance_Rom:armies(), 50);
PM_Ger_S3_17:set_intercept_callback(function() Reveal_S3_To_Mid_Ambush() end);
PM_Ger_S3_17:add_waypoint(v(222.54, -13.3), true, -1, r_to_d(1.95), 14.2);

PM_Ger_S3_18 = patrol_manager:new("Ger_S3_18", SUnit_Ger_S3_18, Alliance_Rom:armies(), 40);
PM_Ger_S3_18:set_stop_on_intercept();
PM_Ger_S3_18:set_completion_callback(function() Train_On_Closest_Enemy(SUnit_Ger_S3_18, Units_Rom, true) end);
PM_Ger_S3_18:add_waypoint(v(256, 26), true, -1);

PM_Ger_S3_18_Exit = patrol_manager:new("Ger_S3_18_Exit", SUnit_Ger_S3_18, Alliance_Rom:armies(), 0);
PM_Ger_S3_18_Exit:set_completion_callback(function() Disappear_Units(SUnit_Ger_S3_18) end);
PM_Ger_S3_18_Exit:add_waypoint(SUnit_Ger_S3_18.start_position, false, 0, SUnit_Ger_S3_18.start_bearing, SUnit_Ger_S3_18.start_width);

PM_Ger_S3_19 = patrol_manager:new("Ger_S3_19", SUnit_Ger_S3_19, Alliance_Rom:armies(), 50);
PM_Ger_S3_19:add_waypoint(v(284.85, -0.62), true, -1, r_to_d(-2.33), 23.78);

PM_Ger_S3_19_To_Cliff = patrol_manager:new("Ger_S3_19_To_Cliff", SUnit_Ger_S3_19, Alliance_Rom:armies(), 30);
PM_Ger_S3_19_To_Cliff:add_waypoint(v(193.4, 45.6), true, -1, r_to_d(-1.31), 28.93);

PM_Ger_S3_25 = patrol_manager:new("Ger_Ger_S3_25", SUnit_Ger_S3_25, Alliance_Rom:armies(), 50);
PM_Ger_S3_25:set_stop_on_intercept();
PM_Ger_S3_25:set_completion_callback(function() Train_On_Closest_Enemy(SUnit_Ger_S3_25, Units_Rom, true)  end);
PM_Ger_S3_25:add_waypoint(v(360, -170), false, 0, r_to_d(0.23), 28);

PM_Ger_S3_25_Exit = patrol_manager:new("Ger_Ger_S3_25_Exit", SUnit_Ger_S3_25, Alliance_Rom:armies(), 0);
PM_Ger_S3_25_Exit:set_completion_callback(function() Disappear_Units(SUnit_Ger_S3_25) end);
PM_Ger_S3_25_Exit:add_waypoint(SUnit_Ger_S3_25.start_position, false, 0, SUnit_Ger_S3_25.start_bearing, SUnit_Ger_S3_25.start_width);

PM_Ger_S3_26 = patrol_manager:new("Ger_Ger_S3_26", SUnit_Ger_S3_26, Alliance_Rom:armies(), 50);
PM_Ger_S3_26:set_stop_on_intercept();
PM_Ger_S3_26:set_completion_callback(function() Train_On_Closest_Enemy(SUnit_Ger_S3_26, Units_Rom, true)  end);
PM_Ger_S3_26:add_waypoint(v(308, -140), false, 0, r_to_d(0.32), 28);

PM_Ger_S3_26_To_Cliff = patrol_manager:new("Ger_Ger_S3_26_Exit", SUnit_Ger_S3_26, Alliance_Rom:armies(), 30);
PM_Ger_S3_26_To_Cliff:add_waypoint(v(207, -0.39), true, -1, r_to_d(-1.36), 28.32);

PM_Ger_S3_27 = patrol_manager:new("Ger_Ger_S3_27", SUnit_Ger_S3_27, Alliance_Rom:armies(), 50);
PM_Ger_S3_27:set_stop_on_intercept();
PM_Ger_S3_27:set_completion_callback(function() Train_On_Closest_Enemy(SUnit_Ger_S3_27, Units_Rom, true)  end);
PM_Ger_S3_27:add_waypoint(v(285, -95), false);

PM_Ger_S3_27_Exit = patrol_manager:new("Ger_Ger_S3_27_Exit", SUnit_Ger_S3_27, Alliance_Rom:armies(), 0);
PM_Ger_S3_27_Exit:set_completion_callback(function() Disappear_Units(SUnit_Ger_S3_27) end);
PM_Ger_S3_27_Exit:add_waypoint(SUnit_Ger_S3_27.start_position, false, 0, SUnit_Ger_S3_27.start_bearing, SUnit_Ger_S3_27.start_width);

PM_Ger_S3_28 = patrol_manager:new("Ger_Ger_S3_28", SUnit_Ger_S3_28, Alliance_Rom:armies(), 70);
PM_Ger_S3_28:set_stop_on_intercept();
PM_Ger_S3_28:set_completion_callback(function() Train_On_Closest_Enemy(SUnit_Ger_S3_28, Units_Rom, true)  end);
PM_Ger_S3_28:add_waypoint(v(285, -95), false);

PM_Ger_S3_28_To_Cliff = patrol_manager:new("Ger_Ger_S3_28_To_Cliff", SUnit_Ger_S3_28, Alliance_Rom:armies(), 30);
PM_Ger_S3_28_To_Cliff:add_waypoint(v(154.98, -62.73), true, -1, r_to_d(-0.71), 29.2);

PM_Ger_S3_11 = patrol_manager:new("Ger_Ger_S3_11", SUnit_Ger_S3_11, Alliance_Rom:armies(), 80);
PM_Ger_S3_11:add_waypoint(v(106.50, -5.04), false, -1, r_to_d(5.26), 24.31);

PM_Ger_S3_12 = patrol_manager:new("Ger_Ger_S3_12", SUnit_Ger_S3_12, Alliance_Rom:armies(), 80);
PM_Ger_S3_12:add_waypoint(v(84.74, -32.04), false, -1, r_to_d(5.40), 21.80);

PM_Ger_S3_13 = patrol_manager:new("Ger_Ger_S3_13", SUnit_Ger_S3_13, Alliance_Rom:armies(), 80);
PM_Ger_S3_13:add_waypoint(v(123.69, -9.21), false, -1, r_to_d(5.19), 25.69);

PM_Ger_S3_14 = patrol_manager:new("Ger_Ger_S3_14", SUnit_Ger_S3_14, Alliance_Rom:armies(), 80);
PM_Ger_S3_14:add_waypoint(v(149.75, 6.47), false, -1, r_to_d(5.21), 27.19);		
			





			
			
PM_Ger_M1_04 = patrol_manager:new("Ger_M1_04", SUnit_Ger_M1_04, Alliance_Rom:armies(), 70);
PM_Ger_M1_04:set_intercept_time(20000);
PM_Ger_M1_04:set_intercept_callback(function() Start_M1_Second_Attack() end);
PM_Ger_M1_04:set_completion_callback(function() Train_On_Closest_Enemy(SUnit_Ger_M1_04, Units_Rom, true) end);
PM_Ger_M1_04:add_waypoint(v(63, -41));
			
PM_Ger_M1_05 = patrol_manager:new("Ger_M1_05", SUnit_Ger_M1_05, Alliance_Rom:armies(), 70);
PM_Ger_M1_05:set_intercept_time(20000);
PM_Ger_M1_05:set_completion_callback(function() Train_On_Closest_Enemy(SUnit_Ger_M1_05, Units_Rom, true) end);
PM_Ger_M1_05:add_waypoint(v(108, -45));

PM_Ger_M1_06 = patrol_manager:new("Ger_M1_06", SUnit_Ger_M1_06, Alliance_Rom:armies(), 70);
PM_Ger_M1_06:set_intercept_time(20000);
PM_Ger_M1_06:set_completion_callback(function() Train_On_Closest_Enemy(SUnit_Ger_M1_06, Units_Rom, true) end);
PM_Ger_M1_06:add_waypoint(v(63, -41), true);
			
PM_Ger_M1_07 = patrol_manager:new("Ger_M1_07", SUnit_Ger_M1_07, Alliance_Rom:armies(), 70);
PM_Ger_M1_07:set_intercept_time(20000);
PM_Ger_M1_07:set_completion_callback(function() Train_On_Closest_Enemy(SUnit_Ger_M1_07, Units_Rom, true) end);
PM_Ger_M1_07:add_waypoint(v(108, -45), true);




BOOL_M2_Dogs_Are_Attacking = false;

PM_Ger_M2_01 = patrol_manager:new("Ger_M2_01", SUnit_Ger_M2_01, Alliance_Rom:armies(), 60);
PM_Ger_M2_01:set_stop_on_intercept();
PM_Ger_M2_01:set_completion_callback(function() BOOL_M2_Dogs_Are_Attacking = true; Train_On_Closest_Enemy(SUnit_Ger_M2_01, Units_Rom, true) end);
PM_Ger_M2_01:add_waypoint(v(125, 100), true);
PM_Ger_M2_01:add_waypoint(v(120, 0), true);

PM_Ger_M2_02 = patrol_manager:new("Ger_M2_02", SUnit_Ger_M2_02, Alliance_Rom:armies(), 60);
PM_Ger_M2_02:set_stop_on_intercept();
PM_Ger_M2_02:set_completion_callback(function() BOOL_M2_Dogs_Are_Attacking = true; Train_On_Closest_Enemy(SUnit_Ger_M2_02, Units_Rom, true) end);
PM_Ger_M2_02:add_waypoint(v(75, 80), true);
PM_Ger_M2_02:add_waypoint(v(75, 0), true);

PM_Ger_M2_03 = patrol_manager:new("Ger_M2_03", SUnit_Ger_M2_03, Alliance_Rom:armies(), 60);
PM_Ger_M2_03:set_stop_on_intercept();
PM_Ger_M2_03:set_completion_callback(function() Start_M2_Third_Attack(); BOOL_M2_Dogs_Are_Attacking = true; Train_On_Closest_Enemy(SUnit_Ger_M2_03, Units_Rom, true) end);
PM_Ger_M2_03:add_waypoint(v(125, 100), true);
PM_Ger_M2_03:add_waypoint(v(120, 0), true);

PM_Ger_M2_04 = patrol_manager:new("Ger_M2_04", SUnit_Ger_M2_04, Alliance_Rom:armies(), 60);
PM_Ger_M2_04:set_stop_on_intercept();
PM_Ger_M2_04:set_completion_callback(function() BOOL_M2_Dogs_Are_Attacking = true; Train_On_Closest_Enemy(SUnit_Ger_M2_04, Units_Rom, true) end);
PM_Ger_M2_04:add_waypoint(v(75, 80), true);
PM_Ger_M2_04:add_waypoint(v(75, 0), true);

PM_Ger_M2_05 = patrol_manager:new("Ger_M2_05", SUnit_Ger_M2_05, Alliance_Rom:armies(), 70);
PM_Ger_M2_05:set_stop_on_intercept();
PM_Ger_M2_05:set_completion_callback(function() Train_On_Closest_Enemy(SUnit_Ger_M2_05, Units_Rom, true) end);
PM_Ger_M2_05:add_waypoint(v(110, 85));

PM_Ger_M2_06 = patrol_manager:new("Ger_M2_06", SUnit_Ger_M2_06, Alliance_Rom:armies(), 40);
PM_Ger_M2_06:add_waypoint(v(125.4, 122.7), true, -1, r_to_d(-2.04), 26.48);





PM_Ger_M3_01 = patrol_manager:new("Ger_M3_01", SUnit_Ger_M3_01, Alliance_Rom:armies(), 50);
PM_Ger_M3_01:set_intercept_callback(function() bm:callback(function() Start_M3_Second_Attack() end, 5000) end);
PM_Ger_M3_01:add_waypoint(v(-8.87, 120.4), true, -1, r_to_d(2.62), 28.7);

PM_Ger_M3_02 = patrol_manager:new("Ger_M3_02", SUnit_Ger_M3_02, Alliance_Rom:armies(), 70);
PM_Ger_M3_02:add_waypoint(v(-13.69, 133.7), true, -1, r_to_d(2.67), 34.2);







--
-- Mid cutscene
--

function teleport_if_active(sunit, pos, orient, width)
	if not is_routing_or_dead(sunit.unit) then
		sunit.uc:teleport_to_location(pos, orient, width);
	end;
end;


Loc_Rom_Blockade_Cutscene_01 = {
	pre = {
		pos = v(-54.4, 174.6),
		orient = r_to_d(-1.24),
		width = 21.3
	},
	post = {
		pos = v(-99.1, 182.5),
		orient = r_to_d(-1.44),
		width = 21.6
	}
}

Loc_Rom_Blockade_Cutscene_02 = {
	pre = {
		pos = v(-32.5, 212.7),
		orient = r_to_d(-1.29),
		width = 18.6
	},
	post = {
		pos = v(-65.1, 232.2),
		orient = r_to_d(-1.33),
		width = 20.9
	}
}

Loc_Rom_Blockade_Cutscene_03 = {
	pre = {
		pos = v(-47.4, 150.7),
		orient = r_to_d(-1.29),
		width = 17.4
	},
	post = {
		pos = v(-75.7, 154.6),
		orient = r_to_d(-1.58),
		width = 16
	}
}

Loc_Rom_Blockade_Cutscene_04 = {
	pre = {
		pos = v(-37.6, 169.1),
		orient = r_to_d(-1.24),
		width = 22.2
	},
	post = {
		pos = v(-75.9, 172.6),
		orient = r_to_d(-1.58),
		width = 16
	}
}

Loc_Rom_Blockade_Cutscene_05 = {
	pre = {
		pos = v(-32.6, 191.3),
		orient = r_to_d(-1.34),
		width = 16
	},
	post = {
		pos = v(-76.5, 190.5),
		orient = r_to_d(-1.58),
		width = 15.7
	}
}

Loc_Rom_Blockade_Cutscene_06 = {
	pre = {
		pos = v(-33.8, 141.2),
		orient = r_to_d(-1.02),
		width = 13.2
	},
	post = {
		pos = v(-63.7, 154.9),
		orient = r_to_d(-1.47),
		width = 16
	}
}

Loc_Rom_Blockade_Cutscene_07 = {
	pre = {
		pos = v(-28.4, 154.3),
		orient = r_to_d(-0.86),
		width = 9.4
	},
	post = {
		pos = v(-61.8, 172.4),
		orient = r_to_d(-1.47),
		width = 15.1
	}
}

Loc_Rom_Blockade_Cutscene_08 = {
	pre = {
		pos = v(-21.9, 168.8),
		orient = r_to_d(-0.92),
		width = 17.8
	},
	post = {
		pos = v(-60.1, 189.2),
		orient = r_to_d(-1.47),
		width = 14.7
	}
}

Loc_Rom_Blockade_Cutscene_09 = {
	pre = {
		pos = v(-16.4, 127),
		orient = r_to_d(-0.71),
		width = 13.4
	},
	post = {
		pos = v(-51.8, 153.1),
		orient = r_to_d(-1.32),
		width = 15.1
	}
}

Loc_Rom_Blockade_Cutscene_10 = {
	pre = {
		pos = v(-7.04, 143.6),
		orient = r_to_d(-0.78),
		width = 18.3
	},
	post = {
		pos = v(-47.6, 169.7),
		orient = r_to_d(-1.32),
		width = 15.1
	}
	
}

Loc_Rom_Blockade_Cutscene_11 = {
	pre = {
		pos = v(-1.9, 115),
		orient = r_to_d(-0.68),
		width = 18.9
	},
	post = {
		pos = v(-43.4, 186),
		orient = r_to_d(-1.32),
		width = 14.7
	}
}


Rom_Blockade_Locations = {
	Loc_Rom_Blockade_Cutscene_01,
	Loc_Rom_Blockade_Cutscene_02,
	Loc_Rom_Blockade_Cutscene_03,
	Loc_Rom_Blockade_Cutscene_04,
	Loc_Rom_Blockade_Cutscene_05,
	Loc_Rom_Blockade_Cutscene_06,
	Loc_Rom_Blockade_Cutscene_07,
	Loc_Rom_Blockade_Cutscene_08,
	Loc_Rom_Blockade_Cutscene_09,
	Loc_Rom_Blockade_Cutscene_10,
	Loc_Rom_Blockade_Cutscene_11
};

IT_Rom_Blockade_Locations = iterator:new(Rom_Blockade_Locations);

BOOL_Rom_Army_Blockade_Cutscene_Assigned = false;

function Assign_Rom_Blockade_Cutscene()
	if BOOL_Rom_Army_Blockade_Cutscene_Assigned then
		return false;
	end;
	
	BOOL_Rom_Army_Blockade_Cutscene_Assigned = true;
	
	-- 1st sunit (general)
	SUnit_Rom_Var.tf_blockade_loc = IT_Rom_Blockade_Locations:get_next();
	
	-- 2nd sunit (cav)
	local loc = IT_Rom_Blockade_Locations:get_next();
	if not is_routing_or_dead(SUnit_Rom_02.unit) then
		SUnit_Rom_02.tf_blockade_loc = loc;
	end;
	
	-- assign rest of sunits
	for i = 3, #Rom_Sunits do
		local current_sunit = Rom_Sunits[i];
		
		if not is_routing_or_dead(current_sunit.unit) then
			local loc = IT_Rom_Blockade_Locations:get_next()
		
			current_sunit.tf_blockade_loc = loc;
		end; 
	end;
end;


function TF_Blockade_Teleport(sunit, loc)
	sunit.uc:teleport_to_location(loc.pos, loc.orient, loc.width);
end;


function TF_Blockade_Move(sunit, loc, move_fast)
	local move_fast = move_fast or false;
	sunit.uc:goto_location_angle_width(loc.pos, loc.orient, loc.width, move_fast);
end;



BOOL_Rom_Army_Teleported_Blockade_Cutscene_Start = false;

function Teleport_Rom_Army_Blockade_Cutscene_Start()
	for i = 1, #Rom_Sunits do
		local current_sunit = Rom_Sunits[i];
		
		if current_sunit.tf_blockade_loc then
			TF_Blockade_Teleport(current_sunit, current_sunit.tf_blockade_loc.pre);
		end;
	end;
end;


function Move_Rom_Army_Blockade_Cutscene()
	for i = 1, #Rom_Sunits do
		local current_sunit = Rom_Sunits[i];
		
		if current_sunit.tf_blockade_loc then
			TF_Blockade_Move(current_sunit, current_sunit.tf_blockade_loc.post);
		end;
	end;
end;


function Teleport_Rom_Army_Blockade_Start()
	for i = 1, #Rom_Sunits do
		local current_sunit = Rom_Sunits[i];
		
		if current_sunit.tf_blockade_loc then
			TF_Blockade_Teleport(current_sunit, current_sunit.tf_blockade_loc.post);
		end;
	end;
end;





       







--
-- Escape
--


PM_Rom_Var_Escape = patrol_manager:new("Rom_01_Escape", SUnit_Rom_Var, Alliance_Ger:armies(), 0);
PM_Rom_Var_Escape:set_completion_callback(function() Withdraw_Roman_General() end);
PM_Rom_Var_Escape:add_waypoint(v(-103, 248), true);
PM_Rom_Var_Escape:add_waypoint(v(-147, 350), true);
PM_Rom_Var_Escape:add_waypoint(v(-290, 436), true);
PM_Rom_Var_Escape:add_waypoint(v(-390, 570), true);
PM_Rom_Var_Escape:add_waypoint(v(-433, 671), true);
PM_Rom_Var_Escape:add_waypoint(v(-420, 750), true);
PM_Rom_Var_Escape:add_waypoint(v(-377, 811), true);
PM_Rom_Var_Escape:add_waypoint(v(-395, 967), true);

PM_Ger_AR_01_Escape = patrol_manager:new("Ger_AR_01_Escape", SUnit_Ger_AR_01, Alliance_Rom:armies(), 0);
PM_Ger_AR_01_Escape:add_waypoint(SUnit_Rom_Var.unit, true);

PM_Ger_AR_02_Escape = patrol_manager:new("Ger_AR_02_Escape", SUnit_Ger_AR_02, Alliance_Rom:armies(), 0);
PM_Ger_AR_02_Escape:add_waypoint(SUnit_Rom_Var.unit, true);

PM_Ger_AR_03_Escape = patrol_manager:new("Ger_AR_03_Escape", SUnit_Ger_AR_03, Alliance_Rom:armies(), 0);
PM_Ger_AR_03_Escape:add_waypoint(SUnit_Rom_Var.unit, true);

PM_Ger_AR_04_Escape = patrol_manager:new("Ger_AR_04_Escape", SUnit_Ger_AR_04, Alliance_Rom:armies(), 0);
PM_Ger_AR_04_Escape:add_waypoint(SUnit_Rom_Var.unit, true);

PM_Ger_AR_05_Escape = patrol_manager:new("Ger_AR_05_Escape", SUnit_Ger_AR_05, Alliance_Rom:armies(), 0);
PM_Ger_AR_05_Escape:add_waypoint(SUnit_Rom_Var.unit, true);

function Withdraw_Roman_General()
	bm:out("Withdrawing Roman General");

	SUnit_Rom_Var.uc:withdraw(true);

	bm:callback(
		function()
			PM_Ger_AR_01_Escape:stop();
			PM_Ger_AR_02_Escape:stop();
			PM_Ger_AR_03_Escape:stop();
			PM_Ger_AR_04_Escape:stop();
			PM_Ger_AR_05_Escape:stop();
			
			SUnit_Ger_AR_01.uc:withdraw(true);
			SUnit_Ger_AR_02.uc:withdraw(true);
			SUnit_Ger_AR_03.uc:withdraw(true);
			SUnit_Ger_AR_04.uc:withdraw(true);
			SUnit_Ger_AR_05.uc:withdraw(true);
		end,
		2000
	);
end;







POS_Ger_F1_01_Blockade = v(-301.5, 49.79);
Orient_Ger_F1_01_Blockade = r_to_d(0.83);
Width_Ger_F1_01_Blockade = 36.7;

POS_Ger_F1_02_Blockade = v(-315.5, 123.7);
Orient_Ger_F1_02_Blockade = r_to_d(1.49);
Width_Ger_F1_02_Blockade = 16.9;

POS_Ger_F1_03_Blockade = v(-313.8, 103.9);
Orient_Ger_F1_03_Blockade = r_to_d(1.49);
Width_Ger_F1_03_Blockade = 16.9;

POS_Ger_F1_04_Blockade = v(-230.9, 9.8);
Orient_Ger_F1_04_Blockade = r_to_d(0.04);
Width_Ger_F1_04_Blockade = 17.06;

POS_Ger_F1_05_Blockade = v(-274.65, 20.56);
Orient_Ger_F1_05_Blockade = r_to_d(0.83);
Width_Ger_F1_05_Blockade = 36.7;

PM_Ger_F1_01_Blockade = patrol_manager:new("Ger_F1_01_Blockade", SUnit_Ger_F1_01, Alliance_Rom:armies(), 50);
PM_Ger_F1_01_Blockade:set_intercept_callback(function() Start_Berserker_March_Delayed(SUnit_Ger_F1_01.name .. " approached") end);
PM_Ger_F1_01_Blockade:add_waypoint(POS_Ger_F1_01_Blockade, true, -1, Orient_Ger_F1_01_Blockade, Width_Ger_F1_01_Blockade);

PM_Ger_F1_02_Blockade = patrol_manager:new("Ger_F1_02_Blockade", SUnit_Ger_F1_02, Alliance_Rom:armies(), 65);
PM_Ger_F1_02_Blockade:set_intercept_callback(function() Start_Berserker_March_Delayed(SUnit_Ger_F1_02.name .. " approached") end);
PM_Ger_F1_02_Blockade:add_waypoint(POS_Ger_F1_02_Blockade, true, -1, Orient_Ger_F1_02_Blockade, Width_Ger_F1_02_Blockade);

PM_Ger_F1_03_Blockade = patrol_manager:new("Ger_F1_03_Blockade", SUnit_Ger_F1_03, Alliance_Rom:armies(), 65);
PM_Ger_F1_03_Blockade:set_intercept_callback(function() Start_Berserker_March_Delayed(SUnit_Ger_F1_03.name .. " approached") end);
PM_Ger_F1_03_Blockade:add_waypoint(POS_Ger_F1_03_Blockade, true, -1, Orient_Ger_F1_03_Blockade, Width_Ger_F1_03_Blockade);

PM_Ger_F1_04_Blockade = patrol_manager:new("Ger_F1_04_Blockade", SUnit_Ger_F1_04, Alliance_Rom:armies(), 65);
PM_Ger_F1_04_Blockade:set_intercept_callback(function() Start_Berserker_March_Delayed(SUnit_Ger_F1_04.name .. " approached") end);
PM_Ger_F1_04_Blockade:add_waypoint(POS_Ger_F1_04_Blockade, true, -1, Orient_Ger_F1_04_Blockade, Width_Ger_F1_04_Blockade);

PM_Ger_F1_05_Blockade = patrol_manager:new("Ger_F1_05_Blockade", SUnit_Ger_F1_05, Alliance_Rom:armies(), 50);
PM_Ger_F1_05_Blockade:set_intercept_callback(function() Start_Berserker_March_Delayed(SUnit_Ger_F1_05.name .. " approached") end);
PM_Ger_F1_05_Blockade:add_waypoint(POS_Ger_F1_05_Blockade, true, -1, Orient_Ger_F1_05_Blockade, Width_Ger_F1_05_Blockade);

function Advance_Blockade()
	-- move final blockade forward
	Show_Units(SUnit_Ger_F1_01.uc);
	Show_Units(SUnit_Ger_F1_02.uc);
	Show_Units(SUnit_Ger_F1_03.uc);
	Show_Units(SUnit_Ger_F1_04.uc);
	Show_Units(SUnit_Ger_F1_05.uc);

	PM_Ger_F1_01_Blockade:start();
	PM_Ger_F1_02_Blockade:start();
	PM_Ger_F1_03_Blockade:start();
	PM_Ger_F1_04_Blockade:start();
	PM_Ger_F1_05_Blockade:start();
end;

function Teleport_Blockade()
	SUnit_Ger_F1_01.uc:goto_location_angle_width(POS_Ger_F1_01_Blockade, Orient_Ger_F1_01_Blockade, Width_Ger_F1_01_Blockade);
	SUnit_Ger_F1_02.uc:goto_location_angle_width(POS_Ger_F1_02_Blockade, Orient_Ger_F1_02_Blockade, Width_Ger_F1_02_Blockade);
	SUnit_Ger_F1_03.uc:goto_location_angle_width(POS_Ger_F1_03_Blockade, Orient_Ger_F1_03_Blockade, Width_Ger_F1_03_Blockade);
	SUnit_Ger_F1_04.uc:goto_location_angle_width(POS_Ger_F1_04_Blockade, Orient_Ger_F1_04_Blockade, Width_Ger_F1_04_Blockade);
end;



--
-- Berserker attack
--

Pos_Ger_F2_01_Berserker_Attack_Start = v(-100.019,275.624)
Orient_Ger_F2_01_Berserker_Attack_Start = r_to_d(-1.9192)
Width_Ger_F2_01_Berserker_Attack_Start = 9.71396

Pos_Ger_F2_02_Berserker_Attack_Start = v(-104.338,286.765)
Orient_Ger_F2_02_Berserker_Attack_Start = r_to_d(-1.97548)
Width_Ger_F2_02_Berserker_Attack_Start = 9.66917

Pos_Ger_F2_03_Berserker_Attack_Start = v(-109.005,298.023)
Orient_Ger_F2_03_Berserker_Attack_Start = r_to_d(-1.95621)
Width_Ger_F2_03_Berserker_Attack_Start = 9.81078

Pos_Ger_F2_04_Berserker_Attack_Start = v(-151.339,366.294)
Orient_Ger_F2_04_Berserker_Attack_Start = r_to_d(-2.38496)
Width_Ger_F2_04_Berserker_Attack_Start = 13.2684

Pos_Ger_F2_05_Berserker_Attack_Start = v(-161.532,375.805)
Orient_Ger_F2_05_Berserker_Attack_Start = r_to_d(-2.3909)
Width_Ger_F2_05_Berserker_Attack_Start = 12.1527

Pos_Ger_F2_06_Berserker_Attack_Start = v(-171.357,385.112)
Orient_Ger_F2_06_Berserker_Attack_Start = r_to_d(-2.33836)
Width_Ger_F2_06_Berserker_Attack_Start = 12.1291

Pos_Ger_F2_07_Berserker_Attack_Start = v(-92.333,262.071)
Orient_Ger_F2_07_Berserker_Attack_Start = r_to_d(-1.99264)
Width_Ger_F2_07_Berserker_Attack_Start = 18.7701

Pos_Ger_F2_08_Berserker_Attack_Start = v(-87.6749,299.504)
Orient_Ger_F2_08_Berserker_Attack_Start = r_to_d(-1.9633)
Width_Ger_F2_08_Berserker_Attack_Start = 55.8995

Pos_Ger_F2_09_Berserker_Attack_Start = v(-150.788,387.654)
Orient_Ger_F2_09_Berserker_Attack_Start = r_to_d(-2.40432)
Width_Ger_F2_09_Berserker_Attack_Start = 51.44

Pos_Ger_F2_10_Berserker_Attack_Start = v(-115.141,317.392)
Orient_Ger_F2_10_Berserker_Attack_Start = r_to_d(-1.9355)
Width_Ger_F2_10_Berserker_Attack_Start = 29.1247

Pos_Ger_F2_11_Berserker_Attack_Start = v(-134.74,348.524)
Orient_Ger_F2_11_Berserker_Attack_Start = r_to_d(-2.20951)
Width_Ger_F2_11_Berserker_Attack_Start = 30.387

Pos_Ger_F2_12_Berserker_Attack_Start = v(-192.452,399.971)
Orient_Ger_F2_12_Berserker_Attack_Start = r_to_d(-2.59923)
Width_Ger_F2_12_Berserker_Attack_Start = 32.4043

PM_Ger_F2_01_Berserker_Attack_Start = patrol_manager:new("Ger_F2_01_Berserker_Attack_Start", SUnit_Ger_F2_01, Alliance_Rom:armies(), 0);
PM_Ger_F2_01_Berserker_Attack_Start:set_intercept_callback(function() Berserkers_In_Position(true) end);
PM_Ger_F2_01_Berserker_Attack_Start:set_waypoint_threshold(10);
PM_Ger_F2_01_Berserker_Attack_Start:set_completion_callback(
	function() 
		bm:watch(function() return not SUnit_Ger_F2_01.unit:is_moving() end, 0, function() SUnit_Ger_F2_01.uc:start_taunting() end);
		Berserkers_In_Position() 
	end
);
PM_Ger_F2_01_Berserker_Attack_Start:add_waypoint(Pos_Ger_F2_01_Berserker_Attack_Start, false, 1000, Orient_Ger_F2_01_Berserker_Attack_Start, Width_Ger_F2_01_Berserker_Attack_Start);

PM_Ger_F2_02_Berserker_Attack_Start = patrol_manager:new("Ger_F2_02_Berserker_Attack_Start", SUnit_Ger_F2_02, Alliance_Rom:armies(), 20);
PM_Ger_F2_02_Berserker_Attack_Start:set_intercept_callback(function() Berserkers_In_Position(true) end);
PM_Ger_F2_02_Berserker_Attack_Start:set_completion_callback(function() bm:watch(function() return not SUnit_Ger_F2_02.unit:is_moving() end, 0, function() SUnit_Ger_F2_02.uc:start_taunting() end) end);
PM_Ger_F2_02_Berserker_Attack_Start:set_waypoint_threshold(10);
PM_Ger_F2_02_Berserker_Attack_Start:add_waypoint(Pos_Ger_F2_02_Berserker_Attack_Start, false, 0, Orient_Ger_F2_02_Berserker_Attack_Start, Width_Ger_F2_02_Berserker_Attack_Start);

PM_Ger_F2_03_Berserker_Attack_Start = patrol_manager:new("Ger_F2_03_Berserker_Attack_Start", SUnit_Ger_F2_03, Alliance_Rom:armies(), 20);
PM_Ger_F2_03_Berserker_Attack_Start:set_intercept_callback(function() Berserkers_In_Position(true) end);
PM_Ger_F2_03_Berserker_Attack_Start:set_completion_callback(function() bm:watch(function() return not SUnit_Ger_F2_03.unit:is_moving() end, 0, function() SUnit_Ger_F2_03.uc:start_taunting() end) end);
PM_Ger_F2_03_Berserker_Attack_Start:set_waypoint_threshold(10);
PM_Ger_F2_03_Berserker_Attack_Start:add_waypoint(Pos_Ger_F2_03_Berserker_Attack_Start, false, 0, Orient_Ger_F2_03_Berserker_Attack_Start, Width_Ger_F2_03_Berserker_Attack_Start);

PM_Ger_F2_04_Berserker_Attack_Start = patrol_manager:new("Ger_F2_04_Berserker_Attack_Start", SUnit_Ger_F2_04, Alliance_Rom:armies(), 20);
PM_Ger_F2_04_Berserker_Attack_Start:set_intercept_callback(function() Berserkers_In_Position(true) end);
PM_Ger_F2_04_Berserker_Attack_Start:set_completion_callback(function() bm:watch(function() return not SUnit_Ger_F2_04.unit:is_moving() end, 0, function() SUnit_Ger_F2_04.uc:start_taunting() end) end);
PM_Ger_F2_04_Berserker_Attack_Start:set_waypoint_threshold(10);
PM_Ger_F2_04_Berserker_Attack_Start:add_waypoint(Pos_Ger_F2_04_Berserker_Attack_Start, false, 0, Orient_Ger_F2_04_Berserker_Attack_Start, Width_Ger_F2_04_Berserker_Attack_Start);

PM_Ger_F2_05_Berserker_Attack_Start = patrol_manager:new("Ger_F2_05_Berserker_Attack_Start", SUnit_Ger_F2_05, Alliance_Rom:armies(), 20);
PM_Ger_F2_05_Berserker_Attack_Start:set_intercept_callback(function() Berserkers_In_Position(true) end);
PM_Ger_F2_05_Berserker_Attack_Start:set_completion_callback(function() bm:watch(function() return not SUnit_Ger_F2_05.unit:is_moving() end, 0, function() SUnit_Ger_F2_02.uc:start_taunting() end) end);
PM_Ger_F2_05_Berserker_Attack_Start:set_waypoint_threshold(10);
PM_Ger_F2_05_Berserker_Attack_Start:add_waypoint(Pos_Ger_F2_05_Berserker_Attack_Start, false, 0, Orient_Ger_F2_05_Berserker_Attack_Start, Width_Ger_F2_05_Berserker_Attack_Start);

PM_Ger_F2_06_Berserker_Attack_Start = patrol_manager:new("Ger_F2_06_Berserker_Attack_Start", SUnit_Ger_F2_06, Alliance_Rom:armies(), 20);
PM_Ger_F2_06_Berserker_Attack_Start:set_intercept_callback(function() Berserkers_In_Position(true) end);
PM_Ger_F2_06_Berserker_Attack_Start:set_completion_callback(function() bm:watch(function() return not SUnit_Ger_F2_06.unit:is_moving() end, 0, function() SUnit_Ger_F2_06.uc:start_taunting() end) end);
PM_Ger_F2_06_Berserker_Attack_Start:set_waypoint_threshold(10);
PM_Ger_F2_06_Berserker_Attack_Start:add_waypoint(Pos_Ger_F2_06_Berserker_Attack_Start, false, 0, Orient_Ger_F2_06_Berserker_Attack_Start, Width_Ger_F2_06_Berserker_Attack_Start);

PM_Ger_F2_07_Berserker_Attack_Start = patrol_manager:new("Ger_F2_07_Berserker_Attack_Start", SUnit_Ger_F2_07, Alliance_Rom:armies(), 20);
PM_Ger_F2_07_Berserker_Attack_Start:set_intercept_callback(function() Berserkers_In_Position(true) end);
PM_Ger_F2_07_Berserker_Attack_Start:set_completion_callback(function() bm:watch(function() return not SUnit_Ger_F2_07.unit:is_moving() end, 0, function() SUnit_Ger_F2_07.uc:start_taunting() end) end);
PM_Ger_F2_07_Berserker_Attack_Start:set_waypoint_threshold(10);
PM_Ger_F2_07_Berserker_Attack_Start:add_waypoint(Pos_Ger_F2_07_Berserker_Attack_Start, false, 0, Orient_Ger_F2_07_Berserker_Attack_Start, Width_Ger_F2_07_Berserker_Attack_Start);

PM_Ger_F2_08_Berserker_Attack_Start = patrol_manager:new("Ger_F2_08_Berserker_Attack_Start", SUnit_Ger_F2_08, Alliance_Rom:armies(), 20);
PM_Ger_F2_08_Berserker_Attack_Start:set_intercept_callback(function() Berserkers_In_Position(true) end);
PM_Ger_F2_08_Berserker_Attack_Start:set_completion_callback(function() bm:watch(function() return not SUnit_Ger_F2_08.unit:is_moving() end, 0, function() SUnit_Ger_F2_08.uc:start_taunting() end) end);
PM_Ger_F2_08_Berserker_Attack_Start:set_waypoint_threshold(10);
PM_Ger_F2_08_Berserker_Attack_Start:add_waypoint(Pos_Ger_F2_08_Berserker_Attack_Start, false, 0, Orient_Ger_F2_08_Berserker_Attack_Start, Width_Ger_F2_08_Berserker_Attack_Start);

PM_Ger_F2_09_Berserker_Attack_Start = patrol_manager:new("Ger_F2_09_Berserker_Attack_Start", SUnit_Ger_F2_09, Alliance_Rom:armies(), 20);
PM_Ger_F2_09_Berserker_Attack_Start:set_intercept_callback(function() Berserkers_In_Position(true) end);
PM_Ger_F2_09_Berserker_Attack_Start:set_completion_callback(function() bm:watch(function() return not SUnit_Ger_F2_09.unit:is_moving() end, 0, function() SUnit_Ger_F2_09.uc:start_taunting() end) end);
PM_Ger_F2_09_Berserker_Attack_Start:set_waypoint_threshold(10);
PM_Ger_F2_09_Berserker_Attack_Start:add_waypoint(Pos_Ger_F2_09_Berserker_Attack_Start, false, 0, Orient_Ger_F2_09_Berserker_Attack_Start, Width_Ger_F2_09_Berserker_Attack_Start);

PM_Ger_F2_10_Berserker_Attack_Start = patrol_manager:new("Ger_F2_10_Berserker_Attack_Start", SUnit_Ger_F2_10, Alliance_Rom:armies(), 20);
PM_Ger_F2_10_Berserker_Attack_Start:set_intercept_callback(function() Berserkers_In_Position(true) end);
PM_Ger_F2_10_Berserker_Attack_Start:set_completion_callback(function() bm:watch(function() return not SUnit_Ger_F2_10.unit:is_moving() end, 0, function() SUnit_Ger_F2_10.uc:start_taunting() end) end);
PM_Ger_F2_10_Berserker_Attack_Start:set_waypoint_threshold(10);
PM_Ger_F2_10_Berserker_Attack_Start:add_waypoint(Pos_Ger_F2_10_Berserker_Attack_Start, false, 0, Orient_Ger_F2_10_Berserker_Attack_Start, Width_Ger_F2_10_Berserker_Attack_Start);

PM_Ger_F2_11_Berserker_Attack_Start = patrol_manager:new("Ger_F2_11_Berserker_Attack_Start", SUnit_Ger_F2_11, Alliance_Rom:armies(), 20);
PM_Ger_F2_11_Berserker_Attack_Start:set_intercept_callback(function() Berserkers_In_Position(true) end);
PM_Ger_F2_11_Berserker_Attack_Start:set_completion_callback(function() bm:watch(function() return not SUnit_Ger_F2_11.unit:is_moving() end, 0, function() SUnit_Ger_F2_11.uc:start_taunting() end) end);
PM_Ger_F2_11_Berserker_Attack_Start:set_waypoint_threshold(10);
PM_Ger_F2_11_Berserker_Attack_Start:add_waypoint(Pos_Ger_F2_11_Berserker_Attack_Start, false, 0, Orient_Ger_F2_11_Berserker_Attack_Start, Width_Ger_F2_11_Berserker_Attack_Start);

PM_Ger_F2_12_Berserker_Attack_Start = patrol_manager:new("Ger_F2_12_Berserker_Attack_Start", SUnit_Ger_F2_12, Alliance_Rom:armies(), 20);
PM_Ger_F2_12_Berserker_Attack_Start:set_intercept_callback(function() Berserkers_In_Position(true) end);
PM_Ger_F2_12_Berserker_Attack_Start:set_completion_callback(function() bm:watch(function() return not SUnit_Ger_F2_12.unit:is_moving() end, 0, function() SUnit_Ger_F2_12.uc:start_taunting() end) end);
PM_Ger_F2_12_Berserker_Attack_Start:set_waypoint_threshold(10);
PM_Ger_F2_12_Berserker_Attack_Start:add_waypoint(Pos_Ger_F2_12_Berserker_Attack_Start, false, 0, Orient_Ger_F2_12_Berserker_Attack_Start, Width_Ger_F2_12_Berserker_Attack_Start);

--
-- Exiting Battlefield
--


-- final guard
PM_Ger_F3_01 = patrol_manager:new("Ger_F3_01", SUnit_Ger_F3_01, Alliance_Rom:armies(), 140);
PM_Ger_F3_01:set_completion_callback(function() bm:callback(function() PM_Ger_F3_01_Guard:start(); SUnit_Ger_F3_01.uc:start_taunting() end, 10000) end);
PM_Ger_F3_01:set_waypoint_threshold(10);
PM_Ger_F3_01:add_waypoint(v(-522.5, -78.9), true, 0, r_to_d(0.84), 20);

PM_Ger_F3_01_Guard = patrol_manager:new("Ger_F3_01_Guard", SUnit_Ger_F3_01, Alliance_Rom:armies(), 140);
PM_Ger_F3_01_Guard:add_waypoint(v(-522.5, -78.9), true, -1, r_to_d(0.84), 20);

PM_Ger_F3_08 = patrol_manager:new("Ger_F3_08", SUnit_Ger_F3_08, Alliance_Rom:armies(), 140);
PM_Ger_F3_08:set_completion_callback(function() bm:callback(function() PM_Ger_F3_08_Guard:start(); SUnit_Ger_F3_08.uc:start_taunting() end, 10000) end);
PM_Ger_F3_08:set_waypoint_threshold(10);
PM_Ger_F3_08:add_waypoint(v(-533.23, -67.06), true, 0, r_to_d(0.85), 8.7);

PM_Ger_F3_08_Guard = patrol_manager:new("Ger_F3_08_Guard", SUnit_Ger_F3_08, Alliance_Rom:armies(), 140);
PM_Ger_F3_08_Guard:add_waypoint(v(-533.23, -67.06), true, -1, r_to_d(0.85), 8.7);

-- other attacks
PM_Ger_F3_03 = patrol_manager:new("Ger_F3_03", SUnit_Ger_F3_03, Alliance_Rom:armies(), 50);
PM_Ger_F3_03:add_waypoint(v(-400, 120), false, -1);

PM_Ger_F3_04 = patrol_manager:new("Ger_F3_04", SUnit_Ger_F3_04, Alliance_Rom:armies(), 50);
PM_Ger_F3_04:add_waypoint(v(-430, 70), true, -1);

PM_Ger_F3_05 = patrol_manager:new("Ger_F3_05", SUnit_Ger_F3_05, Alliance_Rom:armies(), 60);
PM_Ger_F3_05:add_waypoint(v(-520, 6), true, -1);

PM_Ger_F4_01 = patrol_manager:new("Ger_F4_01", SUnit_Ger_F4_01, Alliance_Rom:armies(), 75);
PM_Ger_F4_01:add_waypoint(v(-405, -60), true, -1);

PM_Ger_F4_02 = patrol_manager:new("Ger_F4_02", SUnit_Ger_F4_02, Alliance_Rom:armies(), 50);
PM_Ger_F4_02:add_waypoint(v(-421, -110), true, -1, r_to_d(-0.77), 34.6);


Area_Finish = convex_area:new(
	{
		v(-570, -50),
		v(-500, -125),
		v(-1100, -900),
		v(-1100, -120)
	}
);



--
-- Intro Battle
--

Intro_Path_01 = v(900, -582);
Intro_Path_02 = v(876, -570);
Intro_Path_03 = v(856, -545);
Intro_Path_04 = v(835, -513);
Intro_Path_05 = v(797, -444);
Intro_Path_06 = v(772, -387);
Intro_Path_07 = v(753, -356);
Intro_Path_08 = v(736, -338);
Intro_Path_09 = v(708, -313);
Intro_Path_10 = v(677, -293);
Intro_Path_11 = v(652, -286);
Intro_Path_12 = v(612, -283);
Intro_Path_13 = v(575, -280);
Intro_Path_14 = v(546, -264);
Intro_Path_15 = v(530, -246);
Intro_Path_16 = v(520, -230);
Intro_Path_17 = v(515, -205);
Intro_Path_18 = v(503, -189);
Intro_Path_19 = v(486, -178);
Intro_Path_20 = v(451, -172);
Intro_Path_21 = v(411, -156);
Intro_Path_22 = v(384, -129);
Intro_Path_23 = v(332, -80);
Intro_Path_24 = v(286, -48);

Intro_Path = {
	Intro_Path_01,
	Intro_Path_02,
	Intro_Path_03,
	Intro_Path_04,
	Intro_Path_05,
	Intro_Path_06,
	Intro_Path_07,
	Intro_Path_08,
	Intro_Path_09,
	Intro_Path_10,
	Intro_Path_11,
	Intro_Path_12,
	Intro_Path_13,
	Intro_Path_14,
	Intro_Path_15,
	Intro_Path_16,
	Intro_Path_17,
	Intro_Path_18,
	Intro_Path_19,
	Intro_Path_20,
	Intro_Path_21,
	Intro_Path_22,
	Intro_Path_23,
	Intro_Path_24
};

function Stop_Intro_Patrols()
	if BOOL_Rom_Intro_Patrol_01_Active then
		Stop_Rom_Intro_Patrol_01();
	end;
	
	if BOOL_Rom_Intro_Patrol_02_Active then
		Stop_Rom_Intro_Patrol_02();
	end;
end;

PM_Rom_01_Intro_01 = patrol_manager:new("Rom_01_Intro_01", SUnit_Rom_01, Alliance_Ger:armies(), 0);

for i = 6, #Intro_Path do
	PM_Rom_01_Intro_01:add_waypoint(Intro_Path[i], false);
end;


PM_Rom_02_Intro_01 = patrol_manager:new("Rom_02_Intro_01", SUnit_Rom_02, Alliance_Ger:armies(), 0);

for i = 5, #Intro_Path do
	PM_Rom_02_Intro_01:add_waypoint(Intro_Path[i], false);
end;


PM_Rom_03_Intro_01 = patrol_manager:new("Rom_03_Intro_01", SUnit_Rom_03, Alliance_Ger:armies(), 0);

for i = 8, #Intro_Path do
	PM_Rom_03_Intro_01:add_waypoint(Intro_Path[i], false);
end;


PM_Rom_04_Intro_01 = patrol_manager:new("Rom_04_Intro_01", SUnit_Rom_04, Alliance_Ger:armies(), 0);

for i = 7, #Intro_Path do
	PM_Rom_04_Intro_01:add_waypoint(Intro_Path[i], false);
end;


PM_Rom_05_Intro_01 = patrol_manager:new("Rom_05_Intro_01", SUnit_Rom_05, Alliance_Ger:armies(), 0);

for i = 7, #Intro_Path do
	PM_Rom_05_Intro_01:add_waypoint(Intro_Path[i], false);
end;


PM_Rom_06_Intro_01 = patrol_manager:new("Rom_06_Intro_01", SUnit_Rom_06, Alliance_Ger:armies(), 0);

for i = 5, #Intro_Path do
	PM_Rom_06_Intro_01:add_waypoint(Intro_Path[i], false);
end;


PM_Rom_07_Intro_01 = patrol_manager:new("Rom_07_Intro_01", SUnit_Rom_07, Alliance_Ger:armies(), 0);

for i = 5, #Intro_Path do
	PM_Rom_07_Intro_01:add_waypoint(Intro_Path[i], false);
end;


PM_Rom_08_Intro_01 = patrol_manager:new("Rom_08_Intro_01", SUnit_Rom_08, Alliance_Ger:armies(), 0);

for i = 4, #Intro_Path do
	PM_Rom_08_Intro_01:add_waypoint(Intro_Path[i], false);
end;


PM_Rom_09_Intro_01 = patrol_manager:new("Rom_09_Intro_01", SUnit_Rom_09, Alliance_Ger:armies(), 0);

for i = 3, #Intro_Path do
	PM_Rom_09_Intro_01:add_waypoint(Intro_Path[i], false);
end;


PM_Rom_10_Intro_01 = patrol_manager:new("Rom_10_Intro_01", SUnit_Rom_10, Alliance_Ger:armies(), 0);

for i = 2, #Intro_Path do
	PM_Rom_10_Intro_01:add_waypoint(Intro_Path[i], false);
end;


PM_Rom_11_Intro_01 = patrol_manager:new("Rom_11_Intro_01", SUnit_Rom_11, Alliance_Ger:armies(), 0);

for i = 1, #Intro_Path do
	PM_Rom_11_Intro_01:add_waypoint(Intro_Path[i], false);
end;

PM_Rom_AR_Intro_01 = patrol_manager:new("Rom_AR_Intro_01", SUnit_Rom_AR, Alliance_Ger:armies(), 0);

for i = 9, #Intro_Path do
	PM_Rom_AR_Intro_01:add_waypoint(Intro_Path[i], false);
end;


Pos_Rom_01_Intro_Patrol_01 = v(798.387,-445.932)
Orient_Rom_01_Intro_Patrol_01 = r_to_d(-0.462112)
Width_Rom_01_Intro_Patrol_01 = 12.8423

Pos_Rom_02_Intro_Patrol_01 = v(810.195,-468.827)
Orient_Rom_02_Intro_Patrol_01 = r_to_d(-0.529032)
Width_Rom_02_Intro_Patrol_01 = 12.8545

Pos_Rom_03_Intro_Patrol_01 = v(753.083,-357.825)
Orient_Rom_03_Intro_Patrol_01 = r_to_d(-0.638711)
Width_Rom_03_Intro_Patrol_01 = 8.58092

Pos_Rom_04_Intro_Patrol_01 = v(765.899,-376.935)
Orient_Rom_04_Intro_Patrol_01 = r_to_d(-0.545426)
Width_Rom_04_Intro_Patrol_01 = 7.66181

Pos_Rom_05_Intro_Patrol_01 = v(777.42,-400.64)
Orient_Rom_05_Intro_Patrol_01 = r_to_d(-0.382345)
Width_Rom_05_Intro_Patrol_01 = 7.70005

Pos_Rom_06_Intro_Patrol_01 = v(825.872,-494.967)
Orient_Rom_06_Intro_Patrol_01 = r_to_d(-0.477547)
Width_Rom_06_Intro_Patrol_01 = 8.56557

Pos_Rom_07_Intro_Patrol_01 = v(837.652,-514.861)
Orient_Rom_07_Intro_Patrol_01 = r_to_d(-0.55904)
Width_Rom_07_Intro_Patrol_01 = 8.5601

Pos_Rom_08_Intro_Patrol_01 = v(850.31,-536.099)
Orient_Rom_08_Intro_Patrol_01 = r_to_d(-0.525676)
Width_Rom_08_Intro_Patrol_01 = 7.69994

Pos_Rom_09_Intro_Patrol_01 = v(880.552,-570.52)
Orient_Rom_09_Intro_Patrol_01 = r_to_d(-0.859892)
Width_Rom_09_Intro_Patrol_01 = 8.62049

Pos_Rom_10_Intro_Patrol_01 = v(902.787,-581.163)
Orient_Rom_10_Intro_Patrol_01 = r_to_d(-1.35633)
Width_Rom_10_Intro_Patrol_01 = 8.48883

Pos_Rom_11_Intro_Patrol_01 = v(929.238,-582.199)
Orient_Rom_11_Intro_Patrol_01 = r_to_d(-1.63733)
Width_Rom_11_Intro_Patrol_01 = 8.70012

Pos_Rom_AR_Intro_Patrol_01 = v(738.1, -340.36)
Orient_Rom_AR_Intro_Patrol_01 = r_to_d(-0.75)
Width_Rom_AR_Intro_Patrol_01 = 12


Roman_Intro_Walk_Speed_Modifier = 1.5;

BOOL_Rom_Intro_Patrol_01_Active = false;

function Rom_Teleport_To_Intro_Patrol_01()
	Stop_Intro_Patrols();

	BOOL_Rom_Intro_Patrol_01_Active = true;
	
	SUnit_Rom_01.uc:teleport_to_location(Pos_Rom_01_Intro_Patrol_01, Orient_Rom_01_Intro_Patrol_01, Width_Rom_01_Intro_Patrol_01);
	SUnit_Rom_02.uc:teleport_to_location(Pos_Rom_02_Intro_Patrol_01, Orient_Rom_02_Intro_Patrol_01, Width_Rom_02_Intro_Patrol_01);
	SUnit_Rom_03.uc:teleport_to_location(Pos_Rom_03_Intro_Patrol_01, Orient_Rom_03_Intro_Patrol_01, Width_Rom_03_Intro_Patrol_01);
	SUnit_Rom_04.uc:teleport_to_location(Pos_Rom_04_Intro_Patrol_01, Orient_Rom_04_Intro_Patrol_01, Width_Rom_04_Intro_Patrol_01);
	SUnit_Rom_05.uc:teleport_to_location(Pos_Rom_05_Intro_Patrol_01, Orient_Rom_05_Intro_Patrol_01, Width_Rom_05_Intro_Patrol_01);
	SUnit_Rom_06.uc:teleport_to_location(Pos_Rom_06_Intro_Patrol_01, Orient_Rom_06_Intro_Patrol_01, Width_Rom_06_Intro_Patrol_01);
	SUnit_Rom_07.uc:teleport_to_location(Pos_Rom_07_Intro_Patrol_01, Orient_Rom_07_Intro_Patrol_01, Width_Rom_07_Intro_Patrol_01);
	SUnit_Rom_08.uc:teleport_to_location(Pos_Rom_08_Intro_Patrol_01, Orient_Rom_08_Intro_Patrol_01, Width_Rom_08_Intro_Patrol_01);
	SUnit_Rom_09.uc:teleport_to_location(Pos_Rom_09_Intro_Patrol_01, Orient_Rom_09_Intro_Patrol_01, Width_Rom_09_Intro_Patrol_01);
	SUnit_Rom_10.uc:teleport_to_location(Pos_Rom_10_Intro_Patrol_01, Orient_Rom_10_Intro_Patrol_01, Width_Rom_10_Intro_Patrol_01);
	SUnit_Rom_11.uc:teleport_to_location(Pos_Rom_11_Intro_Patrol_01, Orient_Rom_11_Intro_Patrol_01, Width_Rom_11_Intro_Patrol_01);
	SUnit_Rom_AR.uc:teleport_to_location(Pos_Rom_AR_Intro_Patrol_01, Orient_Rom_AR_Intro_Patrol_01, Width_Rom_AR_Intro_Patrol_01);
	
	bm:callback(
		function()
			PM_Rom_01_Intro_01:set_debug_all();
			
			PM_Rom_01_Intro_01:set_walk_speed(Roman_Intro_Walk_Speed_Modifier);
			PM_Rom_02_Intro_01:set_walk_speed(Roman_Intro_Walk_Speed_Modifier);
			PM_Rom_03_Intro_01:set_walk_speed(1);
			PM_Rom_04_Intro_01:set_walk_speed(1);
			PM_Rom_05_Intro_01:set_walk_speed(1);
			PM_Rom_06_Intro_01:set_walk_speed(Roman_Intro_Walk_Speed_Modifier);
			PM_Rom_07_Intro_01:set_walk_speed(Roman_Intro_Walk_Speed_Modifier);
			PM_Rom_08_Intro_01:set_walk_speed(Roman_Intro_Walk_Speed_Modifier);
			PM_Rom_09_Intro_01:set_walk_speed(Roman_Intro_Walk_Speed_Modifier);
			PM_Rom_10_Intro_01:set_walk_speed(Roman_Intro_Walk_Speed_Modifier);
			PM_Rom_11_Intro_01:set_walk_speed(Roman_Intro_Walk_Speed_Modifier);
			PM_Rom_AR_Intro_01:set_walk_speed(1.9);
		
			PM_Rom_01_Intro_01:start();
			PM_Rom_02_Intro_01:start();
			PM_Rom_03_Intro_01:start();
			PM_Rom_04_Intro_01:start();
			PM_Rom_05_Intro_01:start();
			PM_Rom_06_Intro_01:start();
			PM_Rom_07_Intro_01:start();
			PM_Rom_08_Intro_01:start();
			PM_Rom_09_Intro_01:start();
			PM_Rom_10_Intro_01:start();
			PM_Rom_11_Intro_01:start();
			PM_Rom_AR_Intro_01:start();
		end,
		1000,
		"Roman_Intro_Teleport"
	);
end;


function Stop_Rom_Intro_Patrol_01()
	BOOL_Rom_Intro_Patrol_01_Active = false;
	
	PM_Rom_01_Intro_01:stop();
	PM_Rom_02_Intro_01:stop();
	PM_Rom_03_Intro_01:stop();
	PM_Rom_04_Intro_01:stop();
	PM_Rom_05_Intro_01:stop();
	PM_Rom_06_Intro_01:stop();
	PM_Rom_07_Intro_01:stop();
	PM_Rom_08_Intro_01:stop();
	PM_Rom_09_Intro_01:stop();
	PM_Rom_10_Intro_01:stop();
	PM_Rom_11_Intro_01:stop();
	PM_Rom_AR_Intro_01:stop();
end;


BOOL_Roman_Arminius_Hidden = false;

function Hide_Roman_Arminius()
	if not BOOL_Roman_Arminius_Hidden then
		BOOL_Roman_Arminius_Hidden = true;
		
		SUnit_Rom_AR.uc:teleport_to_location(v(-800, 900), 0, 15);
		PM_Rom_AR_Intro_01:stop();
		
		SUnit_Rom_AR.uc:kill();
		SUnit_Rom_AR.uc:change_enabled(false);
		SUnit_Rom_AR.uc:set_invisible_to_all(true);
	end;
end;











PM_Rom_01_Intro_02 = patrol_manager:new("Rom_01_Intro_02", SUnit_Rom_01, Alliance_Ger:armies(), 0);

for i = 13, #Intro_Path do
	PM_Rom_01_Intro_02:add_waypoint(Intro_Path[i], false);
end;


PM_Rom_02_Intro_02 = patrol_manager:new("Rom_02_Intro_02", SUnit_Rom_02, Alliance_Ger:armies(), 0);

for i = 13, #Intro_Path do
	PM_Rom_02_Intro_02:add_waypoint(Intro_Path[i], false);
end;


PM_Rom_03_Intro_02 = patrol_manager:new("Rom_03_Intro_02", SUnit_Rom_03, Alliance_Ger:armies(), 0);

for i = 17, #Intro_Path do
	PM_Rom_03_Intro_02:add_waypoint(Intro_Path[i], false);
end;


PM_Rom_04_Intro_02 = patrol_manager:new("Rom_04_Intro_02", SUnit_Rom_04, Alliance_Ger:armies(), 0);

for i = 15, #Intro_Path do
	PM_Rom_04_Intro_02:add_waypoint(Intro_Path[i], false);
end;


PM_Rom_05_Intro_02 = patrol_manager:new("Rom_05_Intro_02", SUnit_Rom_05, Alliance_Ger:armies(), 0);

for i = 14, #Intro_Path do
	PM_Rom_05_Intro_02:add_waypoint(Intro_Path[i], false);
end;


PM_Rom_06_Intro_02 = patrol_manager:new("Rom_06_Intro_02", SUnit_Rom_06, Alliance_Ger:armies(), 0);

for i = 11, #Intro_Path do
	PM_Rom_06_Intro_02:add_waypoint(Intro_Path[i], false);
end;


PM_Rom_07_Intro_02 = patrol_manager:new("Rom_07_Intro_02", SUnit_Rom_07, Alliance_Ger:armies(), 0);

for i = 11, #Intro_Path do
	PM_Rom_07_Intro_02:add_waypoint(Intro_Path[i], false);
end;


PM_Rom_08_Intro_02 = patrol_manager:new("Rom_08_Intro_02", SUnit_Rom_08, Alliance_Ger:armies(), 0);

for i = 9, #Intro_Path do
	PM_Rom_08_Intro_02:add_waypoint(Intro_Path[i], false);
end;


PM_Rom_09_Intro_02 = patrol_manager:new("Rom_09_Intro_02", SUnit_Rom_09, Alliance_Ger:armies(), 0);

for i = 8, #Intro_Path do
	PM_Rom_09_Intro_02:add_waypoint(Intro_Path[i], false);
end;


PM_Rom_10_Intro_02 = patrol_manager:new("Rom_10_Intro_02", SUnit_Rom_10, Alliance_Ger:armies(), 0);

for i = 7, #Intro_Path do
	PM_Rom_10_Intro_02:add_waypoint(Intro_Path[i], false);
end;


PM_Rom_11_Intro_02 = patrol_manager:new("Rom_11_Intro_02", SUnit_Rom_11, Alliance_Ger:armies(), 0);

for i = 6, #Intro_Path do
	PM_Rom_11_Intro_02:add_waypoint(Intro_Path[i], false);
end;

Pos_Rom_01_Intro_Patrol_02 = v(598.47, -281.78)
Orient_Rom_01_Intro_Patrol_02 = r_to_d(-1.47)
Width_Rom_01_Intro_Patrol_02 = 14.7

Pos_Rom_02_Intro_Patrol_02 = v(622.49,-284.83)
Orient_Rom_02_Intro_Patrol_02 = r_to_d(-1.43)
Width_Rom_02_Intro_Patrol_02 = 13.1

Pos_Rom_03_Intro_Patrol_02 = v(520.84, -221.78)
Orient_Rom_03_Intro_Patrol_02 = r_to_d(-0.38)
Width_Rom_03_Intro_Patrol_02 = 7

Pos_Rom_04_Intro_Patrol_02 = v(533.85, -249.14)
Orient_Rom_04_Intro_Patrol_02 = r_to_d(-0.73)
Width_Rom_04_Intro_Patrol_02 = 7

Pos_Rom_05_Intro_Patrol_02 = v(554.83, -268.79)
Orient_Rom_05_Intro_Patrol_02 = r_to_d(-1.11)
Width_Rom_05_Intro_Patrol_02 = 7.7

Pos_Rom_06_Intro_Patrol_02 = v(676.65, -296.94)
Orient_Rom_06_Intro_Patrol_02 = r_to_d(-1.06)
Width_Rom_06_Intro_Patrol_02 = 7

Pos_Rom_07_Intro_Patrol_02 = v(700.08, -310.49)
Orient_Rom_07_Intro_Patrol_02 = r_to_d(-0.96)
Width_Rom_07_Intro_Patrol_02 = 7

Pos_Rom_08_Intro_Patrol_02 = v(719.98, -323.98)
Orient_Rom_08_Intro_Patrol_02 = r_to_d(-0.91)
Width_Rom_08_Intro_Patrol_02 = 7.7

Pos_Rom_09_Intro_Patrol_02 = v(756.11, -359.66)
Orient_Rom_09_Intro_Patrol_02 = r_to_d(-0.53)
Width_Rom_09_Intro_Patrol_02 = 7

Pos_Rom_10_Intro_Patrol_02 = v(768.7,-381.58)
Orient_Rom_10_Intro_Patrol_02 = r_to_d(-0.5)
Width_Rom_10_Intro_Patrol_02 = 7.6

Pos_Rom_11_Intro_Patrol_02 = v(781.51,-405.12)
Orient_Rom_11_Intro_Patrol_02 = r_to_d(-0.28)
Width_Rom_11_Intro_Patrol_02 = 9.23


BOOL_Rom_Intro_Patrol_02_Active = false;

function Rom_Teleport_To_Intro_Patrol_02()
	Stop_Intro_Patrols();

	BOOL_Rom_Intro_Patrol_02_Active = true;
	
	SUnit_Rom_01.uc:teleport_to_location(Pos_Rom_01_Intro_Patrol_02, Orient_Rom_01_Intro_Patrol_02, Width_Rom_01_Intro_Patrol_02);
	SUnit_Rom_02.uc:teleport_to_location(Pos_Rom_02_Intro_Patrol_02, Orient_Rom_02_Intro_Patrol_02, Width_Rom_02_Intro_Patrol_02);
	SUnit_Rom_03.uc:teleport_to_location(Pos_Rom_03_Intro_Patrol_02, Orient_Rom_03_Intro_Patrol_02, Width_Rom_03_Intro_Patrol_02);
	SUnit_Rom_04.uc:teleport_to_location(Pos_Rom_04_Intro_Patrol_02, Orient_Rom_04_Intro_Patrol_02, Width_Rom_04_Intro_Patrol_02);
	SUnit_Rom_05.uc:teleport_to_location(Pos_Rom_05_Intro_Patrol_02, Orient_Rom_05_Intro_Patrol_02, Width_Rom_05_Intro_Patrol_02);
	SUnit_Rom_06.uc:teleport_to_location(Pos_Rom_06_Intro_Patrol_02, Orient_Rom_06_Intro_Patrol_02, Width_Rom_06_Intro_Patrol_02);
	SUnit_Rom_07.uc:teleport_to_location(Pos_Rom_07_Intro_Patrol_02, Orient_Rom_07_Intro_Patrol_02, Width_Rom_07_Intro_Patrol_02);
	SUnit_Rom_08.uc:teleport_to_location(Pos_Rom_08_Intro_Patrol_02, Orient_Rom_08_Intro_Patrol_02, Width_Rom_08_Intro_Patrol_02);
	SUnit_Rom_09.uc:teleport_to_location(Pos_Rom_09_Intro_Patrol_02, Orient_Rom_09_Intro_Patrol_02, Width_Rom_09_Intro_Patrol_02);
	SUnit_Rom_10.uc:teleport_to_location(Pos_Rom_10_Intro_Patrol_02, Orient_Rom_10_Intro_Patrol_02, Width_Rom_10_Intro_Patrol_02);
	SUnit_Rom_11.uc:teleport_to_location(Pos_Rom_11_Intro_Patrol_02, Orient_Rom_11_Intro_Patrol_02, Width_Rom_11_Intro_Patrol_02);
	
	--bm:callback(
	--	function()
			PM_Rom_01_Intro_02:start();
			PM_Rom_02_Intro_02:start();
			PM_Rom_03_Intro_02:start();
			PM_Rom_04_Intro_02:start();
			PM_Rom_05_Intro_02:start();
			PM_Rom_06_Intro_02:start();
			PM_Rom_07_Intro_02:start();
			PM_Rom_08_Intro_02:start();
			PM_Rom_09_Intro_02:start();
			PM_Rom_10_Intro_02:start();
			PM_Rom_11_Intro_02:start();
	--	end,
	--	1000
	--);
end;

function Stop_Rom_Intro_Patrol_02()
	BOOL_Rom_Intro_Patrol_02_Active = false;

	PM_Rom_01_Intro_02:stop();
	PM_Rom_02_Intro_02:stop();
	PM_Rom_03_Intro_02:stop();
	PM_Rom_04_Intro_02:stop();
	PM_Rom_05_Intro_02:stop();
	PM_Rom_06_Intro_02:stop();
	PM_Rom_07_Intro_02:stop();
	PM_Rom_08_Intro_02:stop();
	PM_Rom_09_Intro_02:stop();
	PM_Rom_10_Intro_02:stop();
	PM_Rom_11_Intro_02:stop();
end;

Pos_Rom_01_Pre_Ambush = v(412.278,-142.584)
Orient_Rom_01_Pre_Ambush = r_to_d(-0.989418)
Width_Rom_01_Pre_Ambush = 15.6956

Pos_Rom_02_Pre_Ambush = v(438.525,-156.404)
Orient_Rom_02_Pre_Ambush = r_to_d(-1.08481)
Width_Rom_02_Pre_Ambush = 14.7828

Pos_Rom_03_Pre_Ambush = v(338.894,-85.1018)
Orient_Rom_03_Pre_Ambush = r_to_d(-0.913773)
Width_Rom_03_Pre_Ambush = 7.54323

Pos_Rom_04_Pre_Ambush = v(357.649,-100.191)
Orient_Rom_04_Pre_Ambush = r_to_d(-0.904857)
Width_Rom_04_Pre_Ambush = 7.41644

Pos_Rom_05_Pre_Ambush = v(375.897,-116.586)
Orient_Rom_05_Pre_Ambush = r_to_d(-0.831322)
Width_Rom_05_Pre_Ambush = 7.65085

Pos_Rom_06_Pre_Ambush = v(488.119,-174.626)
Orient_Rom_06_Pre_Ambush = r_to_d(-1.28078)
Width_Rom_06_Pre_Ambush = 7.07481

Pos_Rom_07_Pre_Ambush = v(512.111,-187.114)
Orient_Rom_07_Pre_Ambush = r_to_d(-0.522033)
Width_Rom_07_Pre_Ambush = 7.97277

Pos_Rom_08_Pre_Ambush = v(520.706,-208.287)
Orient_Rom_08_Pre_Ambush = r_to_d(-0.12617)
Width_Rom_08_Pre_Ambush = 8.00303

Pos_Rom_09_Pre_Ambush = v(549.959,-265.975)
Orient_Rom_09_Pre_Ambush = r_to_d(-0.841197)
Width_Rom_09_Pre_Ambush = 7.6409

Pos_Rom_10_Pre_Ambush = v(572.692,-281.69)
Orient_Rom_10_Pre_Ambush = r_to_d(-1.1338)
Width_Rom_10_Pre_Ambush = 7.53495

Pos_Rom_11_Pre_Ambush = v(596.026,-286.675)
Orient_Rom_11_Pre_Ambush = r_to_d(-1.48892)
Width_Rom_11_Pre_Ambush = 7.93727

function Rom_Teleport_To_Pre_Ambush()
	SUnit_Rom_01.uc:teleport_to_location(Pos_Rom_01_Pre_Ambush, Orient_Rom_01_Pre_Ambush, Width_Rom_01_Pre_Ambush);
	SUnit_Rom_02.uc:teleport_to_location(Pos_Rom_02_Pre_Ambush, Orient_Rom_02_Pre_Ambush, Width_Rom_02_Pre_Ambush);
	SUnit_Rom_03.uc:teleport_to_location(Pos_Rom_03_Pre_Ambush, Orient_Rom_03_Pre_Ambush, Width_Rom_03_Pre_Ambush);
	SUnit_Rom_04.uc:teleport_to_location(Pos_Rom_04_Pre_Ambush, Orient_Rom_04_Pre_Ambush, Width_Rom_04_Pre_Ambush);
	SUnit_Rom_05.uc:teleport_to_location(Pos_Rom_05_Pre_Ambush, Orient_Rom_05_Pre_Ambush, Width_Rom_05_Pre_Ambush);
	SUnit_Rom_06.uc:teleport_to_location(Pos_Rom_06_Pre_Ambush, Orient_Rom_06_Pre_Ambush, Width_Rom_06_Pre_Ambush);
	SUnit_Rom_07.uc:teleport_to_location(Pos_Rom_07_Pre_Ambush, Orient_Rom_07_Pre_Ambush, Width_Rom_07_Pre_Ambush);
	SUnit_Rom_08.uc:teleport_to_location(Pos_Rom_08_Pre_Ambush, Orient_Rom_08_Pre_Ambush, Width_Rom_08_Pre_Ambush);
	SUnit_Rom_09.uc:teleport_to_location(Pos_Rom_09_Pre_Ambush, Orient_Rom_09_Pre_Ambush, Width_Rom_09_Pre_Ambush);
	SUnit_Rom_10.uc:teleport_to_location(Pos_Rom_10_Pre_Ambush, Orient_Rom_10_Pre_Ambush, Width_Rom_10_Pre_Ambush);
	SUnit_Rom_11.uc:teleport_to_location(Pos_Rom_11_Pre_Ambush, Orient_Rom_11_Pre_Ambush, Width_Rom_11_Pre_Ambush);
	
	bm:callback(
		function()
			SUnit_Rom_01.uc:goto_location_angle_width(SUnit_Rom_01.start_position, SUnit_Rom_01.start_bearing, SUnit_Rom_01.start_width);
			SUnit_Rom_02.uc:goto_location_angle_width(SUnit_Rom_02.start_position, SUnit_Rom_02.start_bearing, SUnit_Rom_02.start_width);
			SUnit_Rom_03.uc:goto_location_angle_width(SUnit_Rom_03.start_position, SUnit_Rom_03.start_bearing, SUnit_Rom_03.start_width);
			SUnit_Rom_04.uc:goto_location_angle_width(SUnit_Rom_04.start_position, SUnit_Rom_04.start_bearing, SUnit_Rom_04.start_width);
			SUnit_Rom_05.uc:goto_location_angle_width(SUnit_Rom_05.start_position, SUnit_Rom_05.start_bearing, SUnit_Rom_05.start_width);
		end,
		2000
	);
	
	bm:callback(
		function()
			SUnit_Rom_06.uc:goto_location_angle_width(SUnit_Rom_06.start_position, SUnit_Rom_06.start_bearing, SUnit_Rom_06.start_width);
			SUnit_Rom_07.uc:goto_location_angle_width(SUnit_Rom_07.start_position, SUnit_Rom_07.start_bearing, SUnit_Rom_07.start_width);
			SUnit_Rom_08.uc:goto_location_angle_width(SUnit_Rom_08.start_position, SUnit_Rom_08.start_bearing, SUnit_Rom_08.start_width);
			SUnit_Rom_09.uc:goto_location_angle_width(SUnit_Rom_09.start_position, SUnit_Rom_09.start_bearing, SUnit_Rom_09.start_width);
			SUnit_Rom_10.uc:goto_location_angle_width(SUnit_Rom_10.start_position, SUnit_Rom_10.start_bearing, SUnit_Rom_10.start_width);
			SUnit_Rom_11.uc:goto_location_angle_width(SUnit_Rom_11.start_position, SUnit_Rom_11.start_bearing, SUnit_Rom_11.start_width);
		end,
		3000
	);
end;


BOOL_S2_Ger_Hidden = true;

function Unhide_S2_Germans()
	if BOOL_S2_Ger_Hidden then
		BOOL_S2_Ger_Hidden = false;
		
		Show_Units(SUnit_Ger_S2_01.uc);
		Show_Units(SUnit_Ger_S2_02.uc);
		Show_Units(SUnit_Ger_S2_03.uc);
		Show_Units(SUnit_Ger_S2_04.uc);
		Show_Units(SUnit_Ger_S2_05.uc);
		Show_Units(SUnit_Ger_S2_06.uc);
		
		
		SUnit_Ger_S2_03.uc:start_taunting();
		SUnit_Ger_S2_04.uc:start_taunting();
		SUnit_Ger_S2_05.uc:start_taunting();
		SUnit_Ger_S2_06.uc:start_taunting();
	end;
end;



Pos_Ger_F2_01_Berserker_Final = v(-467.711,-53.0844)
Orient_Ger_F2_01_Berserker_Final = r_to_d(-2.1911)
Width_Ger_F2_01_Berserker_Final = 8.73378

Pos_Ger_F2_02_Berserker_Final = v(-473.514,-45.8435)
Orient_Ger_F2_02_Berserker_Final = r_to_d(-2.26281)
Width_Ger_F2_02_Berserker_Final = 7.59887

Pos_Ger_F2_03_Berserker_Final = v(-479.302,-39.0697)
Orient_Ger_F2_03_Berserker_Final = r_to_d(-2.29781)
Width_Ger_F2_03_Berserker_Final = 7.37559

Pos_Ger_F2_04_Berserker_Final = v(-496.34,-19.6702)
Orient_Ger_F2_04_Berserker_Final = r_to_d(-2.33299)
Width_Ger_F2_04_Berserker_Final = 7.46654

Pos_Ger_F2_05_Berserker_Final = v(-490.88,-26.1897)
Orient_Ger_F2_05_Berserker_Final = r_to_d(-2.26914)
Width_Ger_F2_05_Berserker_Final = 7.16421

Pos_Ger_F2_06_Berserker_Final = v(-485.129,-32.676)
Orient_Ger_F2_06_Berserker_Final = r_to_d(-2.23434)
Width_Ger_F2_06_Berserker_Final = 7.69787

Pos_Ger_F2_10_Berserker_Final = v(-455.935,-42.9083)
Orient_Ger_F2_10_Berserker_Final = r_to_d(-2.32187)
Width_Ger_F2_10_Berserker_Final = 20.9657

Pos_Ger_F2_11_Berserker_Final = v(-470.35,-27.3069)
Orient_Ger_F2_11_Berserker_Final = r_to_d(-2.31756)
Width_Ger_F2_11_Berserker_Final = 19.5786

Pos_Ger_F2_12_Berserker_Final = v(-484.224,-12.1507)
Orient_Ger_F2_12_Berserker_Final = r_to_d(-2.31574)
Width_Ger_F2_12_Berserker_Final = 19.4628


PM_Ger_F2_01_Guard = patrol_manager:new("Ger_F2_01", SUnit_Ger_F2_01, Alliance_Rom:armies(), 60);
PM_Ger_F2_01_Guard:add_waypoint(Pos_Ger_F2_01_Berserker_Final, false, -1, Orient_Ger_F2_01_Berserker_Final, Width_Ger_F2_01_Berserker_Final);

PM_Ger_F2_02_Guard = patrol_manager:new("Ger_F2_02", SUnit_Ger_F2_02, Alliance_Rom:armies(), 60);
PM_Ger_F2_02_Guard:add_waypoint(Pos_Ger_F2_02_Berserker_Final, false, -1, Orient_Ger_F2_02_Berserker_Final, Width_Ger_F2_02_Berserker_Final);

PM_Ger_F2_03_Guard = patrol_manager:new("Ger_F2_03", SUnit_Ger_F2_03, Alliance_Rom:armies(), 60);
PM_Ger_F2_03_Guard:add_waypoint(Pos_Ger_F2_03_Berserker_Final, false, -1, Orient_Ger_F2_03_Berserker_Final, Width_Ger_F2_03_Berserker_Final);

PM_Ger_F2_04_Guard = patrol_manager:new("Ger_F2_04", SUnit_Ger_F2_04, Alliance_Rom:armies(), 60);
PM_Ger_F2_04_Guard:add_waypoint(Pos_Ger_F2_04_Berserker_Final, false, -1, Orient_Ger_F2_04_Berserker_Final, Width_Ger_F2_04_Berserker_Final);

PM_Ger_F2_05_Guard = patrol_manager:new("Ger_F2_05", SUnit_Ger_F2_05, Alliance_Rom:armies(), 60);
PM_Ger_F2_05_Guard:add_waypoint(Pos_Ger_F2_05_Berserker_Final, false, -1, Orient_Ger_F2_05_Berserker_Final, Width_Ger_F2_05_Berserker_Final);

PM_Ger_F2_06_Guard = patrol_manager:new("Ger_F2_06", SUnit_Ger_F2_06, Alliance_Rom:armies(), 60);
PM_Ger_F2_06_Guard:add_waypoint(Pos_Ger_F2_06_Berserker_Final, false, -1, Orient_Ger_F2_06_Berserker_Final, Width_Ger_F2_06_Berserker_Final);

PM_Ger_F2_10_Guard = patrol_manager:new("Ger_F2_10", SUnit_Ger_F2_10, Alliance_Rom:armies(), 60);
PM_Ger_F2_10_Guard:add_waypoint(Pos_Ger_F2_10_Berserker_Final, false, -1, Orient_Ger_F2_10_Berserker_Final, Width_Ger_F2_10_Berserker_Final);

PM_Ger_F2_11_Guard = patrol_manager:new("Ger_F2_11", SUnit_Ger_F2_11, Alliance_Rom:armies(), 60);
PM_Ger_F2_11_Guard:add_waypoint(Pos_Ger_F2_11_Berserker_Final, false, -1, Orient_Ger_F2_11_Berserker_Final, Width_Ger_F2_11_Berserker_Final);

PM_Ger_F2_12_Guard = patrol_manager:new("Ger_F2_12", SUnit_Ger_F2_12, Alliance_Rom:armies(), 60);
PM_Ger_F2_12_Guard:add_waypoint(Pos_Ger_F2_12_Berserker_Final, false, -1, Orient_Ger_F2_12_Berserker_Final, Width_Ger_F2_12_Berserker_Final);





--
--	Ambient taunt sounds
--

-- S-mid range

Taunts_S_Mid = {
	v(610, 50, -220),
	v(625, 45, -170),
	v(600, 50, -130),
	v(550, 50, -100),
	v(450, 50, -70),
	v(400, 40, -40),
	v(275, 30, 70),
	v(605, 35, -345),
	v(520, 38, -345),
	v(400, 5, -275),
	v(320, 20, -210),
	v(192, 40, -148)
};


-- S-far range

Taunts_S_Far = {
	v(672, 60, -134),
	v(600, 43, -10),
	v(470, 43, 64),
	v(370, 43, 160),
	v(33, 33, 282),
	v(515, 58, -410),
	v(270, 36, -267),
	v(166, 48, -200),
	v(4, 38, -162),
	v(-116, 57, -47),
	v(376, 23, -360)
};




-- M-mid range

Taunts_M_Mid = {
	v(60, 20, -106),
	v(-30, 32, -75),
	v(-85, 55, 25),
	v(25, 30, 190)
};


-- F-mid range

Taunts_F_Mid = {
	v(-385, 25, 154),
	v(-425, 35, 125),
	v(-461, 42, 104),
	v(-475, 27, 63),
	v(-530, 30, 16),
	v(-350, 13, -125),
	v(-405, 8, -145),
	v(-470, 15, -125)
};


-- F-far range

Taunts_F_Far = {
	v(-150, 61, -76),
	v(-150, 61, -76),
	v(-280, 37, -180),
	v(-390, 28, -220),
	v(-510, 28, -290),
	v(-650, 46, -20),
	v(-590, 65, 85),
	v(-510, 56, 145),
	v(-420, 20, 271),
	v(-28, 28, 234),
	v(-28, 28, 234),
	v(-47, 26, 369)
};

-- Dog sounds

Dogs_S_Far = {
	v(350, 20, -270),
	v(180, 52, -325),
	v(20, 35, -160),
	v(23, 32, 260),
	v(180, 5, 220),
	v(290, 12, 215),
	v(400, 42, 60),
	v(570, 42, -10)
};


Dogs_F_Far = {
	v(-300, 42, -105),
	v(-376, 22, -174),
	v(-634, 37, -64),
	v(-606, 40, -16),
	v(-560, 58, 114),
	v(-460, 55, 162),
	v(-334, 5, 263),
	v(-126, 16, 376)
};



function Start_Ambient_Taunts(pos_list, soundfile)
	for i = 1, #pos_list do
		local current_pos = pos_list[i];
		play_sound(current_pos, soundfile);
		bm:out("Playing sound " .. tostring(soundfile) .. " at " .. v_to_s(current_pos))
		draw:draw_peg_on_terrain(current_pos, 5000, red);
	end;
end;






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\tf_teutoburg_forest\tf_demo.lua




-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	ADDITIONAL DEMO SCRIPT
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

bm:out("Loading additional demo script");

BOOL_Demo_Script_Loaded = true;

function TF_unit_max_casualties(sunit, proportion, should_release)
	if is_routing_or_dead(sunit.unit) then
		bm:out("TF_unit_max_casualties() called on " .. sunit.name .. " with proportion " .. tostring(proportion) .. " but unit is routing");
		sunit.uc:set_invincible(false);
		sunit.uc:release_control();
		
		return;
	end;
	
	bm:out("TF_unit_max_casualties() called on " .. sunit.name .. " with proportion " .. tostring(proportion));
	
	if sunit.tf_is_dying then
		bm:out(sunit.name .. " is marked to die, so doing nothing");
		sunit.uc:morale_behavior_default();
		sunit.uc:set_invincible(false);
		return;
	end;

	if proportion > 0 then
		if sunit.tf_is_abandoned then
			sunit.tf_is_abandoned = false;
			bm:out(sunit.name .. " is no longer abandoned");
		end;
		sunit.uc:morale_behavior_fearless();
	else
		if not sunit.tf_is_abandoned then
			bm:out(sunit.name .. " is being abandoned !!");
			sunit.tf_is_abandoned = true;
		end;
		sunit.uc:morale_behavior_default();
	end;
	
	return unit_max_casualties(sunit, proportion, should_release);
end;



-- initial setup
bm:watch(function() return BOOL_Battle_Started end, 0, function() DEMO_Setup_Roman_Army_Start() end)

function DEMO_Setup_Roman_Army_Start()
	bm:out("DEMO_Setup_Roman_Army_Start() called");
	
	-- set Roman max casualty rates at start
	local rom_cas_rate = 0.8;
	
	if BOOL_Short_Battle then
		rom_cas_rate = 0.7;
	end;
	
	TF_unit_max_casualties(SUnit_Rom_01, rom_cas_rate, true);
	TF_unit_max_casualties(SUnit_Rom_02, rom_cas_rate, true);
	TF_unit_max_casualties(SUnit_Rom_03, rom_cas_rate, true);
	TF_unit_max_casualties(SUnit_Rom_04, rom_cas_rate, true);
	TF_unit_max_casualties(SUnit_Rom_05, rom_cas_rate, true);
	TF_unit_max_casualties(SUnit_Rom_06, rom_cas_rate, true);
	TF_unit_max_casualties(SUnit_Rom_07, rom_cas_rate, true);
	TF_unit_max_casualties(SUnit_Rom_08, rom_cas_rate, true);
	TF_unit_max_casualties(SUnit_Rom_09, rom_cas_rate, true);
	TF_unit_max_casualties(SUnit_Rom_10, 0.4, true);
	TF_unit_max_casualties(SUnit_Rom_11, 0.4, true);
	
	-- S2 Germans can't die initially
	SUnit_Ger_S2_01.uc:morale_behavior_fearless();
	SUnit_Ger_S2_02.uc:morale_behavior_fearless();
	TF_unit_max_casualties(SUnit_Ger_S2_01, 0.75);
	TF_unit_max_casualties(SUnit_Ger_S2_02, 0.75);
	
	-- when S2 defence is set up, allow S3 attack to start if it hasn't already
	bm:callback(
		function()
			bm:watch(function() return SUnit_Rom_09.unit:is_moving() end, 7000, function() Start_S3_Attack("SUnit_Rom_09 is moving") end);
		end,
		5000
	);
	
	-- Allow S2 Germans to die when the player cav has done damage
	bm:watch(
		function() return unit_proportion_alive(SUnit_Ger_S3_05.unit) < 1 end,
		0,
		function()
			SUnit_Ger_S2_01.uc:morale_behavior_default();
			SUnit_Ger_S2_02.uc:morale_behavior_default();
			TF_unit_max_casualties(SUnit_Ger_S2_01, 0);
			TF_unit_max_casualties(SUnit_Ger_S2_02, 0);
		end
	);
	
	-- S3 Germans can't die initially
	TF_unit_max_casualties(SUnit_Ger_S3_01, 0.55);
	TF_unit_max_casualties(SUnit_Ger_S3_02, 0.55);
	TF_unit_max_casualties(SUnit_Ger_S3_03, 0.55);
	TF_unit_max_casualties(SUnit_Ger_S3_04, 0.55);
	
	-- S3 German skirmishers attacking player general cannot die until S2 is clear,
	-- then when it's dead tell the player cav to halt (to stop it chasing)
	TF_unit_max_casualties(SUnit_Ger_S3_05, 0.4);
	SUnit_Ger_S3_05.uc:morale_behavior_fearless();
	bm:watch(
		function() return is_routing_or_dead(SUnit_Ger_S2_01.unit) and is_routing_or_dead(SUnit_Ger_S2_02.unit) end, 
		0, 
		function()
			TF_unit_max_casualties(SUnit_Ger_S3_05, 0);
			SUnit_Ger_S3_05.uc:morale_behavior_default();
			bm:watch(
				function() return is_routing_or_dead(SUnit_Ger_S3_05.unit) end, 
				0, 
				function() 
					SUnit_Rom_01.uc:halt(); 
					SUnit_Rom_02.uc:halt(); 
					SUnit_Rom_01.uc:release_control(); 
					SUnit_Rom_02.uc:release_control(); 
				end
			);
		end
	);
		
	bm:watch(function() return BOOL_S2_Second_Attack_Started end, 0, function() DEMO_Setup_Roman_Army_S1_Evac() end);
end;


function DEMO_Setup_Roman_Army_S1_Evac(count)

	-- abandon S1 Romans
	DEMO_Abandon_S1_Romans();
	
	-- mid S3 units
	TF_unit_max_casualties(SUnit_Ger_S3_03, 0);
	TF_unit_max_casualties(SUnit_Ger_S3_04, 0);
	unit_rout_on_casualties(SUnit_Ger_S3_03, 0.6);
	unit_rout_on_casualties(SUnit_Ger_S3_04, 0.6);
	
	bm:callback(
		function()
			-- S3 blockage units
			TF_unit_max_casualties(SUnit_Ger_S3_01, 0);
			TF_unit_max_casualties(SUnit_Ger_S3_02, 0);
			unit_rout_on_casualties(SUnit_Ger_S3_01, 0.65);
			unit_rout_on_casualties(SUnit_Ger_S3_02, 0.65);

			kill_over_time(SUnit_Ger_S3_01, 15);
			kill_over_time(SUnit_Ger_S3_02, 15);
			kill_over_time(SUnit_Ger_S3_03, 15);
			kill_over_time(SUnit_Ger_S3_04, 15);
		
			-- something for the cav to chew on
			SUnit_Ger_S3_27.uc:morale_behavior_fearless();
			TF_unit_max_casualties(SUnit_Ger_S3_27, 0.7);
			unit_rout_on_casualties(SUnit_Ger_S3_27, 0.5);
			bm:watch(
				function() return BOOL_Mid_Attack_Prepped end,
				0, 
				function()
					SUnit_Ger_S3_27.uc:morale_behavior_default();
					TF_unit_max_casualties(SUnit_Ger_S3_27, 0);
					unit_rout_on_casualties(SUnit_Ger_S3_27, 0.6);
				end
			);
		end,
		5000
	);	
	
	bm:watch(function() return BOOL_Mid_Attack_Launched end, 0, function() DEMO_Setup_Roman_Army_Mid_Attack() end);
end;


function DEMO_Abandon_S1_Romans(count)
	count = count or 0;
	
	if count == 0 then
		bm:out("DEMO_Abandon_S1_Romans() starting");
	end;
	
	if count == 5 then
		bm:out("DEMO_Abandon_S1_Romans() finished");
		
		return;
	end;
	
	local rom_cas_rate = 0.65;
	
	if BOOL_Short_Battle then
		rom_cas_rate = 0.5;
	end;
	
	for i = 1, #Rom_Sunits do
		if Area_S1:is_in_area(Rom_Sunits[i].unit) then
			TF_unit_max_casualties(Rom_Sunits[i], 0, true);
			-- nasty
			kill_over_time(Rom_Sunits[i], 5, 0.2);
		else
			TF_unit_max_casualties(Rom_Sunits[i], rom_cas_rate, true);
		end;
	end;
	
	bm:callback(function() DEMO_Abandon_S1_Romans(count + 1) end, 5000, "DEMO_Abandon_S1_Romans");
end;






function DEMO_Setup_Roman_Army_Mid_Attack(count)
	bm:out("DEMO_Setup_Roman_Army_Mid_Attack() called");
	
	-- stop previous abandoning-of-Romans endeavour
	bm:remove_process("DEMO_Abandon_S1_Romans");
	
	-- start abandoning Romans in S1 and S2
	DEMO_Abandon_S1_S2_Romans();
				
	bm:watch(function() return BOOL_M1_Ambush_Launched end, 0, function() DEMO_Setup_M1_Ambush() end);
	
	bm:watch(function() return BOOL_M2_Dogs_Are_Attacking end, 0, function() DEMO_Dogs_About_To_Attack() end);
end;




function DEMO_Abandon_S1_S2_Romans(count)
	count = count or 0;

	if count == 0 then
		bm:out("DEMO_Abandon_S1_S2_Romans() starting");
	end;
	
	if count == 5 then
		bm:out("DEMO_Abandon_S1_S2_Romans() finished");
		
		return;
	end;
	
	for i = 1, #Rom_Sunits do
		if Area_S1:is_in_area(Rom_Sunits[i].unit) or Area_S2:is_in_area(Rom_Sunits[i].unit) then
			TF_unit_max_casualties(Rom_Sunits[i], 0, true);
		else
			-- postpone reduction in casualty cap so we can do it when the dogs are upon us
			Rom_Sunits[i].TF_is_in_mid_section = true;
		end;
	end;
	
	bm:callback(function() DEMO_Abandon_S1_Romans(count + 1) end, 5000, "DEMO_Abandon_S1_Romans");
end;



function DEMO_Dogs_About_To_Attack()
	bm:out("DEMO_Dogs_About_To_Attack() called");
	
	local rom_cas_rate = 0.55;
	
	if BOOL_Short_Battle then
		rom_cas_rate = 0;
	end;
	
	bm:callback(
		function()
			for i = 1, #Rom_Sunits do
				local current_sunit = Rom_Sunits[i];
				
				if current_sunit.TF_is_in_mid_section then
					TF_unit_max_casualties(current_sunit, rom_cas_rate, true);
				end;
			end;
		end,
		100
	);
end;









function DEMO_Setup_M1_Ambush()
	bm:out("DEMO_Setup_M1_Ambush() called");
	
	-- find out who tripped the ambush
	local ambush_sunit = get_closest_sunit(Rom_Sunits, SUnit_Ger_M1_02.unit:position());
	
	if ambush_sunit == SUnit_Rom_02 then
		TF_unit_max_casualties(SUnit_Rom_02, 0, true);
		bm:callback(
			function() 
				bm:out("Beginning to kill Rom_02 now");
				SUnit_Rom_02.tf_is_dying = true;
				kill_over_time(SUnit_Rom_02, 20, 0);
			end, 
			15000
		);
	else
		bm:out("Ambush wasn't triggered by Rom_02, it was triggered by " .. ambush_sunit.name .. " - eek!");
	end;
	
	bm:callback(function() SUnit_Ger_M1_01.uc:morale_behavior_rout() end, 5000);
	
	
	
	bm:callback(
		function()
			unit_rout_on_casualties(SUnit_Ger_M1_02, 0.85);
			--unit_rout_on_casualties(SUnit_Ger_M1_03, 0.75);
		end, 
		20000
	);
end;




bm:watch(function() return BOOL_Blockade_Started end, 0, function() DEMO_Setup_Roman_Army_Blockade() end)

function DEMO_Setup_Roman_Army_Blockade()
	if not BOOL_M3_Second_Attack_Started then
		-- we have skipped here
		bm:out("Killing portion of Roman army");
		
		for i = 1, #Rom_Sunits do
			Rom_Sunits[i].uc:set_invincible(false);
		end;
		
		kill_unit_proportion(SUnit_Rom_01.unit, 0.6, true);
		kill_unit_proportion(SUnit_Rom_02.unit, 1, true);
		kill_unit_proportion(SUnit_Rom_03.unit, 0.6, true);
		kill_unit_proportion(SUnit_Rom_04.unit, 0.6, true);
		kill_unit_proportion(SUnit_Rom_05.unit, 0.6, true);
		kill_unit_proportion(SUnit_Rom_06.unit, 0.6, true);
		kill_unit_proportion(SUnit_Rom_07.unit, 0.6, true);
		kill_unit_proportion(SUnit_Rom_08.unit, 0.6, true);
		kill_unit_proportion(SUnit_Rom_09.unit, 0.6, true);
		kill_unit_proportion(SUnit_Rom_10.unit, 1, true);
		kill_unit_proportion(SUnit_Rom_11.unit, 1, true);
	end;
	
	-- delay rest of setup
	bm:callback(function() DEMO_Finish_Setup_Roman_Army_Blockade() end, 500);
end;


function DEMO_Finish_Setup_Roman_Army_Blockade()
	local rom_cas_rate = 0.45;
	
	if BOOL_Short_Battle then
		rom_cas_rate = 0;
	end;

	for i = 1, #Rom_Sunits do
		local current_sunit = Rom_Sunits[i];
	
		TF_unit_max_casualties(current_sunit, rom_cas_rate, true);
		
		bm:watch(
			function() return is_close_to_position(Berserker_Units, current_sunit.unit:position(), 50, true, true) end,
			0,
			function() DEMO_Roman_Unit_Abandoned_To_Berserkers(current_sunit) end
		);
	end;
	
	TF_unit_max_casualties(SUnit_Ger_F1_01, 0.8);
	TF_unit_max_casualties(SUnit_Ger_F1_02, 0.8);
	TF_unit_max_casualties(SUnit_Ger_F1_03, 0.8);
	TF_unit_max_casualties(SUnit_Ger_F1_04, 0.8);
		
	bm:watch(function() return BOOL_Berserker_Attack_Started end, 0, function() DEMO_Setup_Berserker_Attack_Start() end);	
	
	bm:watch(function() return BOOL_Final_Attack_01_Started end, 0, function() DEMO_Setup_Roman_Army_Final_Attack_01() end);
end;


function DEMO_Roman_Unit_Abandoned_To_Berserkers(sunit)
	bm:out(sunit.name .. " is close to the Berserkers");

	TF_unit_max_casualties(sunit, 0, true);
	
	bm:repeat_callback(
		function() 
			if is_close_to_position(Berserker_Units, sunit.unit:position(), 20, true, true) then
				kill_unit_proportion(sunit.unit, 0.2);
			end;
		end,
		3000
	);
end;




function DEMO_Setup_Berserker_Attack_Start()
	bm:callback(
		function() 
			TF_unit_max_casualties(SUnit_Ger_F1_01, 0);
			TF_unit_max_casualties(SUnit_Ger_F1_02, 0);
			TF_unit_max_casualties(SUnit_Ger_F1_03, 0);
			TF_unit_max_casualties(SUnit_Ger_F1_04, 0);
		end,
		10000
	);
end;


function DEMO_Setup_Roman_Army_Final_Attack_01()
	local rom_cas_rate = 0.4;
	
	if BOOL_Short_Battle then
		rom_cas_rate = 0;
	end;
	
	for i = 1, #Rom_Sunits do
		local current_sunit = Rom_Sunits[i];
		
		if not current_sunit.tf_is_abandoned then
			TF_unit_max_casualties(current_sunit, rom_cas_rate, true);
		end;
	end;
	
	bm:watch(function() return BOOL_Final_Attack_02_Started end, 0, function() DEMO_Setup_Roman_Army_Final_Attack_02() end);
end;


function DEMO_Setup_Roman_Army_Final_Attack_02()
	local rom_cas_rate = 0.32;
	
	if BOOL_Short_Battle then
		rom_cas_rate = 0;
	end;

	for i = 1, #Rom_Sunits do
		local current_sunit = Rom_Sunits[i];
		
		if not current_sunit.tf_is_abandoned then
			TF_unit_max_casualties(current_sunit, rom_cas_rate, true);
		end;
	end;
	
	bm:watch(function() return BOOL_Final_Attack_03_Started end, 0, function() DEMO_Setup_Roman_Army_Final_Attack_03() end);
end;


function DEMO_Setup_Roman_Army_Final_Attack_03()
	local rom_cas_rate = 0.25;
	
	if BOOL_Short_Battle then
		rom_cas_rate = 0;
	end;

	for i = 1, #Rom_Sunits do
		local current_sunit = Rom_Sunits[i];
		
		if not current_sunit.tf_is_abandoned then
			TF_unit_max_casualties(current_sunit, rom_cas_rate, true);
		end;
	end;
end;






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\tf_teutoburg_forest\tf_main.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	MAIN BATTLE SCRIPT
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

-- called at start of deployment phase
function Deployment_Phase()
	bm:out("Battle is in deployment phase");
	
	-- prevent Roman units from rallying deep in the forest, as that screws everything up
	Prevent_Rallying(Rom_Sunits, true);

	UC_Rom_All:change_behaviour_active("defend", true);
	UC_Rom_All:change_behaviour_active("fire_at_will", false);
		
	Hide_Units(UC_Ger_01_All);
	Hide_Units(UC_Ger_02_All);
	Hide_Units(UC_Ger_03_All);
end;


-- end of deployment phase i.e. battle start
function End_Deployment_Phase()
		
	-- launch cutscene, or straight into battle without it
	Play_Cutscene_Intro();
	--Start_Battle_No_Cutscene();
end;


function Start_Battle_No_Cutscene()
	cam:fade(false, 0.5);
	
	bm:enable_cinematic_ui(false, true, false);
	
	Start_Battle();
end;


BOOL_Battle_Started = false;
BOOL_Dont_Play_Early_Advice = false;

-- the interactive battle has started
function Start_Battle()
	bm:out("Battle is Starting");

	if bm:is_benchmarking_mode() then
		bm:out("Ending benchmark mode");
		bm:end_benchmark();
	end;

	BOOL_Battle_Started = true;
	
	bm:set_volume(VOLUME_TYPE_SFX, 100);
	
	-- rehide some Germans that were revealed in the cutscene
	SUnit_Ger_M3_01.uc:set_always_visible_to_all(false);
	SUnit_Ger_M3_02.uc:set_always_visible_to_all(false);
	SUnit_Ger_M3_03.uc:set_always_visible_to_all(false);
	SUnit_Ger_M3_04.uc:set_always_visible_to_all(false);
			
	--start rout manager
	bm:start_rout_manager(1);
	
	-- register victory and defeat VO callbacks
	bm:setup_victory_callback(function() Battle_Is_Ending() end);
					
	-- as there are additional Roman units for cinematics, we need to "destroy" these if the main Roman army routs
	bm:repeat_callback(function() Roman_Routing_Check() end, 3000, "Roman_Routing_Check");
	
	-- must be time offset
	bm:callback(function() Start_Initial_Attack() end, 1000);
	
	-- fireballs at start
	Launch_Initial_Fireballs();
	
	-- secondary fireballs
	bm:callback(function() Launch_Secondary_Fireballs() end, 2000);
	
	-- mid-cutscene position-marker
	bm:add_ping_icon(-60, 30, 175, 2, false);
	
	-- halt Roman army
	-- bm:callback(function() UC_Rom_All:halt(); UC_Rom_All:release_control() end, 1000);
	
	-- trigger advisor
	bm:callback(
		function() 
			if not BOOL_Dont_Play_Early_Advice then
				bm:queue_advisor("Rom.HB.TF_Gameplay_01", 10000);
				bm:callback(function() bm:stop_advisor_queue() end, 12000);
			end;
		end, 
		5000
	);
	
	-- trigger ambush sounds
	SUnit_Rom_07.uc:trigger_sound_vo("battle_vo_teutoburg_ambushed");
	bm:callback(function() SUnit_Rom_06.uc:trigger_sound_vo("battle_vo_teutoburg_under_attack_fireballs") end, 2000);
	bm:callback(function() SUnit_Rom_07.uc:trigger_sound_vo("battle_vo_teutoburg_under_attack_fireballs") end, 3000);
	
	-- Varus should not rout
	SUnit_Rom_01.uc:morale_behavior_fearless();
	SUnit_Rom_01.uc:release_control();
	
	stop_sound(SFX_TF_Group_Taunt_Mid);
	
	-- ambient barbarian taunts
	bm:out("SFX_TF_Group_Taunt_Mid is " .. tostring(SFX_TF_Group_Taunt_Mid));
	Start_Ambient_Taunts(Taunts_S_Mid, SFX_TF_Group_Taunt_Mid);
	bm:out("SFX_TF_Group_Taunt_Far is " .. tostring(SFX_TF_Group_Taunt_Far));
	Start_Ambient_Taunts(Taunts_S_Far, SFX_TF_Group_Taunt_Far);
	bm:out("SFX_TF_Dog_Taunt is " .. tostring(SFX_TF_Dog_Taunt));
	Start_Ambient_Taunts(Dogs_S_Far, SFX_TF_Dog_Taunt);
		
	bm:callback(function() Start_Objectives() end, 15000);
	
	-- watch for Varus dying
	bm:watch(function() return not Army_Rom:is_commander_alive() end, 0, function() Battle_Is_Ending() end, "Varus_Death_Watch");	
	
	-- bm:callback(function() Prepare_To_Start_Arm_Appearance() end, 8000);
	-- bm:callback(function() Forest_Escaped() end, 8000);
end;

BOOL_Battle_Is_Ending = false;

-- the game has gone to victory countdown phase, someone has won
function Battle_Is_Ending()
	if not BOOL_Battle_Is_Ending then
		BOOL_Battle_Is_Ending = true;
		
		bm:remove_process("Forest_Escaped_Monitor");
		
		if Count_Eagle_Units_Standing == 0 or BOOL_All_Romans_Routing or is_routing_or_dead(Alliance_Rom) then
			-- all Eagles lost // army destroyed
			
			fail_objective("Rom.HB.TF.Objective_01");
			
			if BOOL_Blockade_Started then
				bm:queue_advisor("Rom.HB.TF_Battle_Lost_02", 10000);
			else
				bm:queue_advisor("Rom.HB.TF_Battle_Lost_01", 10000);
			end;
			
			bm:callback(function() Lose_Battle() end, 11000);
		
		elseif not Army_Rom:is_commander_alive() and not BOOL_Arminius_Appearance_Started then
			-- varus is dead when it matters
			bm:out("Varus is dead");
			
			fail_objective("Rom.HB.TF.Objective_03");
			
			-- Varus has fallen! Every man for himself! Run for your lives!
			bm:stop_advisor_queue();
			bm:queue_advisor("Rom.HB.TF_Battle_Lost_03", 12000);
			
			bm:callback(function() Lose_Battle() end, 12000);
		
		else
			bm:out("Player has won !");
			bm:end_battle();
		end;
	end;
end;



function Lose_Battle()
	bm:advice_cease();
	UC_Rom_All:morale_behavior_rout();
	SUnit_Rom_Var.uc:change_enabled(true);
	SUnit_Rom_Var.uc:set_invisible_to_all(false);
	SUnit_Rom_Var.uc:kill();
	SUnit_Rom_Var.uc:set_invisible_to_all(true);
	bm:end_battle();
end;








Count_Eagle_Units = 3;
Count_Eagle_Units_Standing = 3;

function Start_Objectives()
	-- show initial objectives
	set_objective("Rom.HB.TF.Objective_03");
	set_objective("Rom.HB.TF.Objective_01");
	
	Update_Eagle_Objective();
	
	-- watch for Eagle units routing
	for i = 1, #Rom_Eagle_Sunits do
		local curr_sunit = Rom_Eagle_Sunits[i];
		bm:watch(function() return is_routing_or_dead(curr_sunit.unit) end, 0, function() Count_Eagle_Units_Standing = Count_Eagle_Units_Standing - 1; Update_Eagle_Objective() end, "Eagle_Rout_Watch");
	end;
end;


function Update_Eagle_Objective()
	objectives:InterfaceFunction("set_info_objective", "Rom.HB.TF.Objective_02", Count_Eagle_Units_Standing, Count_Eagle_Units);
	
	if Count_Eagle_Units_Standing == 0 then
		Battle_Is_Ending()
	end;
end;





BOOL_All_Romans_Routing = false;

function Roman_Routing_Check()
	for i = 1, #Rom_Sunits do
		if not is_routing_or_dead(Rom_Sunits[i].unit) then
			return;
		end;
	end;
	
	-- all current Roman units are routing!
	bm:out("All Roman units are routing!");
	
	bm:remove_process("Roman_Routing_Check");
		
	BOOL_All_Romans_Routing = true;
	
	Battle_Is_Ending();
end;












BOOL_Initial_Fireballs_Launched = false;

function Launch_Initial_Fireballs()
	if BOOL_Initial_Fireballs_Launched then
		return;
	end;

	BOOL_Initial_Fireballs_Launched = true;
	
	bm:trigger_projectile_launch("fireball_teutoburg", v(451.1, 46.5, -80.7), v(450.4, 41.7, -87.4));
	bm:trigger_projectile_launch("fireball_teutoburg", v(462.8, 45.0, -82.2), v(460.0, 42.5, -89.6));
	bm:trigger_projectile_launch("fireball_teutoburg", v(482.1, 46.6, -81.1), v(480.7, 44.4, -88.4));
	bm:trigger_projectile_launch("fireball_teutoburg", v(500.0, 47.8, -84.3), v(496.8, 45.0, -92.7));
	bm:trigger_projectile_launch("fireball_teutoburg", v(521.1, 47.6, -94.4), v(515.6, 44.0, -104.3));
	
	--[[
	bm:trigger_projectile_launch("fireball_teutoburg", v(489.5, 47, -83.3), v(488, 44, -93));
	bm:callback(function() bm:trigger_projectile_launch("fireball_teutoburg", v(504.5, 47, -86.5), v(500, 44, -98)) end, 200);
	-- bm:callback(function() bm:trigger_projectile_launch("fireball_teutoburg", v(520, 48, -93), v(517, 45.5, -100)) end, 500);
	bm:callback(function() bm:trigger_projectile_launch("fireball_teutoburg", v(535, 47, -102.5), v(531, 44, -111)) end, 300);
	-- bm:callback(function() bm:trigger_projectile_launch("fireball_teutoburg", v(558, 46, -117), v(552.5, 44, -122)) end, 400);
	]]
end;

BOOL_Secondary_Fireballs_Launched = false;

function Launch_Secondary_Fireballs()
	if BOOL_Secondary_Fireballs_Launched then
		return;
	end;

	BOOL_Secondary_Fireballs_Launched = true;
	
	bm:trigger_projectile_launch("fireball_teutoburg", v(482.5, 47, -83.3), v(480, 44, -93));
	-- bm:callback(function() bm:trigger_projectile_launch("fireball_teutoburg", v(497.5, 47, -86.5), v(492, 44, -98)) end, 200);
	bm:callback(function() bm:trigger_projectile_launch("fireball_teutoburg", v(513, 48, -93), v(509, 45.5, -100)) end, 500);
	-- bm:callback(function() bm:trigger_projectile_launch("fireball_teutoburg", v(528, 47, -102.5), v(523, 44, -111)) end, 300);
	bm:callback(function() bm:trigger_projectile_launch("fireball_teutoburg", v(551, 46, -117), v(544.5, 44, -122)) end, 400);
end;



num_player_units = 0;
num_standing_player_units = 0;
num_player_units_S1 = 0;
num_player_units_S2 = 0;
num_player_units_S3 = 0;
num_player_units_M = 0;
monitor_output_string = "";
varus_zone = nil;
roman_breakout_threshold = 2;		-- number of Roman units (excl. Varus) that are allowed outside the designated playable area before the midpoint before a breakout triggers

function Monitor_Player_Positions()
		
	local varus_pos = SUnit_Rom_01.unit:position();
	
	local breakout = false;
	
	if not (Area_S1:is_in_area(varus_pos) or Area_S2:is_in_area(varus_pos) or Area_S3:is_in_area(varus_pos) or Area_M:is_in_area(varus_pos)) then
		bm:out("Varus is at " .. v_to_s(varus_pos) .. " and is outside the designated playable areas!");
		breakout = true;
	else
		num_player_units_S1 = Area_S1:standing_number_in_area(Units_Rom);
		num_player_units_S2 = Area_S2:standing_number_in_area(Units_Rom);
		num_player_units_S3 = Area_S3:standing_number_in_area(Units_Rom);
		num_player_units_M = Area_M:standing_number_in_area(Units_Rom);
		
		num_player_units = Units_Rom:count();
		num_standing_player_units = num_player_units - num_units_routing(Units_Rom);
		
		local new_output = "S1: " .. tostring(num_player_units_S1) .. " units | S2: " .. tostring(num_player_units_S2) .. " units | S3: " .. tostring(num_player_units_S3) .. " units | M: " .. tostring(num_player_units_M) .. " units | standing: " .. tostring(num_standing_player_units) .. " units";
		
		if new_output ~= monitor_output then
			monitor_output = new_output;
			bm:out("Position Update... " .. monitor_output); 
		end;
		
		if num_standing_player_units - roman_breakout_threshold > num_player_units_S1 + num_player_units_S2 + num_player_units_S3 + num_player_units_M then
			breakout = true;
		end;
	end;
	
	if breakout then
		-- we have a breakout!
		bm:out("We have a breakout! Checking this:-");
	
		for i = 1, Units_Rom:count() do			
			local unitname = "Units_Rom:item(" .. i .. ")";
			
			bm:out(unitname .. ":is_routing() is " .. tostring(Units_Rom:item(i):is_routing()) .. ", " .. unitname .. ":number_of_men_alive() is " .. tostring(Units_Rom:item(i):number_of_men_alive()) .. " and position is " .. v_to_s(Units_Rom:item(i):position()));
		end;
		
		Prepare_To_Assassinate_Varus();
		return;
	else
		-- cache where Varus is so we can work out later what zone he's just left
		if Area_S1:is_in_area(varus_pos) then
			varus_zone = Area_S1;
		elseif Area_S2:is_in_area(varus_pos) then
			varus_zone = Area_S2;
		elseif Area_S3:is_in_area(varus_pos) then
			varus_zone = Area_S3;
		elseif Area_M:is_in_area(varus_pos) then
			varus_zone = Area_M;
		end;
	end;
		
	bm:callback(function() Monitor_Player_Positions(true) end, 3300, "Player_Position_Monitor");
end;


function Prepare_To_Assassinate_Varus()
	bm:out("Prepare_To_Assassinate_Varus() called");
	
	-- work out where Varus was
	if varus_zone == Area_S1 then
		bm:out("\tVarus was in Area_S1");
		Teleport_Varus_Assassins_Into_Place(Ger_Teleport_Assassins, S1_Assassin_Positions);
	elseif varus_zone == Area_S2 then
		bm:out("\tVarus was in Area_S2");
		Teleport_Varus_Assassins_Into_Place(Ger_Teleport_Assassins, S2_Assassin_Positions);
	elseif varus_zone == Area_S3 then
		bm:out("\tVarus was in Area_S3");
		Teleport_Varus_Assassins_Into_Place(Ger_Teleport_Assassins, S3_Assassin_Positions);
	elseif varus_zone == Area_M then
		bm:out("\tVarus was in Area_M");
		Teleport_Varus_Assassins_Into_Place(Ger_Teleport_Assassins, M_Assassin_Positions);
	else
		bm:out("\tCan't work out where Varus was :? Killing him immediately");
		Units_Rom:kill_commander();
		return;
	end;
		
	-- watch for varus' unit taking casualties, and kill him when they do
	cache_health(SUnit_Rom_01);
	
	bm:watch(function() return has_taken_casualties(SUnit_Rom_01) end, 0, function() Units_Rom:kill_commander() end, "Assassinate_Varus");
	
	-- failsafe
	bm:callback(
		function()
			bm:out("Killing Varus outright as he doesn't seem to have died to missile fire");
			bm:remove_process("Assassinate_Varus");
			Units_Rom:kill_commander() 
		end, 
		20000, 
		"Assassinate_Varus"
	);
end;


function Teleport_Varus_Assassins_Into_Place(assassins, positions)
	for i = 1, #assassins do
		local curr_assassin = assassins[i];
		local curr_position = positions[i];
		
		bm:out("\t\tTeleporting Varus assassin " .. curr_assassin.name .. " to " .. v_to_s(curr_position.pos) .. ", bearing " .. tostring(curr_position.bearing) .. ", width " .. tostring(curr_position.width));
		curr_assassin.uc:change_enabled(true);
		curr_assassin.uc:set_invisible_to_all(false);
		curr_assassin.uc:teleport_to_location(curr_position.pos, curr_position.bearing, curr_position.width);
		curr_assassin.uc:attack_unit(SUnit_Rom_01.unit, true, true);
	end;
end;











function Start_Initial_Attack()
	bm:callback(function() Start_S1_Attack() end, 25000, "Initial_Attack");
	
	bm:callback(function() Start_S2_Attack() end, 5000, "Initial_Attack");
	
	bm:callback(function() Start_S3_Attack("standard timeout") end, 5000, "Initial_Attack");
	
	Monitor_Player_Positions();
	
	bm:watch(function() return num_player_units_M > 0 end, 0, function() Start_Mid_Attack() end);
end;


POS_Ger_S1_03 = v(675.68, -271.97);
POS_Ger_S1_04 = v(681.18, -318.85);


function Start_S1_Attack()
	--[[
	unit_rout_on_casualties(SUnit_Ger_S1_01, 0.4);
	unit_rout_on_casualties(SUnit_Ger_S1_02, 0.4);
	unit_rout_on_casualties(SUnit_Ger_S1_03, 0.4);
	unit_rout_on_casualties(SUnit_Ger_S1_04, 0.4);
	unit_rout_on_casualties(SUnit_Ger_S1_05, 0.4);
	unit_rout_on_casualties(SUnit_Ger_S1_06, 0.4);
	unit_rout_on_casualties(SUnit_Ger_S1_07, 0.4);
	unit_rout_on_casualties(SUnit_Ger_S1_08, 0.4);
	]]

	Show_Units(SUnit_Ger_S1_01.uc);
	Show_Units(SUnit_Ger_S1_02.uc);
	Show_Units(SUnit_Ger_S1_03.uc);
	
	Train_On_Closest_Enemy(SUnit_Ger_S1_01, Units_Rom, Units_Rom, false, 150, 60000);
	Train_On_Closest_Enemy(SUnit_Ger_S1_02, Units_Rom, Units_Rom, false, 150, 60000);
	Train_On_Closest_Enemy(SUnit_Ger_S1_03, Units_Rom, Units_Rom, false, 150, 60000);
	
	play_sound(SUnit_Ger_S1_02.unit:position(), SFX_TF_Group_Response_L);
	
	bm:callback(
		function()
			Show_Units(SUnit_Ger_S1_04.uc);
			
			SUnit_Ger_S1_04.uc:goto_location_angle_width(POS_Ger_S1_03, r_to_d(-1.95), 42.8, true);
			play_sound(SUnit_Ger_S1_04.unit:position(), SFX_TF_Group_Response_S);
			
			bm:watch(
				function() return SUnit_Ger_S1_04.unit:position():distance_xz(POS_Ger_S1_03) < 10 end,
				0,
				function() Train_On_Closest_Enemy(SUnit_Ger_S1_04, Units_Rom, false, 150, 60000) end
			)
		end,
		5000
	);
				
	bm:callback(
		function()
			Show_Units(SUnit_Ger_S1_05.uc);
	
			SUnit_Ger_S1_05.uc:goto_location_angle_width(POS_Ger_S1_04, r_to_d(-1.45), 46.2, true);
			play_sound(SUnit_Ger_S1_05.unit:position(), SFX_TF_Group_Response_S);
			
			bm:watch(
				function() return SUnit_Ger_S1_05.unit:position():distance_xz(POS_Ger_S1_04) < 10 end,
				0,
				function() Train_On_Closest_Enemy(SUnit_Ger_S1_05, Units_Rom, false, 250, 60000) end
			)
		end,
		10000
	);
	
	-- Roman response sound
	-- bm:callback(function() SUnit_Rom_10.uc:trigger_sound_vo("ambushed") end, 2000);
	
	bm:callback(function() Show_Units(SUnit_Ger_S1_06.uc); play_sound(SUnit_Ger_S1_06.unit:position(), SFX_TF_Group_Response_S); Train_On_Closest_Enemy(SUnit_Ger_S1_06, Units_Rom, true) end, 3000);
	bm:callback(function() Show_Units(SUnit_Ger_S1_07.uc); play_sound(SUnit_Ger_S1_07.unit:position(), SFX_TF_Group_Response_M); Train_On_Closest_Enemy(SUnit_Ger_S1_07, Units_Rom, false, 200, 60000) end, 7000);
	bm:callback(function() Show_Units(SUnit_Ger_S1_08.uc); play_sound(SUnit_Ger_S1_08.unit:position(), SFX_TF_Group_Response_S); Train_On_Closest_Enemy(SUnit_Ger_S1_08, Units_Rom, false, 200, 60000) end, 9000);
	bm:callback(function() Show_Units(SUnit_Ger_S1_09.uc); play_sound(SUnit_Ger_S1_06.unit:position(), SFX_TF_Group_Response_M); Train_On_Closest_Enemy(SUnit_Ger_S1_09, Units_Rom, true) end, 8000);
	bm:callback(function() Show_Units(SUnit_Ger_S1_10.uc); play_sound(SUnit_Ger_S1_10.unit:position(), SFX_TF_Group_Response_M); Train_On_Closest_Enemy(SUnit_Ger_S1_10, Units_Rom, false, 200, 60000) end, 12000);
	bm:callback(function() Show_Units(SUnit_Ger_S1_11.uc); Train_On_Closest_Enemy(SUnit_Ger_S1_11, Units_Rom, false, 200, 60000) end, 13000);
end;


function Retreat_S1_Attack()
	bm:out("Retreat_S1_Attack() called");
	
	Stop_Train(SUnit_Ger_S1_01);
	Stop_Train(SUnit_Ger_S1_02);
	Stop_Train(SUnit_Ger_S1_03);
	Stop_Train(SUnit_Ger_S1_04);
	Stop_Train(SUnit_Ger_S1_05);
	Stop_Train(SUnit_Ger_S1_06);
	Stop_Train(SUnit_Ger_S1_07);
	Stop_Train(SUnit_Ger_S1_08);
	Stop_Train(SUnit_Ger_S1_09);
	Stop_Train(SUnit_Ger_S1_10);
	
	PM_Ger_S1_01_Exit:start();
	PM_Ger_S1_02_Exit:start();
	PM_Ger_S1_03_Exit:start();
	PM_Ger_S1_04_Exit:start();
	PM_Ger_S1_05_Exit:start();
	PM_Ger_S1_06_Exit:start();
	PM_Ger_S1_07_Exit:start();
	PM_Ger_S1_08_Exit:start();
	PM_Ger_S1_09_Exit:start();
	PM_Ger_S1_10_Exit:start();
	PM_Ger_S1_11_Exit:start();
end;


BOOL_S2_Attack_Started = false;

POS_Ger_S2_01 = v(556, -181);
POS_Ger_S2_02 = v(512, -157);

function Start_S2_Attack()
	bm:out("Starting S2 boulders");
	
	if BOOL_S2_Attack_Started then
		return false;
	end;
	
	BOOL_S2_Attack_Started = true;

	unit_rout_on_casualties(SUnit_Ger_S2_01, 0.5);
	unit_rout_on_casualties(SUnit_Ger_S2_02, 0.5);
	unit_rout_on_casualties(SUnit_Ger_S2_03, 0.75);
	unit_rout_on_casualties(SUnit_Ger_S2_04, 0.75);
	unit_rout_on_casualties(SUnit_Ger_S2_05, 0.75);
	unit_rout_on_casualties(SUnit_Ger_S2_06, 0.75);
	
	-- trigger push-forward advisor
	bm:watch(
		function() return is_routing_or_dead(SUnit_Ger_S2_01.unit) or 
			is_routing_or_dead(SUnit_Ger_S2_02.unit) or 
			is_routing_or_dead(SUnit_Ger_S3_01.unit) or 
			is_routing_or_dead(SUnit_Ger_S3_02.unit) or
			is_routing_or_dead(SUnit_Ger_S3_03.unit) or
			is_routing_or_dead(SUnit_Ger_S3_04.unit) or
			is_routing_or_dead(SUnit_Ger_S3_05.unit)
		end,
		0,
		function()
			bm:callback(
				function() 
					if not BOOL_Dont_Play_Early_Advice and not BOOL_Battle_Is_Ending then
						bm:queue_advisor("Rom.HB.TF_Gameplay_02", 10000);
						bm:callback(function() bm:stop_advisor_queue() end, 12000);
					end;
				end,
				10000
			);
		end
	);
	
	-- units on brow of hill respond to attacks
	PM_Ger_S2_03_Start:start();
	PM_Ger_S2_04_Start:start();
	PM_Ger_S2_05_Start:start();
	PM_Ger_S2_06_Start:start();
	
	-- send initial units in to attack
	Show_Units(SUnit_Ger_S2_01.uc);
	play_sound(SUnit_Ger_S2_01.unit:position(), SFX_TF_Group_Response_M);
	SUnit_Ger_S2_01.uc:goto_location_angle_width(POS_Ger_S2_01, r_to_d(-2.21), 35, true);
	bm:watch(
		function() return SUnit_Ger_S2_01.unit:position():distance_xz(POS_Ger_S2_01) < 10 end,
		0,
		function() Train_On_Closest_Enemy(SUnit_Ger_S2_01, Units_Rom, false, 150, 60000) end
	);

	Show_Units(SUnit_Ger_S2_02.uc);
	bm:callback(function() SUnit_Ger_S2_02.uc:goto_location_angle_width(POS_Ger_S2_02, r_to_d(-2.6), 35, true) end, 5000);
	bm:watch(
		function() return SUnit_Ger_S2_02.unit:position():distance_xz(POS_Ger_S2_02) < 10 end,
		0,
		function() Train_On_Closest_Enemy(SUnit_Ger_S2_02, Units_Rom, true) end
	);
	
	-- when less than six standing units are in S1 and S2, start S2 second attack
	bm:watch(function() return num_player_units_S1 + num_player_units_S2 < 6 end, 15000, function() Start_S2_Second_Attack() end);
end;



BOOL_S2_Second_Attack_Started = false;

function Start_S2_Second_Attack()
	if BOOL_S2_Second_Attack_Started then
		return;
	end;
	
	BOOL_S2_Second_Attack_Started = true;

	bm:out("Starting S2 second attack");
	
	PM_Ger_S2_03:start();
	PM_Ger_S2_04:start();
	play_sound(SUnit_Ger_S2_03.unit:position(), SFX_TF_Group_Response_M);
	bm:callback(function() play_sound(SUnit_Ger_S2_05.unit:position(), SFX_TF_Group_Response_S); PM_Ger_S2_05:start() end, 20000);
	bm:callback(function() play_sound(SUnit_Ger_S2_06.unit:position(), SFX_TF_Group_Response_S); PM_Ger_S2_06:start() end, 30000);
	
	-- S3 second attack probably already happened by now but if not, fire it off
	Start_S3_Second_Attack();
end;


function Retreat_S2_Attack()
	bm:out("Retreat_S2_Attack() called");

	PM_Ger_S2_03:stop();
	PM_Ger_S2_04:stop();
	PM_Ger_S2_05:stop();
	PM_Ger_S2_06:stop();
	
	Stop_Train(SUnit_Ger_S2_03);
	Stop_Train(SUnit_Ger_S2_04);
	Stop_Train(SUnit_Ger_S2_05);
	Stop_Train(SUnit_Ger_S2_06);

	PM_Ger_S2_01_Exit:start();
	PM_Ger_S2_02_Exit:start();
	PM_Ger_S2_03_Exit:start();
	PM_Ger_S2_04_Exit:start();
	PM_Ger_S2_05_Exit:start();
	PM_Ger_S2_06_Exit:start();
end;


POS_Ger_S3_01 = v(293.96, -43.93);
POS_Ger_S3_02 = v(283.38, -58.5);

BOOL_S3_Attack_Started = false;

function Start_S3_Attack(reason)
	if BOOL_S3_Attack_Started then
		return;
	end;
	
	bm:out("Starting S3 Attack, reason is " .. tostring(reason));
	
	BOOL_S3_Attack_Started = true;	

	unit_rout_on_casualties(SUnit_Ger_S3_01, 0.55);
	unit_rout_on_casualties(SUnit_Ger_S3_02, 0.55);
	unit_rout_on_casualties(SUnit_Ger_S3_03, 0.55);
	unit_rout_on_casualties(SUnit_Ger_S3_04, 0.55);
	unit_rout_on_casualties(SUnit_Ger_S3_05, 0.8);
	unit_rout_on_casualties(SUnit_Ger_S3_16, 0.85);
	unit_rout_on_casualties(SUnit_Ger_S3_17, 0.85);
	unit_rout_on_casualties(SUnit_Ger_S3_18, 0.75);
	unit_rout_on_casualties(SUnit_Ger_S3_19, 0.75);
	unit_rout_on_casualties(SUnit_Ger_S3_07, 0.75);
	unit_rout_on_casualties(SUnit_Ger_S3_08, 0.75);
	unit_rout_on_casualties(SUnit_Ger_S3_25, 0.75);
	unit_rout_on_casualties(SUnit_Ger_S3_26, 0.75);
	unit_rout_on_casualties(SUnit_Ger_S3_27, 0.75);
	unit_rout_on_casualties(SUnit_Ger_S3_11, 0.75);
	unit_rout_on_casualties(SUnit_Ger_S3_12, 0.75);
	unit_rout_on_casualties(SUnit_Ger_S3_13, 0.75);
	unit_rout_on_casualties(SUnit_Ger_S3_14, 0.75);

	-- Front attack #1
	Show_Units(SUnit_Ger_S3_01.uc);	
	play_sound(SUnit_Ger_S3_01.unit:position(), SFX_TF_Group_Response_S);
	SUnit_Ger_S3_01.uc:goto_location_angle_width(POS_Ger_S3_01, r_to_d(2.2), 16, true);
	bm:watch(
		function() return SUnit_Ger_S3_01.unit:position():distance_xz(POS_Ger_S3_01) < 10 end,
		5000,
		function() Train_On_Closest_Enemy(SUnit_Ger_S3_01, Units_Rom, true) end
	);
	
	-- Front attack #2
	Show_Units(SUnit_Ger_S3_02.uc);	
	play_sound(SUnit_Ger_S3_01.unit:position(), SFX_TF_Group_Response_M);
	SUnit_Ger_S3_02.uc:goto_location_angle_width(POS_Ger_S3_02, r_to_d(2.2), 16, true);
	bm:watch(
		function() return SUnit_Ger_S3_02.unit:position():distance_xz(POS_Ger_S3_02) < 10 end,
		5000,
		function() Train_On_Closest_Enemy(SUnit_Ger_S3_02, Units_Rom, true) end
	);
	
	-- Side attack
	bm:callback(
		function() 
			Show_Units(SUnit_Ger_S3_03.uc); 
			Show_Units(SUnit_Ger_S3_04.uc); 
			Show_Units(SUnit_Ger_S3_05.uc);
		end, 
		5000
	);
	
	bm:callback(
		function()
			play_sound(SUnit_Ger_S3_03.unit:position(), SFX_TF_Group_Response_M);
			play_sound(SUnit_Ger_S3_04.unit:position(), SFX_TF_Group_Response_M);
			Train_On_Closest_Enemy(SUnit_Ger_S3_03, Units_Rom, true);
			Train_On_Closest_Enemy(SUnit_Ger_S3_04, Units_Rom, true);
			
			PM_Ger_S3_05:start();
			play_sound(SUnit_Ger_S3_05.unit:position(), SFX_TF_Group_Response_M);
		end, 
		8000
	);

	-- Blockage to Mid section
	bm:callback(
		function()
			Show_Units(SUnit_Ger_S3_16.uc);
			Show_Units(SUnit_Ger_S3_17.uc);
			play_sound(SUnit_Ger_S3_16.unit:position(), SFX_TF_Group_Response_M);
			PM_Ger_S3_16:start();
			PM_Ger_S3_17:start();
			bm:watch(function() return is_routing_or_dead(SUnit_Ger_S3_16.unit) and is_routing_or_dead(SUnit_Ger_S3_17.unit) end, 5000, function() Prep_Mid_Attack() end);
		end,
		15000
	);
	
	bm:callback(function() Show_Units(SUnit_Ger_S3_07.uc); SUnit_Ger_S3_07.uc:goto_location(v(338, -154), true) end, 10000);
	bm:callback(function() Show_Units(SUnit_Ger_S3_08.uc); SUnit_Ger_S3_08.uc:goto_location(v(285, -93), true) end, 12000);
	
	-- Roman response sounds
	-- bm:callback(function() SUnit_Rom_01.uc:trigger_sound_vo("ambushed") end, 2000);
	-- bm:callback(function() SUnit_Rom_03.uc:trigger_sound_vo("ambushed") end, 3000);
	
	-- when the initial unit the player's cavalry attacks routs, tip some more units in
	bm:watch(
		function() 
			return is_routing_or_dead(SUnit_Ger_S3_01.unit) or
				is_routing_or_dead(SUnit_Ger_S3_02.unit) or
				is_routing_or_dead(SUnit_Ger_S3_03.unit) or
				is_routing_or_dead(SUnit_Ger_S3_04.unit) or
				is_routing_or_dead(SUnit_Ger_S3_05.unit)
		end, 
		15000, 
		function() 
			Start_S3_Second_Attack() 
		end
	);
end;


BOOL_S3_To_Mid_Ambush_Revealed = false;

function Reveal_S3_To_Mid_Ambush()
	if BOOL_S3_To_Mid_Ambush_Revealed then
		return;
	end;

	BOOL_S3_To_Mid_Ambush_Revealed = true;

	bm:out("Reveal_S3_To_Mid_Ambush() called");

	Show_Units(SUnit_Ger_S3_18.uc);
	play_sound(SUnit_Ger_S3_18.unit:position(), SFX_TF_Group_Response_S);
	
	PM_Ger_S3_18:start();
	
	bm:callback(
		function()
			Show_Units(SUnit_Ger_S3_19.uc);
			PM_Ger_S3_19:start();
		end,
		30000
	);	
end;




POS_S3_East_A = v(300, -185);
POS_S3_East_B = v(360, -75);

BOOL_S3_Second_Attack_Started = false;

function Start_S3_Second_Attack()
	if BOOL_S3_Second_Attack_Started then
		return;
	end;
	
	BOOL_S3_Second_Attack_Started = true;
	
	bm:out("Starting S3 second attack");
	
	Show_Units(SUnit_Ger_S3_25.uc);
	play_sound(SUnit_Ger_S3_25.unit:position(), SFX_TF_Group_Response_S);
	PM_Ger_S3_25:start();
	
	bm:callback(
		function()
			Show_Units(SUnit_Ger_S3_26.uc);
			play_sound(SUnit_Ger_S3_26.unit:position(), SFX_TF_Group_Response_S);
			PM_Ger_S3_26:start();
		end,
		5000
	);
	
	bm:callback(
		function()
			Show_Units(SUnit_Ger_S3_27.uc);
			play_sound(SUnit_Ger_S3_27.unit:position(), SFX_TF_Group_Response_M);
			PM_Ger_S3_27:start();
		end,
		30000
	);
	
	bm:callback(
		function()
			Show_Units(SUnit_Ger_S3_28.uc);
			play_sound(SUnit_Ger_S3_28.unit:position(), SFX_TF_Group_Response_M);
			PM_Ger_S3_28:start();
		end,
		40000
	);
		
	bm:watch(function() return not has_crossed_line(Units_Rom, POS_S3_East_A, POS_S3_East_B, true) end, 45000, function() Start_S3_Third_Attack() end);
end;

POS_S3_Entering_Mid_Section_A = v(175, 35);
POS_S3_Entering_Mid_Section_B = v(160, -50);

BOOL_S3_Third_Attack_Started = false;

function Start_S3_Third_Attack()
	if BOOL_S3_Third_Attack_Started then
		return;
	end;
	
	BOOL_S3_Third_Attack_Started = true;
	
	bm:out("Starting S3 third attack");
		
	Train_On_Closest_Enemy(SUnit_Ger_S3_07, Units_Rom, false, 250, 90000);
	Train_On_Closest_Enemy(SUnit_Ger_S3_08, Units_Rom, false, 250, 90000);
	Train_On_Closest_Enemy(SUnit_Ger_S3_25, Units_Rom, false, 250, 90000);
	Train_On_Closest_Enemy(SUnit_Ger_S3_27, Units_Rom, false, 250, 90000);
		
	Show_Units(SUnit_Ger_S3_11.uc);
	Show_Units(SUnit_Ger_S3_12.uc);
	Show_Units(SUnit_Ger_S3_13.uc);
	Show_Units(SUnit_Ger_S3_14.uc);
	Train_On_Closest_Enemy(SUnit_Ger_S3_11, Units_Rom, false, 300, 180000, 0, function() return has_crossed_line(SUnit_Ger_S3_11.unit, POS_S3_Entering_Mid_Section_A, POS_S3_Entering_Mid_Section_B) end, function() PM_Ger_S3_11:start() end);
	Train_On_Closest_Enemy(SUnit_Ger_S3_12, Units_Rom, false, 300, 180000, 0, function() return has_crossed_line(SUnit_Ger_S3_12.unit, POS_S3_Entering_Mid_Section_A, POS_S3_Entering_Mid_Section_B) end, function() PM_Ger_S3_12:start() end);
	Train_On_Closest_Enemy(SUnit_Ger_S3_13, Units_Rom, false, 300, 180000, 0, function() return has_crossed_line(SUnit_Ger_S3_13.unit, POS_S3_Entering_Mid_Section_A, POS_S3_Entering_Mid_Section_B) end, function() PM_Ger_S3_13:start() end);
	Train_On_Closest_Enemy(SUnit_Ger_S3_14, Units_Rom, false, 300, 180000, 0, function() return has_crossed_line(SUnit_Ger_S3_14.unit, POS_S3_Entering_Mid_Section_A, POS_S3_Entering_Mid_Section_B) end, function() PM_Ger_S3_14:start() end);
	
	-- sounds
	play_sound(SUnit_Ger_S3_11.unit:position(), SFX_TF_Group_Response_S);
	bm:callback(function() play_sound(SUnit_Ger_S3_12.unit:position(), SFX_TF_Group_Response_M) end, 1000);
	bm:callback(function() play_sound(SUnit_Ger_S3_13.unit:position(), SFX_TF_Group_Response_L) end, 1800);
end;


function Retreat_S3_Attack()
	bm:out("Retreat_S3_Attack() called");
	
	Stop_Train(SUnit_Ger_S3_18);
	Stop_Train(SUnit_Ger_S3_19);
	Stop_Train(SUnit_Ger_S3_25);
	Stop_Train(SUnit_Ger_S3_26);
	Stop_Train(SUnit_Ger_S3_27);
	Stop_Train(SUnit_Ger_S3_28);
		
	PM_Ger_S3_18_Exit:start();
	PM_Ger_S3_19_To_Cliff:start();
	PM_Ger_S3_25_Exit:start();
	PM_Ger_S3_26_To_Cliff:start();
	PM_Ger_S3_27_Exit:start();
	PM_Ger_S3_28_To_Cliff:start();
end;



BOOL_Mid_Attack_Prepped = false;

function Prep_Mid_Attack()
	bm:out("Prepping Mid Attack");
		
	BOOL_Mid_Attack_Prepped = true;
	
	-- ambient barbarian taunts
	Start_Ambient_Taunts(Taunts_M_Mid, SFX_TF_Group_Taunt_Mid);
	
	-- set the Germans to rout if this is not a short battle
	if not BOOL_Short_Battle then		
		unit_rout_on_casualties(SUnit_Ger_M1_04, 0.9);
		unit_rout_on_casualties(SUnit_Ger_M1_05, 0.9);
		unit_rout_on_casualties(SUnit_Ger_M1_06, 0.9);
		unit_rout_on_casualties(SUnit_Ger_M1_07, 0.9);
	
		unit_rout_on_casualties(SUnit_Ger_M2_01, 0.9);
		unit_rout_on_casualties(SUnit_Ger_M2_02, 0.9);
		unit_rout_on_casualties(SUnit_Ger_M2_03, 0.9);
		unit_rout_on_casualties(SUnit_Ger_M2_04, 0.9);
		unit_rout_on_casualties(SUnit_Ger_M2_05, 0.8);
	
		unit_rout_on_casualties(SUnit_Ger_M3_01, 0.85);
		unit_rout_on_casualties(SUnit_Ger_M3_02, 0.85);
		unit_rout_on_casualties(SUnit_Ger_M3_03, 0.85);
		unit_rout_on_casualties(SUnit_Ger_M3_04, 0.85);
	end;
	
	-- unit crossing marsh
	Show_Units(SUnit_Ger_M2_05.uc);
	PM_Ger_M2_05:start();
	
	-- garrisoned units
	Show_Units(SUnit_Ger_M3_01.uc);
	Show_Units(SUnit_Ger_M3_02.uc);	
	
	PM_Ger_M3_01:start();
	bm:callback(function() PM_Ger_M3_02:start() end, 5000);
	
	bm:watch(function() return standing_is_close_to_position(Units_Rom, SUnit_Ger_M2_05.unit:position(), 20) end, 0, function() Start_Mid_Attack() end)
end;


BOOL_Mid_Attack_Launched = false;
BOOL_M1_Ambush_Launched = false;

function Start_Mid_Attack()
	if BOOL_Mid_Attack_Launched then
		return;
	end;
	
	BOOL_Mid_Attack_Launched = true;

	bm:out("Starting Mid Attack");
	
	bm:out("For reference, SUnit_Ger_M2_05 is at " .. v_to_s(SUnit_Ger_M2_05.unit:position()) .. " and closest Rom unit is at " .. v_to_s(get_closest_standing_unit(Units_Rom, SUnit_Ger_M2_05.unit:position()):position()));
	
	-- retreating previous waves
	bm:callback(function() Retreat_S1_Attack() end, 20000);
	bm:callback(function() Retreat_S2_Attack() end, 35000);	
	
	-- unit on overhang
	bm:callback(
		function() 
			Show_Units(SUnit_Ger_M1_01.uc);
			unit_rout_on_casualties(SUnit_Ger_M1_01, 0.85);
			SUnit_Ger_M1_01.uc:goto_location(v(6, -27), true)
			bm:watch(
				function() 
					return is_close_to_position(Units_Rom, SUnit_Ger_M1_01.unit:position(), 30) 
				end, 
				2000, 
				function()
					BOOL_M1_Ambush_Launched = true;
					
					Show_Units(SUnit_Ger_M1_02.uc);
					--Show_Units(SUnit_Ger_M1_03.uc);
										
					Train_On_Closest_Enemy(SUnit_Ger_M1_02, Units_Rom, true);
					--Train_On_Closest_Enemy(SUnit_Ger_M1_03, Units_Rom, true);
					
					play_sound(SUnit_Ger_M1_02.unit:position(), SFX_TF_Group_Response_L);
				end
			);
		end, 
		100
	);
	
	-- wardogs
	SUnit_Ger_M2_01.uc:melee(true);
	SUnit_Ger_M2_02.uc:melee(true);
	SUnit_Ger_M2_03.uc:melee(true);
	SUnit_Ger_M2_04.uc:melee(true);
	
	bm:callback(
		function()
			Show_Units(SUnit_Ger_M2_01.uc);
			Show_Units(SUnit_Ger_M2_02.uc);
			PM_Ger_M2_01:start();
			PM_Ger_M2_02:start();
			
			-- sounds
			bm:callback(function() play_sound(SUnit_Ger_M1_02.unit:position(), SFX_TF_Group_Response_L) end, 1000);
		end,
		5000
	);
	
	bm:callback(function() Start_M2_Second_Attack() end, 25000);
	
	-- attack through the trees
	Show_Units(SUnit_Ger_M1_04.uc);
	Show_Units(SUnit_Ger_M1_05.uc);	
	PM_Ger_M1_04:start();
	PM_Ger_M1_05:start();
	
	-- unit on top of cliff
	Show_Units(SUnit_Ger_M1_08.uc);
	
	-- sounds
	play_sound(SUnit_Ger_M1_04.unit:position(), SFX_TF_Group_Response_L);
	
	-- watch player's unit leaving S3 (to retreat attackers there)
	bm:watch(function() return num_player_units_S1 + num_player_units_S2 + num_player_units_S3 == 0 end, 0, function() Retreat_S3_Attack() end);
end;


function Start_M1_Second_Attack()
	bm:out("Starting M1 second attack");
	
	-- additional side attack
	Show_Units(SUnit_Ger_M1_06.uc);
	Show_Units(SUnit_Ger_M1_07.uc);
	PM_Ger_M1_06:start();
	PM_Ger_M1_07:start();
	
	-- sounds
	play_sound(SUnit_Ger_M1_06.unit:position(), SFX_TF_Group_Response_L);
end;


function Start_M2_Second_Attack()
	bm:out("Starting M2 second attack");
	
	Show_Units(SUnit_Ger_M2_03.uc);
	Show_Units(SUnit_Ger_M2_04.uc);
	PM_Ger_M2_03:start();
	PM_Ger_M2_04:start();
	
	-- sounds
	bm:callback(function() play_sound(SUnit_Ger_M2_03.unit:position(), SFX_TF_Group_Response_M) end, 1000);
	bm:callback(function() play_sound(SUnit_Ger_M2_04.unit:position(), SFX_TF_Group_Response_M) end, 2000);
end;


function Start_M2_Third_Attack()
	bm:out("Starting M2 third attack");
	
	Show_Units(SUnit_Ger_M2_06.uc);
	PM_Ger_M2_06:start();
end;


BOOL_M3_Second_Attack_Started = false;

POS_Arminius_Appearance_A = v(0, 150);
POS_Arminius_Appearance_B = v(-30, 110);

function Start_M3_Second_Attack()
	bm:out("Starting M3 second attack");
	
	BOOL_M3_Second_Attack_Started = true;
		
	Show_Units(SUnit_Ger_M3_03.uc);
	Show_Units(SUnit_Ger_M3_04.uc);
	
	Train_On_Closest_Enemy(SUnit_Ger_M3_03, Units_Rom, true);
	Train_On_Closest_Enemy(SUnit_Ger_M3_04, Units_Rom, true);
	
	-- sounds
	bm:callback(function() play_sound(SUnit_Ger_M3_03.unit:position(), SFX_TF_Group_Response_S) end, 1000);
	bm:callback(function() play_sound(SUnit_Ger_M3_04.unit:position(), SFX_TF_Group_Response_S) end, 1500);
	
	bm:watch(
		function() 
			return 
				is_routing_or_dead(SUnit_Ger_M3_01.unit) and 
				is_routing_or_dead(SUnit_Ger_M3_02.unit) and 
				is_routing_or_dead(SUnit_Ger_M3_03.unit) and 
				is_routing_or_dead(SUnit_Ger_M3_04.unit)
				--and has_crossed_line(SUnit_Rom_01.unit:position(), POS_Arminius_Appearance_A, POS_Arminius_Appearance_B)
		end, 
		0, 
		function() Prepare_To_Start_Arm_Appearance() end
	);
end;


function Prepare_To_Start_Arm_Appearance()
	bm:out("Preparing to start Arminius Appearance");
	
	BOOL_Dont_Play_Early_Advice = true;

	local delay_amount = 5000;
	
	for i = 1, #Ger_Starting_Army do
		local current_sunit = Ger_Starting_Army[i];
		
		if is_close_to_position(Units_Rom, current_sunit.unit:position(), 40, true, true) then
			bm:out("\t\t" .. current_sunit.name .. " is close to the Roman army, routing/killing it");
			
			if BOOL_Demo_Script_Loaded then
				TF_unit_max_casualties(current_sunit, 0);
			end;
				
			current_sunit.uc:morale_behavior_rout();
			bm:callback(function() kill_over_time(current_sunit, 2) end, 5000);
			
			delay_amount = 10000;
		end;
	end;
	
	bm:out("\t...waiting " .. tostring(delay_amount) .. "ms for Arminius cutscene");
		
	bm:callback(function() Fade_Into_Arm_Appearance() end, delay_amount);	
end;



BOOL_Arminius_Appearance_Started = false;

function Fade_Into_Arm_Appearance()
	bm:out("Starting Arminius Appearance!");
	
	bm:remove_process("Player_Position_Monitor");
	bm:remove_process("Initial_Attack");
	
	bm:remove_ping_icon(-60, 30, 175);
	
	cam:fade(true, 2);
	
	BOOL_Arminius_Appearance_Started = true;
	
	bm:remove_process("Varus_Death_Watch");
	
	bm:callback(function() Start_Arm_Appearance() end, 2000);
end;

function Start_Arm_Appearance()
	-- really ugly
	Rom_Sunits[1] = SUnit_Rom_Var;
			
	-- show new Varus
	Show_Units(SUnit_Rom_Var.uc);
			
	-- match new Varus unit to old
	kill_unit_proportion(SUnit_Rom_Var.unit, (1 - unit_proportion_alive(SUnit_Rom_01.unit)));
			
	-- get rid of old Varus
	SUnit_Rom_01.uc:teleport_to_location(SUnit_Rom_Var.start_position, SUnit_Rom_Var.start_bearing, SUnit_Rom_Var.start_width);
	Hide_Units(SUnit_Rom_01.uc);
		
	SUnit_Rom_Var.uc:teleport_to_location(v(-200, 200), 0, 25);			
			
	-- teleport Roman army into cutscene position
	bm:callback(
		function() 
			Assign_Rom_Blockade_Cutscene();
			Teleport_Rom_Army_Blockade_Cutscene_Start();
		end,
		200
	);
	
	-- Advance the defending Germans
	bm:callback(function() Advance_Blockade() end, 500);
			
	-- reset fatigue levels
	for i = 1, #Rom_Sunits do
		Rom_Sunits[i].uc:change_fatigue_amount(0.2);
	end;
						
	Disappear_Ger_Starting_Army();
				
	stop_sound(SFX_TF_Group_Taunt_Mid);
	stop_sound(SFX_TF_Group_Taunt_Far);
	stop_sound(SFX_TF_Dog_Taunt);
	
	remove_objective("Rom.HB.TF.Objective_03");
			
	bm:callback(function() Play_Cutscene_Mid() end, 2000);
end;




POS_Ger_Starting_Army_Disposal = v(850, -80);

function Disappear_Ger_Starting_Army()
	for i = 1, #Ger_Starting_Army do
		local current_sunit = Ger_Starting_Army[i];
	
		current_sunit.uc:morale_behavior_fearless();
		
		bm:callback(function() current_sunit.uc:teleport_to_location(POS_Ger_Starting_Army_Disposal, 0, 20) end, 100);
		bm:callback(function() current_sunit.uc:kill() end, 200);
	end;
end;


function Advance_Arminius()
	Show_Units(SUnit_Ger_AR_01.uc);
	Show_Units(SUnit_Ger_AR_02.uc);
	Show_Units(SUnit_Ger_AR_03.uc);
	Show_Units(SUnit_Ger_AR_04.uc);
	Show_Units(SUnit_Ger_AR_05.uc);
	
	SUnit_Ger_AR_01.uc:set_always_visible_to_all(true);
	SUnit_Ger_AR_02.uc:set_always_visible_to_all(true);
	SUnit_Ger_AR_03.uc:set_always_visible_to_all(true);
	SUnit_Ger_AR_04.uc:set_always_visible_to_all(true);
	SUnit_Ger_AR_05.uc:set_always_visible_to_all(true);
					
	SUnit_Ger_AR_01.uc:goto_location(POS_Ger_AR_01_Emerge_From_Forest);				
	bm:callback(function() SUnit_Ger_AR_02.uc:goto_location(POS_Ger_AR_02_Emerge_From_Forest) end, 400);
	bm:callback(function() SUnit_Ger_AR_03.uc:goto_location(POS_Ger_AR_03_Emerge_From_Forest) end, 1000);	
	bm:callback(function() SUnit_Ger_AR_04.uc:goto_location(POS_Ger_AR_04_Emerge_From_Forest) end, 1500);	
	bm:callback(function() SUnit_Ger_AR_05.uc:goto_location(POS_Ger_AR_05_Emerge_From_Forest) end, 1500);
end;










C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\tf_teutoburg_forest\tf_start.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	INITIAL SCRIPT SETUP
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

-- clear out loaded files
system.ClearRequiredFiles();

-- load in battle script library
require "lua_scripts.Battle_Script_Header";

-- declare battlemanager object
bm = battle_manager:new(empire_battle:new());

-- get battle name from folder, and print header
--battle_name, battle_shortform = get_folder_name_and_shortform();

battle_name = "TF_Teutoburg_Forest";
battle_shortform = "TF";

bm:out("==============");
bm:out("==============");
bm:out("==============");
bm:out("Script started: Battle of " .. battle_name);

if BOOL_Short_Battle then
	bm:out("\t!! Short version !!");
end;

bm:out("==============");

-- benchmarking check
BOOL_Benchmark_Mode = false;

if bm:is_benchmarking_mode() then
	BOOL_Benchmark_Mode = true;
end;


-- load in other script files associated with this battle
package.path = package.path .. ";data/Script/" .. battle_name .. "/?.lua";

require (battle_shortform .. "_Common");
require (battle_shortform .. "_Declarations");
require (battle_shortform .. "_Cutscenes");
require (battle_shortform .. "_Main");
require (battle_shortform .. "_Blockade");
-- require (battle_shortform .. "_Demo");	-- remove for game version

-- register functions to be called on phase changes
bm:register_phase_change_callback("Deployment", function() Deployment_Phase() end);			-- optional deployment phase callback
bm:setup_battle(function() End_Deployment_Phase() end);										-- called when battle starts






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\tf_teutoburg_forest\tf_start_short.lua

--
-- Starts off short version of script
--

BOOL_Short_Battle = true;

package.path = package.path .. ";data/Script/TF_Teutoburg_Forest/?.lua";
require ("TF_Start");







C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ti_tigranocerta\ti_cutscenes.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	CUTSCENES SCRIPT
--
--	Declare intro and other cutscenes
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------


Cutscene_Intro = cutscene:new(
	"Cutscene_Intro", 							-- unique string name for cutscene
	UC_Rom_01_All, 								-- unitcontroller over player's army
	1000, 										-- duration of cutscene in ms
	function() Start_Battle() end 				-- what to call when cutscene is finished
);


function Play_Cutscene_Intro()

	--Cutscene_Intro:action(function() cam:fade(false, 0.5) end, 0);
	--Cutscene_Intro:action(function() cam:move_to(v(-156.7, 20.7, -682.8), v(-150, 21.1, -744.9), 0, true, 25) end, 2000);
	
	Cutscene_Intro:start();
end;










C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ti_tigranocerta\ti_declarations.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	DECLARATIONS SCRIPT
--
--	Declare alliances, armies, convex areas and anything else of note in here
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

cam = bm:camera();

--
-- Army Declarations
--

Alliances = bm:alliances();

Alliance_Rom = Alliances:item(1);
Army_Rom_01 = Alliance_Rom:armies():item(1);

Alliance_Car = Alliances:item(2); 
Army_Car_01 = Alliance_Car:armies():item(1);




--
-- Script Unit Declarations
--

SUnit_Rom_01 = script_unit:new(Army_Rom_01, "Rom_01");
SUnit_Rom_02 = script_unit:new(Army_Rom_01, "Rom_02");
SUnit_Rom_03 = script_unit:new(Army_Rom_01, "Rom_03");
SUnit_Rom_04 = script_unit:new(Army_Rom_01, "Rom_04");

UC_Rom_01_All = unitcontroller_from_army(Army_Rom_01);


SUnit_Car_01 = script_unit:new(Army_Car_01, "Car_01");
SUnit_Car_02 = script_unit:new(Army_Car_01, "Car_02");
SUnit_Car_03 = script_unit:new(Army_Car_01, "Car_03");
SUnit_Car_04 = script_unit:new(Army_Car_01, "Car_04");

UC_Car_01_All = unitcontroller_from_army(Army_Car_01);
UC_Car_01_All:take_control();

Car_Sunits = {
	SUnit_Car_01,
	SUnit_Car_02,
	SUnit_Car_03,
	SUnit_Car_04
};


--
-- Buildings
--

-- Building_01 = get_building_near(bm, 0, 0);









--
-- Convex Areas
--

--[[
Area_01 = convex_area:new(
	{
		v(-500, -500),
		v(-500, 0),
		v(0, 0),
		v(0, -500)
	}
);
]]





--
-- Patrol_Managers
--

--PM_Car_01 = patrol_manager:new("Car_01", SUnit_Car_01, Alliance_Rom:armies(), 100);
--PM_Car_01:add_waypoint(v(120, 70), false, 5000);









C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ti_tigranocerta\ti_main.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	MAIN BATTLE SCRIPT
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------



-- called at start of deployment phase
function Deployment_Phase()
	bm:out("Battle is in deployment phase");
end;



-- end of deployment phase i.e. battle start
function End_Deployment_Phase()
		
	-- launch cutscene, or straight into battle without it
	Play_Cutscene_Intro();
	-- Start_Battle_No_Cutscene();
end;


function Start_Battle_No_Cutscene()
	cam:fade(false, 0.5);
	
	Start_Battle();
end;



-- the interactive battle has started
function Start_Battle()
	bm:out("Battle is Starting");
		
	--start rout manager
	bm:start_rout_manager(1);
	
	-- register victory and defeat VO callbacks
	bm:setup_victory_callback(function() Battle_Is_Ending() end);
	
	bm:callback(
		function()
			bm:out("About to test for prologue ui_component");
			
			if bm:ui_component("prologue") then
				bm:out("prologue ui_component found");
			else
				bm:out("prologue ui_component not found");
			end;
		end, 
		5000
	);
	
	
	Show_Random_Ping_Marker();
	bm:callback(function() Show_Random_Ping_Marker() end, 10000);
end;



function Show_Random_Ping_Marker()
	local rnd_x = math.random(-100, 100);
	local y = 10;
	local rnd_z = math.random(-100, 100);
	
	bm:out("Showing random ping marker at [" .. rnd_x .. ", " .. y .. ", " .. rnd_z .. "]");
	bm:add_ping_icon(rnd_x, y, rnd_z, 3, false);
	
	bm:callback(
		function() 
			bm:remove_ping_icon(rnd_x, y, rnd_z);
			Show_Random_Ping_Marker();
		end, 
		20000
	);
end;







BOOL_Battle_Is_Ending = false;

-- the game has gone to victory countdown phase, someone has won
function Battle_Is_Ending()
	if not BOOL_Battle_Is_Ending then
		BOOL_Battle_Is_Ending = true;
					
		if is_routing_or_dead(Alliance_Rom) then	
			bm:out("Player has lost, army is routing");
							
			bm:callback(function() bm:end_battle() end, 10000);
		else
			bm:out("Player has won !");
			
			bm:callback(function() bm:end_battle() end, 10000);
		end;
	end;
end;







C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ti_tigranocerta\ti_start.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	INITIAL SCRIPT SETUP
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

-- clear out loaded files
system.ClearRequiredFiles();

-- load in battle script library
require "lua_scripts.Battle_Script_Header";

-- declare battlemanager object
bm = battle_manager:new(empire_battle:new());

-- get battle name from folder, and print header
battle_name, battle_shortform = get_folder_name_and_shortform();

bm:out("==============");
bm:out("==============");
bm:out("==============");
bm:out("Script started: Battle of " .. battle_name);
bm:out("==============");

-- load in other script files associated with this battle
package.path = package.path .. ";data/Script/" .. battle_name .. "/?.lua";

require (battle_shortform .. "_Declarations");
require (battle_shortform .. "_Cutscenes");
require (battle_shortform .. "_Main");

-- register functions to be called on phase changes
bm:register_phase_change_callback("Deployment", function() Deployment_Phase() end);			-- optional deployment phase callback
bm:setup_battle(function() End_Deployment_Phase() end);										-- called when battle starts








C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\_lib\lib_battlemanager.lua

----------------------------------------------------------------------------------------------------------
-- **************************************************************************************************** --
----------------------------------------------------------------------------------------------------------
--[[

****************
*** Synopsis ***
****************

The battle manager wrapper for the battle object. Using the battle manager where you would otherwise use the nude api gives several advantages:-

- Battle manager won't wet the bed when you try and unregister a timer that you've already unregistered
- It provides a much more powerful callback interface
- Console output is prepended with timestamps
- Battle manager can watch a boolean condition and trigger a callback when it's met
- Battle manager now contains the rout manager
- Other goodies

As a rule of thumb, you should avoid using the battle object except to create the battle manager object.


*************
*** Usage ***
*************

CREATION

To create a battle manager::

bm = battle_manager:new(
	battle					-- link to a/the battle object
);



CALLBACKS

Use callbacks to call function blocks in the future::

bm:callback(
	function() Charge_Roman_Cavalry() end,					-- function block to call
	15000,													-- time in ms to wait before calling it
	"Roman_Cav"												-- optional string name for the callback. Doesn't need to be unique. Used to cancel the callback
);

Alternatively use the following to repeatedly call the same callback::

bm:repeat_callback(
	function() Warn_Of_Artillery_Strike() end,				-- function block to call (repeatedly)
	120000,													-- time in ms between calls
	"Artillery_Warning"										-- optional string name, doesn't need to be unique. Used to cancel the callback
);




WATCHES

You can use a watch to monitor any boolean condition, and then call a function when that condition becomes true.
This is more elegant than a whole load of separate functions to poll stuff constantly.

To create a watch::

bm:watch(
	function() return Enemy_Units_Routing() > 5 end,		-- a function block that returns the boolean condition to test
	3000,													-- delay in milliseconds to wait before calling the target function after the boolean condition is met
	function() Advise_of_Enemy_Routing() end,				-- the target function to call when the condition is met
	"Enemy_Unit_Rout_Watch"									-- an optional string name for the watch. Doesn't need to be unique. Used to cancel the watch
);




CANCELLING CALLBACKS & WATCHES

You can cancel callbacks and/or watches of a given name by using the following command. Note that all callbacks and watches
with a matching name will be cancelled.

bm:remove_process("Enemy_Unit_Rout_Watch");					-- removes any callbacks/watches with a matching key



]]
----------------------------------------------------------------------------------------------------------


my_battle_manager = nil;

battle_manager = {
	watch_list = {},
	phase_change_callback_list = {},
	esc_key_callback_list = {},
	advisor_list = {},
	battle = nil,
	tm = nil,
	should_close_queue_advice = true,
	advice_is_playing = false,
	advisor_force_playing = false,
	advisor_stopping = false,
	advice_dont_play = false,
	battle_phase_change_handler_registered = false,
	player_victory_callback = nil,
	player_defeat_callback = nil,
	debug_angles = false,
	load_balancing = true,
	watch_timer_running = false,
	rout_threshold = 1
};

-- allow battle_manager to properly inherit from battle
function battle_manager:__index(key)
 	local field = rawget(getmetatable(self), key);
	local retval = nil;
	
	if type(field) == "nil" then
		-- key doesn't exist in self, look for it in the prototype object
		local proto = rawget(self, "battle");
		field = proto and proto[key];
				
		if type(field) == "function" then
			-- key exists as a function on the prototype object
			retval = function(obj, ...)
				return field(proto, ...);
			end;
		else
			-- return whatever this key refers to on the prototype object
			retval = field;
		end;
	else
		-- key exists in self
		if type(field) == "function" then
			-- key exists as a function on the self object
			retval = function(obj, ...)
				return field(self, ...);
			end;
		else
			-- return whatever this key refers to on the self object
			retval = field;
		end;
	end;
	
	return retval;
end;


function battle_manager:__tostring()
	return TYPE_BATTLE_MANAGER;
end;


function battle_manager:__type()
	return TYPE_BATTLE_MANAGER;
end;




-----------------------------------------------------------------------------
-- Creation
-----------------------------------------------------------------------------


function battle_manager:new(b)
	if my_battle_manager then		
		script_error("WARNING: Cannot create more than one battle manager!");
		
		return my_battle_manager;
	end;
	if not b then
		script_error("WARNING: No battle object supplied to battle_manager - creating one, but this should really be fixed.");
		
		b = empire_battle:new();
	end;
	
	local bm = {
		battle = b,
		watch_list = {},
		phase_change_callback_list = {},
		esc_key_callback_list = {},
		advisor_list = {}
	};
	
	setmetatable(bm, battle_manager);
	
	my_battle_manager = bm;
		
	bm.tm = timer_manager:new(bm);
		
	return bm;
end;






-----------------------------------------------------------------------------
-- get_bm() command, can be called by any bit of script to get 
-- a current battlemanager
-----------------------------------------------------------------------------

function get_bm(should_force)
	local retval = nil;

	if my_battle_manager then
		retval = my_battle_manager;
	else
		--battle manager hasn't been set up yet
		if should_force then
			-- create something to return
			local battle = empire_battle:new();
			local bm = battle_manager:new(battle, true);
		
			if bm then
				retval = bm;
			else
				-- print something to the console as we're not returning a battlemanager object, just a battle object
				battle:out("WARNING");
				battle:out("WARNING :: get_bm() couldn't return a battlemanager object, returning a battle object instead - script is likely to break further down the line");
				battle:out("WARNING");
				
				retval = battle;
			end;
		else
			-- throw a wobbly
			local battle = empire_battle:new();
		
			battle:out("ERROR");
			battle:out("ERROR :: get_bm() couldn't return a battlemanager object, returning nil");
			battle:out("ERROR");
		end;
	end;
	
	return retval;
end;









-----------------------------------------------------------------------------
-- Console output
-----------------------------------------------------------------------------

function battle_manager:out(msg)
	self.battle:out("<" .. tostring(timestamp_tick) .. "ms> " .. msg);
end;









-----------------------------------------------------------------------------
-- Prepacked "battle has started" callback
-----------------------------------------------------------------------------

function battle_manager:setup_battle(new_deployment_end_callback)
	
	self.battle:suspend_contextual_advice(true);
	self.battle:suppress_unit_voices(true);
	self.battle:suppress_unit_musicians(true);
	self.battle:steal_input_focus();
	
	self:register_phase_change_callback("Deployed", function() self:end_deployment() end);
	self:register_phase_change_callback("Deployed", new_deployment_end_callback);
	
	self:register_phase_change_callback("Complete", function() self:suspend_contextual_advice(false) end);
end;


function battle_manager:end_deployment()
	self.battle:release_input_focus();
	self.battle:suppress_unit_voices(false);
	self.battle:suppress_unit_musicians(false);
end;










-----------------------------------------------------------------------------
-- Allows the user to register a callback if the battle phase 
-- changes (mainly used to catched "deployed" phase starting 
-- i.e. the start of the battle)
-----------------------------------------------------------------------------

function battle_manager:register_phase_change_callback(new_event, new_callback)
	if not is_string(new_event) then
		script_error("ERROR: battle_manager:register_phase_change_callback() event " .. tostring(new_event) .. " given that is not a string!");
		
		return false;
	end;

	if not is_function(new_callback) then
		script_error("ERROR: battle_manager:register_phase_change_callback() callback " .. tostring(new_callback) .. " given that is not a function!");
		
		return false;
	end;
	
	local new_phase_change_callback = {
										event = new_event,
										callback = new_callback
									};
	
	table.insert(self.phase_change_callback_list, new_phase_change_callback);
		
	if not self.battle_phase_change_handler_registered then		
		self:register_battle_phase_handler("battle_manager_phase_change");
		self.battle_phase_change_handler_registered = true;
	end;
end;


function battle_manager_phase_change(event)
	my_battle_manager:out("\t\tEvent triggered :: " .. event:get_name());

	for i = 1, #my_battle_manager.phase_change_callback_list do	
		if my_battle_manager.phase_change_callback_list[i].event == event:get_name() then
			my_battle_manager.phase_change_callback_list[i].callback();
		end;
	end;
end;



-----------------------------------------------------------------------------
-- Allows the user to register a callback for if the ESC key is pressed
-----------------------------------------------------------------------------

function battle_manager:register_esc_key_callback(new_label, new_callback)
	if not is_string(new_label) then
		script_error("ERROR:: register_esc_key_callback() called but supplied label " .. tostring(new_label) .. " is not a string!");
		
		return false;
	end;

	if not is_function(new_callback) then
		script_error("ERROR:: register_esc_key_callback() called but supplied callback " .. tostring(new_callback) .. " is not a function!");
		
		return false;
	end;
	
	-- search for label in the current list, if we don't find it it can go in
	for i = 1, #self.esc_key_callback_list do
		if new_label == self.esc_key_callback_list[i].label then
			script_error("ERROR: register_esc_key_callback() called but supplied label " .. new_label .. " is already registered, aborting");
			
			return false;
		end;	
	end;

	--self:out("Adding object to esc_key_callback_list! Label is " .. new_label .. " and object is " .. tostring(new_callback));
	
	local callback_entry = {
		label = new_label,
		callback = new_callback
	};
	
	table.insert(self.esc_key_callback_list, callback_entry);
	
	-- if we didn't have a callback but do now, start to listen for the esc key
	if #self.esc_key_callback_list == 1 then
		--self:out("Starting to listen for ESC key!");
		self:steal_escape_key();
	end;
	
	--self:out("\tObject in table is " .. tostring(self.esc_key_callback_list[#self.esc_key_callback_list].callback) .. " with label " .. self.esc_key_callback_list[#self.esc_key_callback_list].label);
end;


function battle_manager:unregister_esc_key_callback(label_to_remove)
	if not is_string(label_to_remove) then
		script_error("ERROR:: unregister_esc_key_callback() called but supplied label " .. tostring(label_to_remove) .. " is not a string!");
		
		return false;
	end;
	
	--bm:out("unregister_esc_key_callback() called with label " .. tostring(label_to_remove));
	
	-- go through the callback list and remove any matching entries
	for i = 1, #self.esc_key_callback_list do
		--bm:out("Checking callback list item " .. tostring(i) .. " of " .. tostring(#self.esc_key_callback_list) .. ", self.esc_key_callback_list[" .. tostring(i) .. "].label is " .. tostring(self.esc_key_callback_list[i].label) .. " and label to remove is " .. label_to_remove);
	
		if label_to_remove == self.esc_key_callback_list[i].label then
			--bm:out("\tThey're the same! Removing entry and breaking");
			table.remove(self.esc_key_callback_list, i);
			break;
		else
			--bm:out("\tThey're not the same.");
		end;
	end;
	
	--bm:out("#self.esc_key_callback_list is now " .. tostring(#self.esc_key_callback_list));
	
	if #self.esc_key_callback_list == 0 then
		--bm:out("Releasing ESC key");
		self:release_escape_key();
	end;
end;


function Esc_Key_Pressed()
	local callback_list = get_bm().esc_key_callback_list;
	
	for i = 1, #callback_list do
		callback_list[i].callback();
	end;
end;


function battle_manager:steal_escape_key()
	if #self.esc_key_callback_list == 1 then
		self.battle:steal_escape_key();
	end;
end;
	

function battle_manager:release_escape_key()
	if #self.esc_key_callback_list == 0 then
		self.battle:release_escape_key();
	end;
end;






-----------------------------------------------------------------------------
-- Victory callback registration (someone has won)
--
-- Supplied callback is called when the game wants to go into the 
-- victory countdown. It's left to the calling battle script
-- to determine who has actually won, what action to take, and to 
-- call battle_manager:end_battle() to actually let the battle end.
-----------------------------------------------------------------------------

function battle_manager:setup_victory_callback(callback)
	self:register_victory_countdown_callback(callback);
	self:change_victory_countdown_limit(-1);
end;


function battle_manager:register_victory_countdown_callback(callback)
	self:register_phase_change_callback("VictoryCountdown", callback);
end;


function battle_manager:end_battle()
	bm:change_victory_countdown_limit(0);
end;









-----------------------------------------------------------------------------
-- Old battle-ending handlers. These can still be used but won't 
-- get called until the battle results screen.
-----------------------------------------------------------------------------

function battle_manager:register_results_callbacks(player_victory_callback, player_defeat_callback)
	self.battle:register_command_handler("Battle_Manager_Battle_Results");
	
	self.player_victory_callback = player_victory_callback;
	self.player_defeat_callback = player_defeat_callback;
end;


function Battle_Manager_Battle_Results(event)
	if event:get_name() == "Battle Results" then
		my_battle_manager:process_results(event:get_bool1());
	end;
end;


function battle_manager:process_results(result)
	if result then
		self:out("The Player has won the battle!");
		if self.player_victory_callback then
			self.player_victory_callback();
		else
			script_error("No victory callback was present? If you're not seeing outro advice and you expected to then something broke.");
		end;
	else
		self:out("The Player has lost the battle!");
		if self.player_defeat_callback then
			self.player_defeat_callback();
		else
			script_error("No defeat callback was present? If you're not seeing outro advice and you expected to then something broke.");
		end;
	end;
end;














-----------------------------------------------------------------------------
-- Achievements :: needs filling in for each game :<
-----------------------------------------------------------------------------

function battle_manager:unlock_achievement(key)
	if not is_string(key) then
		script_error("ERROR: unlock_achievement() called but invalid achievement " .. key .. " was given!");
		
		return false;
	end;

	if key == "ACHIEVEMENT_HISTORICAL_BATTLE_2" then
		self:out("\tUNLOCKING ACHIEVEMENT :: ACHIEVEMENT_HISTORICAL_BATTLE_2 :: Alesia achievement :: Alesia achievement description."); 
		return self.battle:unlock_achievement("ACHIEVEMENT_HISTORICAL_BATTLE_2");
	elseif key == "ACHIEVEMENT_HISTORICAL_BATTLE_3" then
		self:out("\tUNLOCKING ACHIEVEMENT :: ACHIEVEMENT_HISTORICAL_BATTLE_3 :: Pincer Movement :: Win the Battle of Cannae on normal difficulty or higher."); 
		return self.battle:unlock_achievement("ACHIEVEMENT_HISTORICAL_BATTLE_3");
	elseif key == "ACHIEVEMENT_HISTORICAL_BATTLE_5" then
		self:out("\tUNLOCKING ACHIEVEMENT :: ACHIEVEMENT_HISTORICAL_BATTLE_5 :: Phalanx But No Thanks :: Win the Battle of Pydna on normal difficulty or higher."); 
		return self.battle:unlock_achievement("ACHIEVEMENT_HISTORICAL_BATTLE_5");
	elseif key == "ACHIEVEMENT_HISTORICAL_BATTLE_6" then
		self:out("\tUNLOCKING ACHIEVEMENT :: ACHIEVEMENT_HISTORICAL_BATTLE_6 :: Carthage Must Be Destroyed :: Win the Siege of Carthage on normal difficulty or higher."); 
		return self.battle:unlock_achievement("ACHIEVEMENT_HISTORICAL_BATTLE_6");
	elseif key == "ACHIEVEMENT_HISTORICAL_BATTLE_7" then
		self:out("\tUNLOCKING ACHIEVEMENT :: ACHIEVEMENT_HISTORICAL_BATTLE_7 :: The Alexandrine War :: Win the Battle of the Nile on normal difficulty or higher."); 
		return self.battle:unlock_achievement("ACHIEVEMENT_HISTORICAL_BATTLE_7");
	elseif key == "ACHIEVEMENT_HISTORICAL_BATTLE_9" then
		self:out("\tUNLOCKING ACHIEVEMENT :: ACHIEVEMENT_HISTORICAL_BATTLE_9 :: Reclaiming the Desert :: Win the Battle of Raphia on normal difficulty or higher."); 
		return self.battle:unlock_achievement("ACHIEVEMENT_HISTORICAL_BATTLE_9");
	elseif key == "ACHIEVEMENT_HISTORICAL_BATTLE_11" then
		self:out("\tUNLOCKING ACHIEVEMENT :: ACHIEVEMENT_HISTORICAL_BATTLE_11 :: Disaster Averted :: Recover at least one legionary eagle from Teutoburg Forest on normal difficulty or higher."); 
		return self.battle:unlock_achievement("ACHIEVEMENT_HISTORICAL_BATTLE_11");
	elseif key == "ACHIEVEMENT_HISTORICAL_BATTLE_12" then
		self:out("\tUNLOCKING ACHIEVEMENT :: ACHIEVEMENT_HISTORICAL_BATTLE_12 :: Pincer Movement :: Win the Battle of Zama on normal difficulty or higher."); 
		return self.battle:unlock_achievement("ACHIEVEMENT_HISTORICAL_BATTLE_12");
	elseif key == "ACHIEVEMENT_HISTORICAL_BATTLE_14" then
		self:out("\tUNLOCKING ACHIEVEMENT :: ACHIEVEMENT_HISTORICAL_BATTLE_14 :: This Army Will Fight On :: Recover at least two legionary eagles from Teutoburg Forest on normal difficulty or higher."); 
		return self.battle:unlock_achievement("ACHIEVEMENT_HISTORICAL_BATTLE_14");
	elseif key == "ACHIEVEMENT_HISTORICAL_BATTLE_15" then
		self:out("\tUNLOCKING ACHIEVEMENT :: ACHIEVEMENT_HISTORICAL_BATTLE_15 :: Masters of Germania :: Recover all three legionary eagles from Teutoburg Forest on normal difficulty or higher."); 
		return self.battle:unlock_achievement("ACHIEVEMENT_HISTORICAL_BATTLE_15");
	elseif key == "ACHIEVEMENT_COMPLETE_PROLOGUE_CAMPAIGN" then
		self:out("\tUNLOCKING ACHIEVEMENT :: ACHIEVEMENT_COMPLETE_PROLOGUE_CAMPAIGN :: Queastor :: Complete the Prologue campaign."); 
		return self.battle:unlock_achievement("ACHIEVEMENT_COMPLETE_PROLOGUE_CAMPAIGN");
	else
		self:out("unlock_achievement() called but supplied key is not a recognised achievement!");
	end;
end;












-----------------------------------------------------------------------------
-- Wrappers for the base battle timer functionality
-- (now moved to timer manager)
-----------------------------------------------------------------------------
	
function battle_manager:register_singleshot_timer(name, t)
	--out.ting("[unregister] bm.tm is " .. tostring(bm.tm));

	return self.tm:register_singleshot_timer(name, t);
end;

function battle_manager:register_repeating_timer(name, t)
	--out.ting("[unregister] bm.tm is " .. tostring(bm.tm));

	return self.tm:register_repeating_timer(name, t);
end;

function battle_manager:unregister_timer(name)
	--out.ting("[unregister] bm.tm is " .. tostring(bm.tm));

	return self.tm:unregister_timer(name);
end;
















-----------------------------------------------------------------------------
-- Watch functionality
-----------------------------------------------------------------------------

-- Sets the watch processing script into load balancing mode
function battle_manager:set_load_balancing(value)
	if not is_boolean(value) then 
		value = true;
	end;

	self.load_balancing = value;
end;


-- remove process returns the result of trying to remove the key from the watch list or the callback list
function battle_manager:remove_process(key)
	-- make sure it does both
	local retval = self:remove_process_from_watch_list(key);
	
	return self:remove_process_from_callback_list(key) or retval;
end;


-- purge any watches that match the key name from the watch list. Return true if any were found, false otherwise
function battle_manager:remove_process_from_watch_list(key)
	if #self.watch_list == 0 then
		return false;
	end;
	
	local i = 1;
	local j = #self.watch_list;
	local have_removed_entry = false;
	
	-- walk through the watch list looking for watches with the given key
	while i <= j do
		if self.watch_list[i].entryname == key then
			table.remove(self.watch_list, i);
			have_removed_entry = true;
			j = j - 1;
		else
			i = i + 1;
		end;
	end;
	
	return have_removed_entry;
end;



-- In load-balancing mode this is the maximum interval between checks of a given watch (although it may well check 
-- MORE often in load-balancing mode). In non-load-balancing mode all watches are checked at this interval.
CONST_WATCH_INTERVAL = 2000;


function battle_manager:watch(new_condition, new_time_offset, new_callback, new_entryname)
	if not is_function(new_condition) then
		script_error("ERROR: battle_manager:watch() called but supplied condition " .. tostring(new_condition) .. " is not a function!");
		
		return false;
	end;
	
	if not is_number(new_time_offset) or new_time_offset < 0 then
		script_error("ERROR: battle_manager:watch() called but supplied time offset " .. tostring(new_time_offset) .. " is not a positive number!");
		
		return false;
	end;
	
	if not is_function(new_callback) then
		script_error("ERROR: battle_manager:watch() called but supplied callback " .. tostring(new_callback) .. " is not a function!");
		
		return false;
	end;


	local new_entryname = new_entryname or "";
	
	local new_watch_entry = {
		condition = new_condition, 
		time_offset = new_time_offset, 
		callback = new_callback, 
		entryname = new_entryname, 
		last_check = 0
	};
		
	table.insert(self.watch_list, new_watch_entry);
	
	if #self.watch_list == 1 then
		self:register_repeating_timer("battle_manager_tick_watch_counter", CONST_WATCH_INTERVAL);
		self.watch_timer_running = true;
	end;
end;


function battle_manager_tick_watch_counter()
	my_battle_manager:tick_watch_counter();
end;


function battle_manager:tick_watch_counter()
	if #self.watch_list == 0 then
		return false;
	end;
	
	if not self.load_balancing then
		-- old non-load-balancing script

		local i = 1;
		local j = #self.watch_list;
		local result = false;
		local should_rescan = false;
		
		while i <= j do
			-- process the next watch entry, get back the result and whether it was processed immediately
			result, should_rescan = self:check_watch_entry(i);

			if should_rescan then
				self:tick_watch_counter(); -- rescan the whole list
				
				return false;
			elseif result then
				j = j - 1;
			else
				i = i + 1;
			end;			
		end;
	else
		-- load-balancing script
		
		-- stop the regular watch timer if it's running
		if self.watch_timer_running then
			self.watch_timer_running = false;
			self:unregister_timer("battle_manager_tick_watch_counter");
		end;
		
		-- work out how many watch entries to scan this tick
		local watch_entries_per_tick = math.ceil(#self.watch_list / (CONST_WATCH_INTERVAL / 100));
				
		local next_watch = false;
		
		for i = 1, watch_entries_per_tick do
			-- find watch entry with lowest last_check value
			next_watch = self:get_next_watch_entry();
			
			if next_watch then
				-- check it
				local result, need_to_rescan = self:check_watch_entry(next_watch);				
				
				if need_to_rescan then
					self:tick_watch_counter(); -- rescan the whole list
				
					return false;
				end;
			end;			
		end;
		
		self:callback(function() self:tick_watch_counter() end, 100);
	end;
	
end;

-- go through all the watches and return the one that happened the longest time ago
function battle_manager:get_next_watch_entry()
	if #self.watch_list == 0 then
		return false;
	end;

	local lowest_check = timestamp_tick + 100;
	local next_watch = 0;
	local next_watch_last_check = 0;
	
	for i = 1, #self.watch_list do
		next_watch_last_check = self.watch_list[i].last_check;
	
		if next_watch_last_check < lowest_check then
			next_watch = i;
			lowest_check = next_watch_last_check;
		end;
	end;
	
	return next_watch;
end;


-- check the result of a particular watch, takes an entry number in the 
-- battle manager watch list as parameter
function battle_manager:check_watch_entry(entry_number)
	w = self.watch_list[entry_number];

	w.last_check = timestamp_tick;
		
	-- determine the result of the condition
	local result = w.condition();
	
	-- if the callback happened immediately then we need to rescan the 
	-- whole list as it could have been mangled by whatever the callback did
	local need_to_rescan = false;
	
	-- if it succeeded then we need to call the callback, either now or in the future
	-- (depending on the offset) and also remove the current watch from the watch list
	if result then
		if w.time_offset == 0 then
			local callback = w.callback;
			table.remove(self.watch_list, entry_number);
			callback();
			need_to_rescan = true;
		else
			self:callback(w.callback, w.time_offset, w.entryname);
			table.remove(self.watch_list, entry_number);
		end;
	end;
	
	return result, need_to_rescan;
end;


-- debug command to print the watch list
function battle_manager:print_watch_list()
	if #self.watch_list == 0 then
		self:out("Watch list is empty");
		return;
	end;
	
	self:out("Watch list now looks like:");
	for i = 1, #self.watch_list do
		self:out(i .. ":  " .. tostring(self.watch_list[i].entryname));
	end;
end;


-- stops all watches and callbacks from running
function battle_manager:clear_watches_and_callbacks()
	self.cm:clear_callback_list();
	
	self.watch_list = {};
	
	-- stop the regular watch timer if it's running (load-balanced watch timer is already cancelled by blanking the callback list)
	if self.watch_timer_running then
		self.watch_timer_running = false;
		self:unregister_timer("battle_manager_tick_watch_counter");
	end;
end;











-----------------------------------------------------------------------------
-- Callbacks
--
-- Call battle_manager:callback to register a new callback. Callbacks are stored in a table in chronological
-- order, with a singleshot battle timer pointed at the first callback in the list (always the next one due to
-- go off). The callback function sets this timer up if it's not already active
-----------------------------------------------------------------------------

function battle_manager:callback(new_callback, new_time_offset, new_entryname)
	return self.tm:callback(new_callback, new_time_offset, new_entryname);
end;


-- purge any callbacks that match the key name from the callback list. Return true if any were found, false otherwise
function battle_manager:remove_process_from_callback_list(key)
	return self.tm:remove_process(key);
end;


-- Repeat callback, same as callback but will repeatedly call itself over the given interval
function battle_manager:repeat_callback(new_callback, new_time_offset, new_entryname)
	return self.tm:repeat_callback(new_callback, new_time_offset, new_entryname);
end;


-- Debug command to print the callback list out at any time
function battle_manager:print_callback_list()
	return self.tm:print_callback_list();
end;








-----------------------------------------------------------------------------
-- Advisor queue
--
-- Allows the user to queue advisor messages so they don't clumsily collide
-- with each other.
-----------------------------------------------------------------------------

__BATTLE_MANAGER_ADVISOR_REOPEN_WAIT = 500;

function battle_manager:dont_close_queue_advice()
	self.should_close_queue_advice = false;
end;


function battle_manager:queue_advisor(new_advisor_string, new_duration, new_is_debug, new_callback, new_callback_offset)

	if self.advice_dont_play then
		return;
	end;
	
	if not is_string(new_advisor_string) then
		script_error("ERROR :: queue_advisor called with non-string parameter (" .. tostring(new_advisor_string) .. "), cannot queue this!");
		return false;
	end;
	
	-- if the advisor system was manually stopped in the last 500ms (usually this same tick), wait for a little bit to allow the system to clear
	if self.advisor_stopping then
		self:callback(function() self:queue_advisor(new_advisor_string, new_duration, new_is_debug, new_callback) end, __BATTLE_MANAGER_ADVISOR_REOPEN_WAIT);
		return false;
	end
	
	
	if not is_number(new_duration) then
		new_duration = 0;
	end;
	
	if not is_function(new_callback) then
		new_callback = nil;
	end;
	
	if not is_number(new_callback_offset) then
		new_callback_offset = 0;
	elseif new_callback_offset < 0 then
		script_error("WARNING: battle_manager:queue_advisor called but a negative callback offset [" .. tostring(new_callback_offset) .. "] was specified, setting to 0");
		new_callback_offset = 0;
	end;
	
	local new_is_debug = new_is_debug or false;

	local advisor_entry = {
		advisor_string = new_advisor_string, 
		duration = new_duration, 
		is_debug = new_is_debug,
		callback = new_callback,
		callback_offset = new_callback_offset
	};

	table.insert(self.advisor_list, advisor_entry);

	if not self.advice_is_playing then
		self:play_next_advice();
	end;
end;



__BATTLE_MANAGER_FORCE_BATTLE_SCRIPT_STRINGS = false;

-- plays the next queued advice
function battle_manager:play_next_advice()

	if self.advice_dont_play then
		return;
	end;

	-- the game reckons it's still playing some advice, so try again later
	if not self:advice_finished() then	
		self:remove_process("battle_manager_advisor_queue");
		self:callback(function() self:watch_advice_queue() end, 500, "battle_manager_advisor_queue");
		
		return false;
	end;
	
	-- if we have no more advice to play, stop
	if #self.advisor_list == 0 then
		if self.should_close_queue_advice then
			self:close_advisor();
		end;
		
		self.advice_is_playing = false;
		return false;
	end;
	
	self.advice_is_playing = true;
	
	local current_advice = self.advisor_list[1];
	
	-- play first bit of advice in the list
	if current_advice.is_debug then
		if __BATTLE_MANAGER_FORCE_BATTLE_SCRIPT_STRINGS then
			self:show_advisor_message("", current_advice.advisor_string);	-- deprecated
		else
			effect.advice(current_advice.advisor_string);
		end;
	else
		if __BATTLE_MANAGER_FORCE_BATTLE_SCRIPT_STRINGS then
			self:show_advisor_message(current_advice.advisor_string, "");	-- deprecated
		else
			effect.advance_scripted_advice_thread(current_advice.advisor_string, 1);
		end;
	end;
	
	self:remove_process("battle_manager_advisor_queue");
	
	-- prevent the advisor from closing or progressing until after the allotted duration is over
	-- note that if the player closes the advisor dialog this isn't picked up on 
	if current_advice.duration > 0 then
		self.advisor_force_playing = true;		
		self:callback(function() self.advisor_force_playing = false end, current_advice.duration, "battle_manager_advisor_queue");
	end;
	
	-- call callback if there is one
	if is_function(current_advice.callback) then
		if current_advice.callback_offset == 0 then
			current_advice.callback();
		else
			-- offset the call by the supplied offset if there is one
			self:callback(function() current_advice.callback() end, current_advice.callback_offset, "battle_manager_advisor_queue");
		end;
	end;
	
	-- remove first element in the table now that it's being played
	table.remove(self.advisor_list, 1);
	
	self:callback(function() self:watch_advice_queue() end, 500, "battle_manager_advisor_queue");
end;


function battle_manager:watch_advice_queue()
	-- if the current bit of advice has finished playing then wait a bit and try to play the next, else re-check in 500ms
	if self:advice_finished() and not self.advisor_force_playing then
		self:callback(function() self:play_next_advice() end, 2000, "battle_manager_advisor_queue");
	else
		self:callback(function() self:watch_advice_queue() end, 500, "battle_manager_advisor_queue");
	end;
end;


-- cancels any running or subsequent advice that may be queued
function battle_manager:stop_advisor_queue()
	self:close_advisor();
	self:remove_process("battle_manager_advisor_queue");
	self.advisor_queue = {};
	self.advice_is_playing = false;
	self.advisor_force_playing = false;
	
	-- take a note that the advisor is stopping, and delay and queueing for a bit if so - the game doesn't
	-- seem to like stopping and then immediately re-queueing
	self.advisor_stopping = true;
	self:callback(function() self.advisor_stopping = false end, __BATTLE_MANAGER_ADVISOR_REOPEN_WAIT);
end;



-- stops the advisor queue and prevents any more advice from being queued
function battle_manager:advice_cease()
	self:out("Ceasing all advice");
	self:stop_advisor_queue();
	self.advice_dont_play = true;
end;


-- allows advice to resume after advice_cease() called
function battle_manager:advice_resume()
	self.advice_dont_play = false;
end;



function battle_manager:stop_advice_on_battle_end(eh)
	eh:add_listener(
		"bm_stop_advice_on_battle_end",
		"PanelOpenedBattle",
		function(context) return context.string == "in_battle_results_popup" end,
		function() self:advice_cease() end,
		false
	);
end;












-----------------------------------------------------------------------------
-- Rout Manager
--
-- Watches the size of the enemy army relative to the player's army and
-- routs the remainder of the enemy army if it gets too small, to ward off
-- a scenario where the player is chasing down a tiny amount of enemy
-- troops. This scenario is reached when the player's army has 2.5x more
-- non-routing units and the number of enemy units active falls below a
-- supplied threshold. The rout manager also prevents enemy units that have
-- routed from rallying.
-----------------------------------------------------------------------------


-- start the rout manager
function battle_manager:start_rout_manager(new_threshold)
	if is_number(new_threshold) and new_threshold > 0 then
		self.rout_threshold = new_threshold;
	end;

	self:watch(function() self:check_rout_manager() end, 0, function() self:rout_threshold_reached() end, "Rout_Manager");
	
	-- prevent enemy units that have routed from rallying
	local enemy_armies = self:alliances():item(2):armies();

	for i = 1, enemy_armies:count() do
		local enemy_army = enemy_armies:item(i);
		local enemy_units = enemy_armies:item(i):units();
	
		for j = 1, enemy_units:count() do
			local enemy_unit = enemy_units:item(j);
			local enemy_uc = create_unitcontroller(enemy_army, enemy_unit);
			
			self:watch(
				function() 
					return is_routing_or_dead(enemy_unit) 
				end, 
				0, 
				function()
					enemy_uc:morale_behavior_rout()
				end,
				"Rout_Manager"
			);			
		end;
	end;
end;




-- rout manager performs its internal check
function battle_manager:check_rout_manager()
	local alliances = self:alliances();

	local non_routing_enemy_units = num_units_routing(alliances:item(2));
	local non_routing_allied_units = num_units_routing(alliances:item(1));
	
	if non_routing_enemy_units < self.rout_threshold and non_routing_allied_units > non_routing_enemy_units * 2.5 then
		return true;
	end;

	return false;
end;


-- the rout manager threshold has been reached, routed the remainder of the enemy
function battle_manager:rout_threshold_reached()
	self:out("Rout threshold reached !");
	
	self:stop_rout_manager();
	
	rout_all_units(self:alliance():item(2));
end;


-- stop the rout manager if necessary
function battle_manager:stop_rout_manager()
	self:remove_process("Rout_Manager");
end;




















C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\_lib\lib_campaign_cleanup.lua


-------------------------------------------------------
-------------------------------------------------------
--	CAMPAIGN CLEANUP HANDLER
-------------------------------------------------------
-------------------------------------------------------


__campaign_cleanup_actions = {};


function add_campaign_cleanup_action(callback)
	if not is_function(callback) then
		script_error("add_campaign_cleanup_action called but supplied callback [" .. tostring(callback) .. "] is not a function");
		return false;
	end;
	
	table.insert(__campaign_cleanup_actions, callback);
end;




-- this function gets called when the campaign gets destroyed
function CleanupFinal()
	local count = 0;
	
	for i = 1, #__campaign_cleanup_actions do
		local current_action = __campaign_cleanup_actions[i];
		
		if is_function(current_action) then
			count = count + 1;
			current_action();
		end;
	end;
	
	if count == 1 then
		count = "1 callback";
	else
		count = tostring(count) .. " callbacks";
	end;
	
	output("CleanupFinal() called " .. count);
end;











C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\_lib\lib_campaign_cutscene.lua

__event_panel_auto_open_enabled = true;

-- toggle event panel auto open
function enable_event_panel_auto_open(new_value)
	local cm = get_cm();
	
	if new_value then
		if not __event_panel_auto_open_enabled then
			cm:override_ui("disable_event_panel_auto_open", false);
			__event_panel_auto_open_enabled = true;
		end;
	else
		if __event_panel_auto_open_enabled then			
			cm:override_ui("disable_event_panel_auto_open", true);
			__event_panel_auto_open_enabled = false;
		end;
	end;
end;


-- toggles lots of things to do with cinematics on or off
function activate_cinematic_cam(value)
	local cm = get_cm();

	enable_event_panel_auto_open(not value);
	
	if value then
		output("Activating cinematic cam");
		CampaignUI.ToggleCinematicBorders(true);
		cm:take_shroud_snapshot();
		cm:make_neighbouring_regions_visible_in_shroud();
		-- cm:override_ui("disable_settlement_labels", true);
		cm:override_ui("disable_advice_changes", true);
		cm:steal_user_input(true);
		cm:set_cinematic_zoom_limit();
	else
		output("De-activating cinematic cam");
		cm:restore_shroud_from_snapshot();
		-- cm:override_ui("disable_settlement_labels", false);
		cm:override_ui("disable_advice_changes", false);
		scripting.game_interface:steal_user_input(false);
		CampaignUI.ToggleCinematicBorders(false);
		cm:restore_zoom_limit();
	end
end;



-------------------------------------------------------
-------------------------------------------------------
--	CAMPAIGN CUTSCENE SCRIPT
-------------------------------------------------------
-------------------------------------------------------

__campaign_cutscene_debug = false;
__campaign_cutscene_list = {};



campaign_cutscene = {
	name = "",
	cutscene_length = 0,
	action_list = {},
	skip_callback = nil,
	is_debug = false,
	is_skippable = true,
	is_running = false,
	was_skipped = false,
	wait_offset = 0,
	skip_callback = nil,
	end_callback = nil,
	advisor_wait = false,
	skip_cam_x = false,
	skip_cam_y = false,
	skip_cam_h = false,
	skip_cam_r = false
};





function campaign_cutscene:new(name, length, end_callback)
	-- type-check our parameters
	if not is_string(name) then
		script_error("ERROR: tried to create a campaign_cutscene but supplied name [" .. tostring(name) .."] is not a string");
		return false;
	end;
	
	local full_name = "Campaign_Cutscene_" .. name;
	
	if not is_number(length) then
		script_error(full_name .. " ERROR: tried to create a campaign_cutscene but supplied length [" .. tostring(length) .. "] is not a number");
		return false;
	end;
	
	if not is_function(end_callback) then
		script_error(full_name .. " ERROR: tried to create a campaign_cutscene but supplied end callback [" .. tostring(end_callback) .. "] is not a function");
		return false;
	end;
		
	cc = {};
	
	setmetatable(cc, campaign_cutscene);
	self.__tostring = function() return TYPE_CAMPAIGN_CUTSCENE end;
	self.__index = self;
	
	cc.cm = get_cm();
	cc.name = full_name;
	cc.cutscene_length = length;
	cc.end_callback = end_callback;
	
	table.insert(__campaign_cutscene_list, cc);
	
	cc.action_list = {};
	
	return cc;
end;


function campaign_cutscene:set_debug(is_debug)
	if is_debug == nil then
		self.is_debug = true;
	else
		self.is_debug = is_debug;
	end;
end;


function campaign_cutscene:set_debug_all(is_debug)
	if is_debug == nil then
		__campaign_cutscene_debug = true;
	else
		__campaign_cutscene_debug = is_debug;
	end;
end;


function campaign_cutscene:set_skippable(skippable, callback)
	if value == nil then
		self.is_skippable = true;
	else
		self.is_skippable = skippable;
	end;
	
	if is_function(callback) then
		self.skip_callback = callback;
	end;
end;


function campaign_cutscene:set_skip_camera(x, y, h, r)
	if not is_number(x) or x < 0 then
		script_error(self.name .. " ERROR: set_skip_camera() called but supplied x value [" .. tostring(x) "] .. is not a positive number!");
		return false;
	end;
	
	if not is_number(y) or y < 0 then
		script_error(self.name .. " ERROR: set_skip_camera() called but supplied y value [" .. tostring(y) "] .. is not a positive number!");
		return false;
	end;
	
	if not is_number(h) or h < 0 then
		h = 1;
	end;
	
	if not is_number(r) or r < 0 then
		r = 0;
	end;
	
	if self.is_debug or __campaign_cutscene_debug then
		output(self.name .. " setting skip camera to x:" .. tostring(x) .. ", y:" .. tostring(y) .. ", h:" .. tostring(h) .. ", r:" .. tostring(r));
	end;
	
	self.skip_cam_x = x;
	self.skip_cam_y = y;
	self.skip_cam_h = h;
	self.skip_cam_r = r;
end;


function campaign_cutscene:is_any_cutscene_running()
	if #__campaign_cutscene_list == 0 then
		return false;
	end;
	
	for i = 1, #__campaign_cutscene_list do
		if __campaign_cutscene_list[i]:is_active() then
			return true;
		end;
	end;
	
	return false;
end;


function campaign_cutscene:is_active()
	return self.is_running;
end;


function campaign_cutscene:action(new_callback, new_delay)
	-- type-check parameters
	if not is_function(new_callback) then
		script_error(self.name .. " ERROR: trying to add an action but supplied action [" .. tostring(new_callback) .."] is not a function");
		return false;
	end;
	
	if not is_number(new_delay) then
		script_error(self.name .. " ERROR: trying to add an action but supplied action [" .. tostring(new_delay) .."] is not a number");
		return false;
	end;
	
	-- debug output
	if self.is_debug or __campaign_cutscene_debug then
		output(self.name .. " adding action " .. tostring(new_callback) .. " with delay " .. tostring(new_delay));
	end;
	
	-- add action to our list
	for i = 1, #self.action_list do
		if self.action_list[i].delay > new_delay then
			table.insert(self.action_list, i, {callback = new_callback, delay = new_delay});
			return true;
		end;
	end;
	
	table.insert(self.action_list, {callback = new_callback, delay = new_delay});
	return true;
end;


function campaign_cutscene:start()
	if self:is_any_cutscene_running() then
		script_error(self.name .. " ERROR: cannot start, another cutscene is running!");
		
		return false;
	end;
		
	-- activate cinematic camera
	activate_cinematic_cam(true);
	
	-- start listening for advice dismissed if necessary
	if self.is_skippable then
		self.cm:add_listener(
			self.name .. "_advice_closed",
			"ComponentLClickUp",
			function(context) return context.string == "button_close" end,
			function() self:skip() end,
			false
		);
	end;
	
	self:action(function() self:finish() end, self.cutscene_length, self.name);
	
	-- set internal is_running flag
	self.is_running = true;
	
	-- debug output
	if self.is_debug or __campaign_cutscene_debug then
		output(self.name .. " is starting");
	end;
		
	-- start processing actions
	self:process_next_action(1);
	
	return true;
end;



-- performs the next action
function campaign_cutscene:process_next_action(action_ptr)
	if not self.is_running then
		script_error(self.name .. " WARNING:  tried to process an action while not active, the action didn't happen.");		
		return false;
	end;
		
	if action_ptr > #self.action_list then		
		return false;
	end;
	
	-- see if we have to wait for advice to complete
	if self.advisor_wait then
		if conditions.is_advice_audio_playing() then
			-- Advice is playing and we have been instructed to wait for it to complete.
			-- Let's try again in a bit and see if the advice has finished
			add_callback(function() self:process_next_action(action_ptr) end, 0.5, self.name);
			self.wait_offset = self.wait_offset + 500;
			return false;
		else
			-- advisor_wait is true but there is no advice playing, so we can set it to false again
			self.advisor_wait = false;
		end;	
	end;
		
	local next_action = self.action_list[action_ptr];
	local further_action = nil;
	
	if action_ptr < #self.action_list then
		further_action = self.action_list[action_ptr + 1];
	end;
	
	-- debug output
	if self.is_debug or __campaign_cutscene_debug then
		output(self.name .. " : processing action " .. action_ptr .. " [" .. tostring(next_action.callback) .. "]");
	end;
		
	-- call the next_action callback
	next_action.callback();
	
	-- if the further_action (what we do after next_action) is due to happen at a later time
	-- as the next_action then queue that up, else run it now. If further_action doesn't exist
	-- then do nothing, we have got to the end of the cutscene
	if further_action then
		if further_action.delay > next_action.delay then
			add_callback(function() self:process_next_action(action_ptr + 1) end, (further_action.delay - next_action.delay), self.name);
		else
			self:process_next_action(action_ptr + 1);
		end;
	end;
end;





-- called if we want the cutscene system to wait for the advisor to finish speaking
function campaign_cutscene:wait_for_advisor()
	self.advisor_wait = true;
end;




-- Takes a faction, region key, settlement position x, settlement position y and a threshold distance.
-- Function reveals the settlement for the given faction when the camera gets within the given
-- threshold of the given x/y position. If the cutscene finishes naturally without the condition
-- triggering, the cutscene will report how close the camera got.
function campaign_cutscene:reveal_region_by_proximity(region_name, prox)
	if not is_string(region_name) then
		script_error(self.name .. " ERROR: reveal_region_by_proximity() called but supplied region [" .. tostring(region_name) .. "] is not a string");
		return false;
	end;
	
	if not is_number(prox) or prox < 0 then
		script_error(self.name .. " ERROR: reveal_region_by_proximity() called but supplied proximity [" .. tostring(prox) "] .. is not a positive number");
		return false;
	end;
	
	local faction_name = self.cm:get_local_faction();
	local region = get_region(cm.scripting, region_name);
	
	if not region then
		script_error(self.name .. " ERROR: reveal_region_by_proximity() called but supplied region [" .. tostring(region_name) .. "] is not a valid region key");
		return false;
	end;
	
	local x = region:settlement():display_position_x();
	local y = region:settlement():display_position_y();
	
	-- output(self.name .. ":reveal_region_by_proximity() found " .. region_name .. " at [" .. x .. ", " .. y .. "]");
		
	self:reveal_region_by_proximity_action(faction_name, region_name, x, y, prox, 50000);
end;



-- business end of the function above
function campaign_cutscene:reveal_region_by_proximity_action(faction_name, region_name, x, y, prox, closest)
	if not self.is_running then
		if not self.was_skipped then
			output(self.name .. " WARNING: reveal_region_by_proximity() for region " .. region_name .. " is still running at the end of the cutscene, given proximity was " .. prox .. " but the camera didn't get closer than " .. closest .. " - adjust your proximity to fit");
		end;
		return false;
	end;
	
	local cam_x, cam_y = CampaignUI.GetCameraPosition();	
	local curr_distance = ((x - cam_x) ^ 2 + (y - cam_y) ^ 2) ^ 0.5;
	
	if curr_distance < prox then
		self.cm:make_region_visible_in_shroud(faction_name, region_name);
		--if self.is_debug or __campaign_cutscene_debug then
			output(self.name .. " making " .. region_name .. " visible for " .. faction_name .. ", camera is at distance " .. curr_distance .. " from [" .. x .. ", " .. y .."] which is less than the supplied proximity " .. prox);
		--end;
	else
		if curr_distance < closest then
			closest = curr_distance;
		end;
		
		add_callback(function() self:reveal_region_by_proximity_action(faction_name, region_name, x, y, prox, closest) end, 0.2, self.name);
	end;
end;








-- called when the campaign intro is skipped
function campaign_cutscene:skip()
	if not self.is_running then
		return false;
	end;
	
	output(self.name .. " has been skipped");
	
	self.cm:stop_camera();
	self.cm:dismiss_advice();
	
	self.was_skipped = true;
	
	-- kill any running process
	remove_callback(self.name);
	
	-- reposition camera if we have a skip camera
	if self.skip_cam_x then
		CampaignUI.SetCameraTargetInstant(self.skip_cam_x, self.skip_cam_y);
		CampaignUI.SetCameraZoom(self.skip_cam_h);
		CampaignUI.SetCameraHeading(self.skip_cam_r);
	end;
	
	-- run the skip callback if we have one
	if is_function(self.skip_callback) then
		self.skip_callback();
	end;
	
	self:release();
end




-- called when the campaign intro finishes without skipping
function campaign_cutscene:finish()
	if self.is_debug or __campaign_cutscene_debug then
		output(self.name .. " is finishing");
	end;
	
	self:release();
end




-- cleans up the campaign_cutscene, called when it finishes for either reason
function campaign_cutscene:release()
	-- deactivate cinematic camera
	activate_cinematic_cam(false);
	
	-- stop listening for advice being dismissed
	if self.is_skippable then
		self.cm:remove_listener(self.name .. "_advice_closed");
	end;
		
	-- set internal is_running flag
	self.is_running = false;
	
	if self.wait_offset > 0 then
		output(self.name .. " was " .. self.wait_offset .. "ms longer than specified due to waiting for advice to complete.");
	end;

	if is_function(self.end_callback) then
		self.end_callback();
	end;
end;




-- skips any running campaign cutscene
function skip_all_campaign_cutscenes()
	for i = 1, #__campaign_cutscene_list do
		local curr_cutscene = __campaign_cutscene_list[i];

		curr_cutscene:skip();
	end;
end;



function OnKeyPressed(key, is_key_up)
	if is_key_up == true then
		if key == "ESCAPE" or key == "SPACE" then
			output("Escape or space pressed");
			
			skip_all_campaign_cutscenes();
		end;
	end;
end;






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\_lib\lib_campaign_defense.lua

-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	SCRIPT FOR CAMPAIGN POINT DEFENSE
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

-- saving/loading the state of this system
__campaign_defense_loadstring = "";
__CAMPAIGN_DEFENSE_INACTIVE = "0";
__CAMPAIGN_DEFENSE_ACTIVE = "1";


-- generates a string which encapsulates the vital state of this system to get packed into the savegame
function generate_campaign_defense_loadstring()
	local retval = "";
	
	for i = 1, #__campaign_defenses do
		local curr_defense = __campaign_defenses[i];
		
		retval = retval .. curr_defense:generate_campaign_defense_loadstring();
	end;
	
	return retval;
end;


-- searches the defense loadstring and returns whether that defense should still be running
function query_loadstring_campaign_defense_is_active(name)
	local str_start, str_end = string.find(__campaign_defense_loadstring, name);
	
	if not str_end then
		-- didn't find the campaign defense record in the loadstring, so returning true (so the campaign defense is active)
		return true;
	end;
	
	-- loadstring is encoded in the format:
	-- region_name:0:123;
	-- first numeric is whether the campaign defense object is active, second is the army char cqi. Terminated by semicolon
	local retval_str_pos = str_end + 2;
	local retval_str = string.sub(__campaign_defense_loadstring, retval_str_pos, retval_str_pos);
	
	if retval_str == __CAMPAIGN_DEFENSE_ACTIVE then
		return true;
	end;
	
	return false;
end;


-- searches the defense loadstring and returns the cqi of the subject army
function query_loadstring_campaign_defense_cqi(name)
	local str_start, str_end = string.find(__campaign_defense_loadstring, name);
	
	if not str_end then
		-- didn't find the campaign defense record in the loadstring, so returning nil
		return nil;
	end;
	
	-- loadstring is encoded in the format:
	-- region_name:0:123;
	-- first numeric is whether the campaign defense object is active, second is the army char cqi. Terminated by semicolon
	local retval_str_start = str_end + 4;
	local retval_str_end = string.find(__campaign_defense_loadstring, ";", retval_str_start);
	
	if not retval_str_end then
		script_error("ERROR: query_loadstring_campaign_defense_army(" .. name .. ") called, found defense setup but no army identifier in loadstring [" .. __campaign_defense_loadstring .. "]");
		return nil;
	end;
	
	local retval_str = string.sub(__campaign_defense_loadstring, retval_str_start, retval_str_end - 1);
	
	return retval_str;
end;





__campaign_defenses = {};

campaign_defense = {
	cm = nil,
	name = "",
	faction = "",
	cqi = "",
	should_award_upkeep = true,
	condition = nil,
	callback = nil,
	active = false,
	movement_enabled = true
};

function campaign_defense:new(name, faction, cqi, condition, callback)
	if not is_string(name) then
		script_error("ERROR: tried to create campaign defense but supplied name [" .. tostring(name) .. "] is not a string");
		return false;
	end;
	
	if not is_string(faction) then
		script_error("ERROR: tried to create campaign defense but supplied faction [" .. tostring(faction) .. "] is not a string");
		return false;
	end;
	
	if is_number(cqi) then
		cqi = tostring(cqi);
	end;
		
	if not is_string(cqi) and not is_nil(cqi) then
		script_error("ERROR: tried to create campaign defense but supplied cqi [" .. tostring(cqi) .. "] is not a string or nil");
		return false;
	end;
			
	if not is_function(condition) then
		script_error(name .. " ERROR: tried to create campaign defense but supplied condition [" .. tostring(condition) .. "] is not a function");
		return false;
	end;
	
	if not is_function(callback) and not is_nil(callback) then
		script_error(name .. " ERROR: tried to create campaign defense but supplied callback [" .. tostring(callback) .. "] is not a function");
		return false;
	end;
	
	local cm = get_cm();
	
	local cd = {};
		
	setmetatable(cd, self);
	self.__index = self;
	self.__tostring = function() return TYPE_CAMPAIGN_DEFENSE end;
	
	cd.cm = cm;
	cd.name = "Campaign_Defense_" .. name;
	cd.faction = faction;
	cd.cqi = cqi;
	cd.garrison = garrison;
	cd.condition = condition;
	cd.callback = callback;
		
	-- load these values from a previous savegame
	cd.active = query_loadstring_campaign_defense_is_active(name);
	
	-- if there is a valid cqi string in the loadstring, then use that, otherwise use what we were given
	local cqi_from_loadstring = query_loadstring_campaign_defense_cqi(name);
	
	if cqi_from_loadstring then
		cd.cqi = cqi_from_loadstring;
	end;
	
	if not cd.cqi or cd.cqi == "" then
		script_error(cd.name .. " ERROR: couldn't find an army cqi, presuming that the army was never spawned. Deactivating this campaign_defense object.");
		cd.active = false;
	else
		cm:add_listener(
			cd.name,
			"FactionTurnStart",
			function(context) return context:faction():name() == cd.faction end,
			function() cd:turn_start() end,
			true
		);
	
		-- add this campaign defense to the global list
		table.insert(__campaign_defenses, cd);
	end;
			
	return cd;
end;


function campaign_defense:set_callback(callback)
	if not is_function(callback) then
		script_error(self.name .. " ERROR: set_callback() called but supplied callback [" .. callback .. "] is not a function");
		return false;
	end;
	
	self.callback = callback;
end;


function campaign_defense:set_should_award_upkeep(value)
	if value == false then
		self.should_award_upkeep = false;
	else
		self.should_award_upkeep = true;
	end;
end;


function campaign_defense:dump()
	output(self.name .. ":");
	output("\tfaction is " .. tostring(self.faction));
	output("\tcqi is " .. tostring(self.cqi));
	output("\tcondition is " .. tostring(self.condition));
	output("\tcallback is " .. tostring(self.callback));
	output("\tactive is " .. tostring(self.active));
	output("\tmovement enabled is " .. tostring(self.movement_enabled));
end;






function campaign_defense:turn_start()

	-- award upkeep
	if self.should_award_upkeep then
		local char = self:get_army_char();
		
		if not char or not (char:has_military_force()) then
			-- we couldn't find this character or he doesn't have a military force, either that means that he's died or something has gone wrong
			
			self.cm:remove_listener(self.name);
			-- enable movement just in case
			self:enable_movement(true);
			return false;
		else
			local upkeep_to_add = char:military_force():upkeep();
			output(self.name .. " adding upkeep of " .. tostring(upkeep_to_add) .. " to faction " .. self.faction);
			self.cm:treasury_mod(self.faction, upkeep_to_add);
		end;
	end;
	
	if self.active then
		if self.condition() then
			-- condition is satisfied
			self:enable_movement(true);
			self.callback();
			self.active = false;
			return;
			
		else
			-- prevent movement from happening
			-- self.cm:zero_action_points("character_cqi:" .. self.cqi);
			self:enable_movement(false);
		end;
	end;
end;


function campaign_defense:enable_movement(value)
	if value then
		if not self.movement_enabled then
			self.movement_enabled = true;
			
			local char_str = "character_cqi:" .. self.cqi;
			self.cm:enable_movement_for_character(char_str);
			output(self.name .. " enabling movement for character " .. char_str);
		end;
	else
		if self.movement_enabled then
			self.movement_enabled = false;
					
			local char_str = "character_cqi:" .. self.cqi;
			self.cm:disable_movement_for_character(char_str);
			output(self.name .. " disabling movement for character " .. char_str);
		end;
	end;
end;



function campaign_defense:generate_campaign_defense_loadstring()
	local active_str = __CAMPAIGN_DEFENSE_ACTIVE;
	
	if not self.active then
		active_str = __CAMPAIGN_DEFENSE_INACTIVE;
	end;
		
	local retval = self.name .. "," .. active_str .. "," .. self.cqi .. ";";

	return retval;
end;


function campaign_defense:get_army_char()
	local faction = get_faction(self.cm.scripting, self.faction);
	
	if not faction then
		script_error(self.name .. " ERROR: get_army_char() called but couldn't find the subject faction [" .. tostring(self.faction) .. "]");
		return false;
	end;
	
	local character_list = faction:character_list();
	
	for i = 0, character_list:num_items() - 1 do
		local char = character_list:item_at(i);
		
		if (tostring(char:cqi()) == tostring(self.cqi)) then
			return char;
		end;
	end;
		
	return false;
end;


function campaign_defense:stop()
	output(self.name .. " stopping");
	self.cm:remove_listener(self.name);
	self.active = false;
	self:enable_movement(true);
end;









--
-- some functions to further automate specific defense behaviours
--

function create_force_in_garrison(faction_name, army_string, region_name, name)
	local cm = get_cm();

	local region = get_region(cm.scripting, region_name);
	
	if not region then
		script_error("create_force_in_garrison() ERROR: couldn't find region " .. region_name);
		return false;
	end;
	
	local faction = get_faction(cm.scripting, faction_name);
	
	if not faction then
		script_error("create_force_in_garrison() ERROR: couldn't find faction " .. faction_name);
		return false;
	end;
	
	local settlement = region:settlement();
		
	cm:create_force(faction_name, army_string, region_name, settlement:logical_position_x(), settlement:logical_position_y(), name, false);		-- not multiplayer safe !
	
	-- attempt to find the character cqi now that it's been created
	local character_list = faction:character_list();
	
	for i = 0, character_list:num_items() - 1 do
		local char = character_list:item_at(i);
		
		if char:has_garrison_residence() and char:has_region() then
			if char:region():name() == region_name then
				if char == char:region():garrison_residence():army():general_character() then
					return char:cqi();
				end;
			end;
		end;
	end;
	
	script_error("create_force_in_garrison() ERROR: created force but couldn't find it afterwards, how can this be?");
	return false;
end;



function start_defense(name, faction_name, cqi, target_regions, trigger_regions, message)
	local should_override_message = false;

	local cd = campaign_defense:new(
		name,
		faction_name,
		cqi,
		function()
			if check_defense(name, target_regions) then
				return true;
			end;
			
			if check_defense_trigger_regions(name, trigger_regions) then
				should_override_message = true;
				return true;
			end;
			
			return false;
		end
	);
	
	cd:set_callback(
		function()
			if message and not should_override_message then
				local army_char = cd:get_army_char();
				if army_char then
					release_defense(name, local_faction, faction_name, cd:get_army_char():cqi(), message);
				end;
			else
				release_defense(name);
			end;
		end
	);
	
	return cd;
end;


-- check if the local faction holds more than target_regions number of regions, or if they hold any of
-- the trigger regions specified in the trigger_regions table of strings
function check_defense(name, target_regions)
	local cm = get_cm();
	local regions_held = regions_held_by_faction(cm.scripting, local_faction);
	
	output("Checking " .. name .. " Defense Condition, number of regions currently held is " .. tostring(regions_held) .. ", target is " .. tostring(target_regions));
	return regions_held >= target_regions;
end;	
	
	
function check_defense_trigger_regions(name, trigger_regions)
	if not trigger_regions then
		return false;
	end;
	
	local region_manager = cm:model():world():region_manager();
	
	for i = 1, #trigger_regions do
		local current_trigger_region_name = trigger_regions[i];
		
		local current_trigger_region = region_manager:region_by_key(current_trigger_region_name);
		
		if current_trigger_region then
			local owning_faction_name = current_trigger_region:owning_faction():name();
			
			if owning_faction_name == local_faction then
				output("\tcheck_defense has determined that region " .. current_trigger_region_name .. " is owned by the player's faction " .. local_faction .. " which will trigger the immediate release of a defense force nearby");
				return true;
			end;
		else
			script_error("check_defense() couldn't find region with key [" .. current_trigger_region_name .. "], check start_defense setup for campaign defense [" .. name .."]");
			return false;
		end;
	end;
	
	return false;
end;


function release_defense(name, home_faction_name, target_faction_name, cqi, message)
	output(name .. " Defense is released!");
	
	local cm = get_cm();
		
	if is_string(message) then
		local char = get_character_from_faction_by_cqi(get_faction(cm.scripting, target_faction_name), cqi);
		
		if not char then
			script_error("ERROR: release_defense couldn't find character with cqi [" .. tostring(cqi) .. "] in target faction [" .. target_faction_name .. "]");
			return false;
		end;
	
		local char_x = char:display_position_x();
		local char_y = char:display_position_y();
	
		cm:add_listener(
			"Release_Defense" .. name,
			"FactionTurnStart",
			function(context) return context.string == home_faction_name end,
			function()
				cm:show_message_event(message, char_x, char_y);
			end,
			false
		);
	end;
end;











C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\_lib\lib_campaign_faction_start.lua


-------------------------------------------------------
-------------------------------------------------------
--	FACTION START SCRIPT
-------------------------------------------------------
-------------------------------------------------------

__faction_start_playing = false;	-- failsafe, there should be only one intro but we check this just in case

faction_start = {
	name = "",
	default_x = 0,
	default_y = 0,
	default_heading = 0,
	default_zoom = 0,
	intro_cutscene_callback = nil,
	new_sp_game_callback = nil,
	each_sp_game_callback = nil,
	new_mp_game_callback = nil,
	each_mp_game_callback = nil
};


function faction_start:new(name, x, y, zoom, heading)
	-- type-check our parameters
	if not is_string(name) then
		script_error("ERROR: tried to create a faction_start but supplied name [" .. tostring(name) .."] is not a string");
		return false;
	end;
	
	local full_name = "Faction_Start_" .. name;
	
	if not is_number(x) then
		script_error(full_name .. " ERROR: tried to create a faction_start but supplied default x camera co-ordinate [" .. tostring(x) .."] is not a number");
		return false;
	end;

	if not is_number(y) then
		script_error(full_name .. " ERROR: tried to create a faction_start but supplied default y camera co-ordinate [" .. tostring(y) .."] is not a number");
		return false;
	end;
	
	heading = heading or 0;
	zoom = zoom or 1;
	
	if not is_number(heading) then
		script_error(full_name .. " ERROR: tried to create a faction_start but supplied default heading [" .. tostring(heading) .."] is not a number");
		return false;
	end;
	
	if not is_number(zoom) then
		script_error(full_name .. " ERROR: tried to create a faction_start but supplied default zoom [" .. tostring(zoom) .."] is not a number");
		return false;
	end;
	
	fs = {};
	
	setmetatable(fs, faction_start);
	self.__tostring = function() return TYPE_FACTION_START end;
	self.__index = self;
	
	local cm = get_cm();
	fs.cm = cm;
	fs.name = full_name;
	
	-- if the x or y co-ordinates are 0 or less then we use the display position of the faction leader instead
	fs.default_x = x;
	fs.default_y = y;
		
	fs.default_heading = heading;
	fs.default_zoom = zoom;
	
	return fs;
end;


function faction_start:register_intro_cutscene_callback(callback)
	if not is_function(callback) then
		script_error(self.name .. " ERROR: register_intro_cutscene_callback() called but supplied object [" .. tostring(callback) .. "] is not a function");
		return false;
	end;
	
	self.intro_cutscene_callback = callback;
	
	-- hack: if this is the first turn, suppress the event panel
	enable_event_panel_auto_open(false);	
end;


function faction_start:register_new_sp_game_callback(callback)
	if not is_function(callback) then
		script_error(self.name .. " ERROR: register_new_sp_game_callback() called but supplied object [" .. tostring(callback) .. "] is not a function");
	end;
	
	self.new_sp_game_callback = callback;
end;


function faction_start:register_each_sp_game_callback(callback)
	if not is_function(callback) then
		script_error(self.name .. " ERROR: register_each_sp_game_callback() called but supplied object [" .. tostring(callback) .. "] is not a function");
	end;
	
	self.each_sp_game_callback = callback;
end;


function faction_start:register_new_mp_game_callback(callback)
	if not is_function(callback) then
		script_error(self.name .. " ERROR: register_new_mp_game_callback() called but supplied object [" .. tostring(callback) .. "] is not a function");
	end;
	
	self.new_mp_game_callback = callback;
end;


function faction_start:register_each_mp_game_callback(callback)
	if not is_function(callback) then
		script_error(self.name .. " ERROR: register_each_mp_game_callback() called but supplied object [" .. tostring(callback) .. "] is not a function");
	end;
	
	self.each_mp_game_callback = callback;
end;


-- this faction_start is starting. There should only be one
function faction_start:start(should_show_cutscene)
	if __faction_start_playing then
		script_error(self.name .. " ERROR: Tried to start a faction_start but another faction_start " .. tostring(__faction_start_playing) .. " is already playing - there should be only one of these!");
		return false;
	end;
	
	local is_multiplayer = CampaignUI.IsMultiplayer();
		
	-- if it's a new game, then call the appropriate new game callback
	if self.cm:is_new_game() then
		if is_multiplayer then
			-- this is a new multiplayer game. Call our new game function, if 
			-- we have one, then set the camera to the default position
			if is_function(self.new_mp_game_callback) then
				self.new_mp_game_callback();
			end;
		else
			-- this is a new singleplayer game
			
			-- call new game callback, if we have one
			if is_function(self.new_sp_game_callback) then
				self.new_sp_game_callback();
			end;
		end;
	end;
	
	-- the new game callback has now been called, if it existed.
	-- next, call the each game callback (if it exists)
	if is_multiplayer then
		if is_function(self.each_mp_game_callback) then
			self.each_mp_game_callback();
		end;
	else
		if is_function(self.each_sp_game_callback) then
			self.each_sp_game_callback();
		end;
	end;
	
	-- all stuff that needs to be set up is now set up. Now we work
	-- out what to do with the camera/intro cutscene/etc
	
	if self.cm:is_new_game() then
		self.cm:set_new_game(false);
		
		if self.intro_cutscene_callback and should_show_cutscene and not is_multiplayer then
			-- this is a new game, we have a cutscene, we should show it and it's a sp campaign,
			-- so show the cutscene!
			self.intro_cutscene_callback();
			return;
		end;
		
		-- otherwise, set the camera to the default position
		self:set_camera_to_default();
	end;
			
	enable_event_panel_auto_open(true);
	self.cm:restore_zoom_limit();
end;


function faction_start:set_camera_to_default()
	output(self.name .. ": starting camera at default position");
	
	CampaignUI.SetCameraZoom(self.default_zoom);
	CampaignUI.SetCameraHeading(self.default_heading);	
	CampaignUI.SetCameraTargetInstant(self.default_x, self.default_y);
end;













C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\_lib\lib_campaign_manager.lua


-------------------------------------------------------
-------------------------------------------------------
--	CAMPAIGN MANAGER
-------------------------------------------------------
-------------------------------------------------------

-- __is_loaded_game value, used by faction_start script
__is_loaded_game = false;


function get_cm()
	if __campaign_manager then
		return __campaign_manager;
	else
		script_error("get_cm() called but no campaign manager created as yet");
	end;
end;


__campaign_manager = nil;
scripting = nil;

campaign_manager = {				-- default values should not be nil, otherwise they'll fail if looked up
	name = "",
	core = false,
	scripting = false,
	game_interface = false,
	game_interface_created = false,
	factions = {},
	session_created_callbacks = {},
	ui_created_callbacks = {},
	first_tick_callbacks = {},
	saving_game_callbacks = {},
	loading_game_callbacks = {},
	game_loaded = false,
	default_zoom_limit_h_max = false,
	default_zoom_limit_h_min = false,
	cinematic_zoom_limit_h_max = 1.15,
	cinematic_zoom_limit_h_min = 0.15,
	is_multiplayer_campaign = false,
	local_faction = ""
};


-- allow campaign_manager to inherit from the game_interface object. If a function is called on the campaign
-- manager which hasn't been explicitly set up, this is passed through to the game_interface object
function campaign_manager:__index(key)
 	local field = rawget(getmetatable(self), key);
	local retval = nil;
		
	if type(field) == "nil" then
		-- key doesn't exist in self, look for it in the prototype object
		local proto = rawget(self, "game_interface");
		
		-- if the prototype object (game_interface) hasn't been set up, then throw an error
		if not proto then
			script_error("ERROR: function called or value looked up [" .. key .. "] on the campaign manager which doesn't exist on the campaign manager object, but before the game_interface is created! This needs to happen after the OnNewSession event! See Steve for details")
			return nil;
		end;
		
		field = proto and proto[key];
					
		if type(field) == "function" then
			-- key exists as a function on the prototype object
			retval = function(obj, ...)
				return field(proto, ...);
			end;
		else
			-- return whatever this key refers to on the prototype object
			retval = field;
		end;
	else
		-- key exists in self
		if type(field) == "function" then
			-- key exists as a function on the self object
			retval = function(obj, ...)
				return field(self, ...);
			end;
		else
			-- return whatever this key refers to on the self object
			retval = field;
		end;
	end;
	
	return retval;
end;


-----------------------------------------------------------------------------
-- tostring and type functions
-----------------------------------------------------------------------------

function campaign_manager:__tostring()
	return TYPE_CAMPAIGN_MANAGER;
end;


function campaign_manager:__type()
	return TYPE_CAMPAIGN_MANAGER;
end;



-----------------------------------------------------------------------------
-- creation
-----------------------------------------------------------------------------

function campaign_manager:new(name)
	
	if __campaign_manager then
		script_error("WARNING: Cannot create more than one campaign manager!");
		return __campaign_manager;
	end;

	if not is_string(name) then
		script_error("ERROR: Attempted to create campaign manager but no campaign name was supplied, or supplied name [" .. tostring(name) .. "] is not a string!");
		return false;
	end;
		
	local core = require "ui/CoreUtils";
	local my_scripting = core.Require "lua_scripts.EpisodicScripting";
	my_scripting.SetCampaign(name);
	local game_interface = my_scripting.game_interface;
	
	-- hold your nose - code expects the scripting and EpisodicScripting objects to be set up with these names to be able to clean up the campaign on shutdown
	scripting = my_scripting;
	EpisodicScripting = scripting;
	
	-- set up campaign manager object
	local cm = {};
	
	setmetatable(cm, campaign_manager);
	__campaign_manager = cm;
	
	cm.name = name;
	cm.core = core;
	cm.scripting = my_scripting;
	cm.factions = {};
	cm.session_created_callbacks = {};
	cm.ui_created_callbacks = {};
	cm.first_tick_callbacks = {};
	cm.saving_game_callbacks = {};
	cm.loading_game_callbacks = {};
		
	-- initialise event handler mechanism, so that we can listen for events
	local eh = event_handler:new(scripting.AddEventCallBack);
	cm.eh = eh;
	
	-- initialise timer system, so that we can use the nicer callback system
	initialise_timers(eh);
	
	-- initialise advice, this allows us to use progress_on_advice_dismissed and progress_on_advice_completed
	initialise_advice(scripting, eh);
	
	-- starts the campaign selection listener, which tracks what character or settlement the player has selected for script purposes
	start_campaign_selection_listener(eh);
	
	-- output
	out.ting("Starting campaign manager for " .. name .. " campaign");
	
	-- start listener for the NewSession event: when it happens create a link to the
	-- game object, which should have been created in EpisodicScripting.lua by now
	eh:add_listener(
		name .. "_NewSession_Listener",
		"NewSession",
		true,
		function(context)			
			cm:new_session_created(context);
		end,
		true
	);
	
	-- start listener for the UICreated event: when it happens set up the local
	-- faction name. The model() interface should be safe to use at this point
	eh:add_listener(
		name .. "_UICreated_Listener",
		"UICreated",
		true,
		function(context)			
			cm:ui_created(context);
		end,
		true
	);
	
	-- start listener for the FirstTickAfterWorldCreated event: generally used
	-- by users to kick off startup scripts
	eh:add_listener(
		self.name .. "_first_tick_callback",
		"FirstTickAfterWorldCreated",
		true,
		function(context)
			cm:first_tick(context);
		end,
		true
	);
	
	
	-- start listeners for the SavingGame and LoadingGame events
	eh:add_listener(
		self.name .. "_savegame_callback",
		"SavingGame",
		true,
		function(context)
			cm:saving_game(context);
		end,
		true
	);
	
	eh:add_listener(
		self.name .. "_loadgame_callback",
		"LoadingGame",
		true,
		function(context)
			cm:loading_game(context);
		end,
		true
	);
				
	return cm;
end;


-----------------------------------------------------------------------------
--	new_session_created - sets up the game_interface object
--	warning: scripts that attach to this should beware that the model()
--	interface is probably uninitialised and will crash if used
-----------------------------------------------------------------------------


function campaign_manager:register_session_created_callback(callback)
	if not is_function(callback) then
		script_error(self.name .. " ERROR: register_session_created_callback called but supplied callback [" .. tostring(callback) .. "] is not a function");
	end;
	
	table.insert(self.session_created_callbacks, callback);
end;


function campaign_manager:new_session_created(context)
	cache_tab();
	output("");
	output("********************************************************************************");
	output(self.name .. " event has occurred:: NewSession");
	inc_tab();

	-- set up proper link to game_interface object, now that it's been created
	self.game_interface = self.scripting.game_interface;
	
	self.game_interface_created = true;
	
	-- set up camera zoom extents if they've been specified
	if self.zoom_limit_x and self.zoom_limit_y then
		self.game_interface:set_zoom_limit(self.zoom_limit_x, self.zoom_limit_y);
	end;
	
	local model = self.game_interface:model();
	
	-- stash whether this is a multiplayer game
	self.is_multiplayer_game = model:is_multiplayer();
		
	-- process all the registered session_created callbacks
	self:process_session_created_callbacks(context);
	
	dec_tab();
	output("********************************************************************************");
	output("");
	restore_tab();
end;


function campaign_manager:process_session_created_callbacks(context)
	for i = 1, #self.session_created_callbacks do
		self.session_created_callbacks[i](context);
	end;
end;


-----------------------------------------------------------------------------
--	ui_created - sets up local faction name
--	when this event occurs it's assumed that the model() interface is
--	safe to use
-----------------------------------------------------------------------------


function campaign_manager:register_ui_created_callback(callback)
	if not is_function(callback) then
		script_error(self.name .. " ERROR: register_ui_created_callback called but supplied callback [" .. tostring(callback) .. "] is not a function");
	end;
	
	table.insert(self.ui_created_callbacks, callback);
end;


function campaign_manager:ui_created(context)
	cache_tab();
	output("");
	output("********************************************************************************");
	output(self.name .. " event has occurred:: UICreated");
	inc_tab();

	local model = self.game_interface:model();

	-- stash the name of the local faction
	self.local_faction = get_local_faction_name(model);
	
	self:process_ui_created_callbacks(context);
	
	dec_tab();
	output("********************************************************************************");
	output("");
	restore_tab();
end;


function campaign_manager:process_ui_created_callbacks(context)
	for i = 1, #self.ui_created_callbacks do
		self.ui_created_callbacks[i](context);
	end;
end;


-----------------------------------------------------------------------------
-- FirstTickAfterWorldCreated callback
-----------------------------------------------------------------------------


function campaign_manager:register_first_tick_callback(callback)
	if not is_function(callback) then
		script_error(self.name .. " ERROR: register_first_tick_callback() called but supplied callback [" .. tostring(callback) .. "] is not a function");
		return false;
	end;
	
	table.insert(self.first_tick_callbacks, callback);
end;
	
	
function campaign_manager:first_tick(context)
	cache_tab();
	output("");
	output("********************************************************************************");
	output(self.name .. " event has occurred:: FirstTickAfterWorldCreated");
	inc_tab();
	
	self:process_first_tick_callbacks(context);
	
	dec_tab();
	output("********************************************************************************");
	output("");
	restore_tab();
end;
	

function campaign_manager:process_first_tick_callbacks(context)
	for i = 1, #self.first_tick_callbacks do
		self.first_tick_callbacks[i](context);
	end;
end;



-----------------------------------------------------------------------------
-- SavingGame callback
-----------------------------------------------------------------------------

function campaign_manager:register_saving_game_callback(callback)
	if not is_function(callback) then
		script_error(self.name .. " ERROR: register_saving_game_callback() called but supplied callback [" .. tostring(callback) .. "] is not a function");
		return false;
	end;
	
	table.insert(self.saving_game_callbacks, callback);
end;
	
	
function campaign_manager:saving_game(context)
	cache_tab();
	output("");
	output("********************************************************************************");
	output(self.name .. " event has occurred:: SavingGame");
	inc_tab();
	
	-- saving library values
	self:save_value("__is_loaded_game", __is_loaded_game, context);
	__campaign_defense_loadstring = generate_campaign_defense_loadstring();
	self:save_value("__campaign_defense_loadstring", __campaign_defense_loadstring, context);
	
	self:process_saving_game_callbacks(context);
	
	dec_tab();
	output("********************************************************************************");
	output("");
	restore_tab();
end;
	

function campaign_manager:process_saving_game_callbacks(context)
	for i = 1, #self.saving_game_callbacks do
		self.saving_game_callbacks[i](context);
	end;
end;






-----------------------------------------------------------------------------
-- LoadingGame callback
-----------------------------------------------------------------------------

function campaign_manager:register_loading_game_callback(callback)
	if not is_function(callback) then
		script_error(self.name .. " ERROR: register_loading_game_callback() called but supplied callback [" .. tostring(callback) .. "] is not a function");
		return false;
	end;
	
	table.insert(self.loading_game_callbacks, callback);
end;
	
	
function campaign_manager:loading_game(context)
	cache_tab();
	output("");
	output("********************************************************************************");
	output(self.name .. " event has occurred:: LoadingGame");
	inc_tab();
	
	self.game_loaded = true;
	
	-- loading library values
	__is_loaded_game = self:load_value("__is_loaded_game", false, context);
	__campaign_defense_loadstring = self:load_value("__campaign_defense_loadstring", "", context)
	
	self:process_loading_game_callbacks(context);
	
	dec_tab();
	output("********************************************************************************");
	output("");
	restore_tab();
end;
	

function campaign_manager:process_loading_game_callbacks(context)
	for i = 1, #self.loading_game_callbacks do
		self.loading_game_callbacks[i](context);
	end;
end;




-----------------------------------------------------------------------------
-- Saving and Loading values - writes the values and outputs to console
-----------------------------------------------------------------------------

function campaign_manager:save_value(name, value, context)
	output("Saving value " .. name .. " [" .. tostring(value) .. "]");
	self.game_interface:save_named_value(name, value, context);
end;


function campaign_manager:load_value(name, default, context)
	local retval = self.game_interface:load_named_value(name, default, context);
	output("Loading value " .. name .. " [" .. tostring(retval) .. "]");
	return retval;
end;


-----------------------------------------------------------------------------
-- is_multiplayer, returns true if this is a multiplayer game. Must only
-- be called after the game interface is created
-----------------------------------------------------------------------------

function campaign_manager:is_multiplayer()
	if not self.game_interface_created then
		script_error(self.name .. " ERROR: is_multiplayer() called before game_interface has been created!");
		return false;
	end;
	
	return self.is_multiplayer_campaign;
end;


-----------------------------------------------------------------------------
-- is_new_game, returns true if this is a new game, false otherwise.
-- Note that if this is called before the game has been loaded this will
-- return false and throw a script assert
-----------------------------------------------------------------------------

function campaign_manager:is_new_game()
	if not self.game_loaded then
		script_error(self.name .. " WARNING: is_new_game() called before the game has loaded, this call should happen later in the loading process. Returning false.");
		return false;
	end;
	
	return not __is_loaded_game;
end;


function campaign_manager:set_new_game(value)
	__is_loaded_game = not value;
end;


-----------------------------------------------------------------------------
-- get_local_faction, returns the name of the local faction (there should
-- only be one). If it doesn't exist yet throw an error
-----------------------------------------------------------------------------

function campaign_manager:get_local_faction()
	if not self.game_interface_created then
		script_error(self.name .. " ERROR: get_local_faction() called before game_interface has been created!");
		return "";
	end;
	
	return self.local_faction;
end;




-----------------------------------------------------------------------------
-- event_handler functions - these are passed to the
-- internally-created event_handler object
-----------------------------------------------------------------------------

function campaign_manager:add_listener(...)
	return self.eh:add_listener(...);
end;


function campaign_manager:remove_listener(...)
	return self.eh:remove_listener(...);
end;







-----------------------------------------------------------------------------
-- camera zoom limit
-----------------------------------------------------------------------------

-- if the game interface has been set up then call set_zoom_limit() on it immediately
function campaign_manager:set_default_zoom_limit(h_max, h_min)
	self.default_zoom_limit_h_max = h_max;
	self.default_zoom_limit_h_min = h_min;

	self:restore_zoom_limit();
end;


function campaign_manager:restore_zoom_limit()
	if self.game_interface_created and self.default_zoom_limit_h_max and self.default_zoom_limit_h_min then
		self.game_interface:set_zoom_limit(self.default_zoom_limit_h_max, self.default_zoom_limit_h_min);
	end;
end;


function campaign_manager:set_cinematic_zoom_limit()
	if self.game_interface_created then
		self.game_interface:set_zoom_limit(self.cinematic_zoom_limit_h_max, self.cinematic_zoom_limit_h_min);
	end;
end;













-----------------------------------------------------------------------------
-- create_force override - outputs to console, and attempts to verify that
-- the force was actually created
-----------------------------------------------------------------------------

function campaign_manager:create_force(faction_key, unit_list, region_key, x, y, id, command_queue, success_callback, fail_callback)
	if not is_string(faction_key) then
		script_error("ERROR: create_force() called but supplied faction key [" .. tostring(faction_key) .. "] is not a string");
		return;
	end;
	
	if not is_string(unit_list) then
		script_error("ERROR: create_force() called but supplied unit list [" .. tostring(unit_list) .. "] is not a string");
		return;
	end;
	
	if not is_string(region_key) then
		script_error("ERROR: create_force() called but supplied region key [" .. tostring(region_key) .. "] is not a string");
		return;
	end;
	
	if not is_number(x) or x < 0 then
		script_error("ERROR: create_force() called but supplied x co-ordinate [" .. tostring(x) .. "] is not a positive number");
		return;
	end;
	
	if not is_number(y) or y < 0 then
		script_error("ERROR: create_force() called but supplied y co-ordinate [" .. tostring(y) .. "] is not a positive number");
		return;
	end;
	
	if not is_string(id) then
		script_error("ERROR: create_force() called but supplied id [" .. tostring(id) .. "] is not a string");
		return;
	end;

	if not is_boolean(command_queue) then
		script_error("ERROR: create_force() called but supplied command queue switch [" .. tostring(command_queue) .. "] is not a boolean value");
		return;
	end;
	
	if not is_function(success_callback) and not is_nil(success_callback) then
		script_error("ERROR: create_force() called but supplied success callback [" .. tostring(success_callback) .. "] is not a function or nil");
		return;
	end;
	
	if not is_function(fail_callback) and not is_nil(fail_callback) then
		script_error("ERROR: create_force() called but supplied failure callback [" .. tostring(fail_callback) .. "] is not a function or nil");
		return;
	end;
	
	local faction = get_faction(scripting, faction_key);
	
	local num_forces = faction:military_force_list():num_items();
	
	-- if this command is going via the command queue then we won't be able to tell if the force was created immediately
	if command_queue then
		local listener_name = "campaign_manager_create_force_" .. id;
		self:add_listener(
			listener_name,
			"ScriptedForceCreated",
			true,
			function() self:force_created(id, listener_name, faction_key, x, y, success_callback, fail_callback) end,
			false
		);
		
		--Just a trigger after time???
		add_callback(function() self:force_not_created(id, listener_name, fail_callback) end, 0.5, listener_name);
	end;
	
	output("create_force() called:");
	inc_tab();
	
	output("faction_key: " .. faction_key);
	output("unit_list: " .. unit_list);
	output("region_key: " .. region_key);
	output("x: " .. tostring(x));
	output("y: " .. tostring(y));
	output("id: " .. id);
	output("command_queue: " .. tostring(command_queue));
	
	dec_tab();
	
	self.scripting.game_interface:create_force(faction_key, unit_list, region_key, x, y, id, command_queue);
	
	-- if we're not using the command queue then verify that the force was created immediately
	if not command_queue then
		if faction:military_force_list():num_items() > num_forces then
			self:force_created(id, listener_name, faction_key, x, y, success_callback, fail_callback);
			return true;
		else
			self:force_not_created(id, listener_name, fail_callback);
			return false;
		end;
	end;
end;


function campaign_manager:force_created(id, listener_name, faction_key, x, y, success_callback, fail_callback)
	if listener_name then
		cm:remove_listener(listener_name);
		remove_callback(listener_name);
	end;

	output("force with id " .. id .. " was created!");
	
	if not is_function(success_callback) then
		return;
	end;
	
	-- find the cqi of the force just created
	local character_list = get_faction(scripting, faction_key):character_list();
	
	for i = 0, character_list:num_items() - 1 do
		local char = character_list:item_at(i);
		
		if char:logical_position_x() == x and char:logical_position_y() == y then
			
			if char:has_military_force() and char:military_force():has_general() then
				success_callback(char:military_force():general_character():cqi());
				return;
			end;
		end;
	end;
	
	-- couldn't find a force in the specified position - not sure how this could be?
	output("Could not find the character with " .. id .. " what happened!!!!");
	
	if is_function(fail_callback) then
		output("I called the fail callback ")
		fail_callback();
	end;
end;


function campaign_manager:force_not_created(id, listener_name, fail_callback)
	if listener_name then
		cm:remove_listener(listener_name);
		remove_callback(listener_name);
	end;
	
	output("force with id " .. id .. " was not created!");
	
	if is_function(fail_callback) then
		fail_callback();
	end;
end;







C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\_lib\lib_campaign_ui.lua


-------------------------------------------------------
-------------------------------------------------------
--	STATE MANAGEMENT
-------------------------------------------------------
-------------------------------------------------------

-- some unpleasant script to work out whether we should enable/disable
-- the keyboard shortcuts 2, 3, 4 which have multiple meanings

bool_army_details_enabled = true;
bool_province_details_enabled = true;
bool_army_recruit_units_enabled = true;
bool_province_raise_forces_enabled = true;
bool_army_recruit_agent_enabled = true;
bool_province_hire_mercenaries_enabled = true;


bool_campaign_ui_initialised = false;

ui_override = {
	scripting = nil,
	name = "",
	current_state = true,
	is_allowed = false,
	lock_func = nil,
	unlock_func = nil,
	suppressed_on_startup = false
};


function ui_override:new(name, lock_func, unlock_func, is_allowed)
	if not is_string(name) then
		script_error("ERROR: trying to create ui_override but name [" .. tostring(k_func) .. "] is not a function");
		return;
	end;

	if not is_function(lock_func) then
		script_error(name .. " ERROR: trying to create ui_override but supplied lock function [" .. tostring(lock_func) .. "] is not a function");
		return;
	end;
	if not is_function(unlock_func) then
		script_error(name .. " ERROR: trying to create ui_override but supplied unlock function [" .. tostring(unlock_func) .. "] is not a function");
		return;
	end;
	
	if is_allowed ~= false then
		is_allowed = true;
	end
	
	local ui = {};

	setmetatable(ui, self);
	self.__index = self;
	self.__tostring = function() return TYPE_UI_OVERRIDE end;
	
	ui.name = name;
	ui.lock_func = lock_func;
	ui.unlock_func = unlock_func;
	ui.is_allowed = is_allowed;

	return ui;
end;


function ui_override:set_allowed(value, do_not_process)
	self.is_allowed = value;
	
	if value then
		output("\t++ Allowing UI override: " .. self.name);
		if bool_campaign_ui_initialised and not do_not_process then
			self:unlock(true);
		end;
	else
		output("\t++ Disallowing UI override: " .. self.name);
		if bool_campaign_ui_initialised and not do_not_process then
			self:lock(true);
		end;
	end;
end;


function ui_override:get_allowed()
	return self.is_allowed;
end;


function ui_override:lock(force)
	if not force then
		if self.current_state then
			return;
		end;
	end;
	
	self.current_state = true;
	
	output("\t++ Locking UI override: " .. self.name);
	
	self.lock_func();
end;


function ui_override:unlock(force)
	if not force then
		if not self.current_state or not self.is_allowed then
			return;
		end;
	end;
	
	self.current_state = false;
		
	output("\t++ Unlocking UI override: " .. self.name);
	self.unlock_func();
end;


function ui_override:suppress_on_startup()
	output("\t++ Suppressing UI override: " .. self.name);
	self.suppressed_on_startup = true;
end;


function ui_override:unsuppress()
	output("\t++ Unsuppressing UI override: " .. self.name);
	self.suppressed_on_startup = false;
end;



ui_state = {
	-- list of all ui_overrides:
		-- toggle_movement_speed
		-- saving
		-- radar_rollout_buttons
		-- incentives
		-- stances
		-- province_details
		-- character_details
		-- raise_army
		-- recruit_units
		-- enlist_agent
		-- recruit_mercenaries
		-- faction_button
		-- missions
		-- finance
		-- technology
		-- diplomacy
		-- tactical_map
		-- enlist_navy
		-- events_rollout
		-- events_panel
		-- end_turn
		-- tax_exemption
		-- autoresolve
		-- maintain_siege
		-- prebattle_attack
		-- cancel_siege_weapons
		-- retreat
		-- dismantle_building
		-- disband_unit
		-- repair_building
		-- cancel_construction
		-- cancel_recruitment
		-- construction_site
		-- cost_display
		-- disable_dismiss_advice_end_turn
		-- campaign_values
		-- toggle_move_speed
		-- disable_side_panels
		-- disable_end_of_turn_warnings
		-- windowed_movies
		-- upgrade_unit
		-- sally_forth_button
		-- subjugation_button
	
	-------------------------------
	-- toggle_movement_speed
	-------------------------------
	toggle_movement_speed = ui_override:new(
		"toggle_movement_speed",
		function()
			scripting.game_interface:disable_shortcut("root", "toggle_movement_speed", true);
		end,
		function()
			scripting.game_interface:disable_shortcut("root", "toggle_movement_speed", false);
		end
	),

	-------------------------------
	-- saving
	-------------------------------
	saving = ui_override:new(
		"saving",
		function()
			scripting.game_interface:disable_saving_game(true);
		end,
		function()
			scripting.game_interface:disable_saving_game(false);
		end
	),
	
	-------------------------------
	-- radar_rollout_buttons
	-------------------------------
	radar_rollout_buttons = ui_override:new(
		"radar_rollout_buttons",
		function()
			Set_Component_Active(false, scripting.m_root, "tab_units");
			Set_Component_Active(false, scripting.m_root, "tab_regions");
			Set_Component_Active(false, scripting.m_root, "tab_factions");
			Set_Component_Active(false, scripting.m_root, "tab_events");
			-- UIComponent(scripting.m_root:Find("tab_units")):SetState("inactive");
			-- UIComponent(scripting.m_root:Find("tab_regions")):SetState("inactive");
			-- UIComponent(scripting.m_root:Find("tab_factions")):SetState("inactive");
			-- UIComponent(scripting.m_root:Find("tab_events")):SetState("inactive");
		end,
		function()
			Set_Component_Active(true, scripting.m_root, "tab_units");
			Set_Component_Active(true, scripting.m_root, "tab_regions");
			Set_Component_Active(true, scripting.m_root, "tab_factions");
			Set_Component_Active(true, scripting.m_root, "tab_events");
			-- UIComponent(scripting.m_root:Find("tab_units")):SetState("active");
			-- UIComponent(scripting.m_root:Find("tab_regions")):SetState("active");
			-- UIComponent(scripting.m_root:Find("tab_factions")):SetState("active");
			-- UIComponent(scripting.m_root:Find("tab_events")):SetState("active");
		end
	),
	
	-------------------------------
	-- incentives
	-------------------------------
	incentives = ui_override:new(
		"incentives",
		function()
			scripting.game_interface:override_ui("disable_incentives_stack", true);
		end,
		function()
			scripting.game_interface:override_ui("disable_incentives_stack", false);
		end
	),
	
	-------------------------------
	-- stances
	-------------------------------
	stances = ui_override:new(
		"stances",
		function()
			scripting.game_interface:override_ui("disable_stances_stack", true);
		end,
		function()
			scripting.game_interface:override_ui("disable_stances_stack", false);
		end
	),
	
	-------------------------------
	-- province_details
	-------------------------------
	province_details = ui_override:new(
		"province_details",
		function()
			bool_province_details_enabled = false;
			scripting.game_interface:disable_shortcut("layout", "show_details", true);
			-- UIComponent(UIComponent(scripting.m_root:Find("button_group_settlement")):Find("button_province_details")):SetState("inactive");
			Set_Component_Active(false, scripting.m_root, "button_province_details", "button_group_settlement");
		end,
		function()
			bool_province_details_enabled = true;
			-- UIComponent(UIComponent(scripting.m_root:Find("button_group_settlement")):Find("button_province_details")):SetState("active");
			Set_Component_Active(true, scripting.m_root, "button_province_details", "button_group_settlement");
			if bool_army_details_enabled then
				scripting.game_interface:disable_shortcut("layout", "show_details", false);
			end;
		end
	),
	
	-------------------------------
	-- character_details
	-------------------------------
	character_details = ui_override:new(
		"stances",
		function()
			bool_army_details_enabled = false;
			scripting.game_interface:disable_shortcut("layout", "show_details", true);
			-- UIComponent(UIComponent(scripting.m_root:Find("button_group_army")):Find("button_character_details")):SetState("inactive");
			Set_Component_Active(false, scripting.m_root, "button_character_details", "button_group_army");
			scripting.game_interface:override_ui("disable_character_details_panel", true);
		end,
		function()
			bool_army_details_enabled = true;
			-- UIComponent(UIComponent(scripting.m_root:Find("button_group_army")):Find("button_character_details")):SetState("active");
			Set_Component_Active(true, scripting.m_root, "button_character_details", "button_group_army");
			scripting.game_interface:override_ui("disable_character_details_panel", false);
			if bool_province_details_enabled then
				scripting.game_interface:disable_shortcut("layout", "show_details", false);
			end;
		end
	),

	-------------------------------
	-- raise_army
	-------------------------------
	raise_army = ui_override:new(
		"raise_army",
		function()
			bool_province_raise_forces_enabled = false;
			scripting.game_interface:disable_shortcut("layout", "show_recruitment_units", true);
			scripting.game_interface:override_ui("disable_enlist_general", true);
			-- UIComponent(UIComponent(scripting.m_root:Find("button_group_settlement")):Find("button_create_army")):SetState("inactive");
			Set_Component_Active(false, scripting.m_root, "button_create_army", "button_group_settlement");
		end,
		function()
			bool_province_raise_forces_enabled = true;
			-- UIComponent(UIComponent(scripting.m_root:Find("button_group_settlement")):Find("button_create_army")):SetState("active");
			Set_Component_Active(true, scripting.m_root, "button_create_army", "button_group_settlement");
			scripting.game_interface:override_ui("disable_enlist_general", false);
			if bool_army_recruit_units_enabled then
				scripting.game_interface:disable_shortcut("layout", "show_recruitment_units", false);
			end;
		end
	),
	
	-------------------------------
	-- recruit_units
	-------------------------------
	recruit_units = ui_override:new(
		"recruit_units",
		function()
			bool_army_recruit_units_enabled = false;
			scripting.game_interface:disable_shortcut("layout", "show_recruitment_units", true);
			-- UIComponent(UIComponent(scripting.m_root:Find("button_group_army")):Find("button_recruitment")):SetState("inactive");
			Set_Component_Active(false, scripting.m_root, "button_recruitment", "button_group_army");
			scripting.game_interface:override_ui("disable_recruit_units", true);
		end,
		function()
			bool_army_recruit_units_enabled = true;
			-- UIComponent(UIComponent(scripting.m_root:Find("button_group_army")):Find("button_recruitment")):SetState("active");
			Set_Component_Active(true, scripting.m_root, "button_recruitment", "button_group_army");
			scripting.game_interface:override_ui("disable_recruit_units", false);
			if bool_province_raise_forces_enabled then
				scripting.game_interface:disable_shortcut("layout", "show_recruitment_units", false);
			end;
		end
	),
	
	-------------------------------
	-- enlist_agent
	-------------------------------
	enlist_agent = ui_override:new(
		"enlist_agent",
		function()
			bool_army_recruit_agent_enabled = false;
			scripting.game_interface:disable_shortcut("layout", "show_recruitment_agents", true);
			-- UIComponent(UIComponent(scripting.m_root:Find("button_group_settlement")):Find("button_agents")):SetState("inactive");
			Set_Component_Active(false, scripting.m_root, "button_agents", "button_group_settlement");
			scripting.game_interface:override_ui("disable_enlist_agent", true);
		end,
		function()
			scripting.game_interface:override_ui("disable_enlist_agent", false);
			-- UIComponent(UIComponent(scripting.m_root:Find("button_group_settlement")):Find("button_agents")):SetState("active");
			Set_Component_Active(true, scripting.m_root, "button_agents", "button_group_settlement");
			bool_army_recruit_agent_enabled = true;
			if bool_province_hire_mercenaries_enabled then
				scripting.game_interface:disable_shortcut("layout", "show_recruitment_agents", false);
			end;
		end
	),
	
	-------------------------------
	-- recruit_mercenaries
	-------------------------------
	recruit_mercenaries = ui_override:new(
		"recruit_mercenaries",
		function()
			bool_province_hire_mercenaries_enabled = false;
			scripting.game_interface:disable_shortcut("layout", "show_recruitment_agents", true);
			-- UIComponent(UIComponent(scripting.m_root:Find("button_group_army")):Find("button_mercenaries")):SetState("inactive");
			Set_Component_Active(false, scripting.m_root, "button_mercenaries", "button_group_army");
			scripting.game_interface:override_ui("disable_recruit_mercenaries", true);
		end,
		function()
			-- UIComponent(UIComponent(scripting.m_root:Find("button_group_army")):Find("button_mercenaries")):SetState("active");
			Set_Component_Active(true, scripting.m_root, "button_mercenaries", "button_group_army");
			scripting.game_interface:override_ui("disable_recruit_mercenaries", false);
			bool_province_hire_mercenaries_enabled = true;
			if bool_army_recruit_agent_enabled then
				scripting.game_interface:disable_shortcut("layout", "show_recruitment_agents", false);
			end;
		end
	),
	
	-------------------------------
	-- faction_button
	-------------------------------
	faction_button = ui_override:new(
		"faction_button",
		function()
			scripting.game_interface:override_ui("disable_clan_button", true);
		end,
		function()
			scripting.game_interface:override_ui("disable_clan_button", false);
		end
	),
	
	-------------------------------
	-- missions
	-------------------------------
	missions = ui_override:new(
		"missions",
		function()
			scripting.game_interface:disable_shortcut("button_missions", "show_objectives", true);
			-- UIComponent(scripting.m_root:Find("button_missions")):SetState("inactive");
			scripting.game_interface:override_ui("disable_missions_button", true);
			Set_Component_Active(false, scripting.m_root, "button_missions");
		end,
		function()
			scripting.game_interface:disable_shortcut("button_missions", "show_objectives", false);
			-- UIComponent(scripting.m_root:Find("button_missions")):SetState("active");
			scripting.game_interface:override_ui("disable_missions_button", false);
			Set_Component_Active(true, scripting.m_root, "button_missions");
		end
	),
	
	-------------------------------
	-- finance
	-------------------------------
	finance = ui_override:new(
		"finance",
		function()
			scripting.game_interface:disable_shortcut("button_finance", "show_finance", true);
			-- UIComponent(scripting.m_root:Find("button_finance")):SetState("inactive");
			scripting.game_interface:override_ui("disable_finance_button", true);
			Set_Component_Active(false, scripting.m_root, "button_finance");
		end,
		function()
			scripting.game_interface:disable_shortcut("button_finance", "show_finance", false)
			-- UIComponent(scripting.m_root:Find("button_finance")):SetState("active");
			scripting.game_interface:override_ui("disable_finance_button", false);
			Set_Component_Active(true, scripting.m_root, "button_finance");
		end
	),
	
	-------------------------------
	-- technology
	-------------------------------
	technology = ui_override:new(
		"technology",
		function()
			scripting.game_interface:disable_shortcut("button_technology", "show_technologies", true)
			-- UIComponent(scripting.m_root:Find("button_technology")):SetState("inactive");
			scripting.game_interface:override_ui("disable_tech_button", true);
			Set_Component_Active(false, scripting.m_root, "button_technology");
			Set_Component_Visible(false, scripting.m_root, "alert_icon");
		end,
		function()
			scripting.game_interface:disable_shortcut("button_technology", "show_technologies", false)
			-- UIComponent(scripting.m_root:Find("button_technology")):SetState("active");
			scripting.game_interface:override_ui("disable_tech_button", false);
			Set_Component_Active(true, scripting.m_root, "button_technology");
			Set_Component_Visible(true, scripting.m_root, "alert_icon");
		end
	),
	
	-------------------------------
	-- diplomacy
	-------------------------------
	diplomacy = ui_override:new(
		"diplomacy",
		function()
			scripting.game_interface:disable_shortcut("button_diplomacy", "show_diplomacy", true);
			-- UIComponent(scripting.m_root:Find("button_diplomacy")):SetState("inactive");
			scripting.game_interface:override_ui("disable_diplomacy", true);
			Set_Component_Active(false, scripting.m_root, "button_diplomacy");
		end,
		function()
			scripting.game_interface:disable_shortcut("button_diplomacy", "show_diplomacy", false);
			-- UIComponent(scripting.m_root:Find("button_diplomacy")):SetState("active");
			scripting.game_interface:override_ui("disable_diplomacy", false);
			Set_Component_Active(true, scripting.m_root, "button_diplomacy");
		end
	),
	
	-------------------------------
	-- tactical_map
	-------------------------------
	tactical_map = ui_override:new(
		"tactical_map",
		function()
			scripting.game_interface:disable_shortcut("camera", "show_tactical_map", true);
			-- UIComponent(UIComponent(scripting.m_root:Find("radar_parent")):Find("button_tactical_map")):SetState("inactive");
			scripting.game_interface:override_ui("disable_campaign_tactical_map", true);
			Set_Component_Active(false, scripting.m_root, "button_tactical_map", "radar_parent");
		end,
		function()
			scripting.game_interface:disable_shortcut("camera", "show_tactical_map", false);
			-- UIComponent(UIComponent(scripting.m_root:Find("radar_parent")):Find("button_tactical_map")):SetState("active");
			scripting.game_interface:override_ui("disable_campaign_tactical_map", false);
			Set_Component_Active(true, scripting.m_root, "button_tactical_map", "radar_parent");
		end
	),
	
	-------------------------------
	-- enlist_navy
	-------------------------------
	enlist_navy = ui_override:new(
		"enlist_navy",
		function()
			scripting.game_interface:override_ui("disable_enlist_navy", true);
		end,
		function()
			scripting.game_interface:override_ui("disable_enlist_navy", false);
		end
	),
	
	-------------------------------
	-- events_rollout
	-------------------------------
	events_rollout = ui_override:new(
		"events_rollout",
		function()
			scripting.game_interface:override_ui("disable_campaign_dropdowns", true);
		end,
		function()
			scripting.game_interface:override_ui("disable_campaign_dropdowns", false);
		end
	),
	
	-------------------------------
	-- events_panel
	-------------------------------
	events_panel = ui_override:new(
		"events_panel",
		function()
			scripting.game_interface:override_ui("disable_event_panel_auto_open", true);
		end,
		function()
			scripting.game_interface:override_ui("disable_event_panel_auto_open", false);
		end
	),
	
	-------------------------------
	-- end_turn
	-------------------------------
	end_turn = ui_override:new(
		"end_turn",
		function()
			scripting.game_interface:override_ui("disable_end_turn", true);
		end,
		function()
			scripting.game_interface:override_ui("disable_end_turn", false);
		end
	),
	
	-------------------------------
	-- tax_exemption
	-------------------------------
	tax_exemption = ui_override:new(
		"tax_exemption",
		function()
			Set_Component_Active(false, scripting.m_root, "checkbox_tax_exempt", "province_details_panel");
			scripting.game_interface:override_ui("disable_tax_exempt", true);
		end,
		function()
			Set_Component_Active(true, scripting.m_root, "checkbox_tax_exempt", "province_details_panel");
			scripting.game_interface:override_ui("disable_tax_exempt", false);
		end
	),
	
	-------------------------------
	-- autoresolve
	-------------------------------
	autoresolve = ui_override:new(
		"autoresolve",
		function()
			scripting.game_interface:override_ui("disable_prebattle_autoresolve", true);
		end,
		function()
			scripting.game_interface:override_ui("disable_prebattle_autoresolve", false);
		end
	),
	
	-------------------------------
	-- maintain_siege
	-------------------------------
	maintain_siege = ui_override:new(
		"maintain_siege",
		function()
			scripting.game_interface:override_ui("disable_prebattle_continue", true);
			-- UIComponent(UIComponent(scripting.m_root:Find("button_set_siege")):Find("button_continue_siege")):SetState("inactive");
			-- UIComponent(UIComponent(scripting.m_root:Find("button_set_attack")):Find("button_maintain_blockade")):SetState("inactive");
			
			Set_Component_Active(false, scripting.m_root, "button_continue_siege", "button_set_siege");
			Set_Component_Active(false, scripting.m_root, "button_maintain_blockade", "button_set_attack");
		end,
		function()
			scripting.game_interface:override_ui("disable_prebattle_continue", false);
			-- UIComponent(UIComponent(scripting.m_root:Find("button_set_siege")):Find("button_continue_siege")):SetState("active");
			-- UIComponent(UIComponent(scripting.m_root:Find("button_set_attack")):Find("button_maintain_blockade")):SetState("active");
			
			Set_Component_Active(true, scripting.m_root, "button_continue_siege", "button_set_siege");
			Set_Component_Active(true, scripting.m_root, "button_maintain_blockade", "button_set_attack");
		end
	),
	
	-------------------------------
	-- prebattle_attack
	-------------------------------
	prebattle_attack = ui_override:new(
		"prebattle_attack",
		function()
			scripting.game_interface:override_ui("disable_prebattle_attack", true);
		end,
		function()
			scripting.game_interface:override_ui("disable_prebattle_attack", false);
		end
	),
	
	-------------------------------
	-- cancel_siege_weapons
	-------------------------------
	cancel_siege_weapons = ui_override:new(
		"cancel_siege_weapons",
		function()
			scripting.game_interface:override_ui("disable_cancel_siege_equipment", true);
		end,
		function()
			scripting.game_interface:override_ui("disable_cancel_siege_equipment", false);
		end
	),
	
	-------------------------------
	-- retreat
	-------------------------------
	retreat = ui_override:new(
		"retreat",
		function()
			-- UIComponent(UIComponent(scripting.m_root:Find("button_set_attack")):Find("button_retreat")):SetState("inactive");
			scripting.game_interface:override_ui("disable_prebattle_retreat", true);
			-- UIComponent(UIComponent(scripting.m_root:Find("button_set_siege")):Find("button_retreat")):SetState("inactive");
			Set_Component_Active(false, scripting.m_root, "button_retreat", "button_set_siege");
			Set_Component_Active(false, scripting.m_root, "button_retreat", "button_set_attack");
		end,
		function()
			-- UIComponent(UIComponent(scripting.m_root:Find("button_set_attack")):Find("button_retreat")):SetState("active");
			scripting.game_interface:override_ui("disable_prebattle_retreat", false);
			-- UIComponent(UIComponent(scripting.m_root:Find("button_set_siege")):Find("button_retreat")):SetState("active");
			Set_Component_Active(true, scripting.m_root, "button_retreat", "button_set_siege");
			Set_Component_Active(true, scripting.m_root, "button_retreat", "button_set_attack");
		end
	),
	
	-------------------------------
	-- dismantle_building
	-------------------------------
	dismantle_building = ui_override:new(
		"dismantle_building",
		function()
			scripting.game_interface:override_ui("disable_dismantle_building", true);
		end,
		function()
			scripting.game_interface:override_ui("disable_dismantle_building", false);
		end
	), 
	
	-------------------------------
	-- disband_unit
	-------------------------------
	disband_unit = ui_override:new(
		"disband_unit",
		function()
			scripting.game_interface:override_ui("disable_disband_unit", true);
		end,
		function()
			scripting.game_interface:override_ui("disable_disband_unit", false);
		end
	), 
	
	-------------------------------
	-- repair_building
	-------------------------------
	repair_building = ui_override:new(
		"repair_building",
		function()
			scripting.game_interface:override_ui("disable_repair_building", true);
		end,
		function()
			scripting.game_interface:override_ui("disable_repair_building", false);
		end
	),
	
	-------------------------------
	-- cancel_construction
	-------------------------------
	cancel_construction = ui_override:new(
		"cancel_construction",
		function()
			scripting.game_interface:override_ui("disable_cancel_construction", true);
		end,
		function()
			scripting.game_interface:override_ui("disable_cancel_construction", false);
		end
	),
	
	-------------------------------
	-- cancel_recruitment
	-------------------------------
	cancel_recruitment = ui_override:new(
		"cancel_recruitment",
		function()
			scripting.game_interface:override_ui("disable_cancel_recruitment", true);
		end,
		function()
			scripting.game_interface:override_ui("disable_cancel_recruitment", false);
		end
	),
	
	-------------------------------
	-- construction_site
	-------------------------------
	construction_site = ui_override:new(
		"construction_site",
		function()
			scripting.game_interface:override_ui("disable_construction_site", true);
		end,
		function()
			scripting.game_interface:override_ui("disable_construction_site", false);
		end
	),
	
	-------------------------------
	-- cost_display
	-------------------------------
	cost_display = ui_override:new(
		"cost_display",
		function()
			scripting.game_interface:override_ui("disable_cost_display", true);
		end,
		function()
			scripting.game_interface:override_ui("disable_cost_display", false);
		end
	),
	
	-------------------------------
	-- disable_dismiss_advice_end_turn
	-------------------------------
	disable_dismiss_advice_end_turn = ui_override:new(
		"disable_dismiss_advice_end_turn",
		function()
			scripting.game_interface:override_ui("disable_dismiss_advice_end_turn", true);
		end,
		function()
			scripting.game_interface:override_ui("disable_dismiss_advice_end_turn", false);
		end
	),
	
	-------------------------------
	-- campaign_values
	-------------------------------
	campaign_values = ui_override:new(
		"campaign_values",
		function()
			Set_Component_Visible(false, scripting.m_root, "treasury", "radar_bottom");
			Set_Component_Visible(false, scripting.m_root, "income", "radar_bottom");
			Set_Component_Visible(false, scripting.m_root, "food", "radar_bottom");
			Set_Component_Visible(false, scripting.m_root, "end_turn_date", "radar_bottom");
			-- UIComponent(UIComponent(scripting.m_root:Find("radar_bottom")):Find("treasury")):SetVisible(false);
			-- UIComponent(UIComponent(scripting.m_root:Find("radar_bottom")):Find("income")):SetVisible(false);
			-- UIComponent(UIComponent(scripting.m_root:Find("radar_bottom")):Find("food")):SetVisible(false);
			-- UIComponent(UIComponent(scripting.m_root:Find("radar_bottom")):Find("end_turn_date")):SetVisible(false);
		end,
		function()
			Set_Component_Visible(true, scripting.m_root, "treasury", "radar_bottom");
			Set_Component_Visible(true, scripting.m_root, "income", "radar_bottom");
			Set_Component_Visible(true, scripting.m_root, "food", "radar_bottom");
			Set_Component_Visible(true, scripting.m_root, "end_turn_date", "radar_bottom");
			-- UIComponent(UIComponent(scripting.m_root:Find("radar_bottom")):Find("treasury")):SetVisible(true);
			-- UIComponent(UIComponent(scripting.m_root:Find("radar_bottom")):Find("income")):SetVisible(true);
			-- UIComponent(UIComponent(scripting.m_root:Find("radar_bottom")):Find("food")):SetVisible(true);
			-- UIComponent(UIComponent(scripting.m_root:Find("radar_bottom")):Find("end_turn_date")):SetVisible(true);
		end
	),
	
	-------------------------------
	-- toggle_move_speed
	-------------------------------
	toggle_move_speed = ui_override:new(
		"toggle_move_speed",
		function()
			scripting.game_interface:disable_shortcut("root", "toggle_move_speed", true);
		end,
		function()
			scripting.game_interface:disable_shortcut("root", "toggle_move_speed", false);
		end
	),
	
	-------------------------------
	-- disable_side_panels
	-------------------------------
	disable_side_panels = ui_override:new(
		"disable_side_panels",
		function()
			scripting.game_interface:disable_shortcut("root", "disable_side_panels", true);
		end,
		function()
			scripting.game_interface:disable_shortcut("root", "disable_side_panels", false);
		end
	),
	
	-------------------------------
	-- disable_end_of_turn_warnings
	-------------------------------
	disable_end_of_turn_warnings = ui_override:new(
		"disable_end_of_turn_warnings",
		function()
			scripting.game_interface:override_ui("disable_end_of_turn_warnings", true);
		end,
		function()
			scripting.game_interface:override_ui("disable_end_of_turn_warnings", false);
		end
	),
	
	-------------------------------
	-- windowed_movies
	-------------------------------
	windowed_movies = ui_override:new(
		"windowed_movies",
		function()
			scripting.game_interface:override_ui("disable_windowed_movies", true);
		end,
		function()
			scripting.game_interface:override_ui("disable_windowed_movies", false);
		end
	),
	
	-------------------------------
	-- upgrade_unit
	-------------------------------
	upgrade_unit = ui_override:new(
		"upgrade_unit",
		function()
			scripting.game_interface:override_ui("disable_upgrade_unit", true);
		end,
		function()
			scripting.game_interface:override_ui("disable_upgrade_unit", false);
		end
	),
	
	-------------------------------
	-- sally_forth_button
	-------------------------------
	sally_forth_button = ui_override:new(
		"sally_forth_button",
		function()
			scripting.game_interface:override_ui("disable_sally_forth_button", true);
		end,
		function()
			scripting.game_interface:override_ui("disable_sally_forth_button", false);
		end
	),
		
	-------------------------------
	-- subjugation_button
	-------------------------------
	subjugation_button = ui_override:new(
		"subjugation_button",
		function()
			scripting.game_interface:override_ui("disable_subjugation_button", true);
		end,
		function()
			scripting.game_interface:override_ui("disable_subjugation_button", false);
		end
	),
};



function lock_campaign_ui()
	for k, v in pairs(ui_state) do
		v:lock();
	end;
end;


function unlock_campaign_ui()
	for k, v in pairs(ui_state) do
		v:unlock();
	end;
end;


function set_all_campaign_ui()
	for k, v in pairs(ui_state) do
		if v:get_allowed() and not v.suppressed_on_startup then
			v:unlock(true);
		else
			v:lock(true);
			v:unsuppress();
		end;
	end;
end;


-- to be called on shutdown
function release_campaign_ui()
	for k, v in pairs(ui_state) do
		v:set_allowed();
	end;
end;


function save_campaign_ui_state(context)
	for k, v in pairs(ui_state) do
		scripting.game_interface:save_named_value(v.name, v:get_allowed(), context);
	end;
end;


function load_campaign_ui_state(context)
	output("load_campaign_ui_state() called");
	
	for k, v in pairs(ui_state) do
		local value = scripting.game_interface:load_named_value(v.name, true, context)
		v:set_allowed(value);
	end;
end;



function init_campaign_ui_state(eh)
	add_savegame_callback(eh, function(context) save_campaign_ui_state(context) end);
	add_loadgame_callback(eh, function(context) load_campaign_ui_state(context) end);
	
	-- listen for ui being created
	eh:add_listener(
		"init_campaign_ui_state_ui_created",
		"UICreated",
		true,
		function(context) campaign_ui_initialised(context) end,
		false
	);
	
	-- clean up when the ui is destroyed
	-- (don't use add_campaign_cleanup_action)
	eh:add_listener(
		"init_campaign_ui_state_ui_destroyed",
		"UIDestroyed",
		true,
		function(context) release_campaign_ui() end,
		false
	);
	-- add_campaign_cleanup_action(function() release_campaign_ui() end);
end;



function campaign_ui_initialised(context)
	bool_campaign_ui_initialised = true;
	set_all_campaign_ui();
end;


function suppress_events_on_startup(eh)
	ui_state.events_rollout:suppress_on_startup();
	ui_state.events_panel:suppress_on_startup();
end;




-------------------------------------------------------
-------------------------------------------------------
--	Set Component State
-------------------------------------------------------
-------------------------------------------------------

function Set_Component_State(callback, root, ...)
	if not is_function(callback) then
		script_error("ERROR: Set_Component_State called but supplied callback [" .. tostring(callback) .. "] is not a function");
		return;
	end;
	
	if not is_uicomponent(root) and not root == nil then
		script_error("ERROR: Set_Component_State called but supplied ui root [" .. tostring(root) .. "] is not a ui component");
		return;
	end;
	
	for i = 1, arg.n do
		if not is_string(arg[i]) then
			script_error("ERROR: Set_Component_State called but supplied arg[" .. i .."] [" .. tostring(arg[i]) .. "] is not a string");
			return;
		end;
	end;

	-- iterate backwards through our argument list and find each string object, starting from the supplied root
	local current_uic = root;
	local current_level = arg.n;
	
	while current_level >= 1 do
		if not current_uic then
			-- script_error("current_uic is nil!");
			return false;
		end;
	
		local component = current_uic:Find(arg[current_level], false);
		
		if component then
			current_uic = UIComponent(component);
		else
			return false;
		end;
		
		current_level = current_level - 1;	
	end;
		
	-- call the callback with the final object
	callback(current_uic);
	return true;
end;


function Set_Component_Visible(visible, root, ...)
	
	local arg_list = {};
	
	for i = 1, arg.n do
		table.insert(arg_list, arg[i]);
	end;

	return Set_Component_State(
		function(obj)
			obj:SetVisible(visible)
		end,
		root,
		unpack(arg_list)
	)
end;


function Set_Component_Active(is_active, root, ...)
	local active_str = nil;
	
	if is_active then
		active_str = "active"
	else
		active_str = "inactive"
	end;
	
	local arg_list = {};
	
	for i = 1, arg.n do
		table.insert(arg_list, arg[i]);
	end;

	return Set_Component_State(
		function(obj)
			obj:SetState(active_str)
		end,
		root,
		unpack(arg_list)
	)
end;





-------------------------------------------------------
-------------------------------------------------------
--	CAMPAIGN SELECTION LISTENER
-------------------------------------------------------
-------------------------------------------------------

__campaign_panels_open = {};
__campaign_character_selected = "";
__campaign_settlement_selected = "";




function start_campaign_selection_listener(eh)
	
	-- panel opened
	eh:add_listener(
		"campaign_selection_listener",
		"PanelOpenedCampaign",
		true,
		function(context)
			local panel = context.string;
			
			output("Panel opened " .. panel);
			
			if not is_panel_open(panel) then
				table.insert(__campaign_panels_open, panel);
			end;
		end,
		true
	);
	
	-- panel closed
	eh:add_listener(
		"campaign_selection_listener",
		"PanelClosedCampaign",
		true,
		function(context)
			local panel = context.string;
			
			output("Panel closed " .. panel);
			
			local panel_entry = is_panel_open(panel);
			if panel_entry then
				table.remove(__campaign_panels_open, panel_entry);
			end;
		end,
		true
	);
	
	
	-- character selected
	eh:add_listener(
		"campaign_selection_listener",
		"CharacterSelected",
		true,
		function(context)
			local char = context:character();
		
			output("Character selected, forename " .. tostring(char:get_forename()) .. ", surname " .. tostring(char:get_surname()) .. ", faction " .. tostring(char:faction():name()) .. ", cqi " .. tostring(char:cqi()));
			
			__campaign_character_selected = char_to_str_name(char);
			__campaign_settlement_selected = "";
		end,
		true
	);
	
	
	-- character deselected (only fired when no other character is selected)
	eh:add_listener(
		"campaign_selection_listener",
		"CharacterDeselected",
		true,
		function(context)
			__campaign_character_selected = "";
		end,
		true
	);
	
	
	-- settlement selected
	eh:add_listener(
		"campaign_selection_listener",
		"SettlementSelected",
		true,
		function(context) 
			local settlement = context:garrison_residence():region():name();
			
			output("Settlement selected " .. settlement);
			
			__campaign_settlement_selected = settlement;
			__campaign_character_selected = "";
		end,
		true
	);
	
	-- settlement deselected (only fired when no other settlement is selected)
	eh:add_listener(
		"campaign_selection_listener",
		"SettlementDeselected",
		true,
		function(context) 
			__campaign_settlement_selected = "";
		end,
		true
	);
end;




function is_panel_open(panel)
	for i = 1, #__campaign_panels_open do
		if __campaign_panels_open[i] == panel then
			return i;
		end;
	end;
	
	return false;
end;


-- char parameter, or scripting, faction name, forename, surname
function is_char_selected(param1, faction_name, forename, surname)

	-- param a presumed to be a char
	if not is_string(faction_name) then
		return __campaign_character_selected == char_to_str_name(param1);
	end;
	
	local scripting = param1;
	local char = get_character_from_faction_name(scripting, faction_name, forename, surname);
	
	if not char then
		return false;
	end;
		
	return __campaign_character_selected == char_to_str_name(char);
end;


function is_settlement_selected(settlement)
	return __campaign_settlement_selected == settlement;
end;




function char_to_str_name(char)
	return char:get_forename() .. "," .. char:get_surname() .. "," .. char:faction():name();
end;



-------------------------------------------------------
-------------------------------------------------------
--	PROLOGUE CAMPAIGN SETTLEMENT HIGHLIGHTER
-------------------------------------------------------
-------------------------------------------------------

-- not very nice

__prologue_campaign_settlement = {
	["pro_latium_latium"] = { x = 45.92, y = 185.10 },						-- Rome
	["pro_latium_volsci"] = { x = 59.54, y = 173.31 },						-- Velitrae
	["pro_campania_campania"] = { x = 90.26, y = 154.97 },					-- Capua
	["pro_campania_cilento"] = { x = 108.18, y = 140.46 },					-- Salernum
	["pro_magna_grecia_lucania"] = { x = 132.94, y = 118.49 },				-- Buxentum
	["pro_magna_grecia_calabria"] = { x = 176.32, y = 133.40 },				-- Tarentum
	["pro_magna_grecia_italia"] = { x = 169.67, y = 82.88 },				-- Croton
	["pro_samnium_apulia"] = { x = 123.48, y = 170.62 },					-- Lucera
	["pro_samnium_irpinia"] = { x = 128.05, y = 149.88 },					-- Malventum
	["pro_samnium_pentria"] = { x = 98.86, y = 170.4 },						-- Bovianum
	["pro_samnium_umbria"] = { x = 93.47, y = 200.56 }						-- Aternum
};



function highlight_settlement(scripting, settlement)
	unhighlight_settlement(scripting, settlement)

	for k, v in pairs(__prologue_campaign_settlement) do
		if k == settlement then
			scripting.game_interface:add_marker(settlement .. "_marker", "tutorial_marker", v.x, v.y, 2);
			return true;
		end;
	end;
	
	return false;
end;


function unhighlight_settlement(scripting, settlement)
	scripting.game_interface:remove_marker(settlement .. "_marker");
end;



function highlight_character(scripting, faction, forename, surname)
	local marker_name = tostring(faction) .. "_" .. tostring(forename) .. "_" .. tostring(surname) .. "_marker";
	
	output("highlight_character called, marker_name is " .. tostring(marker_name));
	
	local char = get_character_from_faction_name(scripting, faction, forename, surname);
	
	if char then
		-- scripting.game_interface:remove_marker(marker_name);
		scripting.game_interface:add_marker(marker_name, "tutorial_marker", char:display_position_x(), char:display_position_y(), 2);
	else
		script_error("WARNING: highlight_character() called but couldn't find a character with the given name [" .. tostring(marker_name) .. "]");
	end;
end;


function unhighlight_character(scripting, faction, forename, surname)
	local marker_name = tostring(faction) .. "_" .. tostring(forename) .. "_" .. tostring(surname) .. "_marker";
	output("unhighlight_character called, marker_name is " .. tostring(marker_name));
	scripting.game_interface:remove_marker(marker_name);
end;










-------------------------------------------------------
-------------------------------------------------------
--	PREVENTING SETTLEMENT SELECTION
-------------------------------------------------------
-------------------------------------------------------

BOOL_Disable_All_Whitelists = false;

settlement_selection_whitelist = {};

function add_settlement_selection_whitelist(settlement)
	if not is_string(settlement) then
		script_error("ERROR: add_settlement_selection_whitelist() called but argument " .. i .. " [" .. tostring(settlement) .. "] is not a string");
		return false;
	end;
	
	-- check we don't already have it
	for i = 1, #settlement_selection_whitelist do
		if settlement_selection_whitelist[i] == settlement then
			return;
		end;
	end;
	
	output("Adding settlement to selection whitelist : " .. settlement);
	
	table.insert(settlement_selection_whitelist, settlement);
end;


function remove_settlement_selection_whitelist(settlement)
	if not is_string(settlement) then
		script_error("ERROR: remove_settlement_selection_whitelist() called but supplied settlement [" .. tostring(settlement) .. "] is not a string");
		return false;
	end;
	
	for i = 1, #settlement_selection_whitelist do
		if settlement_selection_whitelist[i] == settlement then
			output("Removing settlement selection whitelist :: " .. settlement);
			table.remove(settlement_selection_whitelist, i);
			return;
		end;
	end;
end;


function clear_settlement_selection_whitelist()
	output("Clearing settlement selection whitelist");
	
	settlement_selection_whitelist = {};
end;


function enable_settlement_selection_whitelist(eh)
	disable_settlement_selection_whitelist(eh);
	
	output("Enabling settlement selection whitelist");
	
	if not BOOL_Disable_All_Whitelists then
		eh:add_listener(
			"settlement_selected_whitelist",
			"SettlementSelected",
			true,
			function(context)		
				local settlement_selected = context:garrison_residence():region():name();
				
				for i = 1, #settlement_selection_whitelist do
					if settlement_selection_whitelist[i] == settlement_selected then
						return;
					end;
				end;
				
				CampaignUI.ClearSelection();
			end,
			true
		);
	end;
end;


function disable_settlement_selection_whitelist(eh, no_output)
	if not no_output then
		output("Disabling settlement selection whitelist");
	end;

	eh:remove_listener("settlement_selected_whitelist");
end;




-------------------------------------------------------
-------------------------------------------------------
--	PREVENTING CHARACTER SELECTION
-------------------------------------------------------
-------------------------------------------------------

character_selection_whitelist = {};

-- check parameters for add or remove functions
function validate_character_selection_whitelist(forename, surname, faction)
	if not is_string(forename) then
		script_error("ERROR: modify_character_selection_whitelist() called, but supplied forename [" .. tostring(forename) .. "] is not a string");
		return false;
	end;

	if not is_string(surname) then
		script_error("ERROR: modify_character_selection_whitelist() called, but supplied surname [" .. tostring(surname) .. "] is not a string");
		return false;
	end;
	
	if not is_string(faction) then
		script_error("ERROR: modify_character_selection_whitelist() called, but supplied faction [" .. tostring(faction) .. "] is not a string");
		return false;
	end;
	
	return true;
end;


function find_character_selection_whitelist(forename, surname, faction)
	for i = 1, #character_selection_whitelist do
		local current_char = character_selection_whitelist[i];
		if current_char.forename == forename and current_char.surname == surname and current_char.faction == faction then
			return i;
		end;
	end;
	
	return false;
end;


function add_character_selection_whitelist(forename, surname, faction)
	-- check parameters
	if not validate_character_selection_whitelist(forename, surname, faction) then
		return false;
	end;
	
	-- return if this character already exists in our list
	if find_character_selection_whitelist(forename, surname, faction) then
		return false;
	end;
	
	local new_entry = {
		forename = forename,
		surname = surname,
		faction = faction
	};
	
	output("Adding character to selection whitelist :: Forename : " .. forename .. ", Surname : " .. surname .. ", Faction : " .. faction);
	
	table.insert(character_selection_whitelist, new_entry);
end;


function remove_character_selection_whitelist(forename, surname, faction)
	-- check parameters
	if not validate_character_selection_whitelist(forename, surname, faction) then
		return false;
	end;
	
	local entry_to_remove = find_character_selection_whitelist(forename, surname, faction);
	
	if not entry_to_remove then
		return;
	end;
	
	output("Removing character from selection whitelist :: Forename : " .. forename .. ", Surname : " .. surname .. ", Faction : " .. faction);
	
	table.remove(character_selection_whitelist, entry_to_remove);
end;


function clear_character_selection_whitelist()
	output("Clearing character selection whitelist");
	character_selection_whitelist = {};
end;


function enable_character_selection_whitelist(eh)
	disable_character_selection_whitelist(eh, true);
	
	output("Enabling character selection whitelist");
	
	if not BOOL_Disable_All_Whitelists then
		eh:add_listener(
			"character_selected_whitelist",
			"CharacterSelected",
			true,
			function(context)		
				local character_selected = context:character();
				
				if not find_character_selection_whitelist(character_selected:get_forename(), character_selected:get_surname(), character_selected:faction():name()) then
					CampaignUI.ClearSelection();
				end;
			end,
			true
		);
	end;
end;


function disable_character_selection_whitelist(eh, no_output)
	if not no_output then
		output("Disabling character selection whitelist");
	end;

	eh:remove_listener("character_selected_whitelist");
end;















C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\_lib\lib_common.lua


---------------------------------------------------------------
--
-- Prints a script error
--
---------------------------------------------------------------

function script_error(msg)
	local ast_line = "";
		
	for i = 1, 20 do
		ast_line = ast_line .. "*";
	end;
	
	local output = nil;

	if __game_mode == __lib_type_battle then
		local bm = get_bm(true);
		output = 
			function(msg)
				bm:out(msg);
			end;
	else
		output = 
			function(msg)
				out.ting(msg);
			end;
	end;
		
	-- do output
	output(ast_line);
	output("SCRIPT ERROR:");
	output(msg);
	output("");
	output(debug.traceback());
	output(ast_line);
	
	if __game_mode == __lib_type_battle then
		bm:error(msg .. "\n" .. debug.traceback());
	else
		assert(true, msg .. "\n" .. debug.traceback());
	end;
end;



---------------------------------------------------------------
--
-- Returns the folder name and shortform of the calling file
--  
---------------------------------------------------------------

function get_folder_name_and_shortform()	
	-- path of the file that called this function
	local calling_file_path = debug.getinfo(2).source;
	
	local path_separator = "\\";
	local folder_start = string.find(calling_file_path, path_separator);
	
	if not folder_start then
		path_separator = "/";
		folder_start = string.find(calling_file_path, path_separator);
	end;
	
	local folder_start = string.find(calling_file_path, path_separator) + 1;
	local folder_end = string.find(calling_file_path, path_separator, folder_start) - 1;
	
	local folder = string.sub(calling_file_path, folder_start, folder_end);
		
	local shortform_end = string.find(folder, "_");
	
	-- if we didn't find a "_" character pass back the whole folder name as a single return value
	if not shortform_end then
		return folder;
	end;
	
	-- pass back the substring before the first "_" as the folder shortform
	local shortform = string.sub(folder, 1, shortform_end - 1);
	
	return folder, shortform;
end;


---------------------------------------------------------------
--
-- Some type-checking functions
--
---------------------------------------------------------------

function is_nil(obj)
	if type(obj) == "nil" then
		return true;
	end;
	
	return false;
end;

function is_number(obj)
	if type(obj) == "number" then
		return true;
	end;
	
	return false;
end;

function is_function(obj)
	if type(obj) == "function" then
		return true;
	end;
	
	return false;
end;

function is_string(obj)
	if type(obj) == "string" then
		return true;
	end;
	
	return false;
end;

function is_boolean(obj)
	if type(obj) == "boolean" then
		return true;
	end;
	
	return false;
end;

function is_bool(obj)
	return is_boolean(obj);
end;

function is_table(obj)
	if type(obj) == "table" then
		return true;
	end;
	
	return false;
end;

function is_battlesoundeffect(obj)
	if string.sub(tostring(obj), 1, 20) == "battle_sound_effect " then
		return true;
	end;
	
	return false;
end;

function is_battle(obj)
	if string.sub(tostring(obj), 1, 14) == "empire_battle " then
		return true;
	end;
	
	return false;
end;

function is_alliances(obj)
	if string.sub(tostring(obj), 1, 17) == "battle.alliances " then
		return true;
	end;
	
	return false;
end;

function is_alliance(obj)
	if string.sub(tostring(obj), 1, 16) == "battle.alliance " then
		return true;
	end;
	
	return false;
end;

function is_armies(obj)
	if string.sub(tostring(obj), 1, 14) == "battle.armies " then
		return true;
	end;
	
	return false;
end;

function is_army(obj)
	if string.sub(tostring(obj), 1, 12) == "battle.army " then
		return true;
	end;
	
	return false;
end;

function is_units(obj)
	if string.sub(tostring(obj), 1, 13) == "battle.units " then
		return true;
	end;
	
	return false;
end;

function is_unit(obj)
	if string.sub(tostring(obj), 1, 12) == "battle.unit " then
		return true;
	end;
	
	return false;
end;

function is_unitcontroller(obj)
	if string.sub(tostring(obj), 1, 23) == "battle.unit_controller " then
		return true;
	end;
	
	return false;
end;

function is_battlemanager(obj)
	if tostring(obj) == TYPE_BATTLE_MANAGER then
		return true;
	end;
	
	return false;
end;

function is_campaignmanager(obj)
	if tostring(obj) == TYPE_CAMPAIGN_MANAGER then
		return true;
	end;
	
	return false;
end;

function is_factionstart(obj)
	if tostring(obj) == TYPE_FACTION_START then
		return true;
	end;
	
	return false;
end;

function is_campaigncutscene(obj)
	if tostring(obj) == TYPE_CAMPAIGN_CUTSCENE then
		return true;
	end;
	
	return false;
end;

function is_iterator(obj)
	if tostring(obj) == TYPE_ITERATOR then
		return true;
	end;
	
	return false;
end;

function is_cutscene(obj)
	if tostring(obj) == TYPE_CUTSCENE_MANAGER then
		return true;
	end;
	
	return false;
end;

function is_vector(obj)
	if string.sub(tostring(obj), 1, 14) == "battle_vector " then
		return true;
	end;
	
	return false;
end;

function is_building(obj)
	if string.sub(tostring(obj), 1, 16) == "battle.building " then
		return true;
	end;
	
	return false;
end;

function is_buildings(obj)
	if string.sub(tostring(obj), 1, 17) == "battle.buildings " then
		return true;
	end;
	
	return false;
end;

function is_convexarea(obj)
	if tostring(obj) == TYPE_CONVEX_AREA then
		return true;
	end;
	
	return false;
end;

function is_scriptunit(obj)
	if tostring(obj) == TYPE_SCRIPT_UNIT then
		return true;
	end;
	
	return false;
end;

function is_sunit(obj)
	return is_scriptunit(obj);
end;

function is_hurtarea(obj)
	if tostring(obj) == TYPE_HURT_AREA then
		return true;
	end;
	
	return false;
end;

function is_firestormmanager(obj)
	if tostring(obj) == TYPE_FIRESTORM_MANAGER then
		return true;
	end;
	
	return false;
end;


function is_hidingplace(obj)
	if tostring(obj) == TYPE_HIDING_PLACE then
		return true;
	end;
	
	return false;
end;


function is_teleportsquad(obj)
	if tostring(obj) == TYPE_TELEPORT_SQUAD then
		return true;
	end;
	
	return false;
end;


function is_subtitles(obj)
	if string.sub(tostring(obj), 1, 17) == "battle.subtitles " then
		return true;
	end;
	
	return false;
end;


function is_zonemanager(obj)
	if tostring(obj) == TYPE_ZONE_MANAGER then
		return true;
	end;
	
	return false;
end;


function is_zonecontroller(obj)
	if tostring(obj) == TYPE_ZONE_CONTROLLER then
		return true;
	end;
	
	return false;
end;


function is_decisionpoint(obj)
	if tostring(obj) == TYPE_DECISION_POINT then
		return true;
	end;
	
	return false;
end;


function is_escaperoute(obj)
	if tostring(obj) == TYPE_ESCAPE_ROUTE then
		return true;
	end;
	
	return false;
end;


function is_escapemanager(obj)
	if tostring(obj) == TYPE_ESCAPE_MANAGER then
		return true;
	end;
	
	return false;
end;


function is_patrolmanager(obj)
	if tostring(obj) == TYPE_PATROL_MANAGER then
		return true;
	end;
	
	return false;
end;


function is_waypoint(obj)
	if tostring(obj) == TYPE_WAYPOINT then
		return true;
	end;
	
	return false;
end;


function is_eventhandler(obj)
	if tostring(obj) == TYPE_EVENT_HANDLER then
		return true;
	end;
	
	return false;
end;


function is_scriptaiplanner(obj)
	if tostring(obj) == TYPE_SCRIPT_AI_PLANNER then
		return true;
	end;
	
	return false;
end;


function is_fehbsequence(obj)
	if tostring(obj) == TYPE_FE_HB_SEQUENCE then
		return true;
	end;
	
	return false;
end;


function is_timermanager(obj)
	if tostring(obj) == TYPE_TIMER_MANAGER then
		return true;
	end;
	
	return false;
end;


function is_uioverride(obj)
	if tostring(obj) == TYPE_UI_OVERRIDE then
		return true;
	end;
	
	return false;
end;


function is_uicomponent(obj)
	if string.sub(tostring(obj), 1, 12) == "UIComponent " then
		return true;
	end;
	
	return false;
end;


function is_barricadeattackgroup(obj)
	if tostring(obj) == TYPE_BARRICADE_ATTACK_GROUP then
		return true;
	end;
	
	return false;
end;


function is_campaigndefense(obj)
	if tostring(obj) == TYPE_CAMPAIGN_DEFENSE then
		return true;
	end;
	
	return false;
end;


function is_scriptmessager(obj)
	if tostring(obj) == TYPE_SCRIPT_MESSAGER then
		return true;
	end;
	
	return false;
end;


function is_generatedbattle(obj)
	if tostring(obj) == TYPE_GENERATED_BATTLE then
		return true;
	end;
	
	return false;
end;


function is_generatedarmy(obj)
	if tostring(obj) == TYPE_GENERATED_ARMY then
		return true;
	end;
	
	return false;
end;

---------------------------------------------------------------
--
-- Angle conversions
--
---------------------------------------------------------------


function r_to_d(value)
	if not is_number(value) then
		return false;
	else
		return value * 57.29578;
	end;
end;


function d_to_r(value)
	if not is_number(value) then
		return false;
	else
		return value * 0.017453;
	end;
end;





---------------------------------------------------------------
--
-- iterator
--
-- Useful if you need to iterate through a table of items.
--
-- PARAMETERS:
-- On Creation:
-- TABLE collection of objects
--
-- Next:	     i:get_next();
-- no parameters--
---------------------------------------------------------------

iterator = {
	my_table = {},
	my_index = 1
}

function iterator:new(new_t)
	if not is_table(new_t) or #new_t == 0 then
		script_error("ERROR: iterator:new() called but supplied parameter " .. tostring(new_t) .. " is not a filled table!");
	
		return false;
	end;
	
	it = {};
	setmetatable(it, self);
	self.__index = self;
	self.__tostring = function() return TYPE_ITERATOR end;
	
	it.my_table = new_t;
	it.my_index = 1;
	
	return it;
end;

function iterator:get_next()
	local retval = nil;
	
	if self.my_index <= #self.my_table then
		retval = self.my_table[self.my_index];
		self.my_index = self.my_index + 1;
	end;
	
	return retval;
end;

function iterator:reset()
	self.my_index = 1;
end;

--[[ SAMPLE USAGE:

battle = empire_battle:new();

made_up_var_01 = "cabbage!";
made_up_var_02 = 7;
made_up_var_03 = 210;
made_up_var_04 = "cabbage again!";

made_up_table = {made_up_var_01, made_up_var_02, made_up_var_03, made_up_var_04};
iter = iterator:new(made_up_table);

-- some time later

output_value = iter:get_next();		--get the first value

while output_value do
	battle:out(output_value);
	output_value = iter:get_next();
end;

battle:out("List is finished!");


--	SAMPLE USAGE OUTPUT:
--
--	cabbage!
--	7
--	210
--	cabbage again!
--	List is finished!

]]








---------------------------------------------------------------
--
-- Randomly sort a table
--
---------------------------------------------------------------

function random_sort(t)
	local retval = {};
	local table_size = #t;
	local n = 0;
			
	for i = 1, table_size do
			
		-- pick an entry from t, add it to retval, then remove it from t
		n = math.random(#t);
				
		table.insert(retval, t[n]);
		table.remove(t, n);
	end;
	
	return retval;
end;








---------------------------------------------------------------
--
-- Takes an input table, a min size and a max size
-- Returns a second table which is a random size between the
-- supplied min and max, which contains a random subset of the
-- input table.
--
---------------------------------------------------------------

function random_subset(input_table, min_size, max_size)
	-- check parameters
	if not is_table(input_table) or #input_table == 0 then
		script_error("ERROR: random_subset() called but supplied input_table [" .. tostring(input_table) .. "] is not a table of size > 0");
		return false;
	end;
		
	if not is_number(min_size) or min_size < 0 then
		script_error("ERROR: random_subset() called but supplied min_size [" .. tostring(min_size) .. "] is not a number or is less than zero");
		return false;
	end;
	
	if not is_number(max_size) or max_size < min_size then
		script_error("ERROR: random_subset() called but supplied max_size [" .. tostring(max_size) .. "] is not a number or is less than the min_size [" .. tostring(min_size) .."]");
		return false;
	end
	
	if max_size > #input_table then
		script_error("ERROR: random_subset() called but supplied max_size [" .. tostring(max_size) .. "] is greater than the size of the input table, which is " .. tostring(#input_table));
		return false;
	end;
	
	-- clone our input table
	local ret_table = {};
	
	for i = 1, #input_table do
		ret_table[i] = input_table[i];
	end;
	
	-- get the size of our returned table	
	local elements_to_remove = #input_table - math.random(min_size, max_size);
	
	-- remove a random element, up to the size of elements_to_remove
	for i = 1, elements_to_remove do
		local index_to_remove = math.random(#ret_table);
		
		table.remove(ret_table, index_to_remove);
	end;
	
	return ret_table;
end;








C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\_lib\lib_convex_area.lua


---------------------------------------------------------------
--
-- Shorthand way of creating vectors
--
---------------------------------------------------------------

function v(x, y, z)
	if (not is_number(x)) or (not is_number(y)) then
		script_error("ERROR: v() called but didn't get at least two numeric parameters: " .. tostring(x) .. " and " .. tostring(y));
		
		return false;
	end;

	local retval = battle_vector:new();

	if is_number(z) then
		-- we are creating a 3D vector
		retval:set(x, y, z);
	else
		-- we are creating a 2D vector
		retval:set(x, 0, y);
	end;
	
	return retval;
end;



---------------------------------------------------------------
--
-- v_offset()
--
-- Offsets the given vector by supplied co-ords and return
-- the resulting position
--
---------------------------------------------------------------

function v_offset(vector, x, y, z)
	-- set default parameters
	local x = x or 0;
	local y = y or 0;
	local z = z or 0;

	return v(vector:get_x() + x, vector:get_y() + y, vector:get_z() + z);
end;



---------------------------------------------------------------
--
-- v_add()
--
-- Adds one vector to another
--
---------------------------------------------------------------

function v_add(vector_a, vector_b)
	return v(vector_a:get_x() + vector_b:get_x(), vector_a:get_y() + vector_b:get_y(), vector_a:get_z() + vector_b:get_z());
end;



---------------------------------------------------------------
--
-- v_subtract()
--
-- Subtracts one vector from another
--
---------------------------------------------------------------

function v_subtract(vector_a, vector_b)
	return v(vector_a:get_x() - vector_b:get_x(), vector_a:get_y() - vector_b:get_y(), vector_a:get_z() - vector_b:get_z());
end;





---------------------------------------------------------------
--
-- position_along_line()
--
-- Takes two vector positions as parameters and a distance
-- in metres, and returns a position which is that distance
-- from the first vector in the direction of the second vector
--
---------------------------------------------------------------

function position_along_line(vector_a, vector_b, dist)
	dist = dist or 1;
	
	local magnitude = vector_a:distance(vector_b);
	
	local x = dist * (vector_b:get_x() - vector_a:get_x()) / magnitude;
	local y = dist * (vector_b:get_y() - vector_a:get_y()) / magnitude;
	local z = dist * (vector_b:get_z() - vector_a:get_z()) / magnitude;
	
	return v_add(vector_a, v(x, y, z));
end;








---------------------------------------------------------------
--
-- v_to_s()
--
-- Returns a vector in string form
--
---------------------------------------------------------------

function v_to_s(pos)
	if not is_vector(pos) then
		return "[[not a vector, actually " .. tostring(pos) .. "]]";
	end;
	
	return "[" .. pos:get_x() .. ", " .. pos:get_y() .. ", " .. pos:get_z() .. "]";
end;



---------------------------------------------------------------
--
-- 	dot()
--	normal()
--
-- 	Implement dot and normal functions
--
---------------------------------------------------------------

function dot(vector_a, vector_b)
      return (vector_a:get_x() * vector_b:get_x()) + (vector_a:get_z() * vector_b:get_z())
end;

function normal(vector_a, vector_b)
	return v(vector_a:get_x() + vector_b:get_z() - vector_a:get_z(), 0, vector_a:get_z() + vector_a:get_x() - vector_b:get_x());
end;

function dot3d(vector_a, vector_b)
      return (vector_a:get_x() * vector_b:get_x()) + (vector_a:get_y() * vector_b:get_y()) + (vector_a:get_z() * vector_b:get_z())
end;




---------------------------------------------------------------
--
-- 	distance_to_line()
--
-- 	returns the distance from a specified line to a
--	third supplied position
--
---------------------------------------------------------------

function distance_to_line(line_a, line_b, position)
	if line_a:get_x() == line_b:get_x() and line_a:get_z() == line_b:get_z() then
		return 0;
	end;

	--reposition everything as if line_a was the origin
	local new_line_a = v(0,0,0);
	local new_line_b = v(line_b:get_x() - line_a:get_x(), 0, line_b:get_z() - line_a:get_z());
	local new_position = v(position:get_x() - line_a:get_x(), 0, position:get_z() - line_a:get_z());

	return (dot(normal(new_line_a, new_line_b), new_position) / new_line_a:distance(new_line_b));
end;











---------------------------------------------------------------
--
-- 	has_crossed_line()
--
-- 	Returns true if any element of the target collection
--	has crossed a demarked line. Supported object types are
--	are vector, unit, sunit, units, army, armies, alliance and table.
--	Also supports standing_only flag which only considers
--	non-routing or dead units.
--
---------------------------------------------------------------

function has_crossed_line(obj, line_a, line_b, standing_only)
	if is_vector(obj) then
		if not is_vector(line_a) then
			script_error("ERROR: has_crossed_line called but first line point " .. tostring(line_a) .. " is not a vector!");
			
			return false;
		end;
		
		if not is_vector(line_b) then
			script_error("ERROR: has_crossed_line called but second line point " .. tostring(line_b) .. " is not a vector!");
			
			return false;
		end;
		
		if (distance_to_line(line_a, line_b, obj) > 0) then
			--position is on the right side of the line defined by line_a -> line_b
			return true;
		end;
	
	elseif is_unit(obj) then
		if (not standing_only) or (standing_only and not is_routing_or_dead(obj)) then
			return has_crossed_line(obj:position(), line_a, line_b, standing_only);		
		end;
		
	elseif is_scriptunit(obj) then
		return has_crossed_line(obj.unit, line_a, line_b, standing_only);
	
	elseif is_units(obj) then
		for i = 1, obj:count() do
			if has_crossed_line(obj:item(i), line_a, line_b, standing_only) then
				return true;
			end;
		end;
	
	elseif is_army(obj) then
		if has_crossed_line(obj:units(), line_a, line_b, standing_only) then
			return true;
		end;
		
		local r_units = obj:get_reinforcement_units();
		
		if is_units(r_units) then
			return has_crossed_line(r_units, line_a, line_b, standing_only);
		end;
			
	elseif is_armies(obj) then
		for i = 1, obj:count() do
			if has_crossed_line(obj:item(i), line_a, line_b, standing_only) then
				return true;
			end;
		end;
	
	elseif is_alliance(obj) then
		return has_crossed_line(obj:armies(), line_a, line_b, standing_only);
	
	elseif is_table(obj) then
		for i = 1, #obj do
			if has_crossed_line(obj[i], line_a, line_b, standing_only) then
				return true;
			end;
		end;
	
	else
		script_error("ERROR: has_crossed_line didn't recognise object " .. tostring(obj) .. " to test!");
	end;
	
	return false;	
end;













----------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------
--
--	CONVEX AREA
--
--	Allows you to define a convex hull on the battlefield via a series of vectors (i.e. a 2D trigger area), 
--	and then test to see if a given position/unit is within that convex hull. This should allow the user to 
--	precisely determine whether a unit is within an arbritrary-shaped area of the battlefield. The convex 
--	hull object must be created before use by supplying a table of vectors. They must be supplied in clockwise 
--	order around the circumference of the hull. 
--
----------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------

convex_area = {
	bm = nil,
	my_points = {}
}

function convex_area:new(point_list)	
	local bm = get_bm();
	
	local ca = {};
	setmetatable(ca, self);
	self.__index = self;
	self.__tostring = function() return TYPE_CONVEX_AREA end;
	
	local valid, error_msg = ca:process_points(point_list)
	
	if not valid then
		script_error("ERROR: tried to create convex area but supplied points list was invalid! " .. error_msg);
		
		return false;
	end;
	  
	ca.bm = bm;
	
	return ca;
end;


function convex_area:validate_points(a, b, c)
	if not has_crossed_line(a, b, c) then
		return false, (" Point " .. v_to_s(c) .. " is not on the right side of the line defined by preceding points " .. v_to_s(a) .. " and " .. v_to_s(b));
	end;
	
	return true;
end;


function convex_area:process_points(p)
	if not p or not is_table(p) or #p < 3 then
		return false, " No points list given!";
	end;
	
	if not is_table(p) then
		return false, " Points list is not a table!";	
	end;
	
	if #p < 3 then
		return false, " Points list does not contain at least three points!";
	end;
	
	for i = 1, #p do
		if not is_vector(p[i]) then
			return false, " List item " .. i .. " (" .. tostring(p[i]) .. " is not a vector!";
		end;
	end;
	
	-- walk the line and make sure that each point is on the
	-- correct side of the line formed of the two prior points
	local valid, error_msg = false, "";
	
	for j = 1, (#p - 2) do
		valid, error_msg = self:validate_points(p[j], p[j+1], p[j+2]);
		if not valid then
			-- outer edge of shape has turned anti-clockwise, bad !
			return false, error_msg;
		end;
	end;

	-- need to specifically validate last two point clusters as they wrap around the list
	valid, error_msg = self:validate_points(p[#p - 1], p[#p], p[1]);
	if not valid then
		return false, error_msg;
	end;
	
	valid, error_msg = self:validate_points(p[#p], p[1], p[2]);
	if not valid then
		return false, error_msg;
	end;
	
	self.my_points = p;
	
	return true;
end;


function convex_area:item(index)
	if index > 0 and index <= #self.my_points then
		return self.my_points[index];
	end;
	
	return false;
end;

function convex_area:count(index)
	return #self.my_points;
end;











---------------------------------------------------------------
--
-- 	convex_area:is_in_area()
--
-- 	Returns true if any element of the target collection
--	is in the convex area, false otherwise. Supported object
--	types are vector, unit, scriptunit, units, army, armies,  
--  alliance and table. Also supports standing_only flag which 
--	only considers non-routing or dead units.
--
---------------------------------------------------------------

function convex_area:is_in_area(obj, standing_only)
	if is_vector(obj) then
		for i = 1, #self.my_points-1 do
			if not has_crossed_line(self.my_points[i], self.my_points[i+1], obj) then
				return false;
			end;
		end;
	
		if not has_crossed_line(self.my_points[#self.my_points], self.my_points[1], obj) then
			return false;
		end;
	
		return true;
	
	elseif is_unit(obj) then
		if (not standing_only) or (standing_only and not is_routing_or_dead(obj)) then
			return self:is_in_area(obj:position(), standing_only);
		end;
	
	elseif is_scriptunit(obj) then
		return self:is_in_area(obj.unit:position(), standing_only);
		
	elseif is_units(obj) then
		for i = 1, obj:count() do
			if self:is_in_area(obj:item(i), standing_only) then
				return true;
			end;
		end;
			
	elseif is_army(obj) then
		if self:is_in_area(obj:units(), standing_only) then
			return true;
		end;
		
		local r_units = obj:get_reinforcement_units();
		
		if is_units(r_units) then
			return self:is_in_area(r_units, standing_only);
		end;
			
	elseif is_armies(obj) then
		for i = 1, obj:count() do
			if self:is_in_area(obj:item(i), standing_only) then
				return true;
			end;
		end;
	
	elseif is_alliance(obj) then
		return self:is_in_area(obj:armies(), standing_only);
	
	elseif is_table(obj) then
		for i = 1, #obj do
			if self:is_in_area(obj[i], standing_only) then
				return true;
			end;
		end;
		
	else
		script_error("ERROR: convex_area:is_in_area() called but parameter " .. tostring(obj) .. " not supported!")
	end;
	
	return false;
end;


function convex_area:standing_is_in_area(obj)
	return self:is_in_area(obj, true);
end;














---------------------------------------------------------------
--
-- 	convex_area:number_in_area()
--
-- 	Returns the number of elements in the target collection
--	that fall in the convex area. Supported object
--	types are units, scriptunits, army, armies, alliance and 
--  table. Also supports standing_only flag which only considers
--	non-routing or dead units.
--
---------------------------------------------------------------

function convex_area:number_in_area(obj, standing_only)
	local count = 0;
	
	if is_vector(obj) then
		if self:is_in_area(obj) then
			return 1;
		end;
		
	elseif is_unit(obj) then
		if self:is_in_area(obj, standing_only) then
			return 1;
		end;
		
	elseif is_scriptunit(obj) then
		if self:is_in_area(obj.unit, standing_only) then
			return 1;
		end;

	elseif is_units(obj) then
		for i = 1, obj:count() do
			if self:is_in_area(obj:item(i), standing_only) then
				count = count + 1;
			end;
		end;
			
	elseif is_army(obj) then
		count = count + self:number_in_area(obj:units(), standing_only);
		
		local r_units = obj:get_reinforcement_units();
		
		if is_units(r_units) then
			count = count + self:number_in_area(r_units, standing_only);
		end;
			
	elseif is_armies(obj) then
		for i = 1, obj:count() do
			count = count + self:number_in_area(obj:item(i), standing_only);
		end;
	
	elseif is_alliance(obj) then
		return self:number_in_area(obj:armies(), standing_only);
	
	elseif is_table(obj) then
		for i = 1, #obj do
			count = count + self:number_in_area(obj[i], standing_only);
		end;
		
	else
		script_error("ERROR: convex_area:is_in_area() called but parameter " .. tostring(obj) .. " not supported!")
	end;
	
	return count;
end;


function convex_area:standing_number_in_area(obj)
	return self:number_in_area(obj, true);
end;


















----------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------
--
--	HURT AREA
--
--	Allows the user to specify a convex area as a hurt area, within which units will take damage.
--
----------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------


hurt_area = {
	bm = nil,
	name = "",
	area = nil,
	damage = 0.2,		-- 20% of the unit will die per tick
	is_debug = false
}

function hurt_area:new(new_name, new_area)
	local bm = get_bm();
	
	if not is_string(new_name) then
		script_error("ERROR: couldn't create hurt area, given name " .. tostring(new_name) .. " is not a string!");
	
		return false;
	end;
	
	if not is_convexarea(new_area) then
		script_error("ERROR: Couldn't create hurt area, area parameter " .. tostring(new_area) .. " is invalid");
		
		return false;
	end;

	ha = {};
	setmetatable(ha, self);
	self.__index = self;
	self.__tostring = function() return TYPE_HURT_AREA end;
	
	ha.bm = get_bm();
	ha.area = new_area;
	
	return ha;
end;


function hurt_area:set_debug(value)
	if self.is_running then
		self.bm:out(self.name .. " warning :: trying to change debug state of a running hurt area. This is undesirable, but doing it anyway.");
	end;

	if is_boolean(value) then
		self.is_debug = value;
	else
		self.is_debug = true;
	end;
end;


function hurt_area:set_damage_per_tick(value)
	if not is_number(value) or value < 0 or value > 1 then
		self.bm:out(self.name .. " error :: can't set damage value, number between 0 and 1 wasn't supplied");
		
		return false;
	end;
	
	self.damage = value;
end;


function hurt_area:start()
	if self.is_debug then
		self.bm:out(self.name .. " :: hurt area starting");
	end;
	
	local alliances = self.bm:alliances();
	
	self.bm:repeat_callback(function() self:process(alliances) end, 3000, "hurt_area_" .. self.name);
end;


function hurt_area:stop()
	if self.is_debug then
		self.bm:out(self.name .. " :: hurt area stopping");
	end;
	
	self.bm:remove_process("hurt_area_" .. self.name);
end;


function hurt_area:process(obj)	
	if is_units(obj) then
		for i = 1, obj:count() do			
			if self.area:is_in_area(obj:item(i):position()) then
				if self.is_debug then
					self.bm:out(self.name .. " :: unit " .. tostring(obj:item(i)) .. " found in area, killing " .. tostring(self.damage) .. " (unary) of it's starting strength");
				end;
				
				kill_unit_proportion(obj:item(i), self.damage);
			end;
		end;
	
	elseif is_armies(obj) then
		local r_units = nil;
	
		for i = 1, obj:count() do
			self:process(obj:item(i):units());
			
			r_units = obj:item(i):get_reinforcement_units();
			
			if is_units(r_units) then
				self:process(r_units);
			end;
		end;
	
	elseif is_alliances(obj) then
		for i = 1, obj:count() do
			self:process(obj:item(i):armies());
		end;	
	else
		script_error(self.name .. " ERROR: hurt_area:process() has been called but the given parameter type " .. tostring(obj) .. " wasn't recognised");
	end;
end;






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\_lib\lib_cutscenes.lua

__Cutscene_List = {}
--[[
function Esc_Key_Pressed()
	--bm:out("Esc_Key_Pressed!!! Size of __Cutscene_List is " .. #__Cutscene_List);

	if #__Cutscene_List == 0 then
		return;
	end;
	
	for i = 1, #__Cutscene_List do
		if __Cutscene_List[i]:is_active() then
			__Cutscene_List[i]:skip();
			return;
		end;
	end;
end;
]]

----------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------
--
--	CUTSCENES
--
--	Wrapper for all cutscene functionality
--
----------------------------------------------------------------------------------------------------------
----------------------------------------------------------------------------------------------------------

POS_Sound_Origin = v(0, 0);

cutscene = {
	-- startup and internal params
	bm = nil,
	my_subtitles = nil,
	cam = nil,
	name = "",
	uc_playersarmy = nil,
	end_callback = nil,
	cutscene_length = 0,
	action_list = nil,
	action_ptr = 1,
	cumulative_time = 0,
	is_running = false,
	start_time = 0,
	wait_offset = 0,
	advisor_wait = false,
	vo_wait = false,
	restore_cam_pos = nil,
	restore_cam_target = nil,
	
	-- skipping params
	skippable = true,
	skip_cam_pos = nil,
	skip_cam_target = nil,
	skip_callback = nil,
	
	-- debug
	is_debug = false,
	hide_ui_in_debug = false,
	
	-- music
	music = nil,
	music_fade_in = nil,
	music_fade_out = nil,
	music_resume_auto_playback = true,
	
	-- misc params
	intro_pan_time = 0,
	do_not_end = false,
	post_cutscene_fade_time = 0.5,
	relative_mode = false,
	restore_cam_time = -1,
	suppress_unit_vo = true,
	close_advisor_on_end = true,
	wait_for_advisor_on_end = true,
	wait_for_vo_on_end = true,
	should_enable_ui_on_end = true,
	debug_timestamps = false,
	should_release_players_army = true,
	show_cinematic_bars = true
}




function cutscene:new(name, uc_playersarmy, cutscene_length, end_callback)
	if not is_string(name) then
		script_error("ERROR: Tried to create cutscene but given name " .. tostring(name) .. " is not a string!");
		
		return false;
	end;
	
	if not is_unitcontroller(uc_playersarmy) then
		script_error("ERROR: Tried to create cutscene " .. name .. " but the given player's unitcontroller " .. tostring(uc_playersarmy) .. " is not a valid unitcontroller!");
		
		return false;
	end;
	
	if not is_number(cutscene_length) or cutscene_length <= 0 then
		script_error("ERROR: Tried to create cutscene " .. name .. " but given length " .. tostring(cutscene_length) .. " is not a positive number!");
		
		return false;
	end;
	
	if not is_function(end_callback) then
		script_error("ERROR: Tried to create cutscene " .. name .. " but given callback " .. tostring(end_callback) .. " is not a function!");
		
		return false;
	end;
	
	local c = {};
	setmetatable(c, self);
	self.__tostring = function() return TYPE_CUTSCENE_MANAGER end;
	self.__index = self;
		
	c.bm = get_bm();
	c.my_subtitles = get_bm():subtitles();
	c.my_subtitles:change_if_borders_drawn(false);
	c.cam = bm:camera();
	c.action_list = {};
	c.sounds = {};
	c.name = name;
	c.uc_playersarmy = uc_playersarmy;
	c.cutscene_length = cutscene_length;
	c.end_callback = end_callback;
	
	table.insert(__Cutscene_List, c);
	
	return c;
end;

--
-- returns subtitles object
--
function cutscene:subtitles()
	return self.my_subtitles;
end;

--
-- set skipping params
--
function cutscene:set_skippable(skippable, skip_callback)
	if self.is_running then
		script_error(self.name .. " ERROR: trying to set skippable status of a running cutscene!");
		
		return false;
	end;

	self.skippable = skippable;
	
	if is_function(skip_callback) then
		self.skip_callback = skip_callback;
	end;
end;


function cutscene:set_skip_camera(skip_cam_pos, skip_cam_target)
	if self.is_running then
		script_error(self.name .. " ERROR: trying to set skip cam on a running cutscene!");
		
		return false;
	end;

	if not is_vector(skip_cam_pos) then
		script_error(self.name .. " ERROR: tried to set skip cam but position given " .. tostring(skip_cam_pos) .. " is not a valid vector!");
		
		return false;
	end;
	
	if not is_vector(skip_cam_target) then
		script_error(self.name .. " ERROR: tried to set skip cam but target given " .. tostring(skip_cam_target) .. " is not a valid vector!");
		
		return false;
	end;
	
	self.skip_cam_pos = skip_cam_pos;
	self.skip_cam_target = skip_cam_target;
end;


--
-- set debug
--

function cutscene:set_debug(is_debug, hide_ui_in_debug)
	if is_debug == nil then
		self.is_debug = true;
	else
		self.is_debug = is_debug;
	end;
	
	self.hide_ui_in_debug = hide_ui_in_debug;
end;



--
--	set up music
--

function cutscene:set_music(music_event, fade_in, fade_out)
	if self.is_running then
		script_error(self.name .. " ERROR: trying to set music on a running cutscene");
		
		return false;
	end;
	
	if not is_string(music_event) then
		script_error(self.name .. " ERROR: trying to set music but supplied event argument " .. tostring(music_event) .. " is not a string");
		
		return false;
	end;
	
	if (not is_nil(fade_in)) and (not is_number(fade_in)) then
		script_error(self.name .. " ERROR: trying to set music but supplied fade_in argument " .. tostring(fade_in) .. " is not a number");
		
		return false;
	end;
	
	if (not is_nil(fade_out)) and (not is_number(fade_out)) then
		script_error(self.name .. " ERROR: trying to set music but supplied fade_out argument " .. tostring(fade_out) .. " is not a number");
		
		return false;
	end;

	self.music = music_event;
	self.music_fade_in = fade_in;
	self.music_fade_out = fade_out;
end;


function cutscene:set_music_resume_auto_playback(new_value)
	if not is_boolean(new_value) then
		script_error(self.name .. " ERROR: set_music_resume_auto_playback() called with a non boolean parameter " .. tostring(new_value));
	
		return false;
	end;
	
	self.music_resume_auto_playback = new_value;
end;


--
--	set up misc parameters
--

function cutscene:set_do_not_end(new_value)
	if new_value == false then
		self.do_not_end = false;
	else
		self.do_not_end = true;
	end;
end;


function cutscene:set_intro_pan_time(new_value)
	if not is_number(new_value) or new_value < 0 then
		script_error(self.name .. " ERROR: set_intro_pan_time called but supplied time [" .. tostring(new_value) .."] is not a non-negative number");
		return false;
	end;
	
	self.intro_pan_time = new_value;
end;


function cutscene:set_post_cutscene_fade_time(new_value)
	if not is_number(new_value) or new_value < 0 then
		script_error(self.name .. " ERROR: set_post_cutscene_fade_time called with an invalid parameter " .. tostring(new_value));
		
		return false;
	end;
	
	self.post_cutscene_fade_time = new_value;
end;


function cutscene:suppress_unit_voices(new_value)
	if self.is_running then
		script_error(self.name .. " ERROR: trying to suppress unit voices on a running cutscene");
		
		return false;
	end;
	
	if new_value then
		self.suppress_unit_vo = true;
	else
		self.suppress_unit_vo = false;
	end;
end;


function cutscene:set_relative_mode()
	if #self.action_list > 0 then
		script_error(self.name .. " ERROR: trying to set relative mode after already adding actions");

		return false;
	end;
	
	self.relative_mode = true;
end;


function cutscene:set_wait_for_advisor_on_end(new_value)
	if new_value == false then
		self.wait_for_advisor_on_end = false;
	else
		self.wait_for_advisor_on_end = true;
	end;
end;


function cutscene:set_wait_for_vo_on_end(new_value)
	if new_value == false then
		self.wait_for_vo_on_end = false;
	else
		self.wait_for_vo_on_end = true;
	end;
end;


function cutscene:set_close_advisor_on_end(new_value)
	if new_value == nil then
		self.close_advisor_on_end = true;
	else
		self.close_advisor_on_end = new_value;
	end;
end;


function cutscene:set_restore_cam_time(new_value)
	if not is_number(new_value) then
		script_error(self.name .. " ERROR: trying to set restore cam time but value given " .. tostring(new_value) .. " is not a number!");
		
		return false;
	end;
	
	self.restore_cam_time = new_value;
end;


function cutscene:set_restore_cam(new_pos, new_targ)
	if not is_vector(new_pos) then
		script_error(self.name .. " ERROR: trying to set restore cam but position given [" .. tostring(new_pos) .. "] is not a vector!");
		
		return false;
	end;
	
	if not is_vector(new_targ) then
		script_error(self.name .. " ERROR: trying to set restore cam but target given [" .. tostring(new_targ) .. "] is not a vector!");
		
		return false;
	end;
	
	self.restore_cam_pos = new_pos;
	self.restore_cam_target = new_targ;
end;


function cutscene:enable_debug_timestamps(new_value)
	if new_value == nil or new_value then
		self.debug_timestamps = true;
	else
		self.debug_timestamps = false;
	end;
end;


function cutscene:enable_ui_on_end(new_value)
	if new_value == nil or new_value then
		self.should_enable_ui_on_end = true;
	else
		self.should_enable_ui_on_end = false;
	end;
end;


function cutscene:set_should_release_players_army(new_value)
	if new_value == nil or new_value then
		self.should_release_players_army = true;
	else
		self.should_release_players_army = false;
	end;
end;


function cutscene:set_show_cinematic_bars(new_value)
	if new_value == nil or new_value then
		self.show_cinematic_bars = true;
	else
		self.show_cinematic_bars = false;
	end;
end;


function cutscene:is_any_cutscene_running()
	if #__Cutscene_List == 0 then
		return false;
	end;
	
	for i = 1, #__Cutscene_List do
		if __Cutscene_List[i]:is_active() then
			return true;
		end;
	end;
	
	return false;
end;


-- returns whether the cutscene is currently active
function cutscene:is_active()
	return self.is_running;
end;



--
--	Start the cutscene
--

function cutscene:start()
	if self:is_any_cutscene_running() then
		script_error(self.name .. " ERROR: cannot start, another cutscene is running!");
		
		return false;
	end;
	
	self.start_time = timestamp_tick;
	
	bm:out("Starting cutscene " .. self.name);
			
	-- increase max camera height, disable shake and anchor
	bm:callback(function() bm:out(self.name .. " changing height range"); self.cam:change_height_range(0, 100) end, self.intro_pan_time, self.name);
	self.cam:disable_shake();
	self.cam:disable_anchor_to_army();
	
	-- clear advisor
	self.bm:stop_advisor_queue();
	
	-- prevent user input
	if not self.is_debug then
		self.bm:steal_input_focus();
	end;
	
	-- set camera mode to TW-cam
	self.bm:enable_cinematic_camera(true);
	
	-- set battle speed to normal
	self.bm:modify_battle_speed(1);	
	
	-- prevent battle time from elapsing
	self.bm:change_conflict_time_update_overridden(true);
	
	-- show or hide the ui depending on flag setup
	if self.is_debug then
		if self.hide_ui_in_debug then
			-- hide the ui
			bm:out("Hiding UI");
			self.bm:enable_cinematic_ui(true, true, false);
		else
			-- show the ui
			bm:out("Showing UI");
			self.bm:enable_cinematic_ui(false, true, false);
		end;
	elseif self.show_cinematic_bars then
		-- hide the UI
		self.bm:enable_cinematic_ui(true, false, true);
	else
		-- hide the UI but with no cinematic bars
		self.bm:enable_cinematic_ui(true, false, false);
	end;
		
	-- subtitle alignment
	self.my_subtitles:set_alignment("bottom_centre");
	self.my_subtitles:begin("bottom_centre");

	-- sort out the music
	if self.music then
		self.bm:set_music_auto_playback(false);	
		
		-- music in
		if self.music_fade_in then
			self.bm:play_music_custom_fade(self.music, self.music_fade_in);
		else
			self.bm:play_music(self.music);
		end;
		
		-- music out
		if self.music_resume_auto_playback then
			if self.music_fade_out then
				self:action(function() self.bm:stop_music_custom_fade(self.music_fade_out) end, self.cutscene_length - (self.music_fade_out * 1000));
			else
				self:action(function() self.bm:stop_music() end, self.cutscene_length);
			end;
			
			self:action(function() self.bm:set_music_auto_playback(true) end, self.cutscene_length - self.music_fade_out);
		end;		
	end;
	
	-- suppress general unit vo (responses etc) during cutscene
	if self.suppress_unit_vo then
		self.bm:suppress_unit_voices(true);
		self.bm:suppress_unit_musicians(true);
	end;
		
	self.action_ptr = 1;
	
	-- a bit of hackery to force absolute timing when we queue up the end of the cutscene
	local temp_relative_mode = self.relative_mode;
	self.relative_mode = false;
	
	if not self.do_not_end then
		if self.wait_for_vo_on_end then
			self:action(function() self:wait_for_vo() end, self.cutscene_length);
		end;
		
		if self.wait_for_advisor_on_end then
			self:action(function() self:wait_for_advisor() end, self.cutscene_length);
		end
		
		self:action(function() self:finish() end, self.cutscene_length, true);
	end;
	
	self.relative_mode = temp_relative_mode;
	
	-- take control of the player's army to prevent the player from ordering it around during the cutscene
	self.uc_playersarmy:take_control();	
	
	-- set up restore camera if we need to
	if self.restore_cam_time >=0 and not self.restore_cam_pos and not self.restore_cam_target then
		self.restore_cam_pos = self.cam:position();
		self.restore_cam_target = self.cam:target();
	end;
	
	-- if this cutscene is skippable then register the ESC key listener
	if self.skippable then
		--self.bm:steal_escape_key();
		self.bm:register_esc_key_callback(self.name, function() self:skip() end);
	end;
	
	self.is_running = true;
	
	-- enable debug timestamps if necessary
	if self.debug_timestamps then
		self:output_debug_timestamp();
	end;
		
	-- start processing our actions
	self:process_next_action();
		
	return true;
end;


function cutscene:output_debug_timestamp(count)
	if not self.is_running then
		return;
	end;

	count = count or 0;
	
	self.bm:out("\t\t" .. self.name .. " tick " .. count .. " [" .. count * 100 .. "ms after start]");
	
	self.bm:callback(function() self:output_debug_timestamp(count + 1) end, 100, self.name);
end;


-- called if we want the cutscene system to wait for the advisor to finish speaking
function cutscene:play_sound(sound)
	if not is_battlesoundeffect(sound) then
		script_error(self.name .. " ERROR: play_sound() called but supplied object [" .. tostring(sound) .. "] is not a battle_sound_effect");
		return false;
	end;

	table.insert(self.sounds, sound);
	
	play_sound(POS_Sound_Origin, sound);
end;



function cutscene:is_playing_sound()
	for i = 1, #self.sounds do
		local curr_sound = self.sounds[i];
		
		if curr_sound:is_playing() then
			return true;
		end;
	end;
	
	return false;
end;



-- called if we want the cutscene system to wait for the advisor to finish speaking
function cutscene:wait_for_advisor()
	self.advisor_wait = true;
end;


-- called if we want the cutscene system to wait for some subtitled vo to finish speaking
function cutscene:wait_for_vo()
	self.vo_wait = true;
end;


-- perform the next action in the cutscene action list
function cutscene:process_next_action()
	if not self.is_running then
		script_error(self.name .. " WARNING:  tried to process an action while not active, the action didn't happen.");		
	
		return false;
	end;

	if self.action_ptr > #self.action_list then		
		return false;
	end;
		
	--action_time is the absolute time from the battle start that we reckon the next action should take place
	local action_time = self.start_time + self.action_list[self.action_ptr].delay + self.wait_offset;
		
	--if it's not time for the next action to be processed, then check again when it is
	if action_time > (timestamp_tick + time_increment_ms) then
		local next_time = self.action_list[self.action_ptr].delay + self.wait_offset - (timestamp_tick - self.start_time)
		self.bm:callback(function() self:process_next_action() end, next_time, self.name);
		
		return false;	
	end;
	
	--check if the advisor has finished (if we need to). If it's not finished, wait 500ms and try again
	if self.advisor_wait then
		if self:is_playing_sound() then
		-- if not self.bm:advice_finished() then
			self.wait_offset = self.wait_offset + 500;
			self.bm:callback(function() self:process_next_action() end, 500, self.name);
			
			return false;
		else
			self.advisor_wait = false;
		end;
	end;
	
	
	--check if subtitle vo has finished (if we need to). If it's not finished, wait 500ms and try again
	if self.vo_wait then
		-- if not self.bm:vo_finished() then
		if self:is_playing_sound() then
			self.wait_offset = self.wait_offset + 500;
			self.bm:callback(function() self:process_next_action() end, 500, self.name);
			
			return false;
		else
			self.vo_wait = false;
		end;
	end;
	
	if self.is_debug then
		self.bm:out(self.name .. " : processing action " .. self.action_ptr);
	end;
		
	--call the current action in the queue, and then speculatively try the next in the queue (unless this is the last action)
	self.action_list[self.action_ptr].callback();
	
	if not self.action_list[self.action_ptr].is_terminator then
		self.action_ptr = self.action_ptr + 1;
		
		-- can't remember why we do this :S Maybe in case the previous callback steals the escape key itself
		--if self.skippable and self.is_running then
			--self.bm:steal_escape_key();
		--end;
		
		self:process_next_action();
	end;
	
	return true;
end;


-- add an action to the cutscene
function cutscene:action(new_callback, new_delay, new_is_terminator)
	if self.is_running then
		script_error(self.name .. " WARNING: trying to add an action to a running cutscene! You can't do this!");
		
		return false;
	end;
	if new_delay > self.cutscene_length then
		script_error(self.name .. " WARNING: trying to add an action past the end of a cutscene! You can't do this!");
		
		return false;
	end;
	
	new_is_terminator = new_is_terminator or false;
	
	if self.relative_mode then
		-- add action to list in relative timing mode
		self.cumulative_time = self.cumulative_time + new_delay;
		
		table.insert(self.action_list, {callback = new_callback, delay = self.cumulative_time, is_terminator = new_is_terminator});
		return true;
	else
		-- add action to list in absolute timing mode
		for i = 1, #self.action_list do
			if self.action_list[i].delay > new_delay then
				table.insert(self.action_list, i, {callback = new_callback, delay = new_delay, is_terminator = new_is_terminator});
				return true;
			end;
		end;
		
		table.insert(self.action_list, {callback = new_callback, delay = new_delay, is_terminator = new_is_terminator});
		return true;
	end;
	
	return false;
end;


-- called when the cutscene is skipped
function cutscene:skip()
	if not self:is_active() then
		script_error(self.name .. " WARNING: skip() called when not running");
		
		return false;
	end;

	self.bm:remove_process(self.name);
	
	-- stop any currently-playing sounds
	for i = 1, #self.sounds do
		stop_sound(self.sounds[i]);
	end;
	
	-- unregister this function as an ESC key listener
	self.bm:unregister_esc_key_callback(self.name);
	
	-- fade to black over 0.1 seconds if there's a fade-in time
	if self.post_cutscene_fade_time > 0 then
		self.cam:fade(true, 0.1);
	end;
	
	-- after 0.2 seconds, skip the cutscene
	self.bm:callback(
		function()
			-- stop music
			if self.music then
				self.bm:stop_music();
				self.bm:set_music_auto_playback(true);
			end;
			
			-- if we're set to never end, then we will always come through here so don't bother with output
			if not self.do_not_end then
				self.bm:out("Skipping remainder of cutscene " .. tostring(self.name));
			end;
			
			if self.skip_callback then
				self.skip_callback();
			end;
	
			if self.skip_cam_pos and self.skip_cam_target then
				self.bm:camera():move_to(self.skip_cam_pos, self.skip_cam_target, 0, false, 0);
			else
				if self.restore_cam_time >= 0 and self.restore_cam_pos and self.restore_cam_target then	
				
					-- if we have faded to black, then instruct the next function to cut rather than pan
					local should_cut = false;
				
					if self.post_cutscene_fade_time > 0 then
						should_cut = true;
					end;					
				
					self:restore_camera_and_release(should_cut);
				
					return;
				end;
			end;
			
			self:release()
		end,
		200
	);
end;


-- called when the cutscene finishes without skipping
function cutscene:finish()
	-- unregister this function as an ESC key listener
	self.bm:unregister_esc_key_callback(self.name);

	if self.restore_cam_time >= 0 and self.restore_cam_pos and self.restore_cam_target then		
		self:restore_camera_and_release();
		
		return;
	end;
		
	self:release();
end;


function cutscene:restore_camera_and_release(should_cut)
	local restore_time = self.restore_cam_time;
	
	if should_cut then
		restore_time = 0;
	end;

	-- move camera to end position
	self.bm:camera():move_to(self.restore_cam_pos, self.restore_cam_target, restore_time, false, 0);
		
	-- call release when we're back
	if restore_time == 0 then
		self:release();
	else
		self.bm:callback(function() self:release() end, (restore_time * 1000), self.name);
	end;
end;


function cutscene:release()
	if not self.is_debug then
		self.bm:release_input_focus();
	end;
			
	-- Set camera/ui back to default (make sure we haven't 
	-- launched straight into another cutscene first)
	self.bm:callback(
		function()				
			if not self:is_any_cutscene_running() then				
				-- disable the cinematic ui (if it's enabled)
				if self.should_enable_ui_on_end and (not self.is_debug or self.hide_ui_in_debug) then
					self.bm:enable_cinematic_ui(false, true, false);
				end;
			
				self.cam:enable_anchor_to_army();
				self.cam:change_height_range(-1, -1);
				self.cam:enable_shake();
				self.bm:enable_cinematic_camera(false);
				
				-- perform fade-in (if we have to)
				if self.post_cutscene_fade_time > 0 then
					self.cam:fade(false, self.post_cutscene_fade_time);
				end;
			end;
		end, 
		100,
		"Cutscene_Camera_Anchor"
	);
	
	-- wait a while before unsuppressing unit voices (so they
	-- don't start gabbling immediately after cutscene ends)
	self.bm:callback(
		function()
			if not self:is_any_cutscene_running() and self.suppress_unit_vo then
				self.bm:suppress_unit_voices(false);
				self.bm:suppress_unit_musicians(false);
			end;
		end,
		2000,
		"Cutscene_Unsuppress_Unit_Voices"
	);
		
	-- allow battle time to start elapsing
	self.bm:change_conflict_time_update_overridden(false);
	
	self.bm:out("Ending cutscene " .. tostring(self.name));
	self.is_running = false;
	
	-- the cutscene may have been delayed due to waiting for stuff, if so inform the user
	if self.wait_offset > 0 then
		self.bm:out("Cutscene " .. self.name .. " was " .. self.wait_offset .. "ms longer than specified due to waiting for VO to complete.");
	end;
	
	-- release the player's army
	if self.should_release_players_army then
		self.uc_playersarmy:release_control();
	end;
	
	-- don't catch the ESC key any more
	--if self.skippable then	
	--	self.bm:release_escape_key();
	--end;
	
	-- clear advisor and subtitles
	if self.close_advisor_on_end then
		self.bm:stop_advisor_queue();
	end;
	
	if self.my_subtitles then
		self.my_subtitles:clear();
	end;
	
	-- end callback (must happen last!)
	self.end_callback();
end;




--
--	function to track the movement of a unit commander. returns a vector of a camera position from the unit commander.
--	parameters are the unit to track, its movement speed (look in battle_entities table), the horizontal tracking angle in degrees (zero being looking head on at the general), 
--	the vertical tracking angle in degrees (positive being above the unit, negative below), the camera distance to target (2D, height not considered),
--	the height of the unit above ground level to track (i.e. distance from commanders feet to head), and the time into the future to return the camera position.
--	predictive results assume that the unit is moving on a straight course on level ground
--


function track_unit_commander(unit, movement_speed, tracking_angle_h, tracking_angle_v, tracking_distance, tracking_height, t)
	local angle_of_unit_movement = unit:bearing();
	local commander_position = unit:position_of_officer();
	local commander_position_x = commander_position:get_x();
	local commander_position_y = commander_position:get_y();
	local commander_position_z = commander_position:get_z();

	local pos_x = commander_position_x + movement_speed * t * math.sin(d_to_r(angle_of_unit_movement)) + tracking_distance * math.sin(d_to_r(angle_of_unit_movement + tracking_angle_h));
	local pos_y = commander_position_y + tracking_height + tracking_distance * math.tan(d_to_r(tracking_angle_v));
	local pos_z = commander_position_z + movement_speed * t * math.cos(d_to_r(angle_of_unit_movement)) + tracking_distance * math.cos(d_to_r(angle_of_unit_movement + tracking_angle_h));
	
	return v(pos_x, pos_y, pos_z);
end;





--
--	function to predict the position of a units commander in the future. Assumes the unit is travelling in a straight line on level ground.
--	Takes the unit, its movement speed (from the battle_entities table, hopefully we will be able to look this up automatically in future), the
--	time offset in seconds, and a height by which to offset the returned position by in m (as the position of a unit is flat on the ground)
--	Returns a vector of the predicted commander position.
--

function predict_commander_position(unit, movement_speed, t, height_offset)
	local angle_of_unit_movement = unit:bearing();
	
	local commander_position = unit:position_of_officer();
	local commander_position_x = commander_position:get_x();
	local commander_position_y = commander_position:get_y();
	local commander_position_z = commander_position:get_z();
	
	local ret_pos_x = commander_position_x + movement_speed * t * math.sin(d_to_r(angle_of_unit_movement));
	local ret_pos_y = commander_position_y + height_offset;
	local ret_pos_z = commander_position_z + movement_speed * t * math.cos(d_to_r(angle_of_unit_movement));
	
	return v(ret_pos_x, ret_pos_y, ret_pos_z);
end;



--
--	Gets a camera tracking offset from a position. Intended to be used in conjunction with predict_commander_position to be able to track a commander
--	marching into battle during a cutscene, but could be used with any position.
--	Takes a vector position, a horizontal tracking bearing (from north) in degrees, a vertical tracking bearing in degrees (positive being above the position, negative below),
--	and a 2D distance in m that the camera should be.
--	Returns a vector of the camera position.
--

function get_tracking_offset(pos, tracking_angle_h, tracking_angle_v, tracking_distance)
	local pos_x = pos:get_x();
	local pos_y = pos:get_y();
	local pos_z = pos:get_z();
	
	local ret_pos_x = pos_x + tracking_distance * math.sin(d_to_r(tracking_angle_h));
	local ret_pos_y = pos_y + tracking_distance * math.tan(d_to_r(tracking_angle_v));
	local ret_pos_z = pos_z + tracking_distance * math.cos(d_to_r(tracking_angle_h));
	
	return v(ret_pos_x, ret_pos_y, ret_pos_z);
end;






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\_lib\lib_escape_manager.lua



decision_point = {
	bm = nil,
	name = "",
	escape_routes = {},
	detect_obj = nil,
	detect_area = false,
	detection_range = 100,
	caution_point = false,
	exit_point = false,
	is_debug = false
};


function decision_point:new(new_bm, new_name, new_detect_obj)
	-- type check our startup parameters
	
	if not is_battlemanager(new_bm) then
		return false;
	end;
	
	if not is_string(new_name) then
		new_bm:out("Couldn't create Decision Point: no name given or name invalid");
		
		return false;
	end;
		
	if not (is_convexarea(new_detect_obj) or is_vector(new_detect_obj)) then
		new_bm:out("Couldn't create Decision Point " .. new_name .. ": no valid detection object given (should be a convex area or a vector)");
		
		return false;
	end;
	
	dp = {};
	setmetatable(dp, self);
	self.__index = self;
	self.__tostring = function() return TYPE_DECISION_POINT end;
	
	dp.bm = new_bm;
	dp.name = "Decision_Point_" .. new_name;
	dp.detect_obj = new_detect_obj;
	
	if is_convexarea(new_detect_obj) then
		dp.detect_area = true;
	else
		dp.detect_area = false;
	end;
	
	dp.escape_routes = {};
	dp.is_debug = false;
	
	return dp;
end;


function decision_point:set_debug(new_value)
	if new_value == nil then
		self.is_debug = true;
	else
		self.is_debug = new_value;
	end;
end;


function decision_point:add_escape_route(new_route)
	if not is_escaperoute(new_route) then
		self.bm:out(self.name .. " error : tried to add new escape route but supplied object is not an escape route!");
	
		return false;
	end;
	
	table.insert(self.escape_routes, new_route);
end;


function decision_point:set_caution_point()
	self.caution_point = true;
	self.exit_point = false;
end;


function decision_point:set_exit_point()
	self.caution_point = false;
	self.exit_point = true;
end;


function decision_point:set_detection_radius(new_radius)
	if (not is_number(new_radius)) or (new_radius <= 0) then
		self.bm:out(self.name .. " error: trying to set detection radius but supplied value is not valid");
		
		return false;
	end;
	
	self.detection_radius = new_radius;
end;


function decision_point:get_detection_radius()
	return self.detection_radius;
end;


function decision_point:is_detect_area()
	return self.detect_area;
end;


function decision_point:is_caution_point()
	return self.caution_point;
end;


function decision_point:is_exit_point()
	return self.exit_point;
end;


function decision_point:get_detect_obj()
	return self.detect_obj;
end;


function decision_point:get_next_route()
	if self.caution_point then
		return self.escape_routes[1];
	end;

	local current_threat = 0;
	local lowest_threat = 1000;
	local lowest_threat_index = 0;
	
	if #self.escape_routes == 0 then
		self.bm:out(self.name .. " error: get_next_route() called when no routes are attached, expect your script to break!");
		
		return false;
	end;

	for i = 1, #self.escape_routes do
		current_threat = self.escape_routes[i]:calculate_threat();
	
		if current_threat < lowest_threat then
			lowest_threat = current_threat;
			lowest_threat_index = i;
		end;
	end;
	
	return self.escape_routes[lowest_threat_index];
end;











escape_route = {
	bm = nil,
	name = "",
	threat_area = nil,
	enemy_alliance = nil,
	routes = {},
	route_pointer = 0,
	end_point = nil,
	interception_radius = 180,
	abandon_radius = 350,
	guard_radius = 350
};


function escape_route:new(new_bm, new_name, new_threat_area, new_enemy_alliance, new_end_point)
	if not is_battlemanager(new_bm) then
		return false;
	end;
	
	if not is_string(new_name) then
		new_bm:out("Couldn't create Escape Route: no name given or name invalid");
		
		return false;
	end;
		
	if not (is_nil(new_threat_area) or is_convexarea(new_threat_area)) then
		new_bm:out("Couldn't create Escape Route " .. new_name .. ": no valid threat area given");
		
		return false;
	end;
	
	if not (is_alliance(new_enemy_alliance)) then
		new_bm:out("Couldn't create Escape Route " .. new_name .. ": no valid enemy alliance given");
	
		return false;
	end;
	
	if not (is_decisionpoint(new_end_point)) then
		new_bm:out("Couldn't create Escape Route " .. new_name .. ": no valid end point given");
	end;
	
	er = {};
	setmetatable(er, self);
	self.__index = self;
	self.__tostring = function() return TYPE_ESCAPE_ROUTE end;
	
	er.bm = new_bm;
	er.name = "Escape_Route_" .. new_name;
	er.threat_area = new_threat_area;
	er.enemy_alliance = new_enemy_alliance;
	er.end_point = new_end_point;
	er.routes = {};	
	er.is_debug = false;

	return er;
end;


function escape_route:set_debug(new_value)
	if new_value == nil then
		self.is_debug = true;
	else
		self.is_debug = new_value;
	end;
end;


function escape_route:add_route(...)
	local new_route = {};
	
	for i = 1, arg.n do
		if not is_vector(arg[i]) then
			self.bm:out(self.name .. " error : trying to add escape route and object #" .. i .. " is not a vector, failing");
			
			return false;
		else
			table.insert(new_route, arg[i]);
		end;		
	end;

	table.insert(self.routes, new_route);
end;


function escape_route:calculate_threat()
	local threat = 0;
	local current_units = nil;

	if is_convexarea(self.threat_area) then
		for i = 1, self.enemy_alliance:armies():count() do
			current_units = self.enemy_alliance:armies():item(i):units();
		
			threat = threat + self.threat_area:standing_units_in_area(current_units);	
		end;
	else
		self.bm:out(self.name .. " warning: this escape route has no associated threat area yet was asked to calculate it's threat, this shouldn't happen");
	end;
	
	if self.is_debug then
		self.bm:out(self.name .. " calculated threat : " .. threat);
	end;

	return threat;
end;


function escape_route:get_route_points()
	if #self.routes == 0 then
		self.bm:out(self.name .. " error: get_route_points() was called but no routes have been added!");
		
		return nil;
	end;
			
	if self.route_pointer == #self.routes then
		self.route_pointer = 1;
	else
		self.route_pointer = self.route_pointer + 1;
	end;
	
	return self.routes[self.route_pointer];
end;


function escape_route:get_end_point()
	return self.end_point;
end;




















escape_manager = {
	bm = nil,
	name = "",
	sunit = nil,
	enemy_alliance = nil,
	caution_callback = nil,
	escape_callback = nil,
	walk_to_waypoint = 0,
	current_pm = nil,
	current_route = nil,
	is_debug = false
}


function escape_manager:new(new_bm, new_name, new_sunit, new_enemy_alliance)
	if not is_battlemanager(new_bm) then
		return false;
	end;
	
	if not is_string(new_name) then
		new_bm:out("Couldn't create Escape Manager: no name given or name invalid");
		
		return false;
	end;
		
	if not (is_scriptunit(new_sunit)) then
		new_bm:out("Couldn't create Escape Manager " .. new_name .. ": sunit given is not valid");
		
		return false;
	end;
	
	if not (is_alliance(new_enemy_alliance)) then
		new_bm:out("Couldn't create Escape Manager " .. new_name .. ": alliance given is not valid");
		
		return false;
	end;

	em = {};
	setmetatable(em, self);
	self.__index = self;
	self.__tostring = function() return TYPE_ESCAPE_MANAGER end;
	
	em.bm = new_bm;
	em.name = "Escape_Manager_" .. new_name;
	em.sunit = new_sunit;
	em.enemy_alliance = new_enemy_alliance;
	em.is_debug = false;

	return em;
end;


function escape_manager:set_walk_to_waypoint(new_value)
	if (not is_number(new_value)) or new_value < 0 then
		self.bm:out(self.name .. " error: trying to set walk to waypoint but supplied value is not a valid number!")
	
		return false;
	end;
	
	self.walk_to_waypoint = new_value;
end;


function escape_manager:set_caution_callback(new_callback)
	if not is_function(new_callback) then
		self.bm:out(self.name .. " error : trying to set a caution callback but supplied callback is not valid!");
		
		return false;
	end;
	
	self.caution_callback = new_callback;
end;


function escape_manager:set_escape_callback(new_callback)
	if not is_function(new_callback) then
		self.bm:out(self.name .. " error : trying to set an escape callback but supplied callback is not valid!");
		
		return false;
	end;
	
	self.escape_callback = new_callback;
end;


function escape_manager:set_debug(new_value)
	if new_value == nil then
		self.is_debug = true;
	else
		self.is_debug = new_value;
	end;
end;



function escape_manager:start(new_route)
	if not is_escaperoute(new_route) then
		self.bm:out(self.name .. " error: trying to start escape manager, but no valid route given");
		
		return false;
	end;
	
	self:next_route(new_route, false, true);
end;


function escape_manager:next_route(new_route, should_walk, starting)
	if self.is_debug then
		if starting then
			self.bm:out(self.name .. " is starting on route " .. new_route.name);
		else
			self.bm:out(self.name .. " moving to next route " .. new_route.name);
		end;	
	end;
	
	self.bm:remove_process(self.name);
	
	if self.current_pm then
		self.current_pm:stop();
	end;
	
	self.current_pm = patrol_manager:new(
		self.bm,
		self.name,
		self.sunit.unit,
		self.sunit.uc,
		self.enemy_alliance:armies(),
		new_route.interception_radius,
		new_route.guard_radius
	);
	
	if self.is_debug then
		self.current_pm:set_debug();
	end;
	
	self.current_pm:set_width(self.sunit.start_width);
	self.current_pm:set_intercept_time(30000);
	
	local route_points = new_route:get_route_points();
	
	if #route_points == 0 then
		-- something has gone wrong, our route has no points in it
		return false;
	end;
	
	for i = 1, #route_points do
		if should_walk then
																				--bm:out("\t\t\t\t\t\t\t" .. self.name .. " queuing WALK to waypoint (should_walk is true)");
			self.current_pm:add_waypoint(route_points[i]);
		elseif i <= self.walk_to_waypoint then
																				--bm:out("\t\t\t\t\t\t\t" .. self.name .. " queuing WALK to waypoint (i <= self.walk_to_waypoint)");
			self.current_pm:add_waypoint(route_points[i]);
		else
																				--bm:out("\t\t\t\t\t\t\t" .. self.name .. " queuing RUN to waypoint");
			self.current_pm:add_waypoint(route_points[i], true);
			self.walk_to_waypoint = 0;
		end;
	end;
	
	self.current_pm:start();
	
	bm:watch(function()	return is_unit_routing_or_dead(self.sunit.unit) end, 0, function() self:sunit_routing() end, self.name);
	
	local end_point = new_route:get_end_point();
	local detect_object = end_point:get_detect_obj();
	
	-- detect when unit has reached the next decision point
	if end_point:is_detect_area() then
		bm:watch(function() return detect_object:is_in_area(self.sunit.unit:position()) end, 0, function() self:decision_point_reached(end_point) end, self.name);
	else
		bm:watch(function() return self.sunit.unit:position():distance(detect_object) < end_point:get_detection_radius() end, 0, function() self:decision_point_reached(end_point) end, self.name);
	end;
end;




function escape_manager:sunit_routing()
	if self.is_debug then
		self.bm:out(self.name .. " : stopping as unit is routing");
	end;
	
	self.bm:remove_process(self.name);
end;


function escape_manager:decision_point_reached(decision_point)	
	if decision_point:is_exit_point() then
		if self.is_debug then
			self.bm:out(self.name .. " has reached a decision point " .. decision_point.name .. " which is an escape point !!!");
		end;
		
		self.sunit.uc:withdraw(true);
		self.bm:remove_process(self.name);
	
		if is_function(self.escape_callback) then
			self.escape_callback();
		end;
				
		return;
	end;
	
	local caution_point = decision_point:is_caution_point();
	
	if caution_point then
		if self.is_debug then
			self.bm:out(self.name .. " has reached a decision point " .. decision_point.name .. " which is a caution point !");
		end;
	
		if is_function(self.caution_callback) then
			self.caution_callback();
		end;
	else
		if self.is_debug then
			self.bm:out(self.name .. " has reached a decision point " .. decision_point.name);
		end;
	end;
	
	self:next_route(decision_point:get_next_route(), caution_point);
end;









C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\_lib\lib_event_handler.lua


-------------------------------------------------------
-------------------------------------------------------
--	EVENT HANDLER
-------------------------------------------------------
-------------------------------------------------------

__event_handler = nil;



event_handler = {
	add_func = nil,
	attached_events = {},
	listeners = {}
};

function event_handler:new(new_add_func)
	if is_eventhandler(__event_handler) then
		return eh;
	end;
	
	if not is_function(new_add_func) then
		script_error("ERROR: event_handler:new() called but supplied parameter is not a function!");
		return false;
	end;
	
	local eh = {
		add_func = new_add_func,
		attached_events = {},
		listeners = {}
	}
	
	setmetatable(eh, self);
	self.__index = self;
	self.__tostring = function() return TYPE_EVENT_HANDLER end;
	
	-- cleanup events after we shut down
	if __game_mode == __lib_type_campaign then
		-- campaign
		-- add_campaign_cleanup_action(function() ClearEventCallbacks() end);
	elseif __game_mode == __lib_type_battle then
		-- battle
		get_bm():register_phase_change_callback("Complete", function() ClearEventCallbacks() end);
	end;
	
	return eh;
end;



function event_handler:add_listener(new_name, new_event, new_condition, new_callback, new_persistent)
	if not is_string(new_name) then
		script_error("ERROR: event_handler:add_listener() called but name given [" .. tostring(new_name) .. "] is not a string");
		return false;
	end;
	
	if not is_string(new_event) then
		script_error("ERROR: event_handler:add_listener() called but event given [" .. tostring(new_event) .. "] is not a string");
		return false;
	end;
	
	if not is_function(new_condition) and not (is_boolean(new_condition) and new_condition == true) then
		script_error("ERROR: event_handler:add_listener() called but condition given [" .. tostring(new_condition) .. "] is not a function or true");
		return false;
	end;
	
	if not is_function(new_callback) then
		script_error("ERROR: event_handler:add_listener() called but callback given [" .. tostring(new_callback) .. "] is not a function");
		return false;
	end;
	
	local new_persistent = new_persistent or false;
	
	-- attach to the event if we're not already
	self:attach_to_event(new_event);
	
	local new_listener = {
		name = new_name,
		event = new_event,
		condition = new_condition,
		callback = new_callback,
		persistent = new_persistent,
		to_remove = false
	};
		
	table.insert(self.listeners, new_listener);	
end;


function event_handler:attach_to_event(eventname)

	for i = 1, #self.attached_events do
		if self.attached_events[i].name == eventname then
			-- we're already attached
			return;
		end;
	end;
		
	-- we're not attached
	local event_to_attach = {
		name = eventname,
		callback = function(context) self:event_callback(eventname, context) end
	};
	
	self.add_func(eventname, function(context) event_to_attach.callback(context) end);
	
	table.insert(self.attached_events, event_to_attach);
end;



function event_handler:event_callback(eventname, context)	
	-- self:list_events();
	
	-- make a list of callbacks to fire and listeners to remove. We can't call the callbacks whilst
	-- processing the list because the callbacks may alter the list length, and we can't rescan because
	-- this will continually hit persistent callbacks
	local callbacks_to_call = {};
	local listeners_to_remove = {};
	
	for i = 1, #self.listeners do
		local current_listener = self.listeners[i];
		
		if current_listener.event == eventname and (is_boolean(current_listener.condition) or current_listener.condition(context)) then
			table.insert(callbacks_to_call, current_listener.callback);
			
			if not current_listener.persistent then
				-- store this listener to be removed post-list
				current_listener.to_remove = true;
			end;
		end;
	end;
	
	-- clean out all the listeners that have been marked for removal
	self:clean_listeners();
	
	for i = 1, #callbacks_to_call do
		callbacks_to_call[i](context);
	end;
end;


-- go through all the listeners and remove those with the to_remove flag set
function event_handler:clean_listeners()
	for i = 1, #self.listeners do
		if self.listeners[i].to_remove then
			table.remove(self.listeners, i);
			-- restart
			self:clean_listeners();
			return;
		end;
	end;
end;


function event_handler:remove_listener(name_to_remove, start_point)
	local start_point = start_point or 1;
	
	-- out.ting("eh:remove_listener(" .. tostring(name_to_remove) .. ", " .. tostring(start_point) .. ") called. #self.listeners is " .. tostring(#self.listeners));

	for i = start_point, #self.listeners do
		-- out.ting("\tchecking listener " .. i);
		-- out.ting("\t\tlistener name is " .. self.listeners[i].name);
		if self.listeners[i].name == name_to_remove then
			table.remove(self.listeners, i);
			--rescan
			self:remove_listener(name_to_remove, i);
			return;
		end;
	end;
end;



function event_handler:list_events()
	out.ting("**************************************");
	out.ting("**************************************");
	out.ting("**************************************");
	out.ting("Event Handler attached events");
	out.ting("**************************************");
	
	local attached_events = self.attached_events;
	for i = 1, #attached_events do
		out.ting(i .. "\tname:\t\t" .. attached_events[i].name .. "\tcallback:" .. tostring(attached_events[i].callback));
	end;
	out.ting("**************************************");
	out.ting("Event Handler listeners");
	out.ting("**************************************");
	
	local listeners = self.listeners;
	for i = 1, #listeners do
		local l = listeners[i];
		out.ting(i .. ":\tname:" .. tostring(l.name) .. "\tevent:" .. tostring(l.event) .. "\tcondition:" .. tostring(l.condition) .. "\tcallback:" .. tostring(l.callback) .. "\tpersistent:" .. tostring(l.persistent));
	end;
	out.ting("**************************************");
end;














C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\_lib\lib_fe_sequence.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	HISTORIC BATTLE FRONTEND SEQUENCES
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------


fe_hb_sequence = {
	name = "",
	timer_name = "",
	advice = {},
	graphics = {},
	eh = nil,
	timers = nil,
	current_advice = 1,
	is_playing = false,
	end_callback = nil,
	uic = nil,
	fade_out_on_end = false,
	post_advice_pause = 1000,
	post_sequence_pause = 1000
};



function fe_hb_sequence:new(new_name, new_eh, new_tm, new_end_callback)
	if not is_string(new_name) then
		script_error("ERROR: trying to create fe_sequence but name given [" .. tostring(new_name) .. "] is not a string");
		return false;
	end;
	
	if not is_eventhandler(new_eh) then
		script_error("ERROR: trying to create fe_sequence but event handler specified [" .. tostring(new_eh) .. "] is not an event handler");
		return false;
	end;

	if not is_timermanager(new_tm) then
		script_error("ERROR: trying to create fe_sequence but timer object supplied [" .. tostring(new_tm) .. "] is not a timer manager");
		return false;
	end;
	
	if not is_function(new_end_callback) then
		script_error("ERROR: trying to create fe_sequence but end callback supplied [" .. tostring(new_end_callback) .. "] is not a function");
		return false;
	end;

	local fe = {};
	
	setmetatable(fe, self);
	self.__tostring = function() return TYPE_FE_HB_SEQUENCE end;
	self.__index = self;
	
	fe.name = new_name;
	fe.timer_name = new_name .. "_fe_hb_sequence";
	fe.eh = new_eh;
	fe.tm = new_tm;
	fe.end_callback = new_end_callback;
	fe.advice = {};
	fe.graphics = {};
	
	return fe;
end;


function fe_hb_sequence:add_advice(...)
	for i = 1, arg.n do
		if is_string(arg[i]) then
			table.insert(self.advice, arg[i]);
		else
			script_error(self.name .. " fe_hb_sequence WARNING: add_advice called but supplied parameter " .. i .. " [" .. tostring(arg[i]) .. "] is not a string");
		end;
	end;
end;


function fe_hb_sequence:add_graphic(new_component, new_fade_in_anim, new_fade_in_time, new_fade_out_anim, new_fade_out_time)
	if not is_string(new_component) then
		script_error(self.name .. " fe_hb_sequence ERROR: add_graphic called but component name supplied [" .. tostring(new_component) .. "] is not a string");
		return;
	end;
	
	if not is_string(new_fade_in_anim) then
		script_error(self.name .. " fe_hb_sequence ERROR: add_graphic called but fade in anim supplied [" .. tostring(new_fade_in_anim) .. "] is not a string");
		return;
	end;
	
	if not is_number(new_fade_in_time) then
		script_error(self.name .. " fe_hb_sequence ERROR: add_graphic called but fade in time supplied [" .. tostring(new_fade_in_time) .. "] is not a number");
		return;
	end;
	
	if not is_string(new_fade_out_anim) then
		script_error(self.name .. " fe_hb_sequence ERROR: add_graphic called but fade out anim supplied [" .. tostring(new_fade_out_anim) .. "] is not a string");
		return;
	end;
	
	if not is_number(new_fade_out_time) then
		script_error(self.name .. " fe_hb_sequence ERROR: add_graphic called but fade out time supplied [" .. tostring(new_fade_out_time) .. "] is not a number");
		return;
	end;
	
	local new_graphic = {
		component = new_component,
		fade_in_anim = new_fade_in_anim,
		fade_in_time = new_fade_in_time,
		fade_out_anim = new_fade_out_anim,
		fade_out_time = new_fade_out_time
	};
	
	table.insert(self.graphics, new_graphic);
end;


function fe_hb_sequence:contains_graphic(component)
	for i = 1, #self.graphics do
		if self.graphics[i].component == component then
			return i;
		end;
	end;
	
	return false;
end;




function fe_hb_sequence:play_graphic(component, start_advice, start_advice_time, end_advice, end_advice_time)
	if not is_string(component) then
		script_error(self.name .. " fe_hb_sequence ERROR: play_graphic called but component name supplied [" .. tostring(component) .. "] is not a string");
		return;
	end;
	
	local graphic_index = self:contains_graphic(component);
	
	if not graphic_index then
		script_error(self.name .. " fe_hb_sequence ERROR: play_graphic called but supplied component name [" .. tostring(component) .. "] has not been added with add_graphic()");
		return;
	end;
	
	if not is_number(start_advice) or start_advice <= 0 or start_advice > #self.advice then
		script_error(self.name .. " fe_hb_sequence ERROR: play_graphic called but start advice supplied [" .. tostring(start_advice) .. "] is not a valid number");
		return;
	end;
	
	if not is_number(start_advice_time) or start_advice_time < 0 then
		script_error(self.name .. " fe_hb_sequence ERROR: play_graphic called but start advice time supplied [" .. tostring(start_advice_time) .. "] is not a positive number");
		return;
	end;
	
	if not is_number(end_advice) then
		script_error(self.name .. " fe_hb_sequence ERROR: play_graphic called but end advice supplied [" .. tostring(end_advice) .. "] is not a valid number");
		return;
	end;
	
	if not is_number(end_advice_time) or end_advice_time < 0 then
		script_error(self.name .. " fe_hb_sequence ERROR: play_graphic called but end advice time supplied [" .. tostring(end_advice_time) .. "] is not a positive number");
		return;
	end;
	
	
	local graphic = self.graphics[graphic_index];
	
	graphic.start_advice = start_advice;
	graphic.start_advice_time = start_advice_time;
	graphic.end_advice = end_advice;
	graphic.end_advice_time = end_advice_time;
	graphic.is_visible = false;
	graphic.is_fading_in = false;
end;







function fe_hb_sequence:play(uic)
	if #self.advice == 0 then
		script_error(self.name .. " ERROR: play() called but no advice loaded");
		return false;
	end;
	
	if self.is_playing then
		script_error(self.name .. " ERROR: play() called but sequence is already playing");
		return false;
	end;
	
	if not uic then
		script_error(self.name .. " ERROR: play() called but no UIComponent specified");
		return false;
	end;
	
	self.uic = uic;
	self.is_playing = true;
	self.current_advice = 1;
	
	out.ting("Playing historic battle sequence: " .. self.name);
	
	self:play_next();
end;


function fe_hb_sequence:fade_in_graphic(graphic)
	-- play animation
	-- UIComponent(UIComponent(uic:Find("hb_image_container")):Find(graphic.component)):TriggerAnimation(graphic.fade_in_anim);
	UIComponent(uic:Find(graphic.component)):TriggerAnimation(graphic.fade_in_anim);
	
	out.ting("\t\t" .. self.name .. " is fading in graphic " .. graphic.component .. " with animation " .. graphic.fade_in_anim .. ", starting " .. tostring(graphic.start_advice_time) .. "ms after advice #" .. tostring(graphic.start_advice) .. " in sequence");
					
	-- register that the animation is playing while it is
	graphic.is_fading_in = true;
	self.tm:callback(
		function() 
			graphic.is_fading_in = false;
			graphic.is_visible = true;
		end, 
		graphic.fade_in_time,
		self.timer_name
	);
end;




function fe_hb_sequence:fade_out_graphic(graphic)
	--UIComponent(UIComponent(uic:Find("hb_image_container")):Find(graphic.component)):TriggerAnimation(graphic.fade_out_anim);
	UIComponent(uic:Find(graphic.component)):TriggerAnimation(graphic.fade_out_anim);
	
	out.ting("\t\t" .. self.name .. " is fading out graphic " .. graphic.component .. " with animation " .. graphic.fade_out_anim .. ", starting " .. tostring(graphic.end_advice_time) .. "ms after advice #" .. tostring(graphic.end_advice) .. " in sequence");
	
	graphic.is_visible = false;
end;





function fe_hb_sequence:play_next()

	-- if we've overrun the end of our advice list, finish
	if self.current_advice > #self.advice then
		self.is_playing = false;
		
		if self.fade_out_on_end then
			for i = 1, #self.graphics do
				local current_graphic = self.graphics[i];
				
				if current_graphic.is_visible or current_graphic.is_fading_in then
					self:fade_out_graphic(current_graphic);
				end;
			end;
		end;
		
		
		if is_function(self.end_callback) then
			out.ting("\t" .. self.name .. ": finished");
			self.tm:callback(function() self.end_callback() end, self.post_sequence_pause, self.timer_name);
		end;
		return;
	end;
	
	
	-- otherwise, play the next advice
	local advice_to_add = self.advice[self.current_advice];
	local played_audio = self.uic:InterfaceFunction("AddAdvice", advice_to_add);
	out.ting("\t" .. self.name .. ": adding advice " .. advice_to_add);
	
	-- record the time of the last event for this advice section, so we can work out how long we have to
	-- play it in the event that the audio is disabled (in which case we'd never get the event)
	local last_event = 4000;
	
	-- queue up the relevant animations
	for i = 1, #self.graphics do
		local current_graphic = self.graphics[i];
		
		if current_graphic.start_advice == self.current_advice then
			if current_graphic.start_advice_time == 0 then
				self:fade_in_graphic(current_graphic);
			else
				self.tm:callback(function() self:fade_in_graphic(current_graphic) end, current_graphic.start_advice_time, self.timer_name);
			end;
			
			if current_graphic.start_advice_time > last_event then
				last_event = current_graphic.start_advice_time;
			end;
		end;
		
		if current_graphic.end_advice == self.current_advice then
			self.tm:callback(function() self:fade_out_graphic(current_graphic) end, current_graphic.end_advice_time, self.timer_name);
			
			if current_graphic.end_advice_time > last_event then
				last_event = current_graphic.end_advice_time;
			end;
		end;
	end;
	
	if played_audio then
		self.eh:add_listener(
			self.timer_name,
			"AdviceFinishedTrigger",
			true,
			function()
				self.tm:callback(
					function()
						self.current_advice = self.current_advice + 1;
						self:play_next();
					end,
					self.post_advice_pause,
					self.timer_name
				);
			end,
			false
		);
	else
		-- for if not audio is played
		self.tm:callback(
			function()
				self.current_advice = self.current_advice + 1;
				self:play_next();
			end,
			last_event + 2000,
			self.timer_name
		);
	end;
end;


function fe_hb_sequence:skip()
	if not self.is_playing then
		return;
	end;

	self.is_playing = false;
	
	for i = 1, #self.graphics do
		local current_graphic = self.graphics[i];
		
		-- immediately hide component if it's fading in
		if current_graphic.is_fading_in then			
			UIComponent(UIComponent(uic:Find("hb_image_container")):Find(current_graphic.component)):SetVisible(false);
		elseif current_graphic.is_visible then
			UIComponent(UIComponent(uic:Find("hb_image_container")):Find(current_graphic.component)):TriggerAnimation(current_graphic.fade_out_anim);
		end;	
	end;
	
	self.eh:remove_listener(self.timer_name);
	self.tm:remove_process(self.timer_name);
	
	if is_function(self.end_callback) then
		self.tm:callback(function() self.end_callback() end, self.post_sequence_pause, self.timer_name);
	end;
end;
















C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\_lib\lib_firestorm_manager.lua


----------------------------------------------------------------------------------------------------------
-- **************************************************************************************************** --
----------------------------------------------------------------------------------------------------------
--
--	FIRESTORM MANAGER
--
--	The firestorm manager is a module in script that allows the scripter to set a building on fire and have that fire spread in a vaguelly realistic fashion 
--	across a group of buildings. Units that venture close to a burning building will take damage. Buildings will naturally burn down, although the scripter is
--	able to specify buildings that stay burning indefinetly. The scripter can also specify buildings that accelerate or retard the spread of fire (i.e. they
--  conduct fire on to adjacent buildings faster/slower than usual).
--
--  To set up a firestorm manager, the scripter must declare it, add at least one convex area that contains the buildings to burn, add at least one armies
--	collection containing troops that will be affected by the fire and then either start the manager or ignite one of it's buildings, which starts it automatically.
--  Buildings can be pre-ignited - that is to say that they're set on fire, but that that fire won't spread to nearby buildings until the manager is manually
--  started.
--
--
--  firestorm_manager:new(...)
--	
--	PARAMETERS
--	BATTLE_MANAGER a link to your battle manager object
--	STRING a name describing your pursuit manager. This should be unique among firestorm managers in your script
--
--
--	function firestorm_manager:set_debug(value)
--
--	Sets the firestorm manager into debug mode. 
--
--	PARAMETERS
--  optional BOOLEAN value - debug on or off, defaults to true
--
--
--  firestorm_manager:set_max_flammable_dist(value)
--
--  The max flammable dist is the maximum distance at which a building will conduct fire to another building.
--  
--	PARAMETERS:
--  NUMBER distance in metres, must be greater than 0. Default is 75.
--
--
--  firestorm_manager:set_max_flammable_time(value)
--
--  The max flammable time is the time it takes fire to conduct between two buildings at the max flammable distance
--  
--	PARAMETERS:
--  NUMBER time in ms, must be greater than the min flammable time. Default is 25000.
--
--
--  firestorm_manager:set_min_flammable_time(value)
--
--  The min flammable time is the minimum time fire will conduct between two buildings (they'd have to be 0m apart)
--  
--	PARAMETERS:
--  NUMBER time in ms, must be less than the max flammable time. Default is 5000.
--
--
--  firestorm_manager:set_accelerator_modifier(value)
--
--  If a building is set to accelerate the spread of fire, the normal time the fire takes to spread to adjacent buildings is multiplied by this value.
--  
--	PARAMETERS:
--  NUMBER value, must be greater than zero. Default is 0.3. A value greater than 1 will make accelerated buildings actually retard the spread of fire instead!
--
--
--  firestorm_manager:set_retardation_modifier(value)
--
--  If a building is set to retard the spread of fire, the normal time the fire takes to spread to adjacent buildings is multiplied by this value.
--  
--	PARAMETERS:
--  NUMBER value, must be greater than zero. Default is 1.5. A value less than 1 will make retarded buildings actually accelerate the spread of fire instead!
--
--
--  firestorm_manager:set_hurt_radius(value)
--
--  The distance units can be from a burning building before they take damage.
--  
--	PARAMETERS:
--  NUMBER value in metres, must be greater than zero. Default is 50.
--
--
--	function firestorm_manager:make_fireproof(building)
--
--	Makes a given building fireproof, so that it will burn indefinetly.
--
--	PARAMETERS:
--	BUILDING building to fireproof. Must be in a convex area covered by the firestorm manager.
--
--
--	function firestorm_manager:accelerate_burning(building)
--
--	Makes a given building accelerate the spread of fire. Nearby buildings will catch fire from this building more quickly than usual. The rate of this is
--	controlled by the accelerator modifier.
--
--	PARAMETERS:
--	BUILDING building to accelerate. Must be in a convex area covered by the firestorm manager.
--
--
--	function firestorm_manager:retard_burning(building)
--
--	Makes a given building retard the spread of fire. Nearby buildings will catch fire from this building more slowly than usual. The rate of this is
--	controlled by the retardation modifier.
--
--	PARAMETERS:
--	BUILDING building to retard. Must be in a convex area covered by the firestorm manager.
--
--
--	function firestorm_manager:add_armies(armies, should_notify)
--
--	Adds an armies collection to the manager. Units will only take damage near burning buildings if they're part of an armies collection that has been added to
--	the firestorm manager in this way.
--
--	PARAMETERS:
--	ARMIES armies collection to add
--	opt BOOL whether units being killed from this army should increment the notification counter
--
--
--	function firestorm_manager:add_convex_area(convex_area)
--
--	Adds a convex area to the firestorm manager. Buildings within this area get scanned and added to the internal building list. At least one convex area
--	containing buildings must be added to the manager before it can be started.
--
--	PARAMETERS:
--	CONVEX_AREA area to add
--
--
--	function firestorm_manager:ignite_building(building)
--
--	Ignites a building, starting a fire spreading from it. Multiple buildings can be ignited. If the manager is not already started it gets started at this
--	point.
--
--	PARAMETERS:
--	BUILDING building to ignite. Must be in a convex area covered by the firestorm manager.
--
--
--	function firestorm_manager:pre_ignite_building(building)
--
--	Ignites a building, but the fire does not start to spread from it until start() is called. Note that if the subject building is not fireproof it may burn
--	down before the manager is started, which will cause erroneous results.
--
--	PARAMETERS:
--	BUILDING building to ignite. Must be in a convex area covered by the firestorm manager.
--
--
--	function firestorm_manager:start()
--
--	Starts the firestorm manager. This starts the fire spreading from any pre-ignited buildings
--
--	<no parameters>

-----------------------------------------------------------------------------------------------------------

--[[

	SAMPLE USAGE:
			
	-- called on startup
	fm = firestorm_manager:new(bm, "Castle");
	--fm:set_debug();
	fm:set_max_flammable_time(120000);
	fm:set_min_flammable_time(20000);
	
	fm:add_convex_area(Area_Castle);
	
	fm:add_armies(Armies_Ikko, true);
	fm:add_armies(Armies_Oda, false);
	
	fm:make_fireproof(bm:buildings():item(140));
	fm:make_fireproof(bm:buildings():item(143));
	fm:make_fireproof(bm:buildings():item(145));

	fm:accelerate_burning(bm:buildings():item(136));
	
	fm:retard_burning(bm:buildings():item(15));
	
	
	-- called during cutscene
	function Pre_Ignite_Buildings()
		fm:pre_ignite_building(bm:buildings():item(140));
		fm:pre_ignite_building(bm:buildings():item(143));
		fm:pre_ignite_building(bm:buildings():item(145));
	end;
	
	
	-- called at the start of gameplay
	function Start_Fire_At_End_Of_Cutscene()
		fm:start();
	end;

]]




--[[

-- A visual record of what these tables look like, for maintenance purposes

neighbour = {
		building_record,
		offset_time
}

building_record = {
	building = nil,
	currently_burning = false,
	has_burned = false,
	always_burn = false,
	accelerate_burning = false,
	retard_burning = false,
	neighbours = {},
	max_spread_fire_time = 0,
	callback = nil,
	deathzone = nil
}
]]

firestorm_manager = {
	bm = nil,
	name = "",
	area_list = {},
	building_list = {},
	hurtarea_list = {},
	armies_list = {},
	is_debug = false,
	is_running = false,
	max_flammable_dist = 75,
	max_flammable_time = 25000,
	min_flammable_time = 5000,
	accelerator_modifier = 0.3,
	retardation_modifier = 1.5,
	hurt_radius = 50,
	fire_death_threshold = 8,
	notification_list = {},
	notification_alliance = nil,
	hurt_count = 0
}

function firestorm_manager:new(new_bm, new_name)
	--check parameters
	if not is_battlemanager(new_bm) then
		return false;
	end;
	
	if not is_string(new_name) then
		new_bm:out("Couldn't create Firestorm Manager: no name given or name invalid");
		
		return false;
	end;
		
	fm = {};
	setmetatable(fm, self);
	self.__index = self;
	self.__tostring = function() return TYPE_FIRESTORM_MANAGER end;
		
	fm.bm = new_bm;
	fm.name = "Firestorm_Manager_" .. new_name;
	
	fm.area_list = {};
	fm.building_list = {};
	fm.hurtarea_list = {};
	fm.notification_list = {};
	fm.is_debug = false;
	fm.is_running = false;
			
	return fm;
end;


function firestorm_manager:set_burn_notification_alliance(alliance)
	if self.is_running then
		self.bm:out(self.name .. " error : tried to set burn notification alliance in a running firestorm manager, you cannot do this!");
		
		return false;
	end;
	
	if not is_alliance(alliance) then
		self.bm:out(self.name .. " error : tried to set burn notification alliance in a firestorm manager and the argument is not an alliance!");
		
		return false;
	end;
		
	if self.is_debug then
		self.bm:out(self.name .. " set_burn_notification_alliance called, alliance is " .. tostring(alliance));
	end;
	
	self.notification_alliance = alliance;
end;


function firestorm_manager:set_burn_notification(new_count, new_callback)
	if self.is_running then
		self.bm:out(self.name .. " error : tried to set a burn notification in a running firestorm manager, you cannot do this!");
		
		return false;
	end;
	
	if not is_number(new_count) or not is_function(new_callback) then
		self.bm:out(self.name .. " error : tried to set a burn notification but one of the supplied parameters is incorrect!");
		
		return false;
	end;
	
	if self.is_debug then
		self.bm:out(self.name .. " setting a burn notification, count is " .. new_count);
	end;
	
	local new_note = {count = new_count, callback = new_callback};

	table.insert(self.notification_list, new_note);
end;


function firestorm_manager:set_max_flammable_dist(value)
	if self.is_running then
		self.bm:out(self.name .. " error : tried to set value in a running firestorm manager, you cannot do this!");
		
		return false;
	end;
	
	if not is_number(value) or value <= 0 then
		self.bm:out(self.name .. " error : tried to set an invalid max flammable time, must be a number greater than zero!");
		
		return false;
	end;
	
	if self.is_debug then
		self.bm:out(self.name .. " setting max_flammable_distance to " .. value);
	end;

	self.max_flammable_dist = value;
end;


function firestorm_manager:set_max_flammable_time(value)
	if self.is_running then
		self.bm:out(self.name .. " error : tried to set value in a running firestorm manager, you cannot do this!");
		
		return false;
	end;
	
	if not is_number(value) or value <= 0 or value <= self.min_flammable_time then
		self.bm:out(self.name .. " error : tried to set an invalid max flammable time, must be a number greater than the minimum flammable time!");
		
		return false;
	end;
	
	if self.is_debug then
		self.bm:out(self.name .. " setting max_flammable_time to " .. value);
	end;

	self.max_flammable_time = value;
end;


function firestorm_manager:set_min_flammable_time(value)
	if self.is_running then
		self.bm:out(self.name .. " error : tried to set value in a running firestorm manager, you cannot do this!");
		
		return false;
	end;
	
	if not is_number(value) or value <= 0 or value >= self.max_flammable_time then
		self.bm:out(self.name .. " error : tried to set an invalid min flammable time, must be a number less than the maximum flammable time!");
		
		return false;
	end;
	
	if self.is_debug then
		self.bm:out(self.name .. " setting min_flammable_time to " .. value);
	end;

	self.min_flammable_time = value;
end;


function firestorm_manager:set_accelerator_modifier(value)
	if self.is_running then
		self.bm:out(self.name .. " error : tried to set value in a running firestorm manager, you cannot do this!");
		
		return false;
	end;
	
	if not is_number(value) or value <= 0 then
		self.bm:out(self.name .. " error : tried to set an invalid accelerator modifier, must be a number greater than 0");
		
		return false;
	end;
	
	if self.is_debug then
		self.bm:out(self.name .. " setting accelerator_modifier to " .. value);
	end;

	self.accelerator_modifier = value;
end;


function firestorm_manager:set_retardation_modifier(value)
	if self.is_running then
		self.bm:out(self.name .. " error : tried to set value in a running firestorm manager, you cannot do this!");
		
		return false;
	end;
	
	if not is_number(value) or value <= 0 then
		self.bm:out(self.name .. " error : tried to set an invalid retardation modifier, must be a number greater than 0");
		
		return false;
	end;
	
	if self.is_debug then
		self.bm:out(self.name .. " setting retardation_modifier to " .. value);
	end;

	self.retardation_modifier = value;
end;


function firestorm_manager:set_hurt_radius(value)
	if self.is_running then
		self.bm:out(self.name .. " error : tried to set value in a running firestorm manager, you cannot do this!");
		
		return false;
	end;
	
	if not is_number(value) or value <= 0 then
		self.bm:out(self.name .. " error : tried to set an invalid hurt radius, must be a number greater than 0");
		
		return false;
	end;
	
	if self.is_debug then
		self.bm:out(self.name .. " setting hurt_radius to " .. value);
	end;

	self.hurt_radius = value;
end;


function firestorm_manager:make_fireproof(b)
	if self.is_running then
		self.bm:out(self.name .. " error : tried to fireproof a building in a running firestorm manager, you cannot do this!");
		
		return false;
	end;
	
	if not is_building(b) then
		self.bm:out(self.name .. " error : tried to fireproof a building in a firestorm manager and the parameter is not a building!");
		
		return false;
	end;
	
	local building_record = self:get_building_record(b);
	
	if not building_record then
		self.bm:out(self.name .. " error : attempted to fireproof a building that's not in our building list at " .. v_to_s(b:position()) .. " (centre-point is " .. v_to_s(b:central_position()) .. ")");
		
		return false;
	end;
	
	if self.is_debug then
		self.bm:out(self.name .. " make_fireproof called on building at " .. v_to_s(b:position()) .. " (centre-point is " .. v_to_s(b:central_position()) .. ")");
	end;
	
	--building_record.building:change_immune_to_fire_damage(true);
	building_record.always_burn = true;
end;


function firestorm_manager:set_notification(b, callback)
	if self.is_running then
		self.bm:out(self.name .. " error : tried to set notification in a running firestorm manager, you cannot do this!");
		
		return false;
	end;
	
	if not is_building(b) or not is_function(callback) then
		self.bm:out(self.name .. " error : tried to set notification in a firestorm manager and one of the parameters is wrong!");
		
		return false;
	end;
	
	local building_record = self:get_building_record(b);
	
	if not building_record then
		self.bm:out(self.name .. " error : attempted to set notification on a building that's not in our building list at " .. v_to_s(b:position()) .. " (centre-point is " .. v_to_s(b:central_position()) .. ")");
		
		return false;
	end;
	
	if self.is_debug then
		self.bm:out(self.name .. " set_notification called on building at " .. v_to_s(b:position()) .. " (centre-point is " .. v_to_s(b:central_position()) .. ")");
	end;
	
	building_record.callback = callback;
end;


function firestorm_manager:set_deathzone(b, deathzone)
	if self.is_running then
		self.bm:out(self.name .. " error : tried to set deathzone in a running firestorm manager, you cannot do this!");
		
		return false;
	end;
	
	if not is_building(b) or not is_convexarea(deathzone) then
		self.bm:out(self.name .. " error : tried to set deathzone in a firestorm manager and one of the parameters is wrong!");
		
		return false;
	end;
	
	local building_record = self:get_building_record(b);
	
	if not building_record then
		self.bm:out(self.name .. " error : attempted to set a deathzone on a building that's not in our building list at " .. v_to_s(b:position()) .. " (centre-point is " .. v_to_s(b:central_position()) .. ")");
		
		return false;
	end;
	
	if self.is_debug then
		self.bm:out(self.name .. " set_deathzone called on building at " .. v_to_s(b:position()) .. " (centre-point is " .. v_to_s(b:central_position()) .. ")");
	end;
	
	building_record.deathzone = deathzone;
end;


function firestorm_manager:accelerate_burning(b)
	if self.is_running then
		self.bm:out(self.name .. " error : tried to accelerate a building in a running firestorm manager, you cannot do this!");
		
		return false;
	end;
	
	if not is_building(b) then
		self.bm:out(self.name .. " error : tried to accelerate a building but supplied object is not a building!");
		
		return false;
	end;
	
	local building_record = self:get_building_record(b);
	
	if not building_record then
		self.bm:out(self.name .. " error : attempted to accelerate a building that's not in our building list at " .. v_to_s(b:position()) .. " (centre-point is " .. v_to_s(b:central_position()) .. ")");
		
		return false;
	end;
	
	if self.is_debug then
		self.bm:out(self.name .. " accelerate_burning called on building at " .. v_to_s(b:position()) .. " (centre-point is " .. v_to_s(b:central_position()) .. ")");
	end;
	
	building_record.accelerate_burning = true;
end;


function firestorm_manager:retard_burning(b)
	if self.is_running then
		self.bm:out(self.name .. " error : tried to retard building in a running firestorm manager, you cannot do this!");
		
		return false;
	end;
	
	if not is_building(b) then
		self.bm:out(self.name .. " error : tried to retard a building but supplied object is not a building!");
		
		return false;
	end;
	
	local building_record = self:get_building_record(b);
	
	if not building_record then
		self.bm:out(self.name .. " error : attempted to retard a building that's not in our building list at " .. v_to_s(b:position()) .. " (centre-point is " .. v_to_s(b:central_position()) .. ")");
		
		return false;
	end;
	
	if self.is_debug then
		self.bm:out(self.name .. " retard_burning called on building at " .. v_to_s(b:position()) .. " (centre-point is " .. v_to_s(b:central_position()) .. ")");
	end;
	
	building_record.retard_burning = true;
end;


function firestorm_manager:get_building_record(b)
	local building_record = nil;
	
	for i = 1, #self.building_list do
		if self.building_list[i].building == b then
			building_record = self.building_list[i];
			
			return building_record;
		end;
	end;
	
	return false;
end;


function firestorm_manager:contains_building(b)
	for i = 1, #self.building_list do
		if self.building_list[i].building == b then
			return true;
		end;
	end;
	
	return false;
end;


function firestorm_manager:building_is_in_area(b)
	if not is_building(b) then
		return false;
	end;

	for i = 1, #self.area_list do
		if self.area_list[i]:is_in_area(b:central_position()) then
			return true;
		end;
	end;
	
	return false;
end;


function firestorm_manager:add_armies(new_armies, new_should_notify)
	if self.is_running then
		self.bm:out(self.name .. " error : tried to add armies to a running firestorm manager, you cannot do this!");
		
		return false;
	end;

	if not is_armies(new_armies) then
		self.bm:out(self.name .. " error : tried to add armies but the object supplied is not valid");
		
		return false;
	end;
		
	local armies_entry = {armies = new_armies, should_notify = new_should_notify};
		
	table.insert(self.armies_list, armies_entry);
end;


function firestorm_manager:add_convex_area(new_convex_area)
	if not is_convexarea(new_convex_area) then
		self.bm:out(self.name .. " error : tried to add convex area but the object supplied is not a convex area");
		
		return false;
	end;
	
	if self.is_running then
		self.bm:out(self.name .. " error : tried to add a convex area to a running firestorm manager, you cannot do this!");
		
		return false;
	end;
	
	table.insert(self.area_list, new_convex_area);
	
	-- go through all the buildings on the map that we don't have in our local list and check to see if they should be added
	local buildings = bm:buildings();
	local count = 0;
	
	for i = 1, buildings:count() do
		local b = buildings:item(i);
	
		if not self:contains_building(b) and self:building_is_in_area(b) then
			local building_record = {
										building = b,
										currently_burning = false,
										has_burned = false,
										always_burn = false,
										accelerate_burning = false,
										retard_burning = false,
										neighbours = {},
										max_spread_fire_time = 0,
										callback = nil,
										deathzone = nil
			};
			
			--make building unable to catch fire until we want it to burn
			b:change_immune_to_catching_fire(true);
					
			table.insert(self.building_list, building_record);
			count = count + 1;
		end;
	end;
	
	self.bm:out(self.name .. " :: added " .. count .. " buildings");
	
	-- rebuild all the interconnections between the buildings
	for i = 1, #self.building_list do
		self.building_list[i].neighbours = {};
	
		for j = 1, #self.building_list do
			if i ~= j then
				-- check if these two buildings are in range of each other
				local distance = self.building_list[i].building:central_position():distance(self.building_list[j].building:central_position());
								
				if distance < self.max_flammable_dist then					
					local new_offset_time = math.floor((distance * (self.max_flammable_time - self.min_flammable_time) / self.max_flammable_dist) + self.min_flammable_time);
					
					local new_neighbour = {
											building_record = self.building_list[j],
											offset_time = new_offset_time
										};
										
					table.insert(self.building_list[i].neighbours, new_neighbour);
				end;
			end;
		end;
	end;
end;


function firestorm_manager:set_debug(value)
	if self.is_running then
		self.bm:out(self.name .. " warning: trying to change debug state of a running firestorm manager. This is undesirable, but doing it anyway.");
	end;

	if is_boolean(value) then
		self.is_debug = value;
	else
		self.is_debug = true;
	end;
end;


function firestorm_manager:start()
	if self.is_running then
		self.bm:out(self.name .. " error : trying to start a firestorm manager that is already running !");
		
		return false;
	end;
	
	if #self.building_list == 0 then
		self.bm:out(self.name .. " error : unable to start as no buildings have been added");
		
		return false;
	end;
	
	if self.is_debug then
		self.bm:out(self.name .. " :: starting");
	end;
	
	self.is_running = true;
	self.bm:register_callback(function() self:process_hurtareas() end, 3000);
	
	-- go through all the pre-ignited buildings and start fires spreading from them
	for i = 1, #self.building_list do
		if self.building_list[i].currently_burning then
			self:spread_fire(self.building_list[i]);
		end;
	end;
	
	return true;
end;


function firestorm_manager:watch_fire(building_record)
	--if this building is set to burn forever then we don't need to do anything
	
	if building_record.always_burn then
		self.bm:watch(
						function()
							return building_record.building:health() < 0.1
						end,
						0,
						function()
							building_record.building:change_immune_to_fire_damage(true)
						end
				);
	else

		--put out fire when the building is destroyed
		self.bm:watch(
					function()
						return building_record.building:health() == 0
					end,
					0,
					function()
						-- work out if we can turn off the fire now (i.e. in 5 secs), or if we have to wait for other buildings nearby to catch fire still
						if building_record.max_spread_fire_time < timestamp_tick then
							bm:register_callback(function() self:extinguish_fire(building_record) end, 5000);
						else
							bm:register_callback(function() self:extinguish_fire(building_record) end, building_record.max_spread_fire_time + 5000);
						end;
					end
				);
	end;
end;


function firestorm_manager:extinguish_fire(building_record)
	building_record.building:change_on_fire(false);
	building_record.currently_burning = false;
end;


function firestorm_manager:pre_ignite_building(b)		
	local building_record = self:get_building_record(b);
	
	-- if we haven't found it, then exit
	if not building_record then
		self.bm:out(self.name .. " error : attempted to ignite a building that's not in our building list");
		
		return false;
	end;
	
	-- if this building has burned already, or is destroyed, then exit
	if building_record.has_burned or building_record.building:health() == 0 then
		return false;
	end;
			
	if self.is_debug then
		self.bm:out(self.name .. " pre_ignite_building called on building at " .. v_to_s(b:position()) .. " (centre-point is " .. v_to_s(b:central_position()) .. ")");
	end;
	
	building_record.building:change_immune_to_catching_fire(false);
	building_record.building:change_on_fire();
	building_record.currently_burning = true;
	building_record.has_burned = true;
	
	self:watch_fire(building_record);
	
	if building_record.callback then
		building_record.callback();
	end;
end;


function firestorm_manager:ignite_building(b)		
	local building_record = self:get_building_record(b);
	
	-- if we haven't found it, then exit
	if not building_record then
		self.bm:out(self.name .. " error : attempted to ignite a building that's not in our building list");
		
		return false;
	end;
	
	-- if this building has burned already, or is destroyed, then exit
	if building_record.has_burned or building_record.building:health() == 0 then
		return false;
	end;
	
	-- start the manager if it's not already
	if not self.is_running then
		if not self:start() then
			-- we are not able to start for some reason
			return false;
		end;
	end;
	
	if self.is_debug then
		self.bm:out(self.name .. " ignite_building called on building at " .. v_to_s(b:position()) .. " (centre-point is " .. v_to_s(b:central_position()) .. ")");
	end;
		
	-- set it on fire
	building_record.building:change_immune_to_catching_fire(false);
	building_record.building:change_on_fire();
	building_record.currently_burning = true;
	building_record.has_burned = true;
	
	self:watch_fire(building_record);
	self:spread_fire(building_record);
	
	if building_record.callback then
		building_record.callback();
	end;
end;


function firestorm_manager:spread_fire(building_record)
	-- go through the registered neighbours for this building, and queue them up to catch fire at the appropriate time
	local offset_time_to_use = 0;
	local longest_offset = 0;
	
	for i = 1, #building_record.neighbours do
		if not building_record.neighbours[i].building_record.has_burned then
			offset_time_to_use = building_record.neighbours[i].offset_time;
			
			if offset_time_to_use > longest_offset then
				longest_offset = offset_time_to_use;
			end;
			
			if building_record.accelerate_burning then
				offset_time_to_use = offset_time_to_use * self.accelerator_modifier;
			end;
			
			if building_record.retard_burning then
				offset_time_to_use = offset_time_to_use * self.retardation_modifier;
			end;
		
			self.bm:register_callback(
										function() self:ignite_building(building_record.neighbours[i].building_record.building) end, 
										offset_time_to_use,
										self.name
									);
			if self.is_debug then
				self.bm:out(self.name .. " going to burn building " .. v_to_s(building_record.neighbours[i].building_record.building:position()) .. " in " .. offset_time_to_use .. "ms");
			end;					
		end;
	end;
	
	building_record.max_spread_fire_time = longest_offset + timestamp_tick;
end;


function firestorm_manager:damage_unit(unit, distance)	
	local n = 0;	--number of men to kill
		
	n = ((self.hurt_radius - distance) / self.hurt_radius) * (self.fire_death_threshold - 1) + 1;
	
	unit:kill_number_of_men(n);
	
	if self.is_debug then
		bm:out(self.name .. " :: damaging some unit");
	end;
	
	self:inc_hurt_count(unit);
end;


-- called when units walk into a deathzone attached to a burning building
function firestorm_manager:heavily_damage_unit(unit)
	unit:kill_number_of_men(unit:initial_number_of_men() / 4);
	
	self.bm:out(self.name .. " :: heavily damaging some unit as it's walking through a gate");
	
	self:inc_hurt_count(unit);
end;


-- called each time a unit gets hurt
function firestorm_manager:inc_hurt_count(unit)
	if is_unit_routing_or_dead(unit) then
		return false;
	end;

	if self.notification_alliance and (not Alliance_contains_unit(self.notification_alliance, unit)) then
		return false;
	end;

	self.hurt_count = self.hurt_count + 1;
	
	for i = 1, #self.notification_list do
		if self.notification_list[i].count == self.hurt_count then
			self.notification_list[i].callback();
		end;
	end;
end;


function firestorm_manager:process_hurtareas()
	if not self.is_running then
		self.bm:out(self.name .. " error : process_hurtareas called on a firestorm manager that isn't running, something has gone very wrong!");
		
		return false;
	end;
	
	if self.is_debug then
		self.bm:out(self.name .. " : process_hurtareas() called");
	end;
	
	local building_record = nil;
	local building_position = nil;
	local current_units = nil;
	local current_unit = nil;
		
	for i = 1, #self.building_list do
		building_record = self.building_list[i];
		
		if building_record.currently_burning then		
			building_position = building_record.building:central_position();
				
			for j = 1, #self.armies_list do				
				for k = 1, self.armies_list[j].armies:count() do			
					current_units = self.armies_list[j].armies:item(k):units();
												
					for l = 1, current_units:count() do
						current_unit = current_units:item(l);
						
						if building_position:distance(current_unit:position()) < self.hurt_radius then
							self:damage_unit(current_unit, building_position:distance(current_unit:position()));
						end;
						
						--process deathzones additionally
						if building_record.deathzone then
							if building_record.deathzone:is_in_area(current_unit:position()) then
								self:heavily_damage_unit(current_unit);
							end;
						end;
					end;
				end;
			end;
		end;	
	end;
	
	self.bm:register_callback(function() self:process_hurtareas() end, 3000);
end;








C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\_lib\lib_generated_battle.lua




__generated_battle = nil;

__GENERATED_ARMY_IS_PLAYER = 0;
__GENERATED_ARMY_IS_ALLY_OF_PLAYER = 1;
__GENERATED_ARMY_IS_ENEMY_OF_PLAYER = 2;


generated_battle = {
	bm = nil,
	sm = nil,
	generated_armies = {},
	is_debug = false,
	prevent_deployment = false,
	battle_has_started = false
};



function generated_battle:new(prevent_deployment, is_debug)
	local gb = {};
	
	setmetatable(gb, self);
	self.__index = self;
	self.__tostring = function() return TYPE_GENERATED_BATTLE end;
	
	local bm = get_bm(true);
	local sm = get_messager();
	
	gb.bm = bm;
	gb.sm = sm;
	gb.is_debug = is_debug;
	gb.prevent_deployment = prevent_deployment;
	
	bm:out("==============================");
	bm:out("==============================");
	bm:out("== generated_battle created ==");
	bm:out("==============================");
	bm:out("==============================");

	-- build all our generated_army objects
	gb:build_armies();
	
	-- deployment message
	bm:register_phase_change_callback(
		"Deployment", 
		function() 
			gb:start_deployment();
		end
	);
	
	-- ending deployment
	if prevent_deployment then
		bm:setup_battle(function() gb:start_battle() end);
	else
		bm:register_phase_change_callback("Deployed", function() gb:start_battle() end);
	end;

	return gb;
end;


-- build the collection of generated armies for this battle
function generated_battle:build_armies()
	self.generated_armies = {};

	local alliances = self.bm:alliances();
				
	for i = 1, alliances:count() do
		local armies = alliances:item(i):armies();
		
		self.generated_armies[i] = {};
		
		if self.is_debug then
			self.bm:out("\tadding alliance " .. tostring(i) .. ":");
		end;
				
		for j = 1, armies:count() do
			local current_army = armies:item(j);
			
			local ga = generated_army:new(i, j, current_army, self, self.is_debug);
			
			table.insert(self.generated_armies[i], ga);
			
			if self.is_debug then
				self.bm:out("\t\tadding army " .. tostring(j) .. " containing " .. tostring(ga.total_units) .. " units");
			end;
		end;	
	end;
	
	self.bm:out(" ");
end;



-- called internally when deployment starts
function generated_battle:start_deployment()
	self.bm:out("Starting deployment");
	self.sm:trigger_message("deployment_started");
			
	if not self.prevent_deployment then
		self.bm:enable_cinematic_ui(false, true, false);
	end;
	
	-- unhide the ui if it hasn't already been unhidden
	if self.prevent_deployment then
		self.bm:enable_cinematic_ui(false, true, false);
	end;
end;



-- called internally when the playable battle starts
function generated_battle:start_battle()
	self.battle_has_started = true;

	self.bm:out("Starting generated battle");
	self.sm:trigger_message("battle_started");
	
	-- unhide the ui if it hasn't already been unhidden
	if self.prevent_deployment then
		self.bm:enable_cinematic_ui(false, true, false);
	end;
end;



-- called internally when the playable battle starts
function generated_battle:has_battle_started()
	return self.battle_has_started;
end;





--	Returns the generated_army corresponding to a supplied alliance and army number. Used by battle scripts to get a handle to 
--	generated_army objects to be able to give them further orders.
function generated_battle:get_army(alliance_number, army_number)
	if not is_number(alliance_number) then
		script_error(self.name .. " ERROR: get_army() called but supplied alliance number [" .. tostring(alliance_number) .. "] is not a number");
		return false;
	end;
	
	local armies = self.generated_armies[alliance_number];
	
	if not is_table(armies) then
		script_error(self.name .. " ERROR: get_army() called but couldn't find any records matching supplied alliance number [" .. tostring(alliance_number) .. "]");
		return false;
	end;
	
	if not is_number(army_number) then
		script_error(self.name .. " ERROR: get_army() called but supplied army number [" .. tostring(army_number) .. "] is not a number");
		return false;
	end;
	
	local generated_army = armies[army_number];
	
	if not is_generatedarmy(generated_army) then
		script_error(self.name .. " ERROR: get_army() called but couldn't find a generated_army matching supplied army number [" .. tostring(army_number) .. "], though the alliance was valid");
		return false;
	end;
	
	return generated_army;
end;



--
--	Takes an alliance and army number, and returns a table of all sunits that are allied to this army.
--	Used by generated_army objects to build a list of all their allies.
--
function generated_battle:get_allied_force(alliance_num, army_num)
	local retval = {};

	for i = 1, #self.generated_armies do
		if i == alliance_num then
			for j = 1, #self.generated_armies[i] do
				if j ~= army_num then
					-- add this force to the retval force
					local generated_army_sunits = self.generated_armies[i][j].sunits;
					
					for k = 1, #generated_army_sunits do
						table.insert(retval, generated_army_sunits[k]);
					end;
				end;
			end;
		end;
	end;
	
	return retval;
end;



--
--	Takes an alliance and army number, and returns a table of all sunits that are the enemy of this army.
--	Used by generated_army objects to build a list of all their enemies.
--
function generated_battle:get_enemy_force(alliance_num, army_num)
	local retval = {};

	for i = 1, #self.generated_armies do
		if i ~= alliance_num then
			for j = 1, #self.generated_armies[i] do
				-- add this force to the retval force
				local generated_army_sunits = self.generated_armies[i][j].sunits;
				
				for k = 1, #generated_army_sunits do
					table.insert(retval, generated_army_sunits[k]);
				end;
			end;
		end;
	end;
	
	return retval;
end;


--	advice_on_message
--	Takes a string message, a string advice key, and an optional time offset in ms. Instruct the generated_battle to play a piece of
--	advice on receipt of a message, with the optional time offset so that it doesn't happen robotically at the same moment as the message.
function generated_battle:advice_on_message(message, advice_key, wait_offset)
	if not is_string(advice_key) then
		script_error("generated_battle ERROR: advice_on_message() called but supplied advice key [" .. tostring(advice_key) .. "] is not a string");
		return false;
	end;

	if not is_string(message) then
		script_error("generated_battle ERROR: advice_on_message() called but supplied message [" .. tostring(message) .. "] is not a string");
		return false;
	end;
	
	if is_nil(wait_offset) then
		wait_offset = 0;
	elseif not is_number(wait_offset) or wait_offset < 0 then
		script_error("generated_battle ERROR: advice_on_message() called but supplied wait_offset [" .. tostring(wait_offset) .. "] is not a positive number");
		return false;
	end;
	
	self.sm:add_listener(
		message,
		function()
			self.bm:callback(
				function()
					self.bm:out("generated_battle:advice_on_message() now queueing advice " .. advice_key);
					self.bm:queue_advisor(advice_key);
				end,
				wait_offset
			);
		end
	);
end;



--	message_on_time_offset
--	Takes a string message and a wait time in ms. Waits for the specified interval and then triggers the message. If the battle
--	has not yet started then it waits for the battle to start before commencing waiting.
function generated_battle:message_on_time_offset(message, wait_time)
	if not is_string(message) then
		script_error("generated_battle ERROR: message_on_time_offset() called but supplied message [" .. tostring(message) .. "] is not a string");
		return false;
	end;

	if not is_number(wait_time) then
		script_error("generated_battle ERROR: message_on_time_offset() called but supplied wait_time [" .. tostring(wait_time) .. "] is not a number, it needs to be a time in ms");
		return false;
	end;
	
	-- if the battle has not started then offset this 
	if not self.battle_has_started then
		self.sm:add_listener("battle_started", function() self:message_on_time_offset(message, wait_time) end);
		return;
	end;
	
	self.bm:callback(function() self.sm:trigger_message(message) end, wait_time);
end;














































generated_army = {
	bm = nil,
	sm = nil,
	name = "",
	army = nil,
	alliance_number = 0,
	army_number = 0,
	sunits = {},
	script_ai_planner = nil,
	total_units = 0,
	generated_battle = nil,
	is_allied_to_player = false,
	enemy_force = {},
	allied_force = {},
	enemies_and_allies_known = false,
	is_debug = false
};


function generated_army:new(alliance_number, army_number, army, generated_battle, is_debug)
	if not is_number(alliance_number) then
		script_error("ERROR: tried to created generated_army but supplied alliance number [" .. tostring(alliance_number) .. "] is not a number");
		return false;
	end;
	
	if not is_number(army_number) then
		script_error("ERROR: tried to created generated_army but supplied army number [" .. tostring(army_number) .. "] is not a number");
		return false;
	end;

	if not is_army(army) then
		script_error("ERROR: tried to created generated_army but supplied army [" .. tostring(army) .. "] is not an army");
		return false;
	end;
	
	if not is_generatedbattle(generated_battle) then
		script_error("ERROR: tried to created generated_army but supplied generated battle [" .. tostring(generated_battle) .. "] is not a generated_battle");
		return false;
	end;

	local ga = {};
	
	setmetatable(ga, self);
	self.__index = self;
	self.__tostring = function() return TYPE_GENERATED_ARMY end;
	
	local bm = get_bm();
	local sm = get_messager();
	
	ga.bm = bm;
	ga.sm = sm;
	ga.name = "generated_army_" .. tostring(alliance_number) .. ":" .. army_number;
	ga.alliance_number = alliance_number;
	ga.army_number = army_number;
	
	ga.enemy_force = {};
	ga.allied_force = {};
		
	ga.army = army;
	
	ga.sunits = {};
	ga:build_sunits();
	ga.total_units = #ga.sunits;
	
	-- take control if this is not a local army
	if not (alliance_number == bm:local_alliance() and army_number == bm:local_army()) then
		ga.script_ai_planner = script_ai_planner:new(ga.name, ga.sunits, is_debug);
	end;
			
	ga.generated_battle = generated_battle;
	ga.is_debug = is_debug;

	return ga;
end;


function generated_army:build_sunits()
	if #self.sunits > 0 then
		return;
	end;
	
	local units = self.army:units();
	local r_units = self.army:get_reinforcement_units();
	
	local num_units = units:count();
	
	if is_units(r_units) then
		num_units = num_units + r_units:count();
	end;
	
	for i = 1, num_units do
		local new_sunit = script_unit:new(self.army, i);
		if is_scriptunit(new_sunit) then
			table.insert(self.sunits, new_sunit);
		end;
	end;
end;




--	Builds the enemy_force and allied_force lists, which are tables of scriptunits of all enemies and allies.
--	These are sourced from the generated_battle parent object
function generated_army:get_allied_and_enemy_forces()
	if self.enemies_and_allies_known then
		return;
	end;
	
	self.enemies_and_allies_known = true;
	
	self.enemy_force = self.generated_battle:get_enemy_force(self.alliance_number, self.army_number);
	self.allied_force = self.generated_battle:get_allied_force(self.alliance_number, self.army_number);
end;



--	Assigns all sunits in this generated_army into the script_ai_planner
function generated_army:take_control_of_all_sunits()
	self.script_ai_planner:add_sunits(self.sunits);
end;



--	Releases all sunits in this generated_army from the script_ai_planner
function generated_army:release_control_of_all_sunits()
	self.script_ai_planner:remove_sunits(self.sunits);
	
	-- go through list of sunits and explicitly release them
	for i = 1, #self.sunits do
		local current_sunit = self.sunits[i];
		
		current_sunit.uc:release_control();
	end;
end;



--	attack_on_message
--	Takes a string message. When this message is received the generated_army is ordered to attack its enemy.
function generated_army:attack_on_message(message)
	if not is_string(message) then
		script_error(self.name .. " ERROR: attack_on_message() called but supplied message [" .. tostring(message) .. "] is not a string");
		return false;
	end;
		
	-- set up a listener for this message
	self.sm:add_listener(
		message, 
		function() 
			self.bm:out(self.name .. " responding to message " .. message .. ", being told to attack");
			self:attack(true);
		end
	)
end;


function generated_army:attack(no_debug_output)
	-- ensure we have built our allied and enemy forces
	self:get_allied_and_enemy_forces();
		
	-- ensure we have control of all sunits
	self:take_control_of_all_sunits();
	
	if self.is_debug and not no_debug_output then
		self.bm:out(self.name .. ":attack() called");
	end;
	
	self.script_ai_planner:attack_force(self.enemy_force);
end;


--	defend_on_message
--	Takes a string message, an x and y co-ordinate and a radius. When this message is received the generated_army is ordered
--	to defend the specified position with the specified radius.
function generated_army:defend_on_message(message, x, y, radius)
	if not is_string(message) then
		script_error(self.name .. " ERROR: defend_on_message() called but supplied message [" .. tostring(message) .. "] is not a string");
		return false;
	end;
	
	if not is_number(x) then
		script_error(self.name .. " ERROR: defend_on_message() called but supplied x co-ordinate [" .. tostring(x) .. "] is not a number");
		return false;
	end;
	
	if not is_number(y) then
		script_error(self.name .. " ERROR: defend_on_message() called but supplied y co-ordinate [" .. tostring(y) .. "] is not a number");
		return false;
	end;
	
	if not is_number(radius) then
		script_error(self.name .. " ERROR: defend_on_message() called but supplied radius [" .. tostring(radius) .. "] is not a number");
		return false;
	end;
	
	-- set up a listener for this message
	self.sm:add_listener(
		message, 
		function() 
			self.bm:out(self.name .. " responding to message message " .. message .. ", being told to defend [" .. tostring(x) .. ", " .. tostring(y) .. "] with radius " .. tostring(radius));
			self:defend(x, y, radius, true);
		end
	)
end;

function generated_army:defend(x, y, radius, no_debug_output)
	if self.is_debug and not no_debug_output then
		self.bm:out(self.name .. ":defend() called, defending position [" .. x .. ", " .. y .. "] with radius " .. radius .. "m");
	end;
	
	-- ensure we have control of all sunits
	self:take_control_of_all_sunits();
	
	self.script_ai_planner:defend_position(v(x, y), radius);
end;



--	release_on_message
--	Takes a string message message. Releases the units in this generated_army to the AI when this message is fired.
function generated_army:release_on_message(message)
	if not is_string(message) then
		script_error(self.name .. " ERROR: release_on_message() called but supplied message [" .. tostring(message) .. "] is not a string");
		return false;
	end;
	
	-- set up a listener for this message
	self.sm:add_listener(
		message, 
		function() 
			self.bm:out(self.name .. " responding to message " .. message .. ", being released to AI");
			self:release(true);
		end
	)
end;


function generated_army:release(no_debug_output)
	if self.is_debug and not no_debug_output then
		self.bm:out(self.name .. ":release() called, releasing controlled units to the AI");
	end;

	-- release control of our sunits to the AI
	self:release_control_of_all_sunits();
end;




--	message_on_casualties
--	Takes a string message and unary threshold (between 0 and 1). Fires the message when the casualty rate of this
--	generated army equals or exceeds the stated threshold.
function generated_army:message_on_casualties(message, threshold)
	if not is_string(message) then
		script_error(self.name .. " ERROR: message_on_casualties() called but supplied message [" .. tostring(message) .. "] is not a string");
		return false;
	end;
	
	if not is_number(threshold) then
		script_error(self.name .. " ERROR: message_on_casualties() called but supplied threshold [" .. tostring(threshold) .. "] is not a number");
		return false;
	end;
	
	-- if the battle hasn't started then put this off until it has
	if not self.generated_battle:has_battle_started() then
		self.sm:add_listener("battle_started", function() self:message_on_casualties(message, threshold) end);
		return;
	end;
	
	self.bm:watch(
		function()
			local current_casualty_rate = self:get_casualty_rate();
			-- self.bm:out(self.name .. " is checking casualty rate and found it to be " .. tostring(current_casualty_rate));
			return current_casualty_rate > threshold;
		end,
		0,
		function()
			self.bm:out(self.name .. " casualty rate has exceeded threshold of " .. threshold .. ", triggering script message " .. message);		
			self.sm:trigger_message(message)
		end,
		self.name
	);
end;


function generated_army:get_casualty_rate()
	return 1 - proportion_alive(self.army);
end;



--	message_on_proximity_to_enemy
--	Takes a string message and distance in metres. Fires the message when this generated army finds itself
--	with the given distance of its enemy
function generated_army:message_on_proximity_to_enemy(message, distance)
	if not is_string(message) then
		script_error(self.name .. " ERROR: message_on_proximity_to_enemy() called but supplied message [" .. tostring(message) .. "] is not a string");
		return false;
	end;
	
	if not is_number(distance) then
		script_error(self.name .. " ERROR: message_on_proximity_to_enemy() called but supplied distance [" .. tostring(distance) .. "] is not a number");
		return false;
	end;
	
	-- if the battle hasn't started then put this off until it has
	if not self.generated_battle:has_battle_started() then
		self.sm:add_listener("battle_started", function() self:message_on_proximity_to_enemy(message, distance) end);
		return;
	end;
	
	-- ensure we have built our allied and enemy forces
	self:get_allied_and_enemy_forces();
	
	self.bm:watch(
		function()
			local current_distance = distance_between_forces(self.army, self.enemy_force, true);
			-- self.bm:out(self.name .. " is checking current distance to enemy and found it to be " .. tostring(current_distance) .. "m");
			return current_distance < distance;
		end,
		0,
		function()
			self.bm:out(self.name .. " enemy have moved within " .. distance .. "m, triggering script message " .. message);		
			self.sm:trigger_message(message);
		end,
		self.name
	);
end;




--	message_on_rout_proportion
--	Takes a string message message and unary threshold (between 0 and 1). Fires the message when the unary proportion of
--	routing units in this generated army equals or exceeds the given threshold.
function generated_army:message_on_rout_proportion(message, threshold)
	if not is_string(message) then
		script_error(self.name .. " ERROR: message_on_rout_proportion() called but supplied message [" .. tostring(message) .. "] is not a string");
		return false;
	end;
	
	if not is_number(threshold) then
		script_error(self.name .. " ERROR: message_on_rout_proportion() called but supplied threshold [" .. tostring(threshold) .. "] is not a number");
		return false;
	end;
	
	-- if the battle hasn't started then put this off until it has
	if not self.generated_battle:has_battle_started() then
		self.sm:add_listener("battle_started", function() self:message_on_rout_proportion(message, threshold) end);
		return;
	end;
	
	self.bm:watch(
		function()
			local current_rout_proportion = self:get_rout_proportion();
			-- self.bm:out(self.name .. " is checking rout proportion and found it to be " .. tostring(current_rout_proportion));		
			return current_rout_proportion >= threshold;
		end,
		0,
		function()
			self.bm:out(self.name .. " rout proportion has exceeded threshold of " .. threshold .. ", triggering script message " .. message);
			self.sm:trigger_message(message)
		end,
		self.name
	);
end;


function generated_army:get_rout_proportion()
	local units_routing = num_units_routing(self.army);
	
	return units_routing / self.total_units;	
end;







--	message_on_seen_by_enemy
--	Takes a string message. Triggers the message when this unit becomes visible to the enemy.
function generated_army:message_on_seen_by_enemy(message)
	if not is_string(message) then
		script_error(self.name .. " ERROR: message_on_seen_by_enemy() called but supplied message [" .. tostring(message) .. "] is not a string");
		return false;
	end;
	
	
	-- if the battle hasn't started then put this off until it has
	if not self.generated_battle:has_battle_started() then
		self.sm:add_listener("battle_started", function() self:message_on_seen_by_enemy(message) end);
		return;
	end;
	
	-- get a handle to the enemy alliance (bit inelegant, this)
	local enemy_alliance = nil;
	if self.alliance_number == 1 then
		enemy_alliance = self.bm:alliances():item(2);
	else
		enemy_alliance = self.bm:alliances():item(1);
	end;
	
		
	self.bm:watch(
		function()
			return is_visible(self.sunits, enemy_alliance);
		end,
		0,
		function()
			self.bm:out(self.name .. " is visible to its enemy, triggering script message " .. message);
			self.sm:trigger_message(message)
		end,
		self.name
	);
end;







C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\_lib\lib_header.lua

out.ting("***");
out.ting("***");
out.ting("***");

if __game_mode == __lib_type_battle then
	out.ting("Lib_Header.lua :: script libraries reloaded in battle configuration");
	
elseif __game_mode == __lib_type_campaign then
	out.ting("Lib_Header.lua :: script libraries reloaded in campaign configuration");
	
elseif __game_mode == __lib_type_frontend then
	out.ting("Lib_Header.lua :: script libraries reloaded in frontend configuration");

end;

-- set up the random seed
math.randomseed(os.time() + os.clock() * 1000);
math.random(); math.random(); math.random(); math.random(); math.random();

time_increment_ms = 100;

TYPE_TIMER_MANAGER = "timer_manager";
TYPE_BATTLE_MANAGER = "battle_manager";
TYPE_CAMPAIGN_MANAGER = "campaign_manager";
TYPE_ITERATOR = "iterator";
TYPE_CUTSCENE_MANAGER = "cutscene_manager";
TYPE_CONVEX_AREA = "convex_area";
TYPE_FIRESTORM_MANAGER = "firestorm_manager";
TYPE_SCRIPT_UNIT = "scripted_unit";
TYPE_HURT_AREA = "hurt_area";
TYPE_ZONE_MANAGER = "zone_manager";
TYPE_ZONE_CONTROLLER = "zone_controller";
TYPE_HIDING_PLACE = "hiding_place";
TYPE_TELEPORT_SQUAD = "teleport_squad";
TYPE_DECISION_POINT = "decision_point";
TYPE_ESCAPE_ROUTE = "escape_route";
TYPE_ESCAPE_MANAGER = "escape_manager";
TYPE_WAYPOINT = "waypoint";
TYPE_EVENT_HANDLER = "event_handler";
TYPE_SCRIPT_AI_PLANNER = "script_ai_planner";
TYPE_FE_HB_SEQUENCE = "fe_hb_sequence";
TYPE_UI_OVERRIDE = "ui_override";
TYPE_BARRICADE_ATTACK_GROUP = "barricade_attack_group";
TYPE_FACTION_START = "faction_start";
TYPE_CAMPAIGN_CUTSCENE = "campaign_cutscene";
TYPE_CAMPAIGN_DEFENSE = "campaign_defense";
TYPE_SCRIPT_MESSAGER = "script_messager";
TYPE_GENERATED_BATTLE = "generated_battle";
TYPE_GENERATED_ARMY = "generated_army";

VOLUME_TYPE_MUSIC = 0;
VOLUME_TYPE_SFX = 1;
VOLUME_TYPE_ADVISOR = 2;
VOLUME_TYPE_VO = 3;
VOLUME_TYPE_INTERFACE = 1;
VOLUME_TYPE_MOVIE = 5;
VOLUME_TYPE_VOICE_CHAT = 6;
VOLUME_TYPE_MASTER = 7;

-- common libs
force_require("Lib_Common");
force_require("Lib_Event_Handler");
force_require("Lib_Script_Messager");

if __game_mode == __lib_type_battle then
	-- battle libs	
	force_require("Lib_Misc_Battle");
	force_require("Lib_Timer_Manager");
	force_require("Lib_Battlemanager");
	force_require("Lib_Script_Unit");
	force_require("Lib_Convex_Area");
	force_require("Lib_Cutscenes");
	force_require("Lib_Objectives");
	force_require("Lib_Patrol_Manager");
	force_require("Lib_Script_AI_Planner");
	force_require("Lib_Zone_Manager");
	force_require("Lib_Firestorm_Manager");
	force_require("Lib_Teleport_Manager");
	force_require("Lib_Escape_Manager");
	force_require("Lib_Generated_Battle");
	
	
elseif __game_mode == __lib_type_campaign then
	-- campaign libs
	force_require("Lib_Misc_Campaign");
	force_require("Lib_Campaign_Cleanup");
	force_require("Lib_Campaign_Manager");
	force_require("Lib_Campaign_Cutscene");
	force_require("Lib_Campaign_Faction_Start");
	force_require("Lib_Objectives");
	force_require("Lib_Campaign_UI");
	force_require("Lib_Campaign_Defense");
	
elseif __game_mode == __lib_type_frontend then
	-- frontend libs
	force_require("Lib_Timer_Manager");
	force_require("Lib_FE_Sequence");

end;







C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\_lib\lib_misc_battle.lua








---------------------------------------------------------------
--
-- slow_game_over_time()
--
-- changes game speed from one value to another over a total
-- time (note that this will be elongated by the slowing
-- action) over a given number of steps. Note that the script
-- engine only updates once ever 1/10th of a second so
-- specifying steps of less than this will have weird results
--
---------------------------------------------------------------

function slow_game_over_time(start_game_speed, target_game_speed, total_time, steps)
	local bm = get_bm();

	for i = 1, steps do
		bm:callback(
			function()
				local new_battle_speed = start_game_speed - (((start_game_speed - target_game_speed) / steps) * i);
				--bm:out("Changing battle speed to " .. new_battle_speed);
				bm:modify_battle_speed(new_battle_speed)
			end, 
			((total_time / steps) * i)
		);
	end;
end;







---------------------------------------------------------------
--
-- Shorthand way of creating sound effects
--
---------------------------------------------------------------

function new_sfx(soundfile)
	local retval = battle_sound_effect:new();
	retval:load(soundfile);
	
	return retval;
end;


---------------------------------------------------------------
--
-- Plays a sound file if it exists
--
---------------------------------------------------------------

function play_sound(position, sound)
	if is_vector(position) and not is_nil(sound) then
		sound:play3D(position);
	end;
end;


---------------------------------------------------------------
--
-- Stops a sound file if it exists
--
---------------------------------------------------------------

function stop_sound(sound)
	if not is_nil(sound) then
		sound:stop();
	end;
end;





---------------------------------------------------------------
--
-- Creates a unitcontroller over a whole army
--
---------------------------------------------------------------

function unitcontroller_from_army(army)
	if not is_army(army) then
		script_error("unitcontroller_from_army called but supplied parameter is " .. tostring(army) .. " and not an army!");
		
		return nil;
	end;

	local uc = army:create_unit_controller();
	local units = army:units();
	
	for i = 1, units:count() do
		uc:add_units(units:item(i));
	end;
	
	-- try and put in reinforcing units too
	local r_units = army:get_reinforcement_units()
	
	if is_units(r_units) then
		for i = 1, r_units:count() do
			uc:add_units(r_units:item(i));		
		end;		
	end;
	
	return uc;
end;


---------------------------------------------------------------
--
-- Shorthand way of creating unitcontrollers
--
---------------------------------------------------------------

function create_unitcontroller(army, ...)
	if not is_army(army) then
		script_error("ERROR: create_unitcontroller() called but first parameter " .. tostring(army) .. " is not an army, exiting");
	
		return false;
	end;

	local uc = army:create_unit_controller();
	
	if not is_unitcontroller(uc) then
		script_error("ERROR: create_unitcontroller() couldn't create a unitcontroller on the army, possibly everyone in the army is dead? The army (" .. tostring(army) .. ") thinks it has " .. army:count() .. " units");
		return nil;
	end;
	
	for i = 1, arg.n do
		if is_unit(arg[i]) then
			uc:add_units(arg[i]);
		end;
	end;
	
	return uc;
end;






---------------------------------------------------------------
--
-- Shorthand way of creating unitcontrollers
--
---------------------------------------------------------------

function create_ai_planner(t)
	
	if not is_table(t) or #t == 0 then
		script_error("ERROR: create_ai_planner() called but supplied parameter [" .. t .. "] is not a filled table, exiting");
			
		return false;
	end;
	
	local alliance = nil;
			
	-- type-check
	for i = 1, #t do
		local current_sunit = t[i];
	
		if not is_scriptunit(current_sunit) then
			script_error("ERROR: create_ai_planner() called but table element [" .. i .. "] is not a script unit, exiting");
			
			return false;
		end;
	
		if i == 1 then
			alliance = current_sunit.alliance;
			
		elseif current_sunit.alliance ~= alliance then
			script_error("ERROR: create_ai_planner() called but script unit " .. current_sunit.name .. " at element [" .. i .. "] is not a member of alliance " .. tostring(alliance));
			
			return false;
		end;
	end;
	
	-- we can be sure that the unit planner creation will not fail now, so create it
	local ai_planner = alliance:create_ai_unit_planner();
	
	for i = 1, #t do
		local current_sunit = t[i];
	
		ai_planner:add_units(current_sunit.unit);
	end;
	
	return ai_planner;
end;







---------------------------------------------------------------
--
-- is_routing_or_dead
--
-- Are all units in a collection routing or dead. Supported 
-- collections are unit, sunit, units, army, armies, alliance 
-- and table
--
---------------------------------------------------------------

function is_routing_or_dead(obj, shattered_only)
	if is_unit(obj) then
		if shattered_only then
			if obj:is_shattered() or obj:number_of_men_alive() == 0 then	
				return true;
			end;
		else
			if obj:is_routing() or obj:number_of_men_alive() == 0 then
				return true;
			end;
		end;
	
		return false;
	elseif is_scriptunit(obj) then
		return is_routing_or_dead(obj.unit, shattered_only);
		
	elseif is_units(obj) then
		for i = 1, obj:count() do
			if not is_routing_or_dead(obj:item(i)) then
				return false;
			end;
		end;
		
		return true;
		
	elseif is_army(obj) then
		-- consider reinforcing units
		local r_units = obj:get_reinforcement_units();
		
		if is_units(r_units) then
			return is_routing_or_dead(obj:units()) and is_routing_or_dead(r_units);
		else
			return is_routing_or_dead(obj:units());
		end;
		
	elseif is_armies(obj) then
		for i = 1, obj:count() do
			if not is_routing_or_dead(obj:item(i):units()) then
				return false;
			end;
		end;
		
		return true;
	elseif is_alliance(obj) then
		return is_routing_or_dead(obj:armies());
		
	elseif is_table(obj) then
		for i = 1, #obj do
			if not is_routing_or_dead(obj[i]) then
				return false;
			end;
			
		end;

		return true;
	else
		script_error("ERROR: is_routing_or_dead() called but didn't recognise parameter " .. tostring(obj));
	end;
	
	return false;
end;


function is_shattered_or_dead(obj)
	return is_routing_or_dead(obj, true);
end;












---------------------------------------------------------------
--
-- num_units_routing
--
-- How many units/sunits in a collection are routing. Supported
-- collections are units, army, armies, alliance and table
--
---------------------------------------------------------------

function num_units_routing(obj, shattered_only)
	local count = 0;
	
	if is_units(obj) then
		for i = 1, obj:count() do
			if shattered_only then
				if is_shattered_or_dead(obj:item(i)) then
					count = count + 1;
				end;
			else
				if is_routing_or_dead(obj:item(i)) then
					count = count + 1;
				end;
			end;
		end;
		
	elseif is_army(obj) then
		count = num_units_routing(obj:units());
		
		-- try reinforcing units too
		local r_units = obj:get_reinforcement_units();
		
		if is_units(r_units) then
			count = count + num_units_routing(r_units);
		end;
		
	elseif is_armies(obj) then
		for i = 1, obj:count() do
			count = count + num_units_routing(obj:item(i):units());
		end;

	elseif is_alliance(obj) then
		count = num_units_routing(obj:armies());
		
	elseif is_table(obj) then
		for i = 1, #obj do
			local current_obj = obj[i];
			if is_unit(current_obj) then
				if is_routing_or_dead(current_obj) then
					count = count + 1;
				end;
			elseif is_scriptunit(current_obj) then
				if is_routing_or_dead(obj[i].unit) then
					count = count + 1
				end;
			end;
		end;
	else
		script_error("ERROR: num_units_routing() called but didn't recognise parameter, returning 0");
	end;

	return count;
end;


function num_units_shattered(obj)
	return num_units_routing(obj, true);
end;










---------------------------------------------------------------
--
-- rout_all_units
--
-- Rout all units in a collection. Supported collections 
-- are army, armies and alliance
--
---------------------------------------------------------------

function rout_all_units(obj)
	if is_army(obj) then
		local uc = unitcontroller_from_army(obj);
		
		-- insure any reinforcing units are actually on the battlefield
		local r_units = obj:get_reinforcement_units();

		if is_units(r_units) then
			for i = 1, r_units:count() do
				r_units:item(i):deploy_reinforcement(true);
			end;
		end;
		
		uc:morale_behavior_rout();
		
	elseif is_armies(obj) then
		for i = 1, obj:count() do
			rout_all_units(obj:item(i));
		end;
		
	elseif is_alliance(obj) then
		rout_all_units(obj:armies());

	else
		script_error("ERROR: rout_all_units() called but supplied object " .. tostring(obj) .. " wasn't recognised!");
	end;
	
	return;
end;















---------------------------------------------------------------
--
-- number_close_to_position
--
-- Returns the number of units or sunits in a supplied collection
-- within a given range of a given position. Supported containers
-- are units, army, armies, alliance and table.
--
---------------------------------------------------------------

function number_close_to_position(obj, pos, range, two_d, standing_only, return_bool)
	local count = 0;
	
	local two_d = two_d or false;
	local standing_only = standing_only or false;
	local return_bool = return_bool or false;
	
	if is_unit(obj) then
		-- assemble a check
		if two_d then
			range_check = function() return obj:position():distance_xz(pos) < range end;
		else
			range_check = function() return obj:position():distance(pos) < range end;
		end;
			
		-- if we either don't care about rout status, or we do and the unit isn't routing
		-- then return whether the unit passes the range check
		if (not standing_only) or (standing_only and not is_routing_or_dead(obj)) then
			return range_check();
		end;
		
		return false;
	end;
	
	if is_sunit(obj) then
		return number_close_to_position(obj.unit, pos, range, two_d, standing_only, return_bool);
	end;
	
	-- do param check now (otherwise it would spam an error for each unit in the collection)
	if not is_vector(pos) then
		script_error("ERROR: number_close_to_position() called but position given " .. tostring(pos) .. " is not a vector!");
			
		return nil;
	end;
		
	if not is_number(range) or range <= 0 then
		script_error("ERROR: number_close_to_position() called but range given " .. tostring(range) .. " is not a positive number!");
			
		return nil;
	end;
	
	if is_units(obj) then			
		for i = 1, obj:count() do
			result = number_close_to_position(obj:item(i), pos, range, two_d, standing_only, return_bool);
			
			if result then
				if return_bool then
					return true;
				else
					count = count + 1;
				end;
			end;				
		end;
	
	elseif is_army(obj) then
		local result = number_close_to_position(obj:units(), pos, range, two_d, standing_only, return_bool);
		
		if return_bool then 
			if result then
				return true;
			end;
		else
			count = count + result;
		end;
		
		-- try reinforcing units
		local r_units = obj:get_reinforcement_units();
		
		if is_units(r_units) then
			result = number_close_to_position(r_units, pos, range, two_d, standing_only, return_bool);
			
			if return_bool then
				return result;
			else
				count = count + result;
			end;
		end;
	
	elseif is_armies(obj) then
		local result = nil;
	
		for i = 1, obj:count() do
			result = number_close_to_position(obj:item(i), pos, range, two_d, standing_only, return_bool);
			
			if return_bool then
				if result then
					return true;
				end;
			else
				count = count + result;
			end;				
		end;
	
	elseif is_alliance(obj) then
		return number_close_to_position(obj:armies(), pos, range, two_d, standing_only, return_bool);
	
	elseif is_table(obj) then
		local result = nil;
		
		for i = 1, #obj do
			result = number_close_to_position(obj[i], pos, range, two_d, standing_only, return_bool);
			
			if return_bool then
				if result then
					return true;
				end;
			else
				count = count + result;
			end;
		end;
		
	else
		script_error("ERROR: number_close_to_position() called but supplied collection type " .. tostring(obj) .. " not recognised!");
	end;
	
	if return_bool then
		return false;
	end;
	
	return count;
end;


function standing_number_close_to_position(obj, pos, range, two_d)
	return number_close_to_position(obj, pos, range, two_d, true);
end;


function is_close_to_position(obj, pos, range, two_d, standing_only)
	return number_close_to_position(obj, pos, range, two_d, standing_only, true);
end;


function standing_is_close_to_position(obj, pos, range, two_d)
	return is_close_to_position(obj, pos, range, two_d, true);
end;























function distance_between_forces_test(unit, obj, standing_only)

	-- do the test if we're not only searching for routing units AND the unit is routing
	if not (is_routing_or_dead(unit) and standing_only) then
		local closest_unit = get_closest_unit(obj, unit:position(), standing_only)
		
		if is_unit(closest_unit) then
			return closest_unit:position():distance(unit:position());
		end;
	end;
	
	return 50000;
end;




function distance_between_forces(a, b, standing_only)
	local closest_distance = 50000;

	if is_table(a) then
		for i = 1, #a do
			local current_obj = a[i];
			local current_distance = 50000;
			
			if is_unit(current_obj) then
				current_distance = distance_between_forces_test(current_obj, b, standing_only)
			elseif is_scriptunit(current_obj) then
				current_distance = distance_between_forces_test(current_obj.unit, b, standing_only)
			else
				current_distance = distance_between_forces(current_obj, b, standing_only);
			end;
			
			if current_distance < closest_distance then
				closest_distance = current_distance;
			end;
		end;
	
	elseif is_units(a) then
		for i = 1, a:count() do
			local current_unit = a:item(i);
			
			local current_distance = distance_between_forces_test(current_unit, b, standing_only)
			
			if current_distance < closest_distance then
				closest_distance = current_distance;
			end;
		end;
		
	elseif is_army(a) then
		closest_distance = distance_between_forces(a:units(), b, standing_only);
		
		local r_units = a:get_reinforcement_units();
		
		if is_units(r_units) then
			local r_distance = distance_between_forces(r_units, b, standing_only);
			
			if r_distance < closest_distance then
				closest_distance = r_distance;
			end;
		end;
	
	elseif is_armies(a) then
		for i = 1, a:count() do
			local current_distance = distance_between_forces(a:item(i):units(), b, standing_only);
			
			if current_distance < closest_distance then
				closest_distance = current_distance;
			end;
		end;
	
	elseif is_alliance(a) then
		return distance_between_forces(a:armies(), b, standing_only);
	else
		script_error("ERROR: distance_between_forces() called but first force " .. tostring(a) .. " is not a recognised unit container, returning false")

		return false;
	end;
	
	return closest_distance;
end;










---------------------------------------------------------------
--
-- get_closest_unit
--
-- Returns the closest unit in the supplied container to
-- a supplied position. Supported containers
-- are units, army, armies, alliance and table.
--
---------------------------------------------------------------

function get_closest_unit(obj, pos, standing_only)
	if not is_vector(pos) then
		script_error("ERROR: get_closest_unit() called but supplied position " .. tostring(pos) .. " is not a vector!");
		
		return false;
	end;
		
	local standing_only = standing_only or false;
	local current_unit = nil;
	local current_distance = 0;
	local closest_unit = nil;
	local closest_distance = 50000;
	local closest_sunit = nil;
	
	if is_units(obj) then
		for i = 1, obj:count() do
			current_unit = obj:item(i);
			
			current_distance = get_closest_unit_test(current_unit, pos, standing_only);
			
			if current_distance < closest_distance then
				closest_distance = current_distance;
				closest_unit = current_unit;
			end;
		end;
		
	elseif is_army(obj) then
		closest_unit, closest_distance = get_closest_unit(obj:units(), pos, standing_only);
		
		-- try reinforcing units
		local r_units = obj:get_reinforcement_units();
		
		if is_units(r_units) then
			current_unit, current_distance = get_closest_unit(r_units, pos, standing_only);
			
			if current_distance < closest_distance then
				closest_distance = current_distance;
				closest_unit = current_unit;
			end;
		end;
	
	elseif is_armies(obj) then
		for i = 1, obj:count() do
			current_unit, current_distance = get_closest_unit(obj:item(i), pos, standing_only);
			
			if current_distance < closest_distance then
				closest_distance = current_distance;
				closest_unit = current_unit;
			end;
		end;
	
	elseif is_alliance(obj) then
		return get_closest_unit(obj:armies(), pos, standing_only);
	
	elseif is_table(obj) then
		for i = 1, #obj do
			local current_obj = obj[i];
			
			if is_unit(current_obj) then	
				current_distance = get_closest_unit_test(current_obj, pos, standing_only);
			
				if current_distance < closest_distance then
					closest_distance = current_distance;
					closest_unit = current_obj;
				end;
				
			elseif is_scriptunit(current_obj) then
				current_distance = get_closest_unit_test(current_obj.unit, pos, standing_only);
			
				if current_distance < closest_distance then
					closest_distance = current_distance;
					closest_unit = current_obj.unit;
					closest_sunit = current_obj;
				end;
				
			else
				current_unit, current_distance = get_closest_unit(current_obj, pos, standing_only);
			
				if current_distance < closest_distance then
					closest_distance = current_distance;
					closest_unit = current_unit;
				end;
			end;
		end;
	
	else
		script_error("ERROR: get_closest_unit() called but supplied collection " .. tostring(obj) .. " is not supported!");
		
		return nil;
	end;
		
	return closest_unit, closest_distance, closest_sunit;
end;


function get_closest_standing_unit(obj, pos)
	return get_closest_unit(obj, pos, true);
end;




function get_closest_unit_test(unit, pos, standing_only, closest_distance)
	-- if we're only considering standing units and the unit is routing return massive distance, otherwise return actual distance
	if not (standing_only and is_routing_or_dead(unit)) then
		return unit:position():distance(pos);
	end;
			
	-- unit is not closer
	return 50000;
end;











---------------------------------------------------------------
--
-- get_position_near_target()
--
-- Returns a vector at a random position near to a supplied 
-- vector. Other parameters control distance/position from 
-- the returned vector to the input position. Min_dist and 
-- max_dist are self explanatory, min_angle and max_angle 
-- allow the user to define an angle range from the given 
-- vector in which the random vector is constrained.
--
---------------------------------------------------------------

function get_position_near_target(pos, min_dist, max_dist, min_angle, max_angle)
	local bm = get_bm();
	local retval = v(0,0);
	local my_min_dist = 20;
	local my_max_dist = 50;
	local my_min_angle = 0;
	local my_max_angle = 360;
		
	if is_number(min_dist) and is_number(max_dist) and min_dist <= max_dist and min_dist >= 0 then
		my_min_dist = min_dist;
		my_max_dist = max_dist;
	end;
	
	if is_number(min_angle) and is_number(max_angle) and min_angle >= max_angle and min_angle >= 0 and max_angle <= 360 then
		my_min_angle = min_angle;
		my_max_angle = max_angle;
	end;
	
	local my_dist = math.random(my_min_dist, my_max_dist);
	local my_angle = math.random(my_min_angle, my_max_angle);
	
	retval:set_x(pos:get_x() + (my_dist * math.cos(d_to_r(my_angle))));
	retval:set_y(pos:get_y());
	retval:set_z(pos:get_z() + (my_dist * math.sin(d_to_r(my_angle))));
	
	--bm:out("Get_Position_Near_Target :: input position " .. Vector_To_String(pos) .. " and output position " .. Vector_To_String(retval) .. " :: my_dist was " .. my_dist .. " and my_angle was " .. my_angle);
	
	return retval;
end;



















---------------------------------------------------------------
--
-- contains_unit
--
-- Returns true is the supplied container contains the
-- supplied unit, otherwise returns false. Supported containers
-- are units, army, armies, alliance and table.
--
---------------------------------------------------------------

function contains_unit(obj, unit)	
	if is_units(obj) then
		if not is_unit(unit) then
			script_error("ERROR: contains_unit() called but second parameter given " .. tostring(unit) .. " is not a unit!");
		
			return false;
		end;
	
		for i = 1, obj:count() do
			if obj:item(i) == unit then
				return true;
			end;
		end;
		
		return false;
		
		
	elseif is_army(obj) then		
		if contains_unit(obj:units(), unit) then
			return true;
		end;
		
		local r_units = obj:get_reinforcement_units();
		
		if is_units(r_units) and contains_unit(r_units, unit) then
			return true;	
		end;
		
		return false;
		
	elseif is_armies(obj) then
		for i = 1, obj:count() do
			if contains_unit(obj:item(i), unit) then
				return true;
			end;
		end;
	
		return false;
		
	elseif is_alliance(obj) then
		return contains_unit(obj:armies(), unit);
	
	elseif is_table(obj) then
		for i = 1, #obj do
			if contains_unit(obj[i]) then
				return true;
			end;
		end;
		
		return false;
	else
		script_error("ERROR: contains_unit() called but first parameter " .. tostring(obj) .. " was not recognised!");
	end;
	
	return false;
end;

















---------------------------------------------------------------
--
-- Tops up a unit's ammo to the given level
--
---------------------------------------------------------------

function refill_ammo(unit, quantity)
	if not is_unit(unit) then
		script_error("ERROR! refill_ammo() called but first parameter " .. tostring(unit) .. " is not a unit!");
		
		return false;
	end;
	
	if not is_number(quantity) or quantity <= 0 then
		script_error("ERROR! refill_ammo() called but quantity " .. tostring(quantity) .. " is not a positive number!");
		
		return false;
	end;
	
	local starting_ammo = unit:starting_ammo();
		
	if starting_ammo > 0 and unit:ammo_left() / starting_ammo < quantity then
		unit:set_current_ammo_unary(quantity);
	end;
	
	return;
end;



---------------------------------------------------------------
--
-- refresh_sunit()
-- refresh_sunits()
--
-- refreshes a sunit between combat stages. Currently resets
-- ammo and fatigue (may attach other behaviours in future).
-- Use refresh_sunits to pass over a table of sunits.
--
---------------------------------------------------------------

function refresh_sunits(sunit_list)
	for i = 1, #sunit_list do
		if not is_routing_or_dead(sunit_list[i].unit) then
			refresh_sunit(sunit_list[i]);
		end;
	end;
end;

function refresh_sunit(sunit)
	sunit.unit:set_current_ammo_unary(1);
	sunit.uc:change_fatigue_amount(0.1);
end;











---------------------------------------------------------------
--
-- enable
--
-- Supply a unitcontroller, scriptunit or a table, and a 
-- value. Enables the unit (makes it visible/active) if the value 
-- is true, disables it if it's false. 
--
---------------------------------------------------------------

function enable(obj, value)
	if is_unitcontroller(obj) then
		obj:change_enabled(value);
		obj:set_invisible_to_all((not value));		
	
	elseif is_scriptunit(obj) then
		enable(obj.uc, value);
				
	elseif is_table(obj) then
		for i = 1, #obj do
			enable(obj[i], value);
		end;
	
	else
		script_error("ERROR: enable() called but supplied object [" .. tostring(obj) .. "] not recognised as a unitcontroller, scriptunit or a collection!");
	end;
end;

















---------------------------------------------------------------
--
-- print_buildings
--
-- Debug output of all building positions
--
---------------------------------------------------------------

function print_buildings(start_index, end_index)
	local bm = get_bm();

	if not start_index or not is_number(start_index) or start_index < 1 then
		start_index = 1;
	end;
	
	if not end_index or not is_number(end_index) or end_index > battle:buildings():count() then
		end_index = battle:buildings():count();
	end;

	for i = start_index, end_index do
		bm:out("Building " .. i .. " is at position " .. v_to_s(battle:buildings():item(i):position()));
	end;
end;



---------------------------------------------------------------
--
-- print_buildings_near
--
-- Debug output of all buildings near a position
--
---------------------------------------------------------------


function print_buildings_near(x, y, range)
	local bm = get_bm();

	if not x or not is_number(x) or x < -1000 or x > 1000 then
		script_error("ERROR: print_buildings_near(x, y) called but first parameter " .. tostring(x) .. " is not a number!");
		
		return false;
	end;
	
	if not y or not is_number(y) or y < -1000 or y > 1000 then
		script_error("ERROR: print_buildings_near(x, y) called but second parameter " .. tostring(y) .. " is not a number!");
		
		return false;
	end;
	
	if not is_number(range) or range <= 0 then
		range = 50;
	end;
	
	local pos = v(x, y);
	
	bm:out("Printing list of buildings within " .. range .. "m of " .. v_to_s(pos));
	bm:out("*****");
	
	for i = 1, bm:buildings():count() do
		if pos:distance_xz(bm:buildings():item(i):position()) < range then
			bm:out("Building " .. i .. " is at position " .. v_to_s(bm:buildings():item(i):position()));
		end;
	end;
	
	bm:out("*****");
end;



---------------------------------------------------------------
--
-- get_building_near
--
-- Returns the nearest building to a position
--
---------------------------------------------------------------

function get_building_near(x, y)
	local bm = get_bm();

	if not x or not is_number(x) or x < -1000 or x > 1000 then
		bm:out("get_building_near :: x co-ordinate is not valid (supplied value is (" .. tostring(x) .. ")");
	
		return false;
	end;
	
	if not y or not is_number(y) or y < -1000 or y > 1000 then
		bm:out("get_building_near :: y co-ordinate is not valid (supplied value is (" .. tostring(y) .. ")");
	
		return false;
	end;
	
	local pos = v(x, y);
	local current_distance = 0;
	local closest_distance = 50000;
	local closest_index = false;
	
	for i = 1, bm:buildings():count() do
		current_distance = pos:distance_xz(bm:buildings():item(i):central_position());
				
		if current_distance < closest_distance then
			closest_distance = current_distance;
			closest_index = i;
		end;
	end;
	
	if not closest_index then
		bm:out("get_building_near :: did not find any buildings on the map!");
		
		return nil;
	end;
	
	bm:out("get_building_near :: found building #" .. closest_index .. " at " .. v_to_s(bm:buildings():item(closest_index):position()) .. "(centre position is " .. v_to_s(bm:buildings():item(closest_index):central_position()) .. " which is " .. closest_distance .. " from " .. v_to_s(pos) .. ")");
	
	local debugdrawing = bm:debug_drawing();
	debugdrawing:draw_white_circle_on_terrain(bm:buildings():item(closest_index):central_position(), 5, 500);
	
	return bm:buildings():item(closest_index);
end;









---------------------------------------------------------------
--
-- number_alive
--
-- Returns the number of men in a collection that are 
-- alive and the initial number of men
-- Supported collections are alliance, armies, army,
-- units, unit, scriptunit and table
--
---------------------------------------------------------------

function number_alive(obj)	
	if is_unit(obj) then
		return obj:number_of_men_alive(), obj:initial_number_of_men();
	elseif is_scriptunit(obj) then
		return number_alive(obj.unit);
	elseif is_alliance(obj) then
		return number_alive(obj:armies());
	elseif is_army(obj) then
		local total_men_alive, total_men = number_alive(obj:units());
		local r_units = obj:get_reinforcement_units();
		local total_r_men_alive = 0;
		local total_r_men = 0;
		if is_units(r_units) then
			total_r_men_alive, total_r_men = number_alive(r_units);
		end;
			
		return total_men_alive + total_r_men_alive, total_men + total_r_men;
	end;
	
	local total_men = 0;
	local total_men_alive = 0;
	
	if is_armies(obj) or is_units(obj) then
		for i = 1, obj:count() do
			local additional_men_alive, additional_men = number_alive(obj:item(i));
			
			total_men_alive = total_men_alive + additional_men_alive;
			total_men = total_men + additional_men;
		end;
	elseif is_table(obj) then
		for i = 1, #obj do
			local additional_men_alive, additional_men = number_alive(obj[i]);
			
			total_men_alive = total_men_alive + additional_men_alive;
			total_men = total_men + additional_men;
		end;
	else
		script_error("number_alive ERROR: didn't recognise object [" .. tostring(obj) .. "]");
		return 0, 0;
	end;
		
	return total_men_alive, total_men;
end;


---------------------------------------------------------------
--
-- proportion_alive
--
-- Returns the unary proportion of a unit collection that's 
-- still alive
-- Supported collections are alliance, armies, army,
-- units, unit, scriptunit and table
--
---------------------------------------------------------------


function proportion_alive(obj)
	local total_men_alive, total_men = number_alive(obj);
	
	return total_men_alive / total_men;
end;











---------------------------------------------------------------
--
-- unit_proportion_alive
--
-- Returns the unary proportion of a unit that's still alive
--
---------------------------------------------------------------

function unit_proportion_alive(unit)
	if not is_unit(unit) then
		script_error("ERROR: unit_proportion_alive() called but supplied parameter " .. tostring(unit) .. " is not a unit!");
	
		return false;
	end;
	
	return unit:number_of_men_alive() / unit:initial_number_of_men();
end;








---------------------------------------------------------------
--
-- 	kill_unit_proportion(unit)
--
-- 	Kills a unary proportion of the unit
--
---------------------------------------------------------------

function kill_unit_proportion(unit, proportion, preserve)
	if not is_unit(unit) then
		script_error("ERROR: kill_unit_proportion() called but supplied parameter " .. tostring(unit) .. " is not a unit!");
	
		return false;
	end;
	
	if not is_number(proportion) or proportion < 0 or proportion > 1 then
		script_error("ERROR: kill_unit_proportion() called but supplied parameter " .. tostring(proportion) .. " is not a number between 0 and 1!");
	
		return false;
	end;
	
	local preserve = preserve or false;
	local proportion_to_kill = proportion;
	
	
	-- preserve flag prevents kill_unit_proportion from reducing unit strength to below supplied proportion
	if preserve_proportion then
		proportion_to_kill = proportion - (1 - unit_proportion_alive);
	end;
		
	unit:kill_number_of_men(unit:initial_number_of_men() * proportion_to_kill, false);
end;




---------------------------------------------------------------
--
-- 	unit_max_casualties(sunit, proportion)
--
-- 	Makes a sunit invincible if its size drops
--  below a given unary proportion
--
---------------------------------------------------------------

function unit_max_casualties(sunit, proportion, should_release)
	local bm = get_bm();
	local should_release = should_release or false;
	
	local watchname = sunit.name .. "_casualty_watch";

	bm:remove_process(watchname);
	sunit.uc:set_invincible(false);
	
	if should_release then
		sunit.uc:release_control();
	end;
	
	if proportion == 0 then
		return;
	end;
	
	bm:watch(
		function()
			--bm:out(sunit.name .. " unit_proportion_alive is " .. tostring(unit_proportion_alive(sunit.unit)) .. ", proportion given is " .. tostring(proportion));
			return unit_proportion_alive(sunit.unit) < proportion 
		end, 
		0, 
		function()
			bm:out("Making " .. sunit.name .. " invincible with " .. tostring(sunit.unit:number_of_men_alive()) .. " out of " .. tostring(sunit.unit:initial_number_of_men()) .. " remaining");
			sunit.uc:set_invincible(true);
			if should_release then
				sunit.uc:release_control()
			end;
			sunit.is_invincible = true 
		end, 
		watchname
	);
	bm:watch(function() return is_routing_or_dead(sunit.unit) end, 0, function() bm:remove_process(watchname) end, watchname);
end;





---------------------------------------------------------------
--
-- 	set_visible(obj, value)
--
-- 	sets visibility on a unitcontroller, a scriptunit or a
--	collection of the above to the given value using 
--	set_always_visible_to_all
--
---------------------------------------------------------------

function set_visible(obj, value)
	
	if is_unitcontroller(obj) then
		obj:set_always_visible_to_all(value);
		return true;
		
	elseif is_scriptunit(obj) then
		obj.uc:set_always_visible_to_all(value);
		return true;
		
	elseif is_table(obj) then
		for i = 1, #obj do
			set_visible(obj[i]);
		end;
		return true;
		
	else
		script_error("WARNING: set_visible() called but object [" .. tostring(obj) .. "] supplied not recognised");
	end;
	
	return false;
end;





---------------------------------------------------------------
--
-- 	is_visible_to_alliance(obj, alliance)
--
-- 	Returns true if any part of obj is visible to the specified
--	alliance by the rules of the visibility system. Supported 
--	objects are unit, units, army, armies, scriptunit and table.
--
---------------------------------------------------------------

function is_visible(obj, alliance)
	
	if is_unit(obj) then
		return obj:is_visible_to_alliance(alliance);
		
	elseif is_scriptunit(obj) then
		return obj.unit:is_visible_to_alliance(alliance);
		
	elseif is_units(obj) or is_armies(obj) then
		for i = 1, obj:count() do
			if is_visible(obj, alliance) then
				return true;
			end;
		end;
		
		return false;
	elseif is_army(obj) then
		return is_visible(obj:units(), alliance);
	elseif is_table(obj) then
		for i = 1, #obj do
			if is_visible(obj[i], alliance) then
				return true;
			end;
		end;
		
		return false;
	else
		script_error("WARNING: is_visible() called but object [" .. tostring(obj) .. "] supplied not recognised");
	end;
	
	return false;
end;













---------------------------------------------------------------
--
-- centre_point_table
--
-- Returns a vector that is the mean centre of a
-- table of supplied vectors (or buildings/units/scriptunits)
--
---------------------------------------------------------------

function centre_point_table(t)
	local total_x = 0;
	local total_y = 0;
	local total_z = 0;

	if not is_table(t) then
		script_error("ERROR: centre_point_table() called but supplied object [" .. tostring(t) .. "] is not a table!");
	end;
	
	if #t == 0 then
		return v(0, 0, 0);
	end;
	
	for i = 1, #t do
		local curr_vector = false;
		
		if is_vector(t[i]) then
			curr_vector = t[i];
			
		elseif is_building(t[i]) then
			curr_vector = t[i]:central_position();
			
		elseif is_unit(t[i]) then
			curr_vector = t[i]:position();
			
		elseif is_scriptunit(t[i]) then
			curr_vector = t[i].unit:position();
			
		else
			script_error("ERROR: centre_point_table() called but list item " .. i .. " is not a vector, building, unit or scriptunit, but a [" .. tostring(t[i]) .. "]");		
			return false;
		end;
		
		total_x = total_x + curr_vector:get_x();
		total_y = total_y + curr_vector:get_y();
		total_z = total_z + curr_vector:get_z();
	end;
	
	return v( total_x / #t, total_y /#t, total_z / #t);
end;





---------------------------------------------------------------
--
-- get_extreme_object
--
-- Takes a subject vector and a table of 
-- vectors/units/sunits/buildings. Returns the index
-- of the vector in the table which is furthest or
-- nearest from the subject vector (depending on whether
-- get_nearest) is set. Users should call get_furthest()
-- or get_nearest() which will call this function
--
---------------------------------------------------------------


function get_extreme_object(subject, v_list, get_nearest)

	-- if get_nearest we are looking for the nearest point, otherwise we are looking for the furthest
	local func_name = "get_furthest()";
	
	if get_nearest then
		func_name = "get_nearest()";
	end;

	-- check parameters
	if not is_vector(subject) then
		script_error("ERROR: " .. func_name .. " called but supplied subject [" .. tostring(subject) .. "] is not a vector");
		return false;
	end;
	
	if not is_table(v_list) then
		script_error("ERROR: " .. func_name .. " called but supplied vector list [" .. tostring(v_list) .. "] is not a table");
		return false;
	end;
	
	if #v_list == 0 then
		script_error("ERROR: " .. func_name .. " called but supplied vector list is empty!");
		return false;
	end;
	
	local extreme_distance = 0;
	local extreme_index = nil;
	local comparison_test = false;
	
	if get_nearest then
		-- set up extreme distance and comparison test as if we were testing for the nearest distance
		extreme_distance = 5000;
		comparison_test = 
			function(vec_a, vec_b, curr_min)
				local curr_dist = vec_a:distance(vec_b);
				if curr_dist < curr_min then
					return curr_dist;
				else
					return false;
				end;
			end;
	else
		-- set up comparison test as if we were testing for the furthest distance
		comparison_test = 
			function(vec_a, vec_b, curr_max)
				local curr_dist = vec_a:distance(vec_b);
				if curr_dist > curr_max then
					return curr_dist;
				else
					return false;
				end;
			end;
	end;
	
	for i = 1, #v_list do
		local curr_list_item = v_list[i];
		local curr_list_vec = false;
		
		if is_vector(curr_list_item) then
			curr_list_vec = curr_list_item;
		elseif is_unit(curr_list_item) then
			curr_list_vec = curr_list_item:position();
		elseif is_scriptunit(curr_list_item) then
			curr_list_vec = curr_list_item.unit:position();
		elseif is_building(curr_list_item) then
			curr_list_vec = curr_list_item:central_position();
		else
			script_error("ERROR: " .. func_name .. " called but object " .. i .. " in vector list is not a vector, unit, scriptunit or building, but [" .. tostring(curr_list_vec) .. "]");
			return false;
		end;
		
		-- do the test, if it returns a value then we have a new max/min distance value
		local test_result = comparison_test(subject, curr_list_vec, extreme_distance);
		if test_result then
			extreme_distance = test_result;
			extreme_index = i;
		end;
	end;
		
	return extreme_index, extreme_distance;
end;


function get_furthest(subject, v_list)
	return get_extreme_object(subject, v_list, false);
end;


function get_nearest(subject, v_list)
	return get_extreme_object(subject, v_list, true);
end;























---------------------------------------------------------------
--
-- E3 NILE STUFF
--
-- To document or remove
--
---------------------------------------------------------------


BOOL_Stop_All_Attacking_Closest = false;

function Set_Unit_Attacking_Closest(sunit, enemy_alliance, repeat_timer)
	if BOOL_Stop_All_Attacking_Closest then
		return;
	end;

	if not is_scriptunit(sunit) then
		script_error("ERROR: Set_Unit_Attacking_Closest() called but supplied object " .. tostring(sunit) .. " is not a scriptunit");
		return false;
	end;
	
	if not is_alliance(enemy_alliance) then
		script_error("ERROR: Set_Unit_Attacking_Closest() called but supplied enemy alliance " .. tostring(enemy_alliance) .. " is not an alliance");
		return false;
	end;
	
	if not is_number(repeat_timer) or repeat_timer <= 100 then
		script_error("ERROR: Set_Unit_Attacking_Closest() called but supplied repeat timer " .. tostring(repeat_timer) .. " is not a number > 100");
		return false;
	end;

	local bm = get_bm();
	
	if is_routing_or_dead(sunit.unit) then
		bm:out("Set_Unit_Attacking_Closest() finishing as " .. sunit.name .. " is routing or dead");
		return;
	end
	
	local closest_unit = get_closest_unit(enemy_alliance, sunit.unit:position(), true);
	
	sunit.uc:attack_unit(closest_unit, true, true);
	
	bm:callback(function() Set_Unit_Attacking_Closest(sunit, enemy_alliance, repeat_timer) end, repeat_timer, "Set_Unit_Attacking_Closest");
end;





















-- for prologue battles
function start_advice_tickbox_listener(eh)
	eh:add_listener(
		"advice_tickbox_listener",
		"ComponentLClickUp", 
		function(context) return context.string == "button_newest" end,
		function(context) get_bm():close_advisor() end, 
		true
	);
end;


function stop_advice_tickbox_listener(eh)
	eh:remove_listener("advice_tickbox_listener");
end;















C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\_lib\lib_misc_campaign.lua


-------------------------------------------------------
-------------------------------------------------------
--	CAMPAIGN SETUP
-------------------------------------------------------
-------------------------------------------------------
			
-- local scripting = nil;

function Setup_Campaign(name)
	local core = require "ui/CoreUtils";
	out.ting("core is " .. tostring(core));
	scripting = core.Require "lua_scripts.EpisodicScripting";
	scripting.SetCampaign(name);
	
	-- code expects this to be set up with this name to be able to clean up with

	return scripting;
end;


function suspend_contextual_advice_for_campaign()
	effect.suspend_contextual_advice(true);
	
	add_campaign_cleanup_action(function() effect.suspend_contextual_advice(false) end)
end;



-------------------------------------------------------
-------------------------------------------------------
--	CAMERA SCROLLING W/ OUTPUT
-------------------------------------------------------
-------------------------------------------------------

-- are the positions the same
function scroll_camera_position_check(source, dest)
	-- test the positions are the same
	return source[1] == dest[1] and source[2] == dest[2] and source[3] == dest[3] and source[4] == dest[4];
end;


function camera_position_to_string(pos)
	if is_number(pos[4]) then
		return "[" .. tostring(pos[1]) .. ", " .. tostring(pos[2]) .. ", " .. tostring(pos[3]) .. ", " .. tostring(pos[4]) .. "]";
	end;
	return "[" .. tostring(pos[1]) .. ", " .. tostring(pos[2]) .. ", " .. tostring(pos[3]) .. "]";
end;


function scroll_camera(t, source, dest)
	local output_str = camera_position_to_string(source) .. " to " .. camera_position_to_string(dest);

	if scroll_camera_position_check(source, dest) then
		output("NOT Scrolling camera from " .. output_str .. " as they are the same position");
		return;
	end;
	
	output("Scrolling camera from " .. output_str);

	scripting.game_interface:scroll_camera(t, source, dest);
end;


function scroll_camera_with_direction(t, source, dest)
	local output_str = camera_position_to_string(source) .. " to " .. camera_position_to_string(dest);

	if scroll_camera_position_check(source, dest) then
		output("NOT Scrolling camera with direction from " .. output_str .. " as they are the same position");
		return;
	end;
	
	output("Scrolling camera with direction from " .. output_str);

	scripting.game_interface:scroll_camera_with_direction(t, source, dest);
end;







-------------------------------------------------------
-------------------------------------------------------
--	CRUDE TIMER WRAPPER
-------------------------------------------------------
-------------------------------------------------------

script_timers = {};
script_timer_index = 0;


function add_repeat_callback(new_callback, new_t, new_name)
	add_callback(
		function()
			add_repeat_callback(new_callback, new_t, new_name);
			new_callback();
		end,
		new_t,
		new_name
	);
end;


function add_callback(new_callback, new_t, new_name)
	if type(new_callback) ~= "function" then
		out.ting("add_callback() called but callback " .. tostring(new_callback) .. " is not a function !!");
		return false;
	end;
	if type(new_t) ~= "number" then
		out.ting("add_callback() called but time value " .. tostring(new_t) .. " is not a number !!");
		return false;
	end;
	
	-- generate unique id for this call
	local new_id = 0;
	
	while find_timer(new_id) do
		new_id = new_id + 1;
	end;
	
	scripting.game_interface:add_time_trigger(new_id, new_t);
	local new_timer = {id = new_id, callback = new_callback, name = new_name};
	
	--output("adding callback id:" .. tostring(new_timer.id) .. ", callback:" .. tostring(new_timer.callback) .. ", name:" .. tostring(new_timer.name));
		
	table.insert(script_timers, new_timer);
	
	--dump_timers();
end;



function add_os_clock_callback(callback, end_time, name)
	if os.clock() >= end_time then
		callback();
	else
		add_callback(function() add_os_clock_callback(callback, end_time, name) end, 0.5, name)
	end;
end;


function find_timer(id)
	for i = 1, #script_timers do
		if script_timers[i].id == id then
			return true;
		end;
	end;
	
	return false;
end;


function remove_callback(name)
	for i = 1, #script_timers do
		local current_timer = script_timers[i];
		
		if current_timer.name == name then
			scripting.game_interface:remove_time_trigger(current_timer.id);
			table.remove(script_timers, i);			
			remove_callback(name);
			return;
		end;
	end;
end;


function initialise_timers(eh)
	output("Initialising script timer system");
	
	eh:add_listener(
		"script_timer_system",
		"TimeTrigger", 
		true,
		function(context) check_callbacks(context) end, 
		true
	);
end;


function check_callbacks(context)
	local str = context.string;
	
	--output("check_callbacks called");
	--dump_timers();
	
	for i = 1, #script_timers do		
		if tostring(script_timers[i].id) == str then
			local callback = script_timers[i].callback;
			table.remove(script_timers, i);
			callback(context);
			return;
		end;
	end;
end;

function dump_timers()
	output("Dumping timers");
	inc_tab();
	for i = 1, #script_timers do
		output("timer item " .. i .. ", id: " .. tostring(script_timers[i].id) .. ", name: " .. tostring(script_timers[i].name) .. ", callback: " .. tostring(script_timers[i].callback));
	end;
	dec_tab();
end;


-------------------------------------------------------
-------------------------------------------------------
--	PRINTING
-------------------------------------------------------
-------------------------------------------------------

local count_tab_level = 0;
local cached_tab_level = 0;
local section_for_output = "";

function cache_tab()
	cached_tab_level = count_tab_level;
	count_tab_level = 0;
end;

function restore_tab()
	count_tab_level = cached_tab_level;
end;


function inc_tab()
	count_tab_level = count_tab_level + 1;
end;

function dec_tab()
	if count_tab_level > 0 then
		count_tab_level = count_tab_level - 1;
	end;
end;

function set_section_for_output(str)
	section_for_output = tostring(str);
end;

function output(str)
	local output_str = "";

	if section_for_output ~= "" then
		output_str = "[" .. section_for_output .. "]\t";
	else
		output_str = "";
	end;

	for i = 1, count_tab_level do
		output_str = output_str .. "\t";
	end;
	
	output_str = output_str .. str;
	
	out.ting(output_str);
end;





-------------------------------------------------------
-------------------------------------------------------
--	ADVICE
-------------------------------------------------------
-------------------------------------------------------

__current_advice = nil;
__advice_scripting = nil;
__event_handler = nil;
__advice_allowed = true;

function show_advice(key, progress_button, highlight, playtime, callback, delay, use_os_clock)
	if not __advice_allowed then
		return;
	end;

	output("show_advice() called, key is " .. tostring(key));
	
	remove_callback("show_advice_progress_on_advice_finished");
	
	__current_advice = key;
	effect.advance_scripted_advice_thread(key, 1);
	
	modify_advice(progress_button, highlight);
	
	if callback then
		if not is_function(callback) then
			script_error("show_advice() called but supplied callback [" .. tostring(callback) .. "] is not a function. Key is " .. tostring(key));
			return;
		end;
		
		if not is_number(playtime) then
			script_error("show_advice() called but supplied playtime [" .. tostring(playtime) .. "] is not a number. Key is " .. tostring(key));
			return;
		end;
		
		if use_os_clock then
			local end_time = os.clock() + 1;
		
			-- horrible hack to use os clock for timing as tick time breaks down during the end-turn
			add_os_clock_callback(function() progress_on_advice_finished(callback, delay, playtime, use_os_clock) end, end_time, "show_advice_progress_on_advice_finished");
		else
			-- normal usage
			add_callback(function() progress_on_advice_finished(callback, delay, playtime, use_os_clock) end, 1, "show_advice_progress_on_advice_finished");
		end;
	end;
end;


-- stop any more campaign advice from triggering
function prevent_additional_advice()
	__advice_allowed = false;
end;


function modify_advice(progress_button, highlight)
	if progress_button then
		Show_Advisor_Progress_Button();
		
		__event_handler:remove_listener("dismiss_advice_listener");
		
		__event_handler:add_listener(
			"dismiss_advice_listener",
			"ComponentLClickUp", 
			function(context) return context.string == "button_newest" end,
			function(context) dismiss_advice() end, 
			false
		);
	else
		Hide_Advisor_Progress_Button();
	end;
	
	if highlight then
		scripting.HighlightComponent("button_newest", true, false);
	else
		scripting.HighlightComponent("button_newest", false, false);
	end;
end;


function dismiss_advice()
	if not __advice_scripting then
		script_error("ERROR: dismiss_advice() called but advice has not been initialised with initialise_advice()");
		return false;
	end;
	
	__current_advice = nil;
	__advice_scripting.game_interface:dismiss_advice();
	
	clear_infotext();
	
	Hide_Advisor_Progress_Button();
	scripting.HighlightComponent("button_newest", false, false);
end;


function progress_on_advice_dismissed(callback, delay)
	if not is_function(callback) then
		script_error("ERROR: progress_on_advice_dismissed() called but supplied callback [" .. tostring(callback) .. "] is not a function");
		return false;
	end;
	
	if not is_number(delay) or delay < 0 then
		delay = 0;
	end;
	
	__event_handler:add_listener(
		"progress_on_advice_dismissed",
		"AdviceDismissed",
		true,
		function() 
			if delay > 0 then
				add_callback(function() callback() end, delay);
			else
				callback();
			end;
		end,
		false
	);
end;


function cancel_progress_on_advice_dismissed()
	__event_handler:remove_listener("progress_on_advice_dismissed");
end;


function current_advice()
	return __current_advice;
end;


function initialise_advice(scripting, eh)
	__advice_scripting = scripting;
	__event_handler = eh;
end;


function progress_on_advice_finished(callback, delay, playtime, use_os_clock)
	if not is_function(callback) then
		script_error("ERROR: progress_on_advice_finished() called but supplied callback [" .. tostring(callback) .. "] is not a function");
		return false;
	end;
		
	if conditions.is_advice_audio_playing() then		-- WARNING, THIS CHECK DOESN'T ALWAYS SEEM TO WORK
		__event_handler:add_listener(
			"progress_on_advice_finished",
			"AdviceFinishedTrigger",
			true,
			function()
				cancel_progress_on_advice_finished();
								
				-- do the given callback
				if is_number(delay) and delay > 0 then
					if use_os_clock then
						local end_time = os.clock() + delay;
						add_os_clock_callback(function() callback() end, end_time, "progress_on_advice_finished");
					else
						add_callback(function() callback() end, delay, "progress_on_advice_finished");
					end;
				else
					callback();
				end;
			end,
			false
		);
	
	end;
	
	playtime = playtime or 5;
	
	-- for if sound is disabled
	add_callback(function() progress_on_advice_finished_poll(callback, delay, playtime, use_os_clock, 0) end, playtime, "progress_on_advice_finished");
end;


progress_on_advice_finished_repoll_time = 0.2;

function progress_on_advice_finished_poll(callback, delay, playtime, use_os_clock, count)
	count = count or 0;
	
	if not conditions.is_advice_audio_playing() then		-- WARNING, THIS CHECK DOESN'T ALWAYS SEEM TO WORK
		cancel_progress_on_advice_finished();
				
		output("progress_on_advice_finished is progressing as no advice sound is playing after playtime of " .. playtime + (count * progress_on_advice_finished_repoll_time) .. "s");
		
		-- do the given callback
		if is_number(delay) then
			if use_os_clock then
				local end_time = os.clock() + delay;
				add_os_clock_callback(function() callback() end, end_time, "progress_on_advice_finished")
			else
				add_callback(function() callback() end, delay, "progress_on_advice_finished");
			end;
		else
			callback();
		end;
		return;
	end;
	
	count = count + 1;
	
	-- sound is still playing, check again in a bit
	if use_os_clock then
		local end_time = os.clock() + progress_on_advice_finished_repoll_time;
		add_os_clock_callback(function() progress_on_advice_finished_poll(callback, delay, playtime, use_os_clock, count) end, end_time, "progress_on_advice_finished");
	else
		add_callback(function() progress_on_advice_finished_poll(callback, delay, playtime, use_os_clock, count) end, progress_on_advice_finished_repoll_time, "progress_on_advice_finished");
	end;
end;


function cancel_progress_on_advice_finished()
	__event_handler:remove_listener("progress_on_advice_finished");
	remove_callback("progress_on_advice_finished");
end;


-------------------------------------------------------
-------------------------------------------------------
--	ADVICE NAVIGATION
-------------------------------------------------------
-------------------------------------------------------

-- cancels infotext if advice is navigated
function start_advice_navigation_listener(eh)
	eh:add_listener(
		"advice_navigation_listener",
		"ComponentLClickUp",
		function(context) return context.string == "button_previous" or context.string == "button_next" end,
		function(context) cancel_add_infotext() end,
		true
	);
end;


function stop_advice_navigation_listener(eh)
	eh:remove_listener("advice_navigation_listener");
end;



-------------------------------------------------------
-------------------------------------------------------
--	LOADING SCREEN DISMISSED
-------------------------------------------------------
-------------------------------------------------------

function progress_on_loading_screen_dismissed(ui_root, eh, callback)
	local prologue = ui_root:Find("prologue", false);
			
	if prologue and UIComponent(prologue):Visible() and UIComponent(prologue):CurrentAnimationId() == "" then
		output("Waiting for loading screen to be dismissed ...");
			
		eh:add_listener(
			"loading_screen_dismissed",
			"LoadingScreenDismissed",
			true,
			function()
				output("Loading screen has been dismissed");
				callback();
			end,
			false
		);
	else
		output("No loading screen to wait for, proceeding immediately");
		callback();
	end;
end;


function stop_progress_on_loading_screen_dismissed(eh)
	eh:remove_listener("loading_screen_dismissed");
end;


-------------------------------------------------------
-------------------------------------------------------
--	MISSION ACCEPT
-------------------------------------------------------
-------------------------------------------------------

function progress_on_mission_accepted(callback, delay)
	if not is_function(callback) then
		script_error("ERROR: progress_on_mission_accepted() called but supplied callback [" .. tostring(callback) .. "] is not a function");
		return false;
	end;

	__event_handler:add_listener(
		"progress_on_mission_accepted",
		--"ComponentLClickUp", 
		--function(context) return context.string == "button_accept" or context.string == "button_zoom" end,
		"PanelClosedCampaign", 
		function(context) return context.string == "events" end,
		function()
			__event_handler:remove_listener("progress_on_mission_accepted");
			if is_number(delay) then
				add_callback(function() callback() end, delay);
			else
				callback();
			end;
		end,
		false
	);
end;


-------------------------------------------------------
-------------------------------------------------------
--	SAVING / LOADING
-------------------------------------------------------
-------------------------------------------------------

save_load_callbacks = {
	eh = nil,
	save_callbacks = {},
	load_callbacks = {}
}


function setup_save_load_callbacks(eh)
	save_load_callbacks.eh = eh;
		
	eh:add_listener(
		"save_callbacks",
		"SavingGame",
		true,
		function(context) game_is_saving(context) end,
		true
	);
	
	eh:add_listener(
		"load_callbacks",
		"LoadingGame",
		true,
		function(context) game_is_loading(context) end,
		true
	);
end;


function add_savegame_callback(eh, callback)
	if not save_load_callbacks.eh then
		setup_save_load_callbacks(eh)
	end;
	
	if not is_function(callback) then
		script_error("ERROR: add_savegame_callback() called but supplied callback [" .. tostring(callback) .. "] is not a function");
		return;
	end;
	
	table.insert(save_load_callbacks.save_callbacks, callback);
end;


function add_loadgame_callback(eh, callback)
	if not save_load_callbacks.eh then
		setup_save_load_callbacks(eh)
	end;
	
	if not is_function(callback) then
		script_error("ERROR: add_loadgame_callback() called but supplied callback [" .. tostring(callback) .. "] is not a function");
		return;
	end;
	
	table.insert(save_load_callbacks.load_callbacks, callback);
end;


function game_is_saving(context)
	output("game_is_saving() called");
	
	local save_callbacks = save_load_callbacks.save_callbacks;

	inc_tab();
	for i = 1, #save_callbacks do
		save_callbacks[i](context);
	end;
	dec_tab();
end;


function game_is_loading(context)
	output("game_is_loading() called");
	
	local load_callbacks = save_load_callbacks.load_callbacks;
	
	inc_tab();
	for i = 1, #load_callbacks do
		load_callbacks[i](context);
	end;
	dec_tab();
end;



-------------------------------------------------------
-------------------------------------------------------
--	SHOWING/HIDING UI
-------------------------------------------------------
-------------------------------------------------------


function Enable_Radar_Rollout_Buttons(value)
	local state = ""
	if value then
		state = "active"
	else
		state = "inactive"
	end;
	
	UIComponent(scripting.m_root:Find("tab_units")):SetState(state);
	UIComponent(scripting.m_root:Find("tab_regions")):SetState(state);
	UIComponent(scripting.m_root:Find("tab_factions")):SetState(state);
	UIComponent(scripting.m_root:Find("tab_events")):SetState(state);
end;


function Enable_Campaign_Menu_Buttons(value)
	local state = ""
	if value then
		state = "active"
	else
		state = "inactive"
	end;
	
	UIComponent(scripting.m_root:Find("button_missions")):SetState(state);
	UIComponent(scripting.m_root:Find("button_finance")):SetState(state);
	UIComponent(scripting.m_root:Find("button_technology")):SetState(state);
	UIComponent(scripting.m_root:Find("button_diplomacy")):SetState(state);
end;


function Enable_Radar_Values(value)
	UIComponent(UIComponent(scripting.m_root:Find("radar_bottom")):Find("treasury")):SetVisible(value);
	UIComponent(UIComponent(scripting.m_root:Find("radar_bottom")):Find("income")):SetVisible(value);
	UIComponent(UIComponent(scripting.m_root:Find("radar_bottom")):Find("food")):SetVisible(value);
	UIComponent(UIComponent(scripting.m_root:Find("radar_bottom")):Find("end_turn_date")):SetVisible(value);
end;


function Enable_Campaign_Settlement_Buttons(value)
	local state = ""
	if value then
		state = "active"
	else
		state = "inactive"
	end;
	
	UIComponent(UIComponent(scripting.m_root:Find("button_group_settlement")):Find("button_province_details")):SetState(state);
end;



-------------------------------------------------------
-------------------------------------------------------
--	MOVING UNITS IN END TURN
-------------------------------------------------------
-------------------------------------------------------

function Move_NPC_Army(eh, faction, forename, surname, to_real, to_log, callback, dont_disable_movement)
	inc_tab();
			
	local char_str = "faction:" .. faction .. ",forename:" .. forename .. ",surname:" .. surname;
			
	output("Move_NPC_Army() moving character (" .. char_str .. ") to [" .. to_log[1] .. ", " .. to_log[2] .. "]");
	
	scripting.game_interface:enable_movement_for_character(char_str);
	scripting.game_interface:move_to(char_str, to_log[1], to_log[2], true);
	
	local trigger_name = "Move_NPC_Army" .. char_str;
	
	-- detection trigger
	scripting.game_interface:add_circle_area_trigger(to_real[1], to_real[2], 1.5, trigger_name, "faction:" .. faction, true, false, true);
	
	eh:add_listener(
		trigger_name,
		"AreaEntered", 
		function(context) return conditions.IsMessageType(trigger_name, context) end,
		function(context) NPC_Army_Arrived(faction, to_real, callback, dont_disable_movement) end, 
		false
	);
	
	dec_tab();
end;


function NPC_Army_Arrived(faction, to_real, callback, dont_disable_movement)
	inc_tab();

	local char_str = "faction:" .. faction .. ",x:" .. to_real[1] .. ",y:" .. to_real[2] .. ",r:2";
	
	output("Character (" .. char_str .. ") has arrived");
	
	if not dont_disable_movement then
		scripting.game_interface:disable_movement_for_character(char_str);
	end;
	
	if is_function(callback) then
		callback();
	end;
	
	dec_tab();
end;



-------------------------------------------------------
-------------------------------------------------------
--	ADVISOR PROGRESSION BUTTON
-------------------------------------------------------
-------------------------------------------------------



function Hide_Advisor_Progress_Button()
	UIComponent(scripting.m_root:Find("button_newest")):SetVisible(false);
end;


function Show_Advisor_Progress_Button()
	UIComponent(scripting.m_root:Find("button_newest")):SetVisible(true);
end;




-------------------------------------------------------
-------------------------------------------------------
--	CAMERA ZOOM EXTENTS
-------------------------------------------------------
-------------------------------------------------------


function set_cinematic_zoom_extents(scripting)
	scripting.game_interface:set_zoom_limit(1.15, 0.15);
end;


function set_gameplay_zoom_extents(scripting)
	scripting.game_interface:set_zoom_limit(1.07, 0.7);
end;






-------------------------------------------------------
-------------------------------------------------------
--	FINDING OBJECTS
-------------------------------------------------------
-------------------------------------------------------


-- returns the name of the faction which is local (there should only be one)
function get_local_faction_name(model)
	local faction_list = model:world():faction_list();
	
	for i = 0, faction_list:num_items() - 1 do
		local faction_name = faction_list:item_at(i):name();
		
		if model:faction_is_local(faction_name) then
			return faction_name;
		end;
	end;
	
	script_error("ERROR: get_local_faction_name() called but couldn't find a local faction? How can this be?");
	return "";
end;



function get_faction(scripting, key)
	local current_faction_list = scripting.game_interface:model():world():faction_list();
	
	-- find the supplied faction in the current faction list
	for i = 0, current_faction_list:num_items() - 1 do
		if current_faction_list:item_at(i):name() == key then
			return current_faction_list:item_at(i);
		end;
	end;
	
	return false;
end;


function get_faction_leader(scripting, faction_key)
	local faction = get_faction(scripting, faction_key);
		
	if not faction then
		script_error("ERROR: get_faction_leader() called but couldn't find faction with name " .. tostring(faction_key));
		return false;
	end;
	
	local faction_leader = faction:faction_leader();
	
	if not faction_leader then
		script_error("ERROR: get_faction_leader() called but faction " .. tostring(name) .. " has no faction leader?");
		return false;
	end;
	
	return faction_leader;
end;


function char_display_pos(character)
	return character:display_position_x(), character:display_position_y();
end;


function char_logical_pos(character)
	return character:logical_position_x(), character:logical_position_y();
end;


-- faction object, string character forename and surname
function get_character_from_faction(faction, forename, surname)
	
	if not faction or faction:character_list():is_empty() then
		return false;
	end;
	
	for i = 0, faction:character_list():num_items() - 1 do
		local char = faction:character_list():item_at(i);
		
		if char:get_forename() == forename and char:get_surname() == surname then
			return char;
		end;
	end;
		
	return false;
end;


function get_character_from_faction_by_cqi(faction, cqi)	
	if not faction or faction:character_list():is_empty() then
		return false;
	end;
	
	for i = 0, faction:character_list():num_items() - 1 do
		local char = faction:character_list():item_at(i);
		
		if tostring(char:cqi()) == tostring(cqi) then
			return char;
		end;
	end;
		
	return false;
end;



-- scripting object, faction name string, forename, surname
function get_character_from_faction_name(scripting, faction_name, forename, surname)		
	local faction = get_faction(scripting, faction_name);
	
	if faction then
		return get_character_from_faction(faction, forename, surname);	
	end;
	
	return false;
end;


function get_region(scripting, region_name)
	return scripting.game_interface:model():world():region_manager():region_by_key(region_name);
end;



function regions_held_by_faction(scripting, faction_name)
	local faction = get_faction(scripting, faction_name);
	
	if not faction then
		script_error("ERROR: regions_held_by_faction() called but couldn't find faction with name [" .. tostring(faction_name) .. "]");
		return false;
	end;
	
	return faction:region_list():num_items();
end;



function distance_squared(a_x, a_y, b_x, b_y)
	return (b_x - a_x) ^ 2 + (b_y - a_y) ^ 2;
end;






-------------------------------------------------------
-------------------------------------------------------
--	DEBUG OUTPUT OF OBJECTS
-------------------------------------------------------
-------------------------------------------------------

function print_char(char)
	output("char faction:" .. tostring(char:faction():name()) .. ", forename:" .. tostring(char:get_forename()) .. ", surname:" .. tostring(char:get_surname()) .. ", x:" .. tostring(char:logical_position_x()) .. ", y:" .. tostring(char:logical_position_y()) .. ", cqi:" .. tostring(char:cqi()));
end;






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\_lib\lib_objectives.lua

-------------------------------------------------------
--
--	OBJECTIVE WRAPPER
--
-------------------------------------------------------

__objectives_list = {};

function create_objectives_panel()
	if __game_mode == __lib_type_battle then
		return UIComponent(get_bm():ui_component("scripted_objectives_panel"));
	else
		-- unsafe
		return UIComponent(scripting.m_root:Find("scripted_objectives_panel"));
	end;
end;


-- sets an objective, but if it has already been marked as complete then immediately complete it
function set_objective(new_obj_name)
	if not objectives then
		objectives = create_objectives_panel();
	end;
	
	objectives:InterfaceFunction("set_objective", new_obj_name);
	
	local should_add_obj = true;
	
	for i = 1, #__objectives_list do
		local current_obj = __objectives_list[i];
		
		if current_obj.name == new_obj_name then
			if current_obj.completed then
				objectives:InterfaceFunction("complete_objective", new_obj_name);
				should_add_obj = false;
			else
				-- this objective already exists and is not completed!
				script_error("WARNING: Tried to add objective " .. new_obj_name .. " but it's already present, discarding");
				return;
			end;		
		end;
	end;
	
	if should_add_obj then
		local new_obj = {name = new_obj_name, completed = false};
	
		table.insert(__objectives_list, new_obj);
	end;
end;


-- if this objective is already registered then complete it immediately, otherwise just store it as completed
function complete_objective(obj_name)
	if not objectives then
		objectives = create_objectives_panel();
	end;

	for i = 1, #__objectives_list do
		local current_obj = __objectives_list[i];
		
		if current_obj.name == obj_name then
			objectives:InterfaceFunction("complete_objective", obj_name);
			return;
		end;
	end;
	
	-- objective not found in our list, so add it
	local new_obj = {name = obj_name, completed = true};
	table.insert(__objectives_list, new_obj);
end;


-- remove this objective
function fail_objective(obj_name)
	if not objectives then
		objectives = create_objectives_panel();
	end;

	objectives:InterfaceFunction("fail_objective", obj_name);
end;


-- remove this objective
function remove_objective(obj_name)
	if not objectives then
		objectives = create_objectives_panel();
	end;

	objectives:InterfaceFunction("remove_objective", obj_name);
	
	-- remove from the objectives list, if it's there
	for i = 1, #__objectives_list do
		local current_obj = __objectives_list[i];
	
		if current_obj.name == obj_name then
			table.remove(__objectives_list, i);
			return;
		end;
	end;	
end;




-------------------------------------------------------
--
--	INFOTEXT WRAPPER
--
-------------------------------------------------------


function create_infotext_panel()
	if __game_mode == __lib_type_battle then
		return UIComponent(get_bm():ui_component("advice_interface"));
	else
		-- unsafe
		return UIComponent(scripting.m_root:Find("advice_interface"));
	end;
end;



function add_infotext_line(key)
	if not infotext then
		infotext = create_infotext_panel();
	end;
	
	infotext:InterfaceFunction("add_info_text_entry", key);
end;


function remove_infotext(key)
	if not infotext then
		infotext = create_infotext_panel();
	end;
	
	infotext:InterfaceFunction("remove_info_text_entry", key);
end;


function clear_infotext()
	if not infotext then
		infotext = create_infotext_panel();
	end;
	
	if __game_mode == __lib_type_battle then
		bm:out("\tClearing infotext");
	else
		output("\tClearing infotext");
	end;
	
	infotext:InterfaceFunction("clear_all_info_text");
	
	cancel_add_infotext();
end;




function cancel_add_infotext()	
	if __game_mode == __lib_type_battle then
		bm:out("\tCancelling additional infotext");
	else
		output("\tCancelling additional infotext");
	end;

	if __game_mode == __lib_type_battle then
		get_bm():remove_process("add_infotext");
	else
		remove_callback("add_infotext");
	end;
	
	__bool_infotext_currently_being_added = false;
	__infotext_to_add = {};
end;



__infotext_initial_delay = 1;		-- must be > 0.1
__infotext_line_delay = 0.75;
__bool_infotext_currently_being_added = false;
__infotext_to_add = {};


function add_infotext(param1, ...)
	local infotext_record = {};
	infotext_record.delay = 0;
	
	if is_string(param1) then
		-- first parameter was a string i.e. no delay was specified
		table.insert(infotext_record, param1);
	else
		infotext_record.delay = param1;
	end;
	
	-- make a table of the inputs
	for i = 1, arg.n do
		table.insert(infotext_record, arg[i]);
	end;
		
	if not infotext then
		infotext = create_infotext_panel();
	end;
	
	if __bool_infotext_currently_being_added then
		table.insert(__infotext_to_add, infotext_record);
	else
		show_infotext(infotext_record);
	end;
end;


function show_infotext(infotext_record)
	local delay = infotext_record.delay;
	local add_count = 0;
	local time_multiplier = 1;
	local time_unit = "s";
	local callback = nil;
	local out_func = nil;
	local last_update = 0;
	
	__bool_infotext_currently_being_added = true;
	
	-- set up some vars depending on whether we're in campaign or battle
	if __game_mode == __lib_type_battle then
		local bm = get_bm();
		time_multiplier = 1000;
		time_unit = "ms";
		callback = function(func, t, id) bm:callback(func, t, id) end;
		out_func = function(str) bm:out(str) end;
	else
		callback = function(func, t, id) add_callback(func, t, id) end;
		out_func = function(str) output(str) end;
	end;

	for i = 1, #infotext_record do
		-- find any infotext lines that we have to remove, they must have a "-" character prepended to the string
		if string.sub(infotext_record[i], 1, 1) == "-" then
			local key = string.sub(infotext_record[i], 2);
			
			remove_infotext(key);
			out_func("\tRemoving infotext key " .. key);
		else
			-- otherwise add them
			local key = infotext_record[i];
			
			-- increase the size of the infotext box
			callback(
				function()
					out_func("\tAdding infotext key " .. key .. " to panel");
					infotext:InterfaceFunction("add_info_text_entry", key, true) 
				end, 
				(delay + ((i - 1) * 0.1)) * time_multiplier, 
				"add_infotext"
			);
			
			local t = (delay + __infotext_initial_delay + (add_count * __infotext_line_delay)) * time_multiplier;

			-- actually show the infotext entry
			callback(
				function()
					out_func("\tShowing infotext key " .. key .. " in panel");
					infotext:InterfaceFunction("show_text_entry", key) 
				end, 
				t, 
				"add_infotext"
			);
			
			add_count = add_count + 1;
			last_update = t;
		end;
	end;
	
	-- see if any more infotext records have been queued up after we've finished
	callback(
		function()
			if #__infotext_to_add > 0 then
				local new_infotext_record = __infotext_to_add[1];
				table.remove(__infotext_to_add, 1);
				show_infotext(new_infotext_record);
			else
				__bool_infotext_currently_being_added = false;
			end;
		end,
		last_update + time_multiplier, 
		"add_infotext"
	);
end;


function clear_and_add_infotext(param1, ...)
	-- stop any previous infotext that might still be going
	clear_infotext();
	
	add_infotext(param1, ...);
end;


























C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\_lib\lib_patrol_manager.lua


PATROL_MANAGER_REACHED_DESTINATION = 1;
PATROL_MANAGER_PURSUED_TOO_FAR = 2;
PATROL_MANAGER_STARTING = 3;
PATROL_MANAGER_RESTARTING = 4;
PATROL_MANAGER_STOPPING_ON_INTERCEPT = 5;
PATROL_MANAGER_INTERCEPT_AS_NORMAL = 6;
PATROL_MANAGER_UNIT_IS_DEAD_OR_ROUTING = 10;
PATROL_MANAGER_UNIT_IS_NO_LONGER_ROUTING = 11;
PATROL_MANAGER_COULDNT_FIND_TARGET = 12
__patrol_manager_debug = false;

PATROL_MANAGER_REORDER_INTERVAL = 5000;							-- when a waypoint is a unit, the unit is re-issued an order to their destination at this interval
PATROL_MANAGER_REINTERCEPT_INT_RADIUS_MODIFIER = 0.3;			-- multiplier on the intercept radius to prevent a unit from immediately reintercepting when it abandons a chase and turns away
PATROL_MANAGER_REINTERCEPT_GUARD_RADIUS_MODIFIER = 0.7;			-- multiplier on the guard radius to prevent a unit from immediately reintercepting when it abandons a chase and turns away
PATROL_MANAGER_WAIT_BEFORE_NORMAL_REINTERCEPT = 35000;			-- time after giving up a chase before which the manager resets its guard/intercept values to normal
PATROL_MANAGER_DEFAULT_GUARD_RADIUS = 0;
PATROL_MANAGER_DEFAULT_INTERCEPT_TIME = 10000;
PATROL_MANAGER_MIN_INTERCEPT_TO_ABANDON_SPACING = 10;
PATROL_MANAGER_WAYPOINT_REACHED_THRESHOLD_INF = 20;
PATROL_MANAGER_WAYPOINT_REACHED_THRESHOLD_CAV = 40;
PATROL_MANAGER_WAYPOINT_REACHED_THRESHOLD_NAVAL = 35;

patrol_manager = {
	name = "",
	sunit = nil,
	enemy_armies = nil,
	intercept_radius = 0,
	--opt
	abandon_radius = 0,
	guard_radius = PATROL_MANAGER_DEFAULT_GUARD_RADIUS,
	--non parameter
	bm = nil,
	interception_callback = nil,
	abandon_callback = nil,
	completion_callback = nil,
	rout_callback = nil,
	stop_on_rout = true,
	stop_on_intercept = false,
	previous_pos = nil,
	waypoint_reached_threshold = PATROL_MANAGER_WAYPOINT_REACHED_THRESHOLD_INF,
	is_debug = false,
	is_naval = false,
	is_intercepting = false,
	intercept_time = PATROL_MANAGER_DEFAULT_INTERCEPT_TIME,
	waypoints = {},
	current_waypoint = 1,
	width = 0,
	walk_speed = 1,
	force_run = false,
	is_running = false,
	should_loop = false
}




function patrol_manager:new(
								new_name,
								new_sunit,
								new_enemy_armies,
								new_intercept_radius,
								--opt
								new_abandon_radius,
								new_guard_radius
							)
	
	if not is_string(new_name) then
		script_error("ERROR: name given " .. tostring(new_name) .. " is not a string");
		
		return false;
	end;
	
	if not is_scriptunit(new_sunit) then
		script_error(self.name .. " ERROR: sunit given " .. tostring(new_sunit) .. " is not a sunit");
		
		return false;
	end;
	
	if not is_armies(new_enemy_armies) then
		script_error(self.name .. " ERROR: enemy armies given " .. tostring(new_enemy_armies) .. " is not a valid armies object");
		
		return false;
	end;
	
	if contains_unit(new_enemy_armies, new_sunit.unit) then
		script_error(self.name .. " ERROR: sunit given " .. new_sunit.name .. " is a member of the given enemy armies " .. tostring(new_enemy_armies));
		
		return false;
	end;
	
	if not is_number(new_intercept_radius) or new_intercept_radius < 0 then
		script_error(self.name .. " ERROR: intercept radius given " .. new_intercept_radius .. " is not a non-negative number");
		
		return false;
	end;
	
	-- if the abandon radius is not a number >= intercept radius + PATROL_MANAGER_MIN_INTERCEPT_TO_ABANDON_SPACING, then set it so
	if not (is_number(new_abandon_radius) and new_abandon_radius >= (new_intercept_radius + PATROL_MANAGER_MIN_INTERCEPT_TO_ABANDON_SPACING)) then
		-- if the user set it to be something else, warn them that we're resetting it
		if not is_nil(new_abandon_radius) then
			script_error(self.name .. " WARNING: abandon radius given " .. tostring(new_abandon_radius) .. " needs to be at least " .. PATROL_MANAGER_MIN_INTERCEPT_TO_ABANDON_SPACING .. "m bigger than given interception radius " .. new_intercept_radius .. ", setting it so");
		end;
		
		new_abandon_radius = new_intercept_radius + PATROL_MANAGER_MIN_INTERCEPT_TO_ABANDON_SPACING;
	end;
	
	-- if the guard radius is not a number >= 0, then set it to PATROL_MANAGER_DEFAULT_GUARD_RADIUS
	if not (is_number(new_guard_radius) and new_guard_radius >= 0) then
		-- if the user set it to be something else, warn them that we're resetting it
		if not is_nil(new_guard_radius) then
			script_error(self.name .. " WARNING: guard radius given " .. new_guard_radius .. " is a not a non-negative number, setting it to " .. PATROL_MANAGER_DEFAULT_GUARD_RADIUS .. "m");
		end;
		
		new_guard_radius = PATROL_MANAGER_DEFAULT_GUARD_RADIUS;
	end;
		
	pm = {};
	setmetatable(pm, self);
	self.__index = self;
	self.__tostring = function() return TYPE_PATROL_MANAGER end;
		
	pm.bm = get_bm();
	pm.name = "Patrol_Manager_" .. new_name;
	pm.sunit = new_sunit;
	pm.enemy_armies = new_enemy_armies;
	pm.intercept_radius = new_intercept_radius;
	pm.abandon_radius = new_abandon_radius;
	pm.guard_radius = new_guard_radius;
	
	pm.waypoints = {};
	
	-- tweak the waypoint_reached threshold depending on the
	-- unit type (due to speed of unit)
	
	--if pm.sunit.unit:is_naval() then
		--pm.waypoint_reached_threshold = PATROL_MANAGER_WAYPOINT_REACHED_THRESHOLD_NAVAL;
	--elseif self.sunit.unit:is_cavalry() then
		--pm.waypoint_reached_threshold = PATROL_MANAGER_WAYPOINT_REACHED_THRESHOLD_CAV;
	--end;
	
	return pm;
end;


--
--	Configuration functions
--


-- sets a callback to call if an intercept is triggered
function patrol_manager:set_intercept_callback(new_callback)
	if not is_function(new_callback) then
		script_error(self.name .. " ERROR: set_intercept_callback() called but callback supplied " .. tostring(new_callback) .. " is not a valid function!");
		
		return false;
	end;
	
	self.interception_callback = new_callback;
end;


-- sets a callback to call if an intercept is abandoned
function patrol_manager:set_abandon_callback(new_callback)
	if not is_function(new_callback) then
		script_error(self.name .. " ERROR: set_abandon_callback() called but callback supplied " .. tostring(new_callback) .. " is not a valid function!");
		
		return false;
	end;
	
	self.abandon_callback = new_callback;
end;


-- sets a callback to call if the subject unit completes the patrol
function patrol_manager:set_completion_callback(new_callback)
	if not is_function(new_callback) then
		script_error(self.name .. " ERROR: set_completion_callback() called but callback supplied " .. tostring(new_callback) .. " is not a valid function!");
		
		return false;
	end;
	
	self.completion_callback = new_callback;
end;


-- sets a custom walk speed for the unit
function patrol_manager:set_walk_speed(new_walk_speed)
	if not is_number(new_walk_speed) then
		script_error(self.name .. " ERROR: set_walk_speed() called but speed supplied " .. tostring(new_walk_speed) .. " is not a number!");
		
		return false;
	end;
	
	self.walk_speed = new_walk_speed;
end;


-- sets a callback to call if the subject unit routs
function patrol_manager:set_rout_callback(new_callback)
	if not is_function(new_callback) then
		script_error(self.name .. " ERROR: set_rout_callback() called but callback supplied " .. tostring(new_callback) .. " is not a valid function!");
		
		return false;
	end;
	
	self.rout_callback = new_callback;
end;


-- sets this patrol manager into debug mode (more output)
function patrol_manager:set_debug(value)
	if self.is_running then
		script_error(self.name .. " warning : trying to change debug state of a running patrol manager. This is undesirable, but doing it anyway.");
	end;

	if is_boolean(value) then
		self.is_debug = value;
	else
		self.is_debug = true;
	end;
end;


-- sets all patrol managers into debug mode
function patrol_manager:set_debug_all(value)
	if self.is_running then
		script_error(self.name .. " warning : trying to change global debug state of a running patrol manager. This is undesirable, but doing it anyway.");
	end;

	if is_boolean(value) then
		__patrol_manager_debug = value;
	else
		__patrol_manager_debug = true;
	end;
end;


-- sets whether the patrol manager is naval or not (should be deprecated soon..)
function patrol_manager:set_naval(value)
	if is_boolean(value) then
		self.is_naval = value;
	else
		self.is_naval = true;
	end;
end;


-- sets whether the patrol manager shuts down when the subject unit routs
function patrol_manager:set_stop_on_rout(value)
	if not is_boolean(value) then
		value = true;
	end;
	
	self.stop_on_rout = value;
end;


-- sets whether the patrol manager shuts down when intercept is first triggered
function patrol_manager:set_stop_on_intercept(value)
	if not is_boolean(value) then
		value = true;
	end;
	
	self.stop_on_intercept = value;
end;


-- sets the default width parameter
function patrol_manager:set_width(width)
	if not width or not is_number(width) or width <= 0 then
		script_error(self.name .. " WARNING: set_width() called but no width supplied or width invalid");
		
		return false;
	end;
	
	self.width = width;
end;


function patrol_manager:set_waypoint_threshold(dist)
	if not is_number(dist) or dist <= 1 then
		script_error(self.name .. " ERROR: set_waypoint_threshold() called but distance supplied is invalid, must be a positive integer!");
		
		return false;
	end;

	if self.is_running then
		script_error(self.name .. " ERROR: set_waypoint_threshold() called on running patrol manager!");
		
		return false;
	end;
	
	self.waypoint_reached_threshold = dist;
end;


-- sets the intercept time in ms, which is the time the subject unit charges down the
-- nearest enemy for when an intercept is triggered before being released to the AI
function patrol_manager:set_intercept_time(t)
	if not is_number(t) or t < 0 then
		script_error(self.name .. " WARNING: set_intercept_time() called but time supplied was not a positive number");
		
		return false;
	end;

	self.intercept_time = t;
end;


-- sets whether the patrol manager should loop or not
function patrol_manager:loop(value)
	if self.is_running then
		self.bm:out(self.name .. " WARNING: trying to change loop value of a running patrol manager. This is undesirable, but doing it anyway.");
	end;

	if is_boolean(value) then
		self.should_loop = value;
	else
		self.should_loop = true;
	end;
end;


-- forces the subject unit to always run
function patrol_manager:set_force_run(value)
	if is_boolean(value) then
		self.force_run = value;
	else
		self.force_run = true;
	end;
	
	if self.is_running and not self.sunit.unit:is_moving_fast() then
		-- re-issue the current order as a run
		self:move_to_current_waypoint();
	end;
end;




--
-- add waypoints to the patrol manager prior to starting
--
function patrol_manager:add_waypoint(new_dest, new_should_run, new_delay, new_orientation, new_width)

	local BOOL_Vector_Input = true;
	
	-- if we've been supplied a waypoint, unpack it (rather hacky..)
	if is_waypoint(new_dest) then
		new_width = new_dest.width;
		new_orientation = new_dest.orient;
		new_delay = new_dest.wait_time;
		new_should_run = new_dest.speed;
		new_dest = new_dest.pos;
	end;
	
	if is_vector(new_dest) then
		BOOL_Vector_Input = true;
	elseif is_unit(new_dest) then
		BOOL_Vector_Input = false;
	else
		script_error(self.name .. " ERROR: add_waypoint() called but no vector or unit supplied, object is " .. tostring(new_dest));
		
		return false;		
	end;
	
	local waypoint = {};
	local should_calc_orient_at_runtime = false;
	
	if not is_boolean(new_should_run) then
		if not is_nil(new_should_run) then
			-- not boolean and not nil = junk
			script_error(self.name .. " WARNING: add_waypoint() called but should run flag " .. tostring(new_should_run) .. " is junk, setting to false");
		end;
	
		new_should_run = false;
	end;
	
	if not is_number(new_delay) then
		if not is_nil(new_delay) then
			script_error(self.name .. " WARNING: add_waypoint() called but delay " .. tostring(new_delay) .. " is junk, setting to 0");
		end;
	
		new_delay = 0;
	elseif new_delay > 0 and new_delay < 100 then
		script_error(self.name .. " ERROR: add_waypoint() called but delay is less than 100, be sure to specify this in milliseconds rather than seconds!");
	end;
	
	if not is_number(new_orientation) then
		if not is_nil(new_orientation) then
			-- not number and not nil = junk
			script_error(self.name .. " WARNING: add_waypoint() called but orientation " .. tostring(new_orientation) .. " is junk, setting to 0");
		end;
			
		new_orientation = 0;
		should_calc_orient_at_runtime = true;
	end;
	
	-- if no width was supplied then use the default width. If that isn't set use the starting width of the sunit
	if not is_number(new_width) or new_width <= 0 then
		if is_number(self.width) and self.width > 0 then
			new_width = self.width;
		else
			new_width = self.sunit.start_width;
		end;
	end;
	
	if self.is_debug or __patrol_manager_debug then
		if BOOL_Vector_Input then
			self.bm:out(self.name .. " adding waypoint vector " .. v_to_s(new_dest) .. ", orient " .. new_orientation .. ", width " .. new_width .. ", delay " .. new_delay .. " and running " .. tostring(new_should_run));
		else
			self.bm:out(self.name .. " adding waypoint unit " .. new_dest:name() .. " at " .. v_to_s(new_dest:position()) .. ", running " .. tostring(new_should_run));
		end;		
	end;
		
	waypoint = {destination = new_dest, should_run = new_should_run, delay = new_delay, orientation = new_orientation, width = new_width, calc_orient_at_runtime = should_calc_orient_at_runtime};
	
	table.insert(self.waypoints, waypoint);
end;




--
-- returns the angle between the last waypoint in the patrol and an arbitrary pos, used to set orientation where none was supplied
--
function patrol_manager:get_angle_to_pos(source, target)
	if self.is_debug then
		bm:out(self.name .. ":get_angle_to_pos(" .. v_to_s(source) .. ", " .. v_to_s(target) .. ") called, returning " .. math.atan2(target:get_x() - source:get_x(), target:get_z() - source:get_z()));
	end;

	return math.atan2(target:get_x() - source:get_x(), target:get_z() - source:get_z());
end;






--
-- start the patrol manager
--
function patrol_manager:start(reason)
	if self.is_running then
		script_error(self.name .. " WARNING: tried to start but is already running");
		
		return false;
	end;

	if #self.waypoints == 0 then
		script_error(self.name .. " ERROR: tried to start patrol manager before adding any waypoints!");
		
		return false;
	end;
		
	self.is_running = true;
	
	-- stop this sunit's current patrol if it's running
	self.sunit:stop_current_patrol();
		
	-- register this patrol with the sunit
	self.sunit:set_current_patrol(self);

	self:cache_current_unit_pos();
		
	self:resume_patrol(PATROL_MANAGER_STARTING);
end;



-- cache the start position of the subject unit (so we can
-- work out the guard distance from there to the first waypoint)
function patrol_manager:cache_current_unit_pos()
	self.previous_pos = self.sunit.unit:position();
end;



--
-- resume/start a patrol
--
function patrol_manager:resume_patrol(reason)
	if not self.is_running then
		script_error(self.name .. " WARNING: resume_patrol() called but patrol manager isn't running");
		
		return false;
	end;
	
	if not self.is_intercepting and not (reason == PATROL_MANAGER_STARTING or reason == PATROL_MANAGER_UNIT_IS_NO_LONGER_ROUTING or reason == PATROL_MANAGER_INTERCEPT_AS_NORMAL) then
		self.bm:out(self.name .. " warning: resume_patrol() called when not intercepting and not routing, disregarding")
		
		return false;
	end;
		
	-- debug output
	if self.is_debug or __patrol_manager_debug then
		if reason == PATROL_MANAGER_LOST_UNIT then
			self.bm:out(self.name .. " abandoning pursuit, lost contact with enemy units");
		elseif reason == PATROL_MANAGER_PURSUED_TOO_FAR then
			self.bm:out(self.name .. " abandoning pursuit, pursued too far from guard vector");
		elseif reason == PATROL_MANAGER_INTERCEPT_AS_NORMAL then		
			self.bm:out(self.name .. " guard and intercept radius' now set to full values");
		elseif reason == PATROL_MANAGER_STARTING then
			self.bm:out(self.name .. " is starting");
		elseif reason == PATROL_MANAGER_UNIT_IS_NO_LONGER_ROUTING then
			self.bm:out(self.name .. " was routing but has now recovered");
		end;
	end;
	
	-- reset state of patrol manager
	self:stop_running_processes();
			
	-- watch for the subject unit routing while we perform this action
	self:watch_for_unit_routing();
	
	self.sunit.uc:take_control();
	
	-- resume the patrol. Force the patrol to run if we are leaving the guard area
	local force_run = false;
	
	if reason == PATROL_MANAGER_PURSUED_TOO_FAR then
		force_run = true;
	end;
	
	self:move_to_current_waypoint(force_run);
	
	self.is_intercepting = false;
	
	-- assemble an intercept test
	-- either we never intercept, we intercept when we're close to an enemy unit or 
	-- we intercept when we're close to an enemy unit AND close to the patrol path	
	if self.intercept_radius and self.intercept_radius > 0 then
		local intercept_test = nil;
			
		if self.guard_radius > 0 then
			-- we need to stay close to the patrol path
			
			-- if we are abandoning a chase, then shrink the intercept radius
			-- and guard radius a while so we don't keep picking up the same unit
			local guard_radius = self.guard_radius;
			local intercept_radius = self.intercept_radius;
			
			if reason == PATROL_MANAGER_PURSUED_TOO_FAR then
				guard_radius = guard_radius * PATROL_MANAGER_REINTERCEPT_GUARD_RADIUS_MODIFIER;
				intercept_radius = intercept_radius * PATROL_MANAGER_REINTERCEPT_INT_RADIUS_MODIFIER;
				
				-- eventually reset those values back to normal
				self.bm:callback(function() self:resume_patrol(PATROL_MANAGER_INTERCEPT_AS_NORMAL) end, PATROL_MANAGER_WAIT_BEFORE_NORMAL_REINTERCEPT, self.name)
			end;
			
			intercept_test = function() return self:is_enemy_in_range(intercept_radius) and self:is_in_range_of_patrol_path_segment(guard_radius) end;
		else
			-- we don't need to stay close to the patrol path
			intercept_test = function() return self:is_enemy_in_range(self.intercept_radius) end;
		end;
		
		-- watch our assembled intercept test
		self.bm:watch(
			function() return intercept_test() end,
			0,
			function() self:intercept() end,
			self.name
		);
	end;
	
	-- call the abandon callback if one exists
	if reason ~= PATROL_MANAGER_STARTING and self.abandon_callback then
		self.abandon_callback();
	end;
end;



--
-- sets the subject unit moving along the patrol to the current destination waypoint
--
function patrol_manager:move_to_current_waypoint(force_run)
	-- if we've run off the end of our waypoint list then finish
	if self.current_waypoint > #self.waypoints then
		self:complete(PATROL_MANAGER_REACHED_DESTINATION);
		
		return;
	end;
	
	-- stop any re-issueing orders
	self.bm:remove_process(self.name .. "_leg");
	
	local destination = self.waypoints[self.current_waypoint].destination;
	local BOOL_destination_is_vector = false;
	
	-- "destination" here could be a vector or a unit, determine which
	local dest_vector = 0;
	
	if is_vector(destination) then
		BOOL_destination_is_vector = true;
		
		dest_vector = destination;
	else
		dest_vector = destination:position();
	end;
	
	
	local dest_orientation = 0; 
	
	if self.waypoints[self.current_waypoint].calc_orient_at_runtime then
		dest_orientation = r_to_d(self:get_angle_to_pos(self.sunit.unit:position(), dest_vector));
	else
		dest_orientation = self.waypoints[self.current_waypoint].orientation;
	end;

	local dest_width = self.waypoints[self.current_waypoint].width;
	local dest_run = self.waypoints[self.current_waypoint].should_run or force_run or self.force_run;
	local dest_delay = self.waypoints[self.current_waypoint].delay;
	
	-- debug output
	if self.is_debug or __patrol_manager_debug then
		local prepend_string = "";
		
		if dest_run then
			prepend_string = self.name .. " running to ";
		else
			prepend_string = self.name .. " walking to ";
		end;
		
		if BOOL_destination_is_vector then
			prepend_string = prepend_string .. "position " .. v_to_s(destination) .. ", orient " .. dest_orientation .. " and width " .. dest_width;
		else
			prepend_string = prepend_string .. "intercept unit " .. destination:name() .. " at " .. v_to_s(destination:position());
		end;
		
		if dest_delay < 0 then
			prepend_string = prepend_string .. ", will wait there indefinitely";
		else
			prepend_string = prepend_string .. ", will wait there for " .. dest_delay .. "ms";
		end;
		
		self.bm:out(prepend_string);
	end;

	local movement_instruction = 0;
	local arrival_test = 0;
	
	-- assemble movement instructions and arrival tests depending on 
	-- whether our destination is a vector or a unit
	if BOOL_destination_is_vector then
		movement_instruction = function() self.sunit.uc:goto_location_angle_width(destination, dest_orientation, dest_width, dest_run) end;
		arrival_test = function() return self.sunit.unit:position():distance_xz(destination) < self.waypoint_reached_threshold end;
		
	else
		movement_instruction = function()
									self.sunit.uc:goto_location_angle_width(destination:position(), dest_orientation, dest_width, dest_run);
									
									self.bm:repeat_callback(
										function() 
											self.sunit.uc:goto_location_angle_width(destination:position(), dest_orientation, dest_width, dest_run)
										end, 
										PATROL_MANAGER_REORDER_INTERVAL, 
										self.name .. "_leg"
									)
								end;
		arrival_test = function() return self.sunit.unit:position():distance_xz(destination:position()) < self.waypoint_reached_threshold end;
	end;
	
	
	-- instruct the unit to move
	movement_instruction();
		
	-- if the delay time on this waypoint is positive
	-- watch to see when the unit has arrived
	self.bm:watch(
		function()
			return arrival_test()
		end,
		0,
		function()
			self:arrived_at_waypoint()
		end,
		self.name
	);
	
	-- change this unit's walk speed a fraction of a second later, if we need to
	if not dest_run and self.walk_speed ~= 1 then
		if self.is_debug or __patrol_manager_debug then
			self.bm:out("\tsetting walk speed to " .. tostring(self.walk_speed));
		end;
		
		self.bm:callback(function() self.sunit.uc:change_current_walk_speed(self.walk_speed) end, 100, self.name);
	end;
end;



--	unit has arrived at a waypoint, work out how long should it wait for
function patrol_manager:arrived_at_waypoint()
	local delay = self.waypoints[self.current_waypoint].delay;
	
	
	-- debug output
	if self.is_debug or __patrol_manager_debug then
		local prepend_string = self.name .. " has arrived at waypoint";
	
		if delay < 0 then
			prepend_string = prepend_string .. ", waiting indefinitely";
		elseif delay == 0 then
			prepend_string = prepend_string .. ", moving on immediately";
		else
			prepend_string = prepend_string .. ", waiting for " .. tostring(delay) .. "ms";
		end;
		
		self.bm:out(prepend_string);
	end;
	
	
	-- if delay on this waypoint is zero, move on immediately.
	-- if it's postive, wait that amount of time.
	-- if it's negative, never move on.	
	if delay == 0 then
		self:move_to_next_waypoint();
	elseif delay > 0 then
		self.bm:callback(function() self:move_to_next_waypoint() end, delay, self.name);
	end;
end;







--
-- advances the destination waypoint on to the next in the list
--
function patrol_manager:move_to_next_waypoint()
	-- if we're at the end of our patrol list, work out whether
	-- to go back round to the beginning or finish
	if self.current_waypoint >= #self.waypoints then
		if self.should_loop then
			self.current_waypoint = 0;
		else
			self:complete(PATROL_MANAGER_REACHED_DESTINATION);
			return;
		end;
	end;
	
	self:cache_current_unit_pos();
	
	self.current_waypoint = self.current_waypoint + 1;
		
	self:move_to_current_waypoint();
end;


--
-- start watching for our unit routing
--
function patrol_manager:watch_for_unit_routing()
	self.bm:watch(
		function() return is_routing_or_dead(self.sunit.unit) end,
		0,
		function() self:handle_unit_routing() end,
		self.name
	);
end;


--
-- our subject unit has routed, handle this
--
function patrol_manager:handle_unit_routing()
	if self.stop_on_rout then
		-- stop the patrol manager on rout
		self.sunit.uc:release_control();
		self:complete(PATROL_MANAGER_UNIT_IS_DEAD_OR_ROUTING);
	else
		-- don't stop the patrol manager on rout
		
		if self.is_debug or __patrol_manager_debug then
			self.bm:out(self.name .. " has routed but continuing to monitor state");
		end;
		
		-- watch for the unit moving to shattered state (in which case do stop
		-- the patrol manager as the unit definitely isn't coming back)
		
		self.bm:watch(
			function() return is_shattered_or_dead(self.sunit.unit) end,
			0,
			function() self:complete(PATROL_MANAGER_UNIT_IS_DEAD_OR_ROUTING) end,
			self.name
		);
		
		-- watch also for the unit un-routing, in which case
		-- jolt the patrol manager back into life
		self.bm:watch(
			function() return not is_routing_or_dead(self.sunit.unit) end,
			0,
			function() self:resume_patrol(PATROL_MANAGER_UNIT_IS_NO_LONGER_ROUTING) end,
			self.name
		)
	end;
end;


-- returns whether our unit is within a given range of an enemy (either intercept or abandon)
function patrol_manager:is_enemy_in_range(range)
	local current_pos = self.sunit.unit:position();
	local closest_unit = get_closest_standing_unit(self.enemy_armies, current_pos);
	
	if closest_unit and closest_unit:position():distance(current_pos) < range then
		return true;
	end;
	
	return false;
end;


-- returns if the sunit is close to the current patrol path segment
function patrol_manager:is_in_range_of_patrol_path_segment(range)
	-- current patrol path segment is defined as from the previous pos (which is either
	-- the previously reached waypoint along the line, or the position the unit started
	-- at) to the next waypoint.
	
	-- Current implementation of this returns an approximation, as it considers that
	-- line to be of infinite length. Theoretically it would be possible therefore to
	-- kite a unit along the line of the path segment forever. This calculation is much
	-- cheaper though.
	
	-- destination could be unit or vector
	local dest_pos = self.waypoints[self.current_waypoint].destination;
	
	if is_unit(dest_pos) then
		dest_pos = dest_pos:position();
	end;
	
	return (math.abs(distance_to_line(self.previous_pos, dest_pos, self.sunit.unit:position())) <= range);
end;



-- 
-- An intercept has been triggered
--
function patrol_manager:intercept()
	if not self.is_running then
		script_error(self.name .. " WARNING: intercept() called when patrol manager isn't running, disregarding");
		
		return false;
	end;
	
	if self.is_intercepting then
		script_error(self.name .. " WARNING: intercept() called when already intercepting, disregarding")
		
		return false;
	end;

	-- if we should stop on intercept then do so
	if self.stop_on_intercept then
		self:complete(PATROL_MANAGER_STOPPING_ON_INTERCEPT);
		return;
	end;
	
	local closest_unit = get_closest_standing_unit(self.enemy_armies, self.sunit.unit:position());
	
	if not is_unit(closest_unit) then
		self:complete(PATROL_MANAGER_COULDNT_FIND_TARGET);
		return;
	end;
	
	-- reset state of patrol manager
	self:stop_running_processes();
	
	-- debug output
	if self.is_debug or __patrol_manager_debug then
		self.bm:out(self.name .. " intercept triggered :: attacking " .. closest_unit:name() .. " at position " .. v_to_s(closest_unit:position()));
	end;
	
	-- watch for the subject unit routing while we perform this action
	self:watch_for_unit_routing();
	
	self.sunit.uc:take_control();
	
	self.is_intercepting = true;
	
	-- send the subject unit to attack the nearest unit
	self.sunit.uc:attack_unit(closest_unit, true, true);
	
	-- wait for the interception time and then release the subject unit to the AI
	self.bm:callback(
		function()
			if self.is_debug or __patrol_manager_debug then
				self.bm:out(self.name .. " : releasing unit to AI");
			end;
			self.sunit.uc:release_control();
		end, 
		self.intercept_time, 
		self.name
	);
	
	-- watch for us losing contact with the enemy
	self.bm:watch(function() return not self:is_enemy_in_range(self.abandon_radius) end, 0, function() self:resume_patrol(PATROL_MANAGER_LOST_UNIT) end, self.name);
		
	-- if we should guard the patrol path, watch for us losing contact with that as well
	if self.guard_radius > 0 then
		self.bm:watch(function() return not self:is_in_range_of_patrol_path_segment(self.guard_radius) end, 0, function() self:resume_patrol(PATROL_MANAGER_PURSUED_TOO_FAR) end, self.name);
	end;
	
	-- call the interception callback if one exists
	if self.interception_callback then
		self.interception_callback();
	end;
end;


-- stops any watches/callbacks associated with the patrol manager
function patrol_manager:stop_running_processes()
	self.bm:remove_process(self.name);
	self.bm:remove_process(self.name .. "_leg");
end;


-- restarts patrol manager, can be called externally
function patrol_manager:restart()
	if self.is_running then
		self:stop();
	end;

	self.current_waypoint = 1;
	
	if self.is_debug or __patrol_manager_debug then
		self.bm:out(self.name .. " restarting");
	end;
	
	self:start(PATROL_MANAGER_RESTARTING);
end;


-- begins shutdown of the patrol manager, should not be called externally
-- does debug output and works out end callbacks
function patrol_manager:complete(reason)
	if not self.is_running then
		return false;
	end;

	-- debug output
	if self.is_debug or __patrol_manager_debug then
		if reason == PATROL_MANAGER_REACHED_DESTINATION then
			self.bm:out(self.name .. " completed : unit has reached its destination");
		elseif reason == PATROL_MANAGER_UNIT_IS_DEAD_OR_ROUTING then
			self.bm:out(self.name .. " completed : unit is dead or routing");
		elseif reason == PATROL_MANAGER_STOPPING_ON_INTERCEPT then
			self.bm:out(self.name .. " completed : stopping on intercept");
		elseif reason == PATROL_MANAGER_COULDNT_FIND_TARGET then
			self.bm:out(self.name .. " completed : no-one left to attack?");
		else
			self.bm:out(self.name .. " completed for unknown reason");
		end;
	end;
	
	-- end callbacks - call rout callback or completion callback (if either exist)
	if reason == PATROL_MANAGER_UNIT_IS_DEAD_OR_ROUTING then
		if self.rout_callback then
			self.rout_callback();
		end;
	elseif self.completion_callback then
		self.completion_callback();
	end;
	
	self:stop();
end;


-- stop the patrol manager, either manually or as the last stage of it
-- stopping automatically (callbacks are handled in complete())
function patrol_manager:stop()
	if not self.is_running then	
		return false;
	end;
	
	-- debug output
	if self.is_debug or __patrol_manager_debug then
		self.bm:out(self.name .. " : stopping");
	end;
	
	self:stop_running_processes();
	
	self.is_running = false;
end;
















waypoint = {
	pos = nil,
	speed = false,
	wait_time = 0,
	orient = nil,
	width = nil
};


function waypoint:new(new_pos, new_speed, new_wait_time, new_orient, new_width)		
	-- type check our startup parameters
	if not is_vector(new_pos) then
		script_error("ERROR: Couldn't create waypoint, position parameter " .. tostring(new_pos) .. " is invalid");
		
		return false;
	end;
		
	if not is_bool(new_speed) and not is_nil(new_speed) then
		script_error("WARNING: Creating waypoint but speed parameter " .. tostring(new_pos) .. " is junk, setting it to false");
		
		new_speed = false;
	end;
	
	if not is_number(new_wait_time) and not is_nil(new_wait_time) then
		script_error("WARNING: Creating waypoint but wait time parameter " .. tostring(new_wait_time) .. " is junk, setting it to 0");
		
		new_wait_time = 0;
	end;
	
	if not is_number(new_orient) and not is_nil(new_orient) then
		script_error("WARNING: Creating waypoint but orient parameter " .. tostring(new_orient) .. " is junk, setting it to nil");
		
		new_orient = nil;
	end;
	
	if not is_number(new_width) and not is_nil(new_width) then
		script_error("WARNING: Creating waypoint but width parameter " .. tostring(new_width) .. " is junk, setting it to nil");
		
		new_width = nil;
	end;
		
	
	-- set up the waypoint
	w = {};
	setmetatable(w, self);
	
	self.__index = self;
	self.__tostring = function() return TYPE_WAYPOINT end;
	
	w.pos = new_pos;
	w.speed = new_speed;
	w.wait_time = new_wait_time;
	w.orient = new_orient;
	w.width = new_width;
	
	return w;
end;






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\_lib\lib_script_ai_planner.lua


---------------------------------------------------------------
--
-- SCRIPT AI PLANNER
--
---------------------------------------------------------------


SCRIPT_AI_PLANNER_NO_ORDER = 0;
SCRIPT_AI_PLANNER_DEFEND_POSITION = 1;
SCRIPT_AI_PLANNER_ATTACK_UNIT = 2;
SCRIPT_AI_PLANNER_MERGE_INTO = 3;
SCRIPT_AI_PLANNER_PATROL = 4;
SCRIPT_AI_PLANNER_DEFEND_POSITION_OF_SUNIT = 5;
SCRIPT_AI_PLANNER_MOVE_TO_POSITION = 6;
SCRIPT_AI_PLANNER_MOVE_TO_POSITION_OF_SUNIT = 7;
SCRIPT_AI_PLANNER_ATTACK_FORCE = 8;
SCRIPT_AI_PLANNER_ALL_CONTROLLED_SUNITS_ROUTED = 9;
SCRIPT_AI_PLANNER_DEFEND_FORCE = 10;

__script_ai_planner_debug = false;


script_ai_planner = {
	bm = nil,
	name = "",
	alliance = nil,
	planner = nil,
	current_order = SCRIPT_AI_PLANNER_NO_ORDER,
	current_dest = nil,
	current_radius = nil,
	current_target = nil,
	enemy_force = nil,
	is_debug = false,
	merge_target = false,
	perform_patrol_prox_text = true,
	merge_distance = 120,
	enemy_distance = 100,
	waypoint_distance = 75,
	attack_force_reorder_interval = 15000,
	sunit_list = {},
	waypoint_list = {},
	reorder_interval = 30000,
	should_reorder =  true
};

function script_ai_planner:new(new_name, new_sunit_list, is_debug)
	local bm = get_bm();

	local sai = {};
	
	setmetatable(sai, self);
	self.__index = self;
	self.__tostring = function() return TYPE_SCRIPT_AI_PLANNER end;
	
	if not is_string(new_name) then
		script_error("ERROR: tried to create script_ai_planner but supplied name " .. tostring(new_name) .. " is not a string!");
		
		return false;
	end;
	
	if not is_table(new_sunit_list) then
		script_error("ERROR: tried to create script_ai_planner but supplied sunit list " .. tostring(new_sunit_list) .. " is not a table!");
		
		return false;
	end;
	
	if not is_scriptunit(new_sunit_list[1]) then
		script_error("ERROR: tried to create script_ai_planner but first element in sunit list is not a sunit, it is a " .. tostring(new_sunit_list[1]));
		
		return false;
	end;
	
	-- cache alliance
	sai.alliance = new_sunit_list[1].alliance;
	
	sai.planner = sai.alliance:create_ai_unit_planner();
	
	sai.bm = bm;
	sai.name = "SAI_" .. new_name;
	sai.sunit_list = {};
	sai.waypoint_list = {};
	sai.is_debug = not not is_debug; -- force boolean
	
	if not sai:add_sunits(new_sunit_list) then
		return false;
	end;
	
	return sai;
end;


function script_ai_planner:set_debug(value)
	if value or value == nil then
		self.is_debug = true;
	else
		self.is_debug = false;
	end; 	
end;


function script_ai_planner:set_debug_all(value)
	if value or value == nil then
		__script_ai_planner_debug = true;
	else
		__script_ai_planner_debug = false;
	end
end;


function script_ai_planner:set_perform_patrol_prox_test(value)
	if value == false then
		self.perform_patrol_prox_test = false;
	else
		self.perform_patrol_prox_test = true;
	end; 	
end;


function script_ai_planner:set_should_reorder(value)
	if value == false then
		self.should_reorder = false;
	else
		self.should_reorder = true;
	end;
end;


-- returns false if all the sunits this planner controls are routed, true otherwise
function script_ai_planner:any_controlled_sunit_standing()
	for i = 1, #self.sunit_list do
		local current_sunit = self.sunit_list[i];
		if not is_routing_or_dead(current_sunit) then		
			return true;
		end;
	end;
		
	return false;
end;


function script_ai_planner:add_sunits(input)	
	-- construct a table out of our input (if it's not already)
	if is_scriptunit(input) then
		input = {input};
	end;

	if not is_table(input) then
		script_error(self.name .. " ERROR: add_sunits() called but supplied list " .. tostring(input) .. " is not a table or a sunit!");
		
		return false;
	end;
	
	-- make a copy of our input in case bits of it start disappearing
	-- as we remove units from other script_ai_planners
	local new_sunits = {};
	
	for i = 1, #input do
		new_sunits[i] = input[i];
	end;
	
	local count_sunits_added = 0;
	local sunits_added_string = "";
	
	for i = 1, #new_sunits do
		local new_sunit = new_sunits[i];
	
		if not is_scriptunit(new_sunit) then
			script_error(self.name .. " ERROR: add_sunits() called but object " .. i .. " in list is not a scriptunit but a " .. tostring(new_sunit));
			
			return false;
		end;
		
		-- check that this scriptunit is in the same alliance
		if new_sunit.alliance ~= self.alliance then
			script_error(self.name .. " ERROR: add_sunits() called but scriptunit " .. i .. " in list, " .. new_sunit.name .. ", is not of required alliance " .. tostring(self.alliance) .. " but of alliance " .. tostring(new_sunit.alliance) .. " instead");
			
			return false;
		end;
		
		-- check to see if we already have this sunit
		local skip_sunit = false;
		
		for j = 1, #self.sunit_list do
			if new_sunit.name == self.sunit_list[j].name then
				skip_sunit = true;
			end;
		end;
		
		if not skip_sunit then
			-- add this sunit to our internal list
			table.insert(self.sunit_list, new_sunit);
								
			-- if this sunit is currently attached to a different script_ai_planner, detach it
			if new_sunit.planner then
				new_sunit.planner:remove_sunits(new_sunit);
			end;
			
			-- take control of this unit
			new_sunit.uc:take_control();
			
			-- add unit to planner
			-- adds callback with name built from planner and sunit name to allow this callback to be cancelled
			self.bm:callback(function() self.planner:add_units(new_sunit.unit) end, 400, self.name .. "_adding_" .. new_sunit.name);
			-- self.planner:add_units(new_sunit.unit);
						
			-- register this planner on the sunit
			new_sunit.planner = self;
			
			if count_sunits_added == 0 then
				sunits_added_string = new_sunit.name;
			else
				sunits_added_string = sunits_added_string .. "|" .. new_sunit.name;
			end;
						
			count_sunits_added = count_sunits_added + 1;
		else
			skip_sunit = false;
		end;
	end;
	
	if self.is_debug or __script_ai_planner_debug then
		if count_sunits_added > 0 then
			sunits_added_string = " [" .. sunits_added_string .. "]";
		end;
		self.bm:out(self.name .. ":add_sunits() called, added " .. tostring(count_sunits_added) .. sunits_added_string);
	end;
	
	return true;
end;





function script_ai_planner:remove_sunits(input)
	local sunits = input;
	
	-- construct a table out of our input (if it's not already)
	if is_scriptunit(input) then
		sunits = {input};
	end; 
	
	if not is_table(sunits) then
		script_error(self.name .. " ERROR: remove_sunits() called but supplied list " .. tostring(sunits) .. " is not a table or a sunit!");
		
		return false;
	end;
	
	local count_sunits_deleted = 0;
	local sunits_deleted_string = "";
	
	for i = 1, #sunits do
		local current_sunit = sunits[i];
	
		if not is_scriptunit(current_sunit) then
			script_error(self.name .. " ERROR: remove_sunits() called but object " .. i .. " in list is not a scriptunit but a " .. tostring(current_sunit));
			
			return false;
		end;
		
		-- remove any pending process that would add this sunit to the planner
		self.bm:remove_process(self.name .. "_adding_" .. current_sunit.name);
			
		-- try and remove this sunit from our sunit list
		for j = 1, #self.sunit_list do
			if current_sunit.name == self.sunit_list[j].name then
				count_sunits_deleted = count_sunits_deleted + 1;
				
				if self.is_debug or __script_ai_planner_debug then
					if i == 1 then
						sunits_deleted_string = current_sunit.name;
					else
						sunits_deleted_string = sunits_deleted_string .. "|" .. current_sunit.name;
					end;
				end;
								
				table.remove(self.sunit_list, j);
								
				-- remove from our planner object
				self.planner:remove_units(current_sunit.unit);
				
				-- unmark this sunit
				current_sunit.planner = nil;
				
				break;
			end;
		end;
	end;

	if self.is_debug or __script_ai_planner_debug then
		self.bm:out(self.name .. ":remove_sunits() called, removed " .. count_sunits_deleted .. " sunits [" .. sunits_deleted_string .. "]");
	end;
end;


function script_ai_planner:get_centre_point()
	if #self.sunit_list == 0 then
		return false;
	end;
	
	return centre_point_table(self.sunit_list);
end;



function script_ai_planner:defend_position(pos, radius)
	if not is_vector(pos) then
		script_error(self.name .. " ERROR: defend_position() called but supplied position " .. tostring(pos) .. " is not a vector!");
		
		return false;
	end;
	
	if not is_number(radius) then
		script_error(self.name .. " ERROR: defend_position() called but supplied radius " .. tostring(radius) .. " is not a number!");
		
		return false;
	end;
	
	self.bm:remove_process(self.name);
	
	self.current_order = SCRIPT_AI_PLANNER_DEFEND_POSITION;
	
	if (self.is_debug or __script_ai_planner_debug) then
		self.bm:out(self.name .. ":defend_position() called, position is " .. v_to_s(pos) .. ", radius is " .. tostring(radius));
	end;
	
	self.current_dest = pos;
	self.current_radius = radius;
	
	self:defend_position_action(pos, radius);
end;



-- part of defend_position that does the action. Not to be called externally as it doesn't cancel other processes
function script_ai_planner:defend_position_action(pos, radius, reorder)

	-- give the order to our units
	self.planner:defend_position(pos, radius);
	
	-- give this order again in 30 secs if we still have any units left and our destination hasn't been changed
	if self.should_reorder then
		self.bm:callback(
			function() 
				if is_vector(self.current_dest) and self.current_dest:distance(pos) < 1 and self:any_controlled_sunit_standing() then
					self:defend_position_action(pos, radius, true);
				end;
			end,
			self.reorder_interval, 
			self.name
		);
	end;
	
	-- do debug output (only if this order has been re-issued)
	if reorder and (self.is_debug or __script_ai_planner_debug) then
		self.bm:out(self.name .. " being reordered by defend_position_action() to defend " .. v_to_s(pos) .. " with radius " .. tostring(radius));
	end;
end;



function script_ai_planner:defend_position_of_sunit(sunit, radius, rout_callback, internal)
	if not is_scriptunit(sunit) then
		script_error(self.name .. " ERROR: defend_position_of_sunit() called but supplied sunit " .. tostring(sunit) .. " is not a scriptunit!");
		
		return false;
	end;
	
	if not is_number(radius) then
		script_error(self.name .. " ERROR: defend_position_of_sunit() called but supplied radius " .. tostring(radius) .. " is not a number!");
		
		return false;
	end;
	
	if not is_function(rout_callback) then
		rout_callback = nil;
	end;
	
	-- only cancel running processes if this is an external order
	if not internal then
		self.bm:remove_process(self.name);
		self.current_order = SCRIPT_AI_PLANNER_DEFEND_POSITION_OF_SUNIT;
	end;
	
	local pos = sunit.unit:position();
		
	if (self.is_debug or __script_ai_planner_debug) then
		self.bm:out(self.name .. ":defend_position_of_sunit() called, target is " .. sunit.name .. " at " .. v_to_s(pos));
	end;
	
	self:defend_position_action(pos, radius);
	
	-- watch for our target unit routing
	self.bm:watch(
		function()
			return is_routing_or_dead(sunit.unit)
		end,
		0,
		function()
			self:defend_position_of_sunit_complete(sunit, radius, rout_callback);
		end,
		self.name
	);
	
	-- watch for our target unit moving and update if it moves too far away from our current destination
	self.bm:watch(
		function()
			return sunit.unit:position():distance(self.current_dest) > 25
		end,
		0,
		function()
			self:defend_position_action(sunit.unit:position(), radius)
		end,
		self.name
	);
end;





function script_ai_planner:defend_position_of_sunit_complete(sunit, radius, rout_callback)
	if (self.is_debug or __script_ai_planner_debug) then
		self.bm:out(self.name .. ":defend_position_of_sunit() has completed, target " .. sunit.name .. " is routing or dead. Remaining at " .. v_to_s(self.current_dest) .. " until ordered otherwise");
	end;
	
	self.bm:remove_process(self.name);
	
	if is_function(rout_callback) then
		rout_callback();
	end;
end;



function script_ai_planner:move_to_position(pos)
	if not is_vector(pos) then
		script_error(self.name .. " ERROR: move_to_position() called but supplied position [" .. tostring(pos) .. "] is not a vector!");
		
		return false;
	end;
	
	self.bm:remove_process(self.name);
	
	if self.is_debug or __script_ai_planner_debug then
		self.bm:out(self.name .. ":move_to_position() called, position is " .. v_to_s(pos));
	end;
	
	self.current_order = SCRIPT_AI_PLANNER_MOVE_TO_POSITION;

	self:move_to_position_action(pos);
end;



-- part of move_to_position that does the action. Not to be called externally as it doesn't cancel other processes
function script_ai_planner:move_to_position_action(pos, reorder, do_not_reorder)

	do_not_reorder = false or do_not_reorder;

	-- give the order to our units
	self.planner:move_to_position(pos);
	
	-- give this order again in 30 secs if we have any units left
	if not do_not_reorder and self.should_reorder then
		self.bm:callback(
			function()
				if self:any_controlled_sunit_standing() then
					self:move_to_position_action(pos, true, do_not_reorder);
				end;
			end, 
			self.reorder_interval, 
			self.name
		);
	end;
	
	if reorder and (self.is_debug or __script_ai_planner_debug) then
		self.bm:out(self.name .. " being reordered by move_to_position_action() to " .. v_to_s(pos));
	end;
		
	self.current_dest = pos;
end;



function script_ai_planner:move_to_position_of_sunit(sunit, rout_callback, reorder, internal)
	if not is_scriptunit(sunit) then
		script_error(self.name .. " ERROR: move_to_position_of_sunit() called but supplied sunit " .. tostring(sunit) .. " is not a scriptunit!");
		
		return false;
	end;
	
	if not is_function(rout_callback) then
		rout_callback = nil;
	end;
		
	local pos = sunit.unit:position();
	
	-- if this is an external order (i.e. not passed down from attack_force or similar), then reorder the script ai planner and do debug output
	if not internal then
		self.bm:remove_process(self.name);
	
		self.current_order = SCRIPT_AI_PLANNER_MOVE_TO_POSITION_OF_SUNIT;
		
		if (self.is_debug or __script_ai_planner_debug) then
			if reorder then
				self.bm:out(self.name .. ":move_to_position_of_sunit() target " .. sunit.name .. " is now at " .. v_to_s(pos));
			else
				self.bm:out(self.name .. ":move_to_position_of_sunit() called, target is " .. sunit.name .. " at " .. v_to_s(pos));
			end;
		end;
		
		-- watch for our target unit routing
		self.bm:watch(
			function()
				return is_routing_or_dead(sunit.unit)
			end,
			0,
			function()
				self:move_to_position_of_sunit_complete(sunit, rout_callback);
			end,
			self.name
		);
	end;
		
	-- give the order to our units	
	self:move_to_position_action(pos, false, true);
		
	-- watch for our target unit moving and update if it moves too far away from our current destination
	self.bm:watch(
		function()
			return sunit.unit:position():distance(self.current_dest) > 25
		end,
		0,
		function()
			self:move_to_position_of_sunit(sunit, rout_callback, true, internal)
		end,
		self.name
	);
end;



function script_ai_planner:move_to_position_of_sunit_complete(sunit, rout_callback)
	if (self.is_debug or __script_ai_planner_debug) then
		self.bm:out(self.name .. ":move_to_position_of_sunit() has completed, target " .. sunit.name .. " is routing or dead. Remaining at " .. v_to_s(self.current_dest) .. " until ordered otherwise");
	end;
	
	self.bm:remove_process(self.name);
	
	if is_function(rout_callback) then
		rout_callback();
	end;
end;


function script_ai_planner:attack_unit(unit)
	if not is_unit(unit) then
		script_error(self.name .. " ERROR: attack_unit() called but supplied unit " .. tostring(unit) .. " is not a unit!");
		
		return false;
	end;
	
	self.bm:remove_process(self.name);
	
	if self.is_debug or __script_ai_planner_debug then
		self.bm:out(self.name .. ":attack_unit() called, target is a unit at " .. v_to_s(unit:position()));
	end;

	-- give the order to our units
	self.planner:attack_unit(unit);
	
	self.current_order = SCRIPT_AI_PLANNER_ATTACK_UNIT;
	self.current_dest = unit;
end;



function script_ai_planner:attack_force(enemy_force, reorder, defend_radius)

	-- should we attack or actually defend
	local function_name = "attack_force()";
	local should_defend = false;
	
	if is_number(defend_radius) and defend_radius > 0 then
		function_name = "defend_force()";
		should_defend = true
	end;
	
	if not is_table(enemy_force) then
		script_error(self.name .. " ERROR: " .. function_name .. " called but supplied force [" .. tostring(enemy_force) .. "] is not a table!");
		
		return false;
	end;
	
	-- check that we have some non-routing units to order
	if is_routing_or_dead(self.sunit_list) then
		if (self.is_debug or __script_ai_planner_debug) then
			self.bm:out(self.name .. ":" .. function_name .. " called but all controlled units are routing, doing nothing");
			return;
		end;
	end;

	-- get closest enemy
	local closest_enemy = nil;
	local closest_enemy_dist = 5000;
	
	for i = 1, #enemy_force do
		local curr_enemy_sunit = enemy_force[i];
		
		if is_scriptunit(curr_enemy_sunit) then
			if not is_routing_or_dead(curr_enemy_sunit.unit) then
				local curr_enemy_sunit_dist = get_closest_standing_unit(self.sunit_list, curr_enemy_sunit.unit:position()):position():distance(curr_enemy_sunit.unit:position());
				
				if curr_enemy_sunit_dist < closest_enemy_dist then
					closest_enemy = curr_enemy_sunit;
					closest_enemy_dist = curr_enemy_sunit_dist;
				end;
			end;
		else
			script_error(self.name .. " ERROR: " .. function_name .. " called but item " .. i .. " [" .. tostring(curr_enemy_sunit) .. " ]  of supplied force [" .. tostring(enemy_force) .. "] is not a scriptunit!");
			
			return false;
		end;
	end;
	
			
	-- only give the order if we have a valid target
	if closest_enemy then
	
		-- if we're rescanning, only re-order if our target has changed
		if reorder and self.current_target == closest_enemy then
		
			-- reorder every so often, so that we continually home on the nearest target
			
			self.bm:callback(
				function()
					if self:any_controlled_sunit_standing() then
						self:attack_force(enemy_force, true, defend_radius);
					end;
				end,
				self.attack_force_reorder_interval,
				self.name
			);
			
			return;
		end;
	
		self.bm:remove_process(self.name);
		
		-- reorder every so often, so that we continually home on the nearest target
		self.bm:callback(function() self:attack_force(enemy_force, true, defend_radius) end, self.attack_force_reorder_interval, self.name);
				
		self.enemy_force = enemy_force;
		self.current_target = closest_enemy;
			
		if (self.is_debug or __script_ai_planner_debug) then
			if reorder then
				if should_defend then
					self.bm:out(self.name .. " defend_force() now defending closest target " .. closest_enemy.name .. " at " .. v_to_s(closest_enemy.unit:position()));
				else
					self.bm:out(self.name .. " attack_force() now targeting closest enemy " .. closest_enemy.name .. " at " .. v_to_s(closest_enemy.unit:position()));
				end;
			else
				if should_defend then
					self.bm:out(self.name .. " defend_force() called, defending closest target " .. closest_enemy.name .. " at " .. v_to_s(closest_enemy.unit:position()));
				else
					self.bm:out(self.name .. " attack_force() called, targeting closest enemy " .. closest_enemy.name .. " at " .. v_to_s(closest_enemy.unit:position()));
				end;
			end;
		end;
		
		-- give the order itself
		if should_defend then
			self.current_order = SCRIPT_AI_PLANNER_DEFEND_FORCE;
			self:defend_position_of_sunit(closest_enemy, defend_radius, nil, true);
		else
			self.current_order = SCRIPT_AI_PLANNER_ATTACK_FORCE;
			self:move_to_position_of_sunit(closest_enemy, nil, false, true);
		end;
		
		-- watch for target unit routing
		self.bm:watch(
			function()
				return is_routing_or_dead(closest_enemy.unit)
			end,
			0,
			function()
				self:attack_force(enemy_force, true, defend_radius);
			end,
			self.name
		);
	elseif (self.is_debug or __script_ai_planner_debug) then
		self.bm:out(self.name .. ":attack_force() called but couldn't find any non-routing targets!");
	end;	
end;



function script_ai_planner:defend_force(enemy_force, radius)
	self:attack_force(enemy_force, false, radius);
end;





function script_ai_planner:merge_into(planner)
	if not is_scriptaiplanner(planner) then
		script_error(self.name .. " ERROR: merge_into() called but supplied object " .. tostring(planner) .. " is not a script ai planner!");
		
		return false;
	end;
	
	-- alliance check
	if self.alliance ~= planner.alliance then
		script_error(self.name .. " ERROR: merge_into() called but supplied planner " .. tostring(planner.name) .. " has an alliance of " .. tostring(planner.alliance) .. " instead of " .. tostring(self.alliance) .. " !");
		
		return false;
	end;
	
	self.bm:remove_process(self.name);
	
	self.current_order = SCRIPT_AI_PLANNER_MERGE_INTO;
	self.merge_target = planner;
	
	if self.is_debug or __script_ai_planner_debug then
		self.bm:out(self.name .. ":merge_into() called, merge target is " .. planner.name);
	end;
		
	-- repeatedly track this planner towards the target planner
	self.bm:repeat_callback(
		function()
			if self:any_controlled_sunit_standing() then
				self:track_towards_merge_target();
			end;
		end,
		10000,
		self.name
	);
	
	-- do this after registering the repeat_callback above, so that it has a chance to cancel if the target is found immediately
	self:track_towards_merge_target();
end;


function script_ai_planner:track_towards_merge_target()
	local centre = centre_point_table(self.merge_target.sunit_list);
	
	-- we have arrived at our target if any of our units are within a certain distance of the centre of the target
	if standing_is_close_to_position(self.sunit_list, centre, self.merge_distance) then
		-- we have arrived, merge us into the target planner
		if self.is_debug or __script_ai_planner_debug then
			self.bm:out(self.name .. " has arrived within " .. self.merge_distance .. "m of " .. v_to_s(centre) .. ", merging into " .. self.merge_target.name);
		end;
		
		self.merge_target:add_sunits(self.sunit_list);
		
		self.merge_target = nil;
		self.current_order = SCRIPT_AI_PLANNER_NO_ORDER;
		
		self.bm:remove_process(self.name);
	else
		-- we have not arrived, track towards our target
		
		-- if our target is in a defensive action use defend_position_centre, if they're attacking use
		-- move_to_position to minimise reforming when contact is made
		local merge_target_order = self.merge_target.current_order;
		local move_posture = "defensive";
		
		if merge_target_order == SCRIPT_AI_PLANNER_DEFEND_POSITION or merge_target_order == SCRIPT_AI_PLANNER_DEFEND_POSITION_OF_SUNIT then
			self:defend_position_action(centre, 100);
		else
			self:move_to_position_action(centre);
			move_posture = "offensive";
		end;
		
		if self.is_debug or __script_ai_planner_debug then
			self.bm:out(self.name .. " is continuing tracking towards " .. self.merge_target.name .. " at " .. v_to_s(centre) .. ", movement posture is " .. move_posture);
		end;
	end;
end;



function script_ai_planner:patrol(waypoint_list, enemy_force, completion_callback)
	if not is_table(waypoint_list) then
		self.bm:out(self.name .. " patrol called but supplied waypoint list is not a table, but a " .. tostring(waypoint_list) .. " !");
		
		return false;
	end;
	
	if not is_table(enemy_force) then
		self.bm:out(self.name .. " patrol called but supplied enemy force is not a table, but an " .. tostring(enemy_force) .. " !");
		
		return false;
	end;
	
	self.bm:remove_process(self.name);
	
	if #waypoint_list == 0 then
		-- we have arrived at our destination
		if self.is_debug or __script_ai_planner_debug then
			self.bm:out(self.name .. " has completed patrol");
		end;
		
		self.current_order = SCRIPT_AI_PLANNER_NO_ORDER;
		
		if completion_callback and is_function(completion_callback) then
			completion_callback();
		end;
		
		return true;
	end;

	-- take one off the waypoint list each time we pass through this function
	local current_waypoint = waypoint_list[1];
	table.remove(waypoint_list, 1);
	
	self:move_to_position_action(current_waypoint);
	-- self:defend_position_action(current_waypoint, 100);
	
	if self.is_debug or __script_ai_planner_debug then
		self.bm:out(self.name .. " now patrolling to " .. v_to_s(current_waypoint));
	end;
	
	-- assemble a proximity test to enemy force (if we should)
	if self.perform_patrol_prox_test then
		local prox_test_enemy = function() return distance_between_forces(self.sunit_list, enemy_force) < self.enemy_distance end;
		
		-- watch for getting close to enemy
		self.bm:watch(
			function()
				return prox_test_enemy();
			end,
			0,
			function()
				-- we have encountered our enemy, attack
				if self.is_debug or __script_ai_planner_debug then
					self.bm:out(self.name .. " is on patrol and has encountered an enemy");
				end;
				
				self.bm:remove_process(self.name);
				
				self:attack_closest_unit(enemy_force);
			end,
			self.name
		);
	end;
	
	-- watch for arriving at destination
	self.bm:watch(
		function()
			return is_close_to_position(self.sunit_list, current_waypoint, self.waypoint_distance);
		end,
		5000,
		function()
			-- go on to next waypoint
			self:patrol(waypoint_list, enemy_force, completion_callback);
		end,
		self.name
	);
end;



-- attacks the closest enemy unit to the first of our units (it'll probably do)
function script_ai_planner:attack_closest_unit(enemy_force, ignore_visibility)
	if not is_table(enemy_force) then
		self.bm:out(self.name .. " ERROR: attack_closest_unit() called but supplied force is not a table but a " .. tostring(enemy_force) .. " !");
		
		return false;
	end;

	local closest_unit = nil;
	
	if #self.sunit_list > 0 then
		closest_unit = get_closest_unit(enemy_force, self.sunit_list[1].unit:position());
	else
		if not is_scriptunit(enemy_force[1]) then
			self.bm:out(self.name .. " ERROR: attack_closest_unit() called but first element in supplied force is not a scriptunit but a " .. tostring(enemy_force[1]) .. " !");
		
			return false;
		end;
		
		closest_unit = enemy_force[1];
	end;
	
	if self.is_debug or __script_ai_planner_debug then
		self.bm:out(self.name .. ":attack_closest_unit() called");
	end;
	
	-- don't need to do this as attack_unit does it
	-- self.bm:remove_process(self.name);
	
	if ignore_visibility then
		self:move_to_position(closest_unit:position());
	else
		self:attack_unit(closest_unit);
	end;
end;





-- finds a 






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\_lib\lib_script_messager.lua


--	Only one script_messager can be active at one time, this function returns it or creates a new one and returns that
function get_messager()
	if is_scriptmessager(__script_messager) then
		return __script_messager;
	else
		return script_messager:new();
	end;
end;



__script_messager = nil;

script_messager = {
	output = nil,
	listeners = {},
	is_debug = false
};


function script_messager:new()
	if is_scriptmessager(__script_messager) then
		return __script_messager;
	end;
	
	local sm = {};
	
	setmetatable(sm, self);
	self.__index = self;
	self.__tostring = function() return TYPE_SCRIPT_MESSAGER end;
	
	-- create an output function depending on what mode of game we're in
	if __game_mode == __lib_type_battle then
		sm.output = function(str) get_bm():out(str) end;
	elseif __game_mode == __lib_type_campaign then
		sm.output = function(str) output(str) end;
	else
		sm.output = function(str) out.ting(str) end;
	end;
	
	sm.listeners = {};
	
	__script_messager = sm;
	
	return sm;
end;


--	Adds a message listener. When the message is received, the supplied callback is called. If the third parameter is set to true
--	this listener will continue after it calls the callback and will listen indefinitely.
function script_messager:add_listener(new_message, new_callback, new_always_listen)
	if not is_string(new_message) then
		script_error("script_messager ERROR: add_listener called but supplied message [" .. tostring(new_message) .. "] is not a string");
		return false;
	end;
	
	if not is_function(new_callback) then
		script_error("script_messager ERROR: add_listener called but supplied callback [" .. tostring(new_callback) .. "] is not a function");
		return false;
	end;
	
	new_always_listen = not not new_always_listen;		-- force this value to be boolean

	local new_listener = {
		message = new_message,
		callback = new_callback,
		always_listen = new_always_listen
	};
		
	if self.is_debug then
		self.output("script_messager: adding listener for message " .. tostring(new_message) .. " to call callback " .. tostring(new_callback) .. ", always listen is " .. tostring(new_always_listen));
	end;
	
	table.insert(self.listeners, new_listener);
end;


--	Triggers a string message. Prompts the messager system to notify any listeners for the subject message by calling the registered callback.
function script_messager:trigger_message(message)
	if not is_string(message) then
		script_error("script_messager ERROR: add_listener called but supplied message [" .. tostring(message) .. "] is not a string");
		return false;
	end;
	
	if self.is_debug then
		self.output("script_messager: message triggered: " .. tostring(message));
	end;
	
	local callbacks_to_call = {};
	local found_result = false;
	
	for i = 1, #self.listeners do
		local current_listener = self.listeners[i];
		
		if current_listener.message == message then
			found_result = true;
			
			-- we have found a callback to call, add it to our list of callbacks and mark this 
			-- listener to expire if it's only to trigger once
			table.insert(callbacks_to_call, current_listener.callback);
					
			if not current_listener.always_listen then
				self.listeners[i].to_remove = true;
			end;
			
			if self.is_debug then
				self.output("\tscript_messager: found match, will call: " .. tostring(current_listener.callback));
			end;
		end;
	end;
	
	-- we've examined all our listeners and built a list of callbacks to call, now clean our list up of entries we've marked to remove
	if found_result then
		for i = #self.listeners, 1, -1 do
			if self.listeners[i].to_remove then
				table.remove(self.listeners, i);
			end;
		end;
	end;
	
	for i = 1, #callbacks_to_call do
		callbacks_to_call[i]();
	end;
	
	return found_result;
end;


--	Dumps the script_messager internal data for debug purposes
function script_messager:dump()
	self.output("script_messager:: dumping listeners");
	self.output("========================");
	for i = 1, #self.listeners do
		local current_listener = self.listeners[i];
		self.output("\t" .. i .. ":\t\tmessage: " .. current_listener.message .. "\t\tcallback: " .. tostring(current_listener.callback) .. "\t\talways_listen: " .. tostring(current_listener.always_listen));
	end;
	self.output("========================");
end;


--	Sets the script_messager into debug mode for added output
function script_messager:set_debug(value)
	if value == false then
		self.is_debug = false;
	else
		self.is_debug = true;
	end;	
end;









C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\_lib\lib_script_unit.lua

----------------------------------------------------------------------------------------------------------
-- **************************************************************************************************** --
----------------------------------------------------------------------------------------------------------
--
--	SCRIPT UNIT
--
--	An encapsulation of the way we tend to set up units and a shorthand method of setting that data up.
--  Scripters can save themselves a fair bit of copy+pasting by setting up a script unit in place of individual
--	units and unitcontrollers, and then get the data out of the script unit later when they need it.
--
--
--	PARAMETERS:
--	On Creation:
--	ARMY that the unit belongs to
--	STRING name for the unit (must match given name in xml

--	Once a script unit is created, the actual unit it contains can be retrieved by referring to
--	sunit.unit
--
--	It's unitcontroller can be retrieved via:-
--
--	sunit.uc;
--
--	The position the unit started the battle in can be retrieved via:-
--
--	sunit.start_position;
--	sunit.start_bearing;
--	sunit.start_width;

----------------------------------------------------------------------------------------------------------

--[[

	SAMPLE USAGE:
			
	SUnit_Player_01 = script_unit:new(Army_Player, "Player_General"); -- declare/set-up the unit, controller and other stuff
	SUnit_Player_02 = script_unit:new(Army_Player, "Player_Cav_01");
	SUnit_Enemy_01 = script_unit:new(Army_Enemy, "Enemy_Inf_01");
	
	-- sample script sending player unit #1 to attack enemy unit #1, and player unit #2 to move to player unit #1's start position
	
	SUnit_Player_01.uc:attack_unit(SUnit_Enemy_01.unit);
	SUnit_Player_02.uc:goto_location_angle_width(SUnit_Player_01.start_position, SUnit_Player_01.start_bearing, SUnit_Player_01.start_width);
]]


script_unit = {
	bm = nil,
	alliance = nil,
	army = nil,
	unit = nil,
	uc = nil,
	start_position = nil,
	start_bearing = nil,
	start_width = nil
};


function script_unit:new(new_army, new_ref)
	bm = get_bm();
	
	-- type check our startup parameters
	if not is_army(new_army) then
		script_error("ERROR: Couldn't create script unit, army parameter " .. tostring(new_army) .. " is invalid");
		
		return false;
	end;
	
	if not is_string(new_ref) then
		if not is_number(new_ref) then
			script_error("ERROR: Couldn't create script unit, name parameter " .. tostring(new_ref) .. " is not a string or a number");
		
			return false;
		end;
	end;
		
	local new_unit = nil;
	local is_reinforcement = false;
	local reinforcing_ref = new_ref;
	
	-- try and reference this unit
	if pcall(function() new_unit = new_army:units():item(new_ref) end) then
		-- call succeeded
		
	else
		-- if new_ref is a number at this point, then subtract the number of units in the regular army to make the ref for the reinforcing army
		-- so that if the first army contains 15 units and we're looking for unit #16, this will look for unit #1 in the reinforcing army				
		if is_number(reinforcing_ref) then
			reinforcing_ref = reinforcing_ref - new_army:units():count();
		end;
	
		if pcall(function() new_unit = new_army:get_reinforcement_units():item(reinforcing_ref) end) then
			is_reinforcement = true;
			if is_number(reinforcing_ref) then
				new_ref = "R_" .. reinforcing_ref;
			end;
			-- call succeeded
		else		
			script_error("ERROR: Couldn't create script unit -> could not find a unit in army " .. tostring(new_army) .. " with the name " .. tostring(new_ref) .. " or a unit in the reinforcing units with the name " .. tostring(reinforcing_ref));
			return false;
		end;
	end;
	
	
	-- set up the script unit
	su = {};
	setmetatable(su, self);
	
	self.__index = self;
	self.__tostring = function() return TYPE_SCRIPT_UNIT end;
	
	su.bm = bm;
	su.name = new_ref;
	su.army = new_army;
	
	-- work out which alliance this unit is in
	local alliances = bm:alliances();
	for i = 1, alliances:count() do
		if contains_unit(alliances:item(i), new_unit) then
			su.alliance = alliances:item(i);	
			break;
		end;
	end;
	
	-- check that we found an alliance for it
	if not su.alliance then
		script_error("WARNING: Trying to create script_unit " .. new_ref .. " but couldn't work out which alliance it belongs to");
	end;
	
	su.unit = new_unit;	
	su.uc = create_unitcontroller(new_army, new_unit);
			
	su.start_position = new_unit:ordered_position();
	su.start_bearing = new_unit:bearing();
	su.start_width = new_unit:ordered_width();
	
	return su;
end;


function script_unit:goto_start_location(should_run)
	get_bm():out(self.name .. " moving to start location " .. v_to_s(self.start_position));
	self.uc:goto_location_angle_width(self.start_position, self.start_bearing, self.start_width, should_run); 
end;


function script_unit:teleport_to_start_location()
	self.uc:teleport_to_location(self.start_position, self.start_bearing, self.start_width); 
end;


function script_unit:teleport_to_start_location_offset(x_offset, z_offset)
	if not is_number(x_offset) then
		script_error(self.name .. " ERROR: teleport_to_start_location_offset() called but suppled x_offset [" .. tostring(x_offset) .. "] is not a number");
		return;
	end;
	
	if not is_number(z_offset) then
		script_error(self.name .. " ERROR: teleport_to_start_location_offset() called but suppled z_offset [" .. tostring(z_offset) .. "] is not a number");
		return;
	end;

	local bearing = d_to_r(self.start_bearing);
	local x_pos = self.start_position:get_x() + x_offset * math.cos(bearing) + z_offset * math.sin(bearing);
	local z_pos = self.start_position:get_z() - x_offset * math.sin(bearing) + z_offset * math.cos(bearing);
	local destination = v(x_pos, z_pos);
		
	-- get_bm():out(self.name .. " teleporting from " .. v_to_s(self.start_position) .. " to " .. v_to_s(destination));

	self.uc:teleport_to_location(destination, self.start_bearing, self.start_width); 
end;





function script_unit:move_to_position_offset(x_offset, z_offset, should_run)
	if not is_number(x_offset) then
		script_error(self.name .. " ERROR: move_to_position_offset() called but suppled x_offset [" .. tostring(x_offset) .. "] is not a number");
		return;
	end;
	
	if not is_number(z_offset) then
		script_error(self.name .. " ERROR: move_to_position_offset() called but suppled z_offset [" .. tostring(z_offset) .. "] is not a number");
		return;
	end;

	local bearing = d_to_r(self.start_bearing);
	local x_pos = self.unit:position():get_x() + x_offset * math.cos(bearing) + z_offset * math.sin(bearing);
	local z_pos = self.unit:position():get_z() - x_offset * math.sin(bearing) + z_offset * math.cos(bearing);
	local destination = v(x_pos, z_pos);
		
	-- get_bm():out(self.name .. " teleporting from " .. v_to_s(self.start_position) .. " to " .. v_to_s(destination));

	self.uc:goto_location(destination, should_run); 
end;








function script_unit:set_current_patrol(pm)
	if is_patrolmanager(pm) then
		self.current_patrol = pm;
	else
		script_error(self.name .. " ERROR: set_current_patrol() called but supplied object is not a patrol manager");
	end;
end;


function script_unit:stop_current_patrol()
	if self.current_patrol and is_patrolmanager(self.current_patrol) and self.current_patrol.is_running then
		self.current_patrol:stop();
	end;
end;


function script_unit:teleport_to_cached_location()
	if is_vector(self.cached_pos) and is_number(self.cached_bearing) and is_number(self.cached_width) then
		self.uc:teleport_to_location(self.cached_pos, self.cached_bearing, self.cached_width);
	end;
end;














function cache_position(obj)
	if is_scriptunit(obj) then
		obj.cached_pos = obj.unit:position();
		obj.cached_bearing = obj.unit:bearing();
		obj.cached_width = obj.unit:ordered_width();
	elseif is_table(obj) then
		for i = 1, #obj do
			cache_position(obj[i]);
		end;
	end;
end;


function has_moved(obj, pos, dist)
	if is_scriptunit(obj) then
		if not is_nil(pos) and not is_vector(pos) then
			script_error("ERROR: has_moved() called but supplied position " .. tostring(pos) .. " is not a vector!");
			
			return false;
		end;
		
		if not is_number(dist) then
			if not is_nil(dist) then 
				script_error("ERROR: has_moved() called but supplied distance " .. tostring(pos) .. " is not a number!");
			
				return false;
			end;
			
			dist = 3;
		end;
	
		local cached_pos = obj.cached_pos;
				
		if not cached_pos then
			script_error(obj.name .. " ERROR: has_moved() called but position was never cached with cache_position()!")
			
			return false;
		end;
		
		if pos then
			-- return true if the unit is currently more than 3m closer to the specified pos than it was
			return obj.unit:position():distance(pos) + dist < cached_pos:distance(pos);
		end;
		
		return obj.unit:position():distance(cached_pos) > 1;

	elseif is_table(obj) then
		for i = 1, #obj do
			has_moved(obj[i], pos, dist);
		end;
	end;
end;






function cache_health(obj)
	if is_scriptunit(obj) then
		obj.cached_hp = unit_proportion_alive(obj.unit);
	elseif is_table(obj) then
		for i = 1, #obj do
			cache_health(obj[i]);
		end;
	end;
end;


function has_taken_casualties(obj)
	if is_scriptunit(obj) then
		local cached_hp = obj.cached_hp;
		
		if not cached_hp then
			script_error(obj.name .. " ERROR: has_taken_casualties() called but hp was never cached with cache_health()!")
			
			return false;
		end;
		
		return unit_proportion_alive(obj.unit) < cached_hp;
	elseif is_table(obj) then
		for i = 1, #obj do
			has_taken_casualties(obj[i]);
		end;
	end;
end;







C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\_lib\lib_teleport_manager.lua

----------------------------------------------------------------------------------------------------------
-- **************************************************************************************************** --
----------------------------------------------------------------------------------------------------------



hiding_place = {
	bm = nil,
	name = "",
	places = {},
	taken = false,
	trigger_radius = 120,
	trigger_areas = {},
	taken_callback = nil
}


function hiding_place:new(new_name)
	local bm = get_bm();
	
	if not is_string(new_name) then
		script_error("ERROR :: trying to create hiding place but name given [" .. tostring(new_name) .. "] is not a string!");
		return false;		
	end;
	
	hp = {};
	setmetatable(hp, self);
	self.__index = self;
	self.__tostring = function() return TYPE_HIDING_PLACE end;
	
	hp.bm = bm;
	hp.name = "Hiding_Place_" .. new_name;
	hp.places = {};
	hp.trigger_areas = {};
	hp.taken = false;
	hp.trigger_radius = 120;
	
	return hp;
end;


function hiding_place:set_taken_callback(callback)
	if not is_function(callback) then
		script_error(self.name .. " ERROR :: set_taken_callback() called but supplied callback [" .. tostring(callback) .. "] is not a function");
		return false;
	end;
	
	self.taken_callback = callback;
end;


function hiding_place:add_position(new_position, new_bearing, new_width)
	if not is_vector(new_position) or not is_number(new_bearing) or not is_number(new_width) then
		script_error(self.name .. " ERROR :: trying to add position but some parameter is wrong!");
		
		return false;
	end;
	
	local to_add = {position = new_position, bearing = new_bearing, width = new_width}
	
	table.insert(self.places, to_add);
end;


function hiding_place:add_trigger_area(area)
	if not is_convexarea(area) then
		script_error(self.name .. " ERROR :: trying to set new trigger area but supplied parameter is not a convex area!");
		return false;
	end;
	
	table.insert(self.trigger_areas, area);
end;


function hiding_place:set_trigger_radius(new_radius)
	if not is_number(new_radius) then
		script_error(self.name .. " ERROR :: trying to set new radius but it's not a number!");
		
		return false;
	end;
	
	self.trigger_radius = new_radius;
end;


function hiding_place:get_trigger_radius()
	return self.trigger_radius;
end;



function hiding_place:is_taken()
	return not not self.taken; 		-- force boolean value
end;


function hiding_place:taken_by()
	return self.taken;
end;


function hiding_place:set_taken(obj)
	if obj == false then
		self.taken = false;
	elseif is_teleportsquad(obj) then
		self.taken = obj;
		
		if is_function(self.taken_callback) then
			self.taken_callback();
		end;
	else
		script_error(self.name .. " ERROR: set_taken() called but object supplied [" .. tostring(obj) .. "] is not a hiding place (or false)");
		return false;
	end;
end;



----------------------------------------------------------------------------------------------------------
-- **************************************************************************************************** --
----------------------------------------------------------------------------------------------------------


teleport_squad = {
	bm = nil,
	name = "",
	home_alliance = nil,
	enemy_force = nil,
	sunits = {},
	hiding_places = {},
	current_hiding_place = nil,
	planner = nil,
	attack_callback = nil,
	should_attack = true,
	is_attacking = false
};


function teleport_squad:new(new_name, new_enemy_force)
	local bm = get_bm();
	
	if not is_string(new_name) then
		script_error("ERROR :: trying to create teleport_squad but name given [" .. tostring(new_name) .. "] is not a string");
		return false;		
	end;

	if not is_table(new_enemy_force) then
		script_error(new_name .. " ERROR :: trying to create teleport_squad but enemy force given [" .. tostring(new_enemy_force) .. "] is not a table");
		return false;
	end;
	
	for i = 1, #new_enemy_force do
		local current_sunit = new_enemy_force[i];
		
		if not is_scriptunit(current_sunit) then
			script_error(new_name .. " ERROR :: trying to create teleport_squad but element " .. i .. " [" .. tostring(current_sunit) .. "] of supplied enemy force is not a scriptunit");
			return false;
		end;
	end;
	
	ts = {};
	setmetatable(ts, self);
	self.__index = self;
	self.__tostring = function() return TYPE_TELEPORT_SQUAD end;
	
	ts.bm = bm;
	ts.name = "Teleport_Squad_" .. new_name;
	ts.enemy_force = new_enemy_force;
	ts.sunits = {};
	ts.hiding_places = {};
		
	return ts;
end;


function teleport_squad:add_sunits(...)
	for i = 1, arg.n do
		if not is_scriptunit(arg[i]) then
			if is_table(arg[i]) then
				for j = 1, #arg[i] do
					self:add_sunits(arg[i][j]);
				end;
				
				return;
			else
				script_error(self.name .. " error :: trying to add sunits, but supplied object " .. i .. " [" .. tostring(arg[i]) .. "] is not a script unit");
				return false;
			end;
		end;
		
		table.insert(self.sunits, arg[i]);
	end;
end;


function teleport_squad:add_hiding_places(...)
	if #self.sunits == 0 then
		script_error(self.name .. " ERROR :: trying to add hiding places, but no sunits added yet, do this first!");
		return false;
	end;

	for i = 1, arg.n do
		if not is_hidingplace(arg[i]) then
			script_error(self.name .. " ERROR :: trying to add hiding places, but supplied object " .. i .. " [" .. tostring(arg[i]) .. "] is not a hiding place!");
			return false;
		end;
		
		-- check that this hiding place has enough spaces available for our sunits
		if #arg[i].places < #self.sunits then
			script_error(self.name .. " WARNING :: trying to add hiding places but hiding place " .. i .. " only has " .. #arg[i].places .. " slots available when it needs " .. #self.sunits .. ", discarding it");
		else
			table.insert(self.hiding_places, arg[i]);
		end;
	end;
end;


function teleport_squad:set_should_attack(value)
	if value == false then
		self.should_attack = false;
	else
		self.should_attack = true;
	end;
end;


function teleport_squad:set_attack_callback(new_callback)
	if not is_function(new_callback) then
		script_error(self.name .. " ERROR :: trying to set callback, but the object supplied is not a function!");
		
		return false;
	end;
	
	self.attack_callback = new_callback;
end;


function teleport_squad:teleport()
	if #self.sunits == 0 then
		script_error(self.name .. " ERROR :: trying to teleport, but no sunits have been added to this squad!");
		return false;
	end;

	if #self.hiding_places == 0 then
		script_error(self.name .. " ERROR :: trying to teleport, but no hiding places have been added to this squad!");
		return false;
	end;

	-- randomly sort our hiding places
	self.hiding_places = random_sort(self.hiding_places);
		
	-- check each one in sequence
	for i = 1, #self.hiding_places do
		local curr_hiding_place = self.hiding_places[i];
		if not curr_hiding_place:is_taken() then

			-- this hiding place isn't taken, do the teleport
			self:do_teleport(curr_hiding_place);
									
			return true;
		end;
	end;
	
	self.bm:out(self.name .. " ERROR :: attempted to teleport but none of the places were available!!");
	
	return false;
end;


function teleport_squad:force_teleport(hiding_place)
	if not is_hidingplace(hiding_place) then
		script_error(self.name .. " ERROR :: force_teleport() called but supplied hiding place [" .. tostring(hiding_place) .. "] is not a hiding place");
		return false;
	end;
	
	-- check that we know about this hiding place
	for i = 1, #self.hiding_places do
		local curr_hiding_place = self.hiding_places[i];
					
		if curr_hiding_place == hiding_place then
			if not hiding_place:is_taken() then
				-- this hiding place isn't taken, do the teleport
				self:do_teleport(hiding_place);
										
				return true;
			else
				script_error(self.name .. " ERROR :: force_teleport() attempted to teleport to hiding place [" .. hiding_place.name .. "] but it is already taken");
				return false;
			end;
		end;
	end;
	
	script_error(self.name .. " ERROR :: force_teleport() couldn't find a hiding place called " .. hiding_place.name);
	return false;
end;






function teleport_squad:setup_planner()
	if #self.sunits == 0 then
		script_error(self.name .. " ERROR :: tried to setup a planner but there are no script units in this teleport squad");
		return false;
	end;
	
	self.planner = script_ai_planner:new(self.name, self.sunits);
end;


function teleport_squad:get_planner()
	return self.planner;
end;


function teleport_squad:do_teleport(hiding_place)
	if self.current_hiding_place then
		self:stop_watches()
		self.current_hiding_place:set_taken(false);
	end;

	self.bm:out(self.name .. " is teleporting to location " .. hiding_place.name .. ", sshhhhh!!!");

	for i = 1, #self.sunits do
		self.sunits[i].uc:teleport_to_location(hiding_place.places[i].position, hiding_place.places[i].bearing, hiding_place.places[i].width);
		self.bm:out("\t.. unit #" .. i .. " new position is " .. v_to_s(hiding_place.places[i].position));
	end;
	
	hiding_place:set_taken(self);
	
	self.current_hiding_place = hiding_place;
	
	-- start the various condition watches
	self:start_watches_for_hiding_place(self.current_hiding_place);
end;


function teleport_squad:is_enemy_in_trigger_areas(hiding_place)
	local trigger_areas = hiding_place.trigger_areas;
	
	for i = 1, #trigger_areas do
		if trigger_areas[i]:is_in_area(self.enemy_force) then
			return true;
		end;
	end;
	
	return false;
end;


function teleport_squad:is_visible_to_enemy()
	local enemy_alliance = self.enemy_force[1].alliance;

	for i = 1, #self.sunits do
		local current_sunit = self.sunits[i];
		
		if current_sunit.unit:is_visible_to_alliance(enemy_alliance) then
			return true;
		end;
	end;
	
	return false;
end;


function teleport_squad:start_watches_for_hiding_place(hiding_place)
	-- assemble a table of just the positions in our hiding place
	local hiding_positions = {};

	for i = 1, #hiding_place.places do
		hiding_positions[i] = hiding_place.places[i].position;
	end;

	-- get central point of the hiding place
	local centre_point = centre_point_table(hiding_positions);
	local radius = hiding_place:get_trigger_radius();
		
	-- watch for our enemy force approaching the hiding place
	self.bm:watch(function() return standing_is_close_to_position(self.enemy_force, centre_point, radius, true) end, 0, function() self:attack("enemy force approached hiding place") end, self.name .. "_Trigger_Watch");
	
	-- watch for our force becoming visible to the enemy (offset this a bit so our unit's visibility can be settled first)
	self.bm:callback(
		function()
			self.bm:watch(
				function() return self:is_visible_to_enemy() end,
				0, 
				function() self:attack("enemy force has spotted our units") end,
				self.name .. "_Trigger_Watch"
			);
		end,
		5000
	);
	
	-- watch for our enemy force entering the trigger area
	self.bm:watch(function() return self:is_enemy_in_trigger_areas(hiding_place) end, 0, function() self:attack("enemy force entered trigger area") end, self.name .. "_Trigger_Watch");
end;


function teleport_squad:stop_watches()
	self.bm:remove_process(self.name .. "_Trigger_Watch");
end;


function teleport_squad:attack(reason)
	if self.is_attacking then
		return;
	end;
	
	if not reason or not is_string(reason) then
		reason = "no reason given";
	end;
	
	self.is_attacking = true;

	self.bm:remove_process(self.name .. "Trigger_Watch");
	
	self.bm:out(self.name .. " has been provoked and is moving to attack, " .. reason);
	
	-- set up the ai planner (if we should)
	if self.should_attack then
		self:setup_planner();
		self.planner:attack_force(self.enemy_force);
	end;
	
	if is_function(self.attack_callback) then
		self.attack_callback();
	end;
end;


function teleport_squad:are_sunits_routing()
	for i = 1, #self.sunits do
		if not is_unit_routing_or_dead(self.sunits[i].unit) then
			return false;
		end;
	end;
	
	return true;
end;






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\_lib\lib_timer_manager.lua


---------------------------------------------------------------
--
-- Timestamp maintenance
--
---------------------------------------------------------------

timestamp_tick = 0;

function tick_increment_counter()
	timestamp_tick = timestamp_tick + time_increment_ms;
end;



---------------------------------------------------------------
--
-- Timer manager
--
---------------------------------------------------------------


__timer_manager = nil;

timer_manager = {
	timer_obj = nil,
	callback_list = {},
	timer_list = {},
	singleshot_timer = nil,
	repeat_timer = nil,
	unregister_timer = nil,
	callback_leeway = 50
};


function timer_manager:new(obj)
	if __timer_manager then
		script_error("WARNING: tried to create a timer manager but one already exists, returning it instead");
		return __timer_manager;
	end;

	tm = {};
	
	setmetatable(tm, self);
	self.__tostring = function() return TYPE_TIMER_MANAGER end;
	self.__index = self;
	
	tm.callback_list = {};
	tm.timer_list = {};

	if __game_mode == __lib_type_battle then
		if not is_battlemanager(obj) then
			script_error("ERROR: tried to create a timer_manager but supplied timer object is not a battlemanager");
			return false;
		end;
		
		tm.singleshot_timer = function(name, t) obj.battle:register_singleshot_timer(name, t) end;
		tm.repeat_timer = function(name, t) obj.battle:register_repeating_timer(name, t) end;
		tm.cancel_timer = function(name) obj.battle:unregister_timer(name) end;
	
	elseif __game_mode == __lib_type_frontend then
		if not obj then
			script_error("ERROR: tried to create a timer_manager but supplied timer object is nil");
			return false;
		end;
		
		-- don't know why this is %#!&ing different
		tm.callback_leeway = 250;
		
		tm.singleshot_timer = function(name, t) obj.register_singleshot(name, t) end;
		tm.repeat_timer = function(name, t) obj.register_repeating(name, t) end;
		tm.cancel_timer = function(name) obj.unregister(name) end;
	
	else
		script_error("ERROR: timer_manager created in campaign, we don't support this!");
		return;
	end;
	
	tm:register_repeating_timer("tick_increment_counter", 100);

	__timer_manager = tm;
		
	return tm;
end;


function timer_manager:print_timer_list()
	local output_func = nil;

	if __game_mode == __lib_type_battle then
		output_func = function(str) get_bm():out(str) end;
	elseif __game_mode == __lib_type_frontend then
		output_func = function(str) out.ting(str) end;
	end;
	
	local ast_line = "*****************************";
	
	output_func("");
	output_func(ast_line);
	output_func("Printing timer list:");
		
	for k, v in pairs(self.timer_list) do
		output_func("\t" .. k);
	end;
	
	output_func(ast_line);
	output_func("");
end;


function timer_manager:register_singleshot_timer(name, t)
	--out.ting("[" .. timestamp_tick .. "] " .. name .. " :: attempting to register_singleshot_timer, t is " .. t);
	if not self.timer_list[name] then
		--out.ting("\tgoing to do it");
		self.singleshot_timer(name, t);
		self.timer_list[name] = true;
		self:callback(function() self:remove_timer(name) end, t, "remove_timer");
	end;
end;


function timer_manager:register_repeating_timer(name, t)
	--out.ting("[" .. timestamp_tick .. "] " .. name .. " :: attempting to register_repeating_timer, t is " .. t);
	if not self.timer_list[name] then
		--out.ting("\tgoing to do it");
		self.repeat_timer(name, t);
		self.timer_list[name] = true;
	end;
end;


function timer_manager:unregister_timer(name)
	--out.ting("[" .. timestamp_tick .. "] " .. name .. " :: attempting to unregister_timer");
	local failsafe = false;
	
	if __game_mode == __lib_type_frontend then
		failsafe = true;	-- not sure why, but this system basically doesn't behave itself in the frontend and needs to be treated with kid gloves
	end;
	
	if self.timer_list[name] then
		--out.ting("\tgoing to do it");
		if failsafe then
			if not pcall(function() self.cancel_timer(name) end) then
				script_error("Just failed to remove timer " .. name .. ", look out for strangeness");
			end;
		else
			self.cancel_timer(name);
		end;
		self:remove_timer(name);
	end;
end;

function timer_manager:remove_timer(name)
	self.timer_list[name] = false;
end;





function timer_manager:callback(new_callback, new_time_offset, new_entryname)
	if not is_function(new_callback) then
		script_error("ERROR: timer_manager:callback() called but supplied callback " .. tostring(new_callback) .. " is not a function");
		
		return false;
	end;
	
	if not is_number(new_time_offset) or new_time_offset < 0 then
		script_error("ERROR: timer_manager:callback() called but offset " .. tostring(new_time_offset) .. " is not a positive number");
	
		return false;
	end;
	
	local new_entryname = new_entryname or "";
	local new_calltime = new_time_offset + timestamp_tick;
		
	local new_callback_entry = {
		callback = new_callback, 
		calltime = new_calltime, 
		entryname = new_entryname
	};
	
	-- determine where to insert this callback in the list
	if #self.callback_list == 0 then
		-- callback list is empty, insert this new one at the start of the list and kick the mechanism off
		table.insert(self.callback_list, 1, new_callback_entry);
		
		self:unregister_timer("timer_manager_tick_callback");
		self:register_singleshot_timer("timer_manager_tick_callback", new_time_offset);
		
		return true;
	else
		-- go through the callback list in order and see where to put this new callback
		-- callback list is arranged in chronological order
		for i = 1, #self.callback_list do
			if self.callback_list[i].calltime > new_calltime then			
				table.insert(self.callback_list, i, new_callback_entry);
				
				-- if this new callback is the first in the list (i.e. the one that's going to happen next),
				-- then "repoint" the callback mechanism at it
				if i == 1 then
					self:unregister_timer("timer_manager_tick_callback");
					self:register_singleshot_timer("timer_manager_tick_callback", new_time_offset, true);
				end;
				
				return true;
			end;	
		end;
		
		-- we didn't find anywhere in the table to insert this callback, it must
		-- be later than all the others in the list. It shall go on the end
		table.insert(self.callback_list, #self.callback_list + 1, new_callback_entry);
		
		return true;
	end;
end;



-- Global function to process the next callback (raw timers can't cope with calls to functions in tables)
function timer_manager_tick_callback()
	__timer_manager:tick_callback();
end;


-- Process the next callback(s)
function timer_manager:tick_callback()
	local my_callback = false;
		
	local failsafe = true;
		
	while true do
		-- if the size of our list is zero for whatever reason then stop
		if #self.callback_list == 0 then
			break;
		end;
		
		-- if the next callback in our list is due to happen in the next 50ms (or 150ms in frontend)
		-- then process it and remove it, otherwise stop
		if self.callback_list[1].calltime < timestamp_tick + self.callback_leeway then
			my_callback = self.callback_list[1].callback;
			table.remove(self.callback_list, 1);
			my_callback();
		else
			-- if the timer we've just failed to remove is "remove_timer" then this may go wrong, so go into failsafe mode
			if __game_mode == __lib_type_frontend and self.callback_list[1].entryname == "remove_timer" then
				failsafe = true;
			end;
		
			break;
		end;
	end;

	-- repoint the callback timer at whenever the next callback in the list is going to occur
	self:unregister_timer("timer_manager_tick_callback", failsafe);
	if #self.callback_list > 0 then
		self:register_repeating_timer("timer_manager_tick_callback", self.callback_list[1].calltime - timestamp_tick, true);
	end;
end;


-- Repeat callback, same as callback but will repeatedly call itself over the given interval
function timer_manager:repeat_callback(new_callback, new_time_offset, new_entryname)
	self:callback(function() self:repeat_callback(new_callback, new_time_offset, new_entryname) end, new_time_offset, new_entryname);
	self:callback(new_callback, new_time_offset, new_entryname);
end;



-- Debug command to print the callback list out at any time
function timer_manager:print_callback_list()
	local output_func = nil;

	if __game_mode == __lib_type_battle then
		output_func = function(str) get_bm():out(str) end;
	elseif __game_mode == __lib_type_frontend then
		output_func = function(str) out.ting(str) end;
	end;
	
	local ast_line = "*****************************";
	
	output_func("");
	output_func(ast_line);
	output_func("Printing callback list:");
	
	if #self.callback_list == 0 then
		output_func("\tcallback list is empty!");
		output_func(ast_line);
		output_func("");
		return;
	end;
		
	for i = 1, #self.callback_list do
		output_func("\t" .. i .. ":  " .. tostring(self.callback_list[i].entryname) .. " will be called at " .. self.callback_list[i].calltime .. "ms");
	end;
	
	output_func(ast_line);
	output_func("");
end;


function timer_manager:clear_callback_list()
	-- if we have callbacks in our current list then we'll need to stop the timer
	if #self.callback_list > 0 then
		self:unregister_timer("timer_manager_tick_callback");
	end;

	self.callback_list = {};
end;


-- purge any callbacks that match the key name from the callback list. Return true if any were found, false otherwise
function timer_manager:remove_process(key)
	if #self.callback_list == 0 then
		return false;
	end;

	local have_removed_entry = false;
	local i = 1;
	local j = #self.callback_list;
			
	while i <= j do			
		if self.callback_list[i].entryname == key then			
			table.remove(self.callback_list, i);
			have_removed_entry = true;
			j = j - 1;
		else
			i = i + 1;
		end;
	end;
				
	return have_removed_entry;
end;













C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\_lib\lib_zone_manager.lua





zone_controller = {
	bm = nil,
	name = "",
	zones = {},
	trigger_area = nil,
	enemy_alliance = nil,
	sunits = {},
	unassigned_sunits = {},
	activation_callback = nil,
	routing_callback = nil,
	candidate_threshold = 2.2,
	retreat_threshold = 0.9,
	is_debug = false,
	is_running = false
};


REASON_ZONE_CONTROLLER_IS_STARTING = 1;
REASON_ZONE_CONTROLLER_UNITS_IN_AREA = 2;
REASON_ZONE_CONTROLLER_UNIT_HAS_TAKEN_DAMAGE = 3;
REASON_ZONE_CONTROLLER_STOPPING_ALL_UNITS_ROUTING = 4;




function zone_controller:new(new_bm, new_name, new_enemy_alliance, new_trigger_area)
	
	-- type check our startup parameters
	
	if not is_battlemanager(new_bm) then
		return false;
	end;
	
	if not is_string(new_name) then
		new_bm:out("Couldn't create Zone Controller: no name given or name invalid");
		
		return false;
	end;
	
	if not is_alliance(new_enemy_alliance) then
		new_bm:out("Couldn't create Zone Controller " .. new_name .. ": no valid enemy alliance given");
		
		return false;
	end;
	
	if not is_convexarea(new_trigger_area) then
		new_bm:out("Couldn't create Zone Controller " .. new_name .. ": no valid trigger area given");
		
		return false;
	end;
	
	zc = {};
	setmetatable(zc, self);
	self.__index = self;
	self.__tostring = function() return TYPE_ZONE_CONTROLLER end;
	
	zc.bm = new_bm;
	zc.name = "Zone_Controller_" .. new_name;
	zc.zones = {};
	zc.trigger_area = new_trigger_area;
	zc.enemy_alliance = new_enemy_alliance;
	zc.sunits = {};
	zc.unassigned_sunits = {};
	zc.is_debug = false;
	zc.is_running = false;

	return zc;
end;


function zone_controller:set_activation_callback(new_callback)
	if not is_function(new_callback) then
		self.bm:out(self.name .. " error : trying to set activation callback but supplied object is not a function");
		
		return false;
	end;
	
	self.activation_callback = new_callback;
end;


function zone_controller:set_routing_callback(new_callback)
	if not is_function(new_callback) then
		self.bm:out(self.name .. " error : trying to set routing callback but supplied object is not a function");
		
		return false;
	end;
	
	self.routing_callback = new_callback;
end;


function zone_controller:set_debug(new_value)
	if new_value == nil then
		self.is_debug = true;
	else
		self.is_debug = new_value;
	end;
end;


function zone_controller:add_zone(new_zone)
	if not is_zonemanager(new_zone) then
		self.bm:out(self.name .. " error: adding zones but object supplied is not a zone, aborting");
			
		return false;
	end;
		
	if self.is_debug then
		self.bm:out(self.name .. " adding zone " .. new_zone.name);
	end;
		
	table.insert(self.zones, new_zone);
end;



function zone_controller:add_sunits(...)
	for i = 1, arg.n do
		if not is_scriptunit(arg[i]) then
			self.bm:out(self.name .. " error: adding sunits but one of the objects supplied is not a script unit, aborting");
			
			return false;
		end;
		
		if self.is_debug then
			self.bm:out(self.name .. " adding sunit " .. tostring(arg[i].unit));
		end;
		
		table.insert(self.sunits, arg[i]);
		table.insert(self.unassigned_sunits, arg[i]);
	end;
end;


function zone_controller:add_sunit(new_sunit, new_zone, dont_move)
	-- check params
	if not is_scriptunit(new_sunit) then
		self.bm:out(self.name .. " error: adding sunit but the object supplied is not a script unit, aborting");
		
		return false;
	end;
	
	if not is_zonemanager(new_zone) then
		self.bm:out(self.name .. " error: adding sunit but the zone supplied to associate it with is not a valid zone manager, aborting");
		
		return false;
	end;
	
	local zone_found = false;
	
	for i = 1, #self.zones do
		if self.zones[i] == new_zone then
			zone_found = true;
			
			break;
		end;	
	end;
	
	if not zone_found then
		self.bm:out(self.name .. " error: adding sunit but the zone supplied to associate it with is not found in this controller, aborting");
		
		return false;
	end;
	
	-- add unit to controller and the zone
	table.insert(self.sunits, new_sunit);
	new_zone:set_occupier(new_sunit);
end;


function zone_controller:get_enemy_alliance()
	return self.enemy_alliance;
end;


function zone_controller:start()
	if self.is_running then
		self.bm:out(self.name .. " error: trying to start controller when it's already running");
			
		return false;
	end;
	
	self.is_running = true;
	
	if self.is_debug then
		self.bm:out(self.name .. " starting");
	end;
	
	for i = 1, #self.zones do
		if self.zones[i]:is_occupied() then
			self.zones[i]:get_occupier().uc:occupy_zone(self.zones[i]:get_centre_pos(), true);
		end;	
	end;
	
	self:deactivate(REASON_ZONE_CONTROLLER_IS_STARTING);
end;


function zone_controller:watch_units_routing()
	-- watch for all units routing and then stop completely
	self.bm:watch(function() return self:all_units_routing() end, 0, function() self:stop(REASON_ZONE_CONTROLLER_STOPPING_ALL_UNITS_ROUTING) end, self.name);
end;


function zone_controller:all_units_routing()
	for i = 1, #self.sunits do
		if not is_unit_routing_or_dead(self.sunits[i].unit) then
			return false;
		end;
	end;

	return true;
end;


function zone_controller:stop(reason)
	self.bm:remove_process(self.name);
	
	if reason == REASON_ZONE_CONTROLLER_STOPPING_ALL_UNITS_ROUTING then
		if self.is_debug then
			self.bm:out(self.name .. " is stopping as all units under its control are routing");
		end;
		
		if is_function(self.routing_callback) then
			self.routing_callback();
		end;
	else
		if self.is_debug then
			self.bm:out(self.name .. " is stopping");
		end;
	end;
end;



function zone_controller:activate(reason)

	if self.is_debug then
		if reason == REASON_ZONE_CONTROLLER_UNITS_IN_AREA then
			self.bm:out(self.name .. " activating as enemy units have been detected in the area");
		elseif reason == REASON_ZONE_CONTROLLER_UNIT_HAS_TAKEN_DAMAGE then
			self.bm:out(self.name .. " activating as some of its units have taken damage");
		else
			self.bm:out(self.name .. " activating for an unknown reason !!!");
		end;
	end;

	self.bm:remove_process(self.name);
		
	-- make all the zones assess their respective threat levels (and continue to assess them)
	local t = 100;
	
	for i = 1, #self.zones do
		self.bm:register_callback(function() self.zones[i]:assess_threat() end, t, self.name);
	
		t = t + 100;
	end;
	
	-- watch each of the sunits and if it's routing, remove it from our pool
	self:check_sunits_health();
	
	-- perform an assessment about how to distribute our units
	self.bm:register_callback(function() self:assess() end, 2000 + t);
	
	-- watch for enemy units leaving area of this zone controller
	self.bm:register_callback(function() self:watch_for_deactivate() end, 5000, self.name);
	
	-- watch for all of our units routing
	self:watch_units_routing();
end;



function zone_controller:watch_for_deactivate()
	self.bm:watch(function() return not self:units_in_area() end, 0, function() self:deactivate() end, self.name);
end;



function zone_controller:check_sunits_health()

	-- self.bm:out("check_sunits_health called");

	-- check for units that are routing
	for i = 1, #self.sunits do
		if is_unit_routing_or_dead(self.sunits[i].unit) then
			-- sunit is routing, remove it and rescan
			self:remove_sunit(self.sunits[i]);
			
			if self.is_debug then
				self.bm:out("\t\t" .. self.name .. " :: found a defending unit that's routing, discarding it");
			end;
			
			-- lower the candidate threshold to make the remaining units move around more freely
			self.candidate_threshold = self.candidate_threshold - 0.15;
			
			self:check_sunits_health();
			
			return;
			
		else
			--bm:out(" unit " .. i .. " isn't routing");
			
			
		end;
	end;
	
	-- bm:out("finished rout check, starting retreat check");
	
	-- check for units that need to retreat
	for i = 1, #self.zones do
	
		--bm:out("checking zone " .. i .. " of " .. #self.zones);
		--bm:out("self.zones[i]:is_occupied() is " .. tostring(self.zones[i]:is_occupied()));		
		
		if self.zones[i]:is_occupied() then
			--bm:out("self.zones[i]:get_occupier().unit:number_of_men_alive() is " .. self.zones[i]:get_occupier().unit:number_of_men_alive());
			--bm:out("self.zones[i]:get_occupier_start_hp() is " .. self.zones[i]:get_occupier_start_hp());
			
			if self.zones[i]:get_occupier().unit:number_of_men_alive() / self.zones[i]:get_occupier_start_hp() < self.retreat_threshold then
				-- unit needs to retreat. Check that there are free zones to accomodate it
				local free_zones = false;
			
				for j = 1, #self.zones do
					if self.zones[j]:is_usable() and not self.zones[j]:is_occupied() and self.zones[j]:get_threat() >= 0 then
						free_zones = true;
					
						break;
					end;
				end;
			
				if free_zones then
					-- Detach it from its zone in data, it will get picked up next time the controller reassesses
					table.insert(self.unassigned_sunits, self.zones[i]:get_occupier());
			
				else
					-- no free zones, set unit to charge!
					local occupier = self.zones[i]:get_occupier();
					occupier.uc:melee(true);
					occupier.uc:attack_unit(Get_Closest_Standing_Unit_Armies(occupier.unit, self.enemy_alliance:armies()), true, true);
					
					-- release to AI in 60 seconds
					self.bm:register_callback(function() occupier.uc:release_control() end, 60000);
					
					self:remove_sunit(occupier);
				end;
			
				self.zones[i]:set_occupier(nil);
				self.zones[i]:set_usable(false);
			end;
		end;
	end;
	
	self.bm:register_callback(function() self:check_sunits_health() end, 6000, self.name);
end;


function zone_controller:remove_sunit(sunit)
	for i = 1, #self.sunits do
		if self.sunits[i] == sunit then
			table.remove(self.sunits, i);
			
			break;
		end;
	end;
	
	for i = 1, #self.unassigned_sunits do
		if self.unassigned_sunits[i] == sunit then
			table.remove(self.unassigned_sunits, i);
			
			break;
		end;
	end;
	
	for i = 1, #self.zones do
		if self.zones[i]:get_occupier() == sunit then
			self.zones[i]:set_occupier(nil);
			self.zones[i]:set_usable(false);
			
			break;
		end
	end;
end;



function zone_controller:assess()

																--bm:out("zone_controller:assess called");

	-- sort our zone list by threat
	self:sort_zone_list();
	
	-- move through our zones in desc threat order, finding the first that's not occupied and attempting to reinforce it
	self:reassign_sunits()
	
	self.bm:register_callback(function() self:assess() end, 5500, self.name);
end;


function zone_controller:sort_zone_list()

																-- bm:out("\t\t\t\tzone_controller:sort_zone_list called");

	local new_zones = {};	
	local n = #self.zones;
	local current_threat = 0;
	local highest_threat = -1000000;
	local highest_threat_zone = -1;
		
	for i = 1, n do
		highest_threat = -1000000;
		highest_threat_zone = -1;
																--bm:out("\t\t\t\twriting new_zone " .. i .. " of " .. n);
		
		for j = 1, #self.zones do
																--bm:out("\t\t\t\t\tscanning self.zone entry " .. j .. " of " .. #self.zones);
			current_threat = self.zones[j]:get_threat();
			
																--bm:out("\t\t\t\t\tcurrent_threat is " .. tostring(current_threat) .. ", highest_threat is " .. tostring(highest_threat));
		
			if current_threat > highest_threat then
				highest_threat = current_threat;
				highest_threat_zone = j;
				
																--bm:out("\t\t\t\t\t\t(This is the highest threat so far)");
			end;
		end;
		
		-- trap us not finding a highest threat zone
		if highest_threat_zone == -1 then
			self.bm:out(self.name .. ":sort_zone_list() did not find a highest threat zone, this is bad! Setting highest_threat_zone to 1");
			highest_threat_zone = 1;
		end;
																--bm:out("\t\t\t\t\t\tWriting zone " .. highest_threat_zone .. " to new_zones");
		
		table.insert(new_zones, self.zones[highest_threat_zone]);
		table.remove(self.zones, highest_threat_zone);
		
		--[[
		bm:out("\t\t\t\t\t\t\tPrinting new_zones table:-");
	
		for k = 1, #new_zones do
			bm:out("\t\t\t\t\t\t\tzone " .. k .. " of " .. #new_zones .. ", zone name is " .. new_zones[k].name .. " and threat is " .. tostring(new_zones[k]:get_threat()));
		end;
		
		bm:out("\t\t\t\t\t\t\tPrinting self.zones table:-");
	
		for k = 1, #self.zones do
			bm:out("\t\t\t\t\t\t\tzone " .. k .. " of " .. #self.zones .. ", zone name is " .. self.zones[k].name .. " and threat is " .. tostring(self.zones[k]:get_threat()));
		end;
		]]
		
		
		
	end;
		
	self.zones = new_zones;
	--[[
	bm:out("\t\t\t\tFinished everything, setting self.zones = new_zones, #self.zones is now " .. #self.zones .. ", this should be the same as n which is " .. n);
	bm:out("\t\t\t\tPrinting new self.zones table:-");
	
	for i = 1, #self.zones do
		bm:out("\t\t\t\t\tzone " .. i .. " of " .. #self.zones .. ", zone name is " .. self.zones[i].name .. " and threat is " .. tostring(self.zones[i]:get_threat()));
	end;
	]]
	
	if self.is_debug then
		local current_zone = nil;
		local output = self.name .. " threat list :: ";
	
		for i = 1, #self.zones do
			current_zone = self.zones[i];
			output = output .. "  (" .. current_zone.name .. ": " .. tostring(current_zone:get_threat());
			
			if current_zone:is_usable() then
				output = output .. ")";
			else
				output = output .. " <ZONE NOT USABLE>)";
			end;
		end;
		self.bm:out(output);
	end;
end;



function zone_controller:reassign_sunits()

	-- find the occupied zone with the lowest threat

	local lowest_threat = 5000;
	local current_threat = 0;
	
	for i = 1, #self.zones do
		if self.zones[i]:is_occupied() then
			current_threat = self.zones[i]:get_threat();
			
			if current_threat < lowest_threat then
				lowest_threat = current_threat;
			end;
		end;
	end;

	for i = 1, #self.zones do
		if self.zones[i]:is_usable() and not self.zones[i]:is_occupied() and self.zones[i]:get_threat() > lowest_threat then
			self:find_reinforcement(i);
			
			--return;
		end;
	end;
end;



function zone_controller:find_reinforcement(index)

																	--bm:out("\t\t\t\tzone_controller:find_reinforcement called, index is " .. index);

																	--bm:out("\t\t\t\tchecking self.unassigned_units, size is " .. #self.unassigned_sunits);
	
	-- check our unassigned sunit list first
	if #self.unassigned_sunits > 0 then
		-- we have unassigned sunits, get the closest one
		
		local current_distance = 0;
		local closest_distance = 5000;
		local closest_sunit = nil;
		local closest_index = 0;
		
		for i = 1, #self.unassigned_sunits do
		
			current_distance = self.unassigned_sunits[i].unit:position():distance(self.zones[index]:get_centre_pos());
			
																	--bm:out("\t\t\t\t\tchecking distance of unassigned unit " .. i .. " of " .. #self.unassigned_sunits);
																	--bm:out("\t\t\t\t\tcurrent_distance is " .. current_distance .. ", closest distance is currently " .. closest_distance);
		
			if current_distance < closest_distance then
																	--bm:out("\t\t\t\t\t\tmaking this the closest unit");
				closest_distance = current_distance;
				closest_sunit = self.unassigned_sunits[i];
				closest_index = i;
			end;
		end;
		
																	--bm:out("\t\t\t\t\tsending unit " .. closest_index .. " to occupy current zone (position is " .. v_to_s(self.zones[index]:get_centre_pos()) .. ")");
		
		-- assign closest unit to the zone
		closest_sunit.uc:occupy_zone(self.zones[index]:get_centre_pos(), true);
		self.zones[index]:set_occupier(closest_sunit);
		table.remove(self.unassigned_sunits, closest_index);
		
		if self.is_debug then
			self.bm:out(self.name .. " trying to find reinforcement for zone " .. self.zones[index].name .. ", sending unoccupied unit at " .. v_to_s(closest_sunit.unit:position()));
		end;
		
																	--bm:out("\t\t\t\t\trescanning ...");
		
		-- rescan everything
		--self:reassign_sunits();
		
		return;
	end;
	

	
																	--bm:out("\t\t\t\tcan't get an unassigned unit, building a list of candidate reassignments");
	
	-- build a list of zones that are occupied but have less threat than the current zone
	local candidate_reassignments = {};
	
	for i = index + 1, #self.zones do
	
																	--bm:out("\t\t\t\tlooking at zone " .. i .. " of " .. #self.zones .. ", zone is " .. self.zones[i].name);
																	
																	--bm:out("\t\t\t\t\tzone is occupied: " .. tostring(self.zones[i]:is_occupied()) .. ", zone is usable: " .. tostring(self.zones[i]:is_usable()));
	
		if self.zones[i]:is_occupied() and self.zones[i]:is_usable() then
																	--bm:out("\t\t\t\t\t\tAdding this zone to our candidate reassignments");
			table.insert(candidate_reassignments, self.zones[i]);
		end;
	end;
	
	-- if we didn't find any candidates then exit
	if #candidate_reassignments == 0 then
																	--bm:out("\t\t\t\tWe have no candidate reassignments, exiting");
		if self.is_debug then
			
			self.bm:out(self.name .. " trying to find reinforcement for zone " .. self.zones[index].name .. " .. but did not find any candidate reassignments, exiting");
		end
	
		return;
	end;
	
																	--bm:out("\t\t\t\tWe have candidate reassignments");
	
	-- go through our list of potentials and decide whether to take any of them
	
	local candidate = nil;
	local candidate_pos = nil;
	local current_score = 0;
	local current_distance = 0;
	local highest_score = -1;
	local highest_score_index = 0;
	local highest_score_distance = 0;
	
	local target_threat = self.zones[index]:get_threat();
	
	for i = 1, #candidate_reassignments do
	
		candidate = candidate_reassignments[i];
	
																	--bm:out("\t\t\t\t\tExamining candidate reassignment " .. i .. " of " .. #candidate_reassignments);
																	--bm:out("\t\t\t\t\t\tcandidate is (expect zone) : " .. tostring(candidate));
																	
		
		candidate_pos = candidate:get_occupier().unit:position();
		
		current_distance = candidate_pos:distance(self.zones[index]:get_centre_pos())
		current_score = 100 * ((target_threat - candidate:get_threat()) / current_distance);
		
		-- if there is an enemy stood closer than our candidate is to the target zone then apply a score penalty
		-- this is to try to prevent our units from repositioning to a zone when that zone position is under fire
		
		if Get_Closest_Standing_Unit_Alliance_Point(self.zones[index]:get_centre_pos(), self.enemy_alliance):position():distance(self.zones[index]:get_centre_pos()) < current_distance then
			current_score = current_score / 2;
		end;
		

																	--bm:out("\t\t\t\t\t\tcandidate_pos = " .. v_to_s(candidate_pos));
																	--bm:out("\t\t\t\t\t\tcandidate:get_threat() = " .. tostring(candidate:get_threat()));
																	--bm:out("\t\t\t\t\t\tcurrent_score = " .. current_score);
																	--bm:out("\t\t\t\t\t\thighest_score = " .. highest_score);
																	
		if current_score > highest_score then
																	--bm:out("\t\t\t\t\t\t\t(this is the highest score)");
			highest_score = current_score;
			highest_score_index = i;
			highest_score_distance = current_distance;
		elseif current_score == highest_score then
			-- if the two scores are equal (usually when both zones have a threat of zero) then take the lowest distance
			-- this means we get the closest of the occupied zones as the best candidate (if all are threat zero)
		
			if current_distance < highest_score_distance then
				highest_score = current_score;
				highest_score_index = i;
				highest_score_distance = current_distance;
			end;
		end;
	end;	
	
	--[[
	
	-- now we have the best candidate, normalise its score
	local threat_difference = self.zones[index]:get_threat() - candidate_reassignments[highest_score_index]:get_threat();
	
	-- current_score is now an indication of the threat difference between the subject zone and the candidate zone,
	-- factoring in the distance between them. The current_score is 1 per threat difference at 100m
	current_score = 100 * threat_difference / highest_score_distance;
	
																--bm:out("\t\t\t\tWe have the best candidate (highest_score_index is " .. highest_score_index .. "), threat_difference is " .. threat_difference);
																--bm:out("\t\t\t\tNormalised score is " .. current_score .. ", self.candidate_threshold is " .. self.candidate_threshold);
	]]
	
	if self.is_debug then
		self.bm:out(self.name .. " trying to find reinforcement for zone " .. self.zones[index].name .. ", we have found a best candidate : " .. candidate_reassignments[highest_score_index].name .. " with a threat difference of " .. (target_threat - candidate_reassignments[highest_score_index]:get_threat()) .. ", a distance of " .. highest_score_distance .. " giving a score of " .. highest_score .. ", candidate_threshold is currently " .. self.candidate_threshold);
	end
	
	-- do we move the candidate zone's unit?
	if highest_score > self.candidate_threshold then
																--bm:out("\t\t\t\tMoving unit");
		
		self:move_sunit(candidate_reassignments[highest_score_index], self.zones[index]);
		
		-- rescan everything now that the move is done
		--self:reassign_sunits();
	else
																--bm:out("\t\t\t\tNot moving unit");
	end;
end;




function zone_controller:move_sunit(source, dest)
	if self.is_debug then
		self.bm:out(self.name .. " moving unit from " .. source.name .. " (zone pos: " .. v_to_s(source:get_centre_pos()) .. ", unit pos: " .. v_to_s(source:get_occupier().unit:position()) .. ") to " .. dest.name .. " (zone pos: " .. v_to_s(dest:get_centre_pos()));
	end;

	source:get_occupier().uc:occupy_zone(dest:get_centre_pos(), true);
	
	dest:set_occupier(source:get_occupier());
	source:set_occupier(nil);
end;


function zone_controller:deactivate(reason)
	if self.is_debug then
		if not reason == REASON_ZONE_CONTROLLER_IS_STARTING then
			self.bm:out(self.name .. " no enemies in area, deactivating");
		end;
	end;
	
	-- make all zones in the controller usable again
		
	for i = 1, #self.zones do
		self.zones[i]:set_usable(true);
	end;
	
	self.bm:remove_process(self.name);

	-- watch for activation
	self.bm:register_callback(function() self:watch_for_activate() end, 5000, self.name);
	
	-- watch for all of our units routing
	self:watch_units_routing();
end;


function zone_controller:watch_for_activate()
	self.bm:watch(function() return self:units_in_area() end, 0, function() self:activate(REASON_ZONE_CONTROLLER_UNITS_IN_AREA) end, self.name);
	
	-- monitor the hp of all our units while 'offline' to see if they're being shelled
	self:update_unit_monitor();
	
	self.bm:watch(function() return self:sunits_have_taken_damage() end, 0, function() self:activate(REASON_ZONE_CONTROLLER_UNIT_HAS_TAKEN_DAMAGE) end, self.name);
end;


function zone_controller:update_unit_monitor()
	for i = 1, #self.sunits do
		self.sunits[i].last_size = self.sunits[i].unit:number_of_men_alive();
	end;
	
	self.bm:register_callback(function() self:update_unit_monitor() end, 3000, self.name);
end;


-- have sunits in this controller taken damage since they were last looked at
function zone_controller:sunits_have_taken_damage()
	for i = 1, #self.sunits do
		if self.sunits[i].unit:number_of_men_alive() < self.sunits[i].last_size then
			return true;
		end;
	end;
	
	return false;
end;


function zone_controller:units_in_area()
	local armies = self.enemy_alliance:armies();
	local army = nil;
	local reinforcement_units = nil;
	
																--bm:out("units_in_area called");

	for i = 1, armies:count() do
		army = armies:item(i);
				
																--bm:out("\ttesting army " .. i .. " :: self.trigger_area:units_in_area(army:units()) is " .. self.trigger_area:units_in_area(army:units()) .. " and self.trigger_area:units_in_area(army:get_reinforcement_units()) is " .. self.trigger_area:units_in_area(army:get_reinforcement_units()));
		reinforcement_units = army:get_reinforcement_units();
																
		if self.trigger_area:units_in_area(army:units()) > 0 or (is_units(reinforcement_units) and self.trigger_area:units_in_area(reinforcement_units) > 0) then
																--bm:out("\t\treturning true");
			return true;
		end;
	end;
	
																--bm:out("\t\treturning false");
	return false;
end;










zone_manager = {
	bm = nil,
	name = "",
	controller = nil,
	points = {},
	centre_pos = nil,
	threat = 0,
	occupier = nil,
	usable = true,
	preferred = false,
	is_debug = false,
	preferred_modifier = 1.25,
	max_line_distance = 250,
	max_negative_line_distance = -100,
	max_dist_score = 2,
	max_norm_distance = 100,
	max_norm_score = 2
};


function zone_manager:new(new_bm, new_name, new_controller, new_centre_pos)

	-- type check our startup parameters
	
	if not is_battlemanager(new_bm) then
		return false;
	end;
	
	if not is_string(new_name) then
		new_bm:out("Couldn't create Zone Manager: no name given or name invalid");
		
		return false;
	end;
	
	if not is_zonecontroller(new_controller) then
		new_bm:out("Couldn't create Zone Manager " .. new_name .. ": no valid zone controller given");
		
		return false;
	end;
	
	if not is_vector(new_centre_pos) then
		new_bm:out("Couldn't create Zone Manager " .. new_name .. ": no valid centre position given");
		
		return false;
	end;

	
	zm = {};
	setmetatable(zm, self);
	self.__index = self;
	self.__tostring = function() return TYPE_ZONE_MANAGER end;
	
	zm.bm = new_bm;
	zm.name = "Zone_Manager_" .. new_name;
	zm.controller = new_controller;
	zm.centre_pos = new_centre_pos;
	zm.points = {};
	zm.threat = 0;
	zm.usable = true;
	zm.preferred = false;
	zm.is_debug = new_controller.is_debug;
	
	-- register the zone manager to the controller
	zm.controller:add_zone(zm);

	return zm;
end;


function zone_manager:set_points(...)
	for i = 1, arg.n do
		if not is_vector(arg[i]) then
			self.bm:out(self.name .. " error : trying to add points but one of the supplied objects is not a vector, aborting");
		
			return false;
		end;
	
		table.insert(self.points, arg[i]);
	end;
end;


function zone_manager:set_usable(value)
	if not is_bool(value) then
		value = true;
	end;

	self.usable = value;
end;


function zone_manager:get_threat()
	return self.threat;
end;


function zone_manager:get_centre_pos()
	return self.centre_pos;
end;


function zone_manager:is_occupied()
	if self.occupier then
		return true;
	end;
	
	return false;
end;


function zone_manager:is_usable()
	return self.usable;
end;


function zone_manager:set_preferred(new_value)
	if new_value == nil then
		self.preferred = true;
	else
		self.preferred = new_value;
	end;
end;


function zone_manager:is_preferred()
	return self.preferred;
end;


function zone_manager:set_occupier(sunit)
	if is_scriptunit(sunit) then
		self.occupier = sunit;
		self.occupier_start_hp = sunit.unit:number_of_men_alive();
	else
		self.occupier = nil;
		self.occupier_start_hp = 0;
	end;
end;


function zone_manager:get_occupier()
	return self.occupier;
end;


function zone_manager:get_occupier_start_hp()
	return self.occupier_start_hp;
end;


function zone_manager:assess_threat()
	if not self.usable then
		self.threat = 0;
		
		return;
	end;

	local enemy_alliance = self.controller:get_enemy_alliance();
	local armies = nil;
	local score = 0;
	
	-- for each army in the enemy alliance
	armies = enemy_alliance:armies();
	
						-- bm:out("\tzone_manager:assess_threat called");
	
	for i = 1, armies:count() do
						-- bm:out("\ttesting army " .. i .. " of " .. armies:count());
	
		-- add the scores for the units in that army to the cumulative score
		score = score + self:assess_threat_by_units(armies:item(i):units()) + self:assess_threat_by_units(armies:item(i):get_reinforcement_units());
		
						-- bm:out("\tscore is now " .. score);
	end;
	
	--if self.is_debug then
	--	self.bm:out("\t\t" .. self.name .. " :: reassessing threat, new value is " .. score);
	--end;

	self.threat = score;
	
	self.bm:register_callback(function() self:assess_threat() end, 5000, self.controller.name);
end;




function zone_manager:assess_threat_by_units(units)

	-- guard against rogue parameters
	if not is_units(units) then
		return 0;
	end;

	local retval = 0;
	
	--[[
	local highest_score;
	local current_score;
	]]
	
	local cumulative_score;
		
	local line_a;
	local line_b;
	local line_pointer;
	
	
							-- bm:out("\t\tassess_threat_by_units called");
	
	-- for each unit in this collection
	for i = 1, units:count() do
		
		--[[		
		highest_score = 0;
		current_score = 0;
		]]
		
		cumulative_score = 0;
		
	
		-- for each pair of points in the line, calculate threat and then take the most extreme
		for j = 1, (#self.points - 1) do
			line_a = self.points[j];
			line_b = self.points[j + 1];
			
							-- bm:out("\t\ttesting unit " .. i .. " of " .. units:count() .. " against line " .. j .. " of " .. (#self.points - 1) .. ", line ends are " .. v_to_s(line_a) .. " and " .. v_to_s(line_b));
		
			cumulative_score = cumulative_score + self:assess_threat_to_line(units:item(i):position(), line_a, line_b);
			
			-- complicated rules about which threat we take:
			-- if all the lines report a negative threat then we take the lowest of these
			-- otherwise we take the highest positive threat
			
			--[[
			if retval > 0 then
				if current_score > highest_score then
					-- bm:out("\t\tThis is the most extreme score so far");
					highest_score = current_score;
				end;
			else
				if math.abs(current_score) > math.abs(highest_score) then
					-- bm:out("\t\tThis is the most extreme score so far");
					highest_score = current_score;
				end;
			end;
			]]
			
			
		end;
		
		-- average out the cumulative score by the number of line segments we just considered
		cumulative_score = cumulative_score / (#self.points - 1);
	
		retval = retval + cumulative_score;
		
							-- bm:out("\t\tScore for this unit is " .. highest_score .. ", retval is now " .. retval);
	end;
	
							-- bm:out("\t\tFinished assess_threat_by_units, returning a threat of " .. retval);
	
	return retval;
end;




function zone_manager:assess_threat_to_line(pos, line_a, line_b)

							-- bm:out("\t\t\tassess_threat_to_line called, line is " .. v_to_s(line_a) .. " to " .. v_to_s(line_b) .. " and the position we're testing is " .. v_to_s(pos));

			
	-- get distance from line to position
	local line_distance = Distance_To_Line(line_a, line_b, pos);
	
	-- if this distance is negative and far away then the position is behind the line, return 0
	if line_distance < self.max_negative_line_distance then
							-- bm:out("\t\t\t\tline distance " .. line_distance .. " is less than -100, returning zero");
		return 0;
	end;
	
	-- get centrepoint of line
	local line_centre = centre_point_table({line_a, line_b});
	
	-- take normal of line_centre -> line_a	
	local line_centre_normal = Normal(line_centre, line_a)
	
	-- get absolute distance from pos to line_centre / line_centre_normal
	local normal_distance = math.abs(Distance_To_Line(line_centre, line_centre_normal, pos));
	
	if line_distance > self.max_line_distance then
							-- bm:out("\t\t\t\tline_distance " .. line_distance .. " is greater than max_line_distance " .. self.max_line_distance .. ", returning zero");
							
		return 0;
	end;
	
	
	if normal_distance > self.max_norm_distance then
							-- bm:out("\t\t\t\tnormal_distance " .. normal_distance .. " is greater than max_norm_distance " .. self.max_norm_distance .. ", returning zero");
							
		return 0;
	end;
				
	local normal_score = self.max_norm_score - ((normal_distance * self.max_norm_score) / self.max_norm_distance);
	
	local dist_score = self.max_dist_score - ((math.abs(line_distance) * self.max_dist_score) / self.max_line_distance);
	
	local threat = dist_score * normal_score;
	
	-- if the position was behind the line and we have survived this far into the calculation, make the threat triple negative
	if line_distance < 0 then
		threat = 0 - (3 * threat);
	end;
	
	if self.preferred then
		threat = threat * self.preferred_modifier;
	end;
	
	-- if pos is within 40m, then apply a negative modifier as we don't really want to go here
	if ((line_distance ^ 2) + (normal_distance ^ 2)) < 1600 then
		threat = threat - 3;
	end;
	
							-- bm:out("\t\t\t\tfinished calcs for line, line distance is " .. line_distance .. " (score is " .. dist_score .. ") and normal_distance is " .. normal_distance .. " (score is " .. normal_score .. "), returning threat of " .. threat);
		
	return threat;
end;











C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\al_alesia\al_attack.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	ATTACKING SCRIPT
--	Determines behaviour of Gauls as they attack
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

__barricade_attack_group_debug = false;
__barricade_attack_group_attacker_type_whitelist = {};

BARRICADE_ATTACK_GROUP_NO_ACTION = 0;
BARRICADE_ATTACK_GROUP_MOVING_TOWARDS_BARRICADES = 1;
BARRICADE_ATTACK_GROUP_ATTACKING_OBSTRUCTION = 2;
BARRICADE_ATTACK_GROUP_ATTACKING_BARRICADES = 3;
BARRICADE_ATTACK_GROUP_ATTACKING_ENEMY = 4;
BARRICADE_ATTACK_GROUP_IS_ROUTING = 5;


barricade_attack_group = {
	bm = nil,											-- battlemanager
	name = "",											-- unique name for this bag
	planner = nil,										-- script_ai_planner that this bag commandeers, contains the subject units
	barricade_list = {},								-- list of buildings that this bag is assigned to attack
	enemy_force = {},									-- list of units this bag should consider as enemies
	end_callback = nil,									-- this callback gets called if this planner destroys all its target buildings
	is_debug = false,									-- sets the planner into debug mode						
	detached_sunits = {},								-- list of sunits that this bag has detached from its planner in order to attack the buildings with
	current_target_sunit = nil,							-- current target, if the enemy are obstructing the route to the barricades
	barricade_centre_point = nil,						-- centrepoint of all the barricade buildings
	barricade_movement_point = nil,						-- point the planner is ordered to when moving towards the barricades - this is offset from the centre point
	barricade_to_planner_offset = 80,					-- distance of the above offset from the barricade centre in the direction of the planner
	barricade_centre_point_arrival_modifier = 200,		-- threshold in m within which the planner is adjudged to have arrived at the centre point
	barricade_movement_point_arrival_modifier = 150,	-- threshold in m within which the planner is adjudged to have arrived at the movement point
	barricades_under_attack = 0,						-- number of barricades under attack, bag completes when each attack completes
	current_action = BARRICADE_ATTACK_GROUP_NO_ACTION,	-- what the bag is currently doing
	update_time = 10000,								-- how often the bag should update
	sunit_proximity_modifier = 30,						-- an enemy sunit has to be this much closer to the planner centre than any of the barricades to get the bag's attention
	first_contact_callback = nil,						-- callback to call when the bag first makes contact with a target
	first_contact_callback_called = false,				-- has the first contact callback been called
	reattack_period = 10000,							-- units attacking barricades have their orders reissued on this period
	barricades_breached = false,						-- set to true when first barricade falls, planner attacks thereafter
	barricade_storm_time = 20000,						-- time that each unit will storm its barricade for after the barricade has fallen until being given back to the planner
	interception_point = nil,							-- planner centre when an enemy unit is intercepted
	max_pursuit_distance = 75							-- maximum distance the bag can pursue an obstructive enemy for
};


function barricade_attack_group:new(new_name, new_planner, new_barricade_list, new_enemy_force, new_end_callback)
	
	-- check params
	if not is_string(new_name) then
		script_error("ERROR: attempted to create barricade_attack_group but supplied name [" .. tostring(new_name) .. "] is not a string");
		return false;
	end;
	
	if not is_scriptaiplanner(new_planner) then
		script_error(new_name .. " ERROR: attempted to create barricade_attack_group but supplied planner [" .. tostring(new_planner) .. "] is not a script_ai_planner");
		return false;
	end;
	
	if not is_table(new_barricade_list) then
		script_error(new_name .. " ERROR: attempted to create barricade_attack_group but supplied barricade list [" .. tostring(new_barricade_list) .. "] is not a table");
		return false;
	end;
	
	-- check barricade list to ensure all objects are buildings
	for i = 1, #new_barricade_list do
		local curr_barricade = new_barricade_list[i];
		if not is_building(curr_barricade) then
			script_error(new_name .. " ERROR: attempted to create barricade_attack_group but object " .. i .. " in supplied barricade list is not a building but a [" .. tostring(curr_barricade) .. "]");
			return false;
		end;
	end;
	
	if not is_table(new_enemy_force) then
		script_error(new_name .. " ERROR: attempted to create barricade_attack_group but supplied enemy force [" .. tostring(new_enemy_force) .. "] is not a table");
		return false;
	end;
	
	-- check enemy force to ensure all objects are scriptunits
	for i = 1, #new_enemy_force do
		local curr_enemy = new_enemy_force[i];
		if not is_scriptunit(curr_enemy) then
			script_error(new_name .. " ERROR: attempted to create barricade_attack_group but object " .. i .. " in supplied enemy force is not a scriptunit but a [" .. tostring(curr_enemy) .. "]");
			return false;
		end;
	end;
	
	if not is_nil(new_end_callback) and not is_function(new_end_callback) then
		script_error(new_end_callback .. " ERROR: attempted to create barricade_attack_group but callback supplied [" .. tostring(new_end_callback) .. "] is not a function or nil");
		return false;
	end;

	local bag = {};
	
	setmetatable(bag, self);
	self.__index = self;
	self.__tostring = function() return TYPE_BARRICADE_ATTACK_GROUP end;
	
	bag.bm = get_bm();
	bag.name = "Barricade_Attack_Group_" .. new_name;
	bag.planner = new_planner;
	bag.barricade_list = new_barricade_list;
	bag.enemy_force = new_enemy_force;
	bag.end_callback = new_end_callback;
	bag.detached_sunits = {};	
	
	-- calculate barricade centre point
	local centre_point = centre_point_table(new_barricade_list);
	bag.barricade_centre_point = centre_point;

	bag.bm:out(new_name .. ": creating new barricade attack group, centre_point is " .. v_to_s(centre_point));
	
	return bag;
end;


function barricade_attack_group:set_debug(value)
	if value or value == nil then
		self.is_debug = true;
	else
		self.is_debug = false;
	end;
	
	self.planner:set_debug(value);
end;


function barricade_attack_group:set_debug_all(value)
	if value or value == nil then
		__barricade_attack_group_debug = true;
	else
		__barricade_attack_group_debug = false;
	end;
	
	self.planner:set_debug_all(value);
end;


function barricade_attack_group:set_first_contact_callback(callback)
	if not is_function(callback) and not is_nil(callback) then
		self.bm:out(self.name .. " ERROR: set_first_contact_callback() called but supplied callback [" .. tostring(callback) .. "] is not a function or nil");
		return false;
	end;
	
	self.first_contact_callback = callback;
end;


function barricade_attack_group:add_attacker_to_whitelist(attacker_type)
	if not is_string(attacker_type) then
		script_error(self.name .. " ERROR: add_attacker_to_whitelist() called but supplied attacker_type [" .. tostring(attacker_type) .. "] is not a string");
		return false;
	end;
	
	if not __barricade_attack_group_attacker_type_whitelist[attacker_type] then
		__barricade_attack_group_attacker_type_whitelist[attacker_type] = true;
	end;
end;


function barricade_attack_group:call_first_contact_callback()
	if not self.first_contact_callback_called then
		self.first_contact_callback_called = true;
	
		if is_function(self.first_contact_callback) then
			self.first_contact_callback();
		end;
	end;
end;



function barricade_attack_group:start()
	if self.is_debug or __barricade_attack_group_debug then
		self.bm:out(self.name .. " is starting");
	end;
	
	-- if the controlled units rout then stop
	self.bm:watch(
		function()
			return not self.planner:any_controlled_sunit_standing()
		end,
		0,
		function()
			self:stop(BARRICADE_ATTACK_GROUP_IS_ROUTING);
		end,
		self.name .. "_Rout_Watch"
	);
	
	self:update();
end;


function barricade_attack_group:stop(reason)
	self.bm:remove_process(self.name .. "_Update");
	self.bm:remove_process(self.name .. "_Rout_Watch");
	self.bm:remove_process(self.name);
	
	if self.is_debug or __barricade_attack_group_debug then
		if reason == BARRICADE_ATTACK_GROUP_ATTACKING_ENEMY then
			self.bm:out(self.name .. " is stopping as all barricades are destroyed");
		else
			self.bm:out(self.name .. " is stopping");
		end;
	end;
	
	-- reattach all our units and send them off to attack the enemy
	self:reattach_all_sunits();
	
	self.planner:attack_force(self.enemy_force);
	
	if (reason == BARRICADE_ATTACK_GROUP_ATTACKING_ENEMY or reason == BARRICADE_ATTACK_GROUP_IS_ROUTING) and is_function(self.end_callback) then
		self.end_callback();
	end;
end;



function barricade_attack_group:reattach_all_sunits()
	if #self.detached_sunits > 0 then
		self.planner:add_sunits(self.detached_sunits);
		self.detached_sunits = {};
	end;
end;



function barricade_attack_group:can_continue_pursuit(planner_centre)
	if not self.interception_point then
		return true;	
	end;

	return (planner_centre:distance_xz(self.interception_point) < self.max_pursuit_distance);
end;



function barricade_attack_group:update()
	self.bm:remove_process(self.name .. "_Update");
	
	-- work out if we need to move towards the barricade point
	local planner_centre = self.planner:get_centre_point();
	
	if not planner_centre then
		-- the planner is empty, so we have to calculate the centre from the detached sunits
		if #self.detached_sunits == 0 then
			script_error(self.name .. " ERROR: trying to calculate the planner centre but can't find any units under our control?");
		end;
		
		planner_centre = centre_point_table(self.detached_sunits);
	end;
	
	-- work out a point near the barricades to move to (if it hasn't been already)
	if not self.barricade_movement_point then
		self:calculate_barricade_movement_point(planner_centre);
	end;
	
	local planner_to_barricade_centre_distance = planner_centre:distance(self.barricade_centre_point);
	local planner_to_barricade_movement_distance = planner_centre:distance(self.barricade_movement_point);
	
	if planner_to_barricade_centre_distance < self.barricade_centre_point_arrival_modifier or planner_to_barricade_movement_distance < self.barricade_movement_point_arrival_modifier then
		
		--
		-- we are close enough to the barricades to peel units off and attack them
		--
		
		-- see if there's an enemy closer than our target barricades - if so, we hit them first
		-- caveat is that we must not be being kited from our mission
		local target_sunit = self:get_pre_barricade_target();
		
		if is_scriptunit(target_sunit) and self:can_continue_pursuit(planner_centre) then
			--
			-- we have a sunit that's closer than our barricade targets, attack it if we aren't already
			--
			
			if self.current_action == BARRICADE_ATTACK_GROUP_ATTACKING_OBSTRUCTION and target_sunit == self.current_target_sunit then		
				-- we are already attacking this unit, do nothing
			else				
				-- attack this obstructing unit
				self:attack_obstruction(target_sunit, planner_centre);
			end;
		else
		
			--
			-- there is no obstructing unit, so attack the barricades if we aren't already
			--
		
			if self.current_action ~= BARRICADE_ATTACK_GROUP_ATTACKING_BARRICADES then		
				self:attack_barricades(planner_centre, planner_to_barricade_centre_distance, planner_to_barricade_movement_distance);
			end;
		end;
	else
			
		--
		-- we are not close enough to the barricades to start targeting them yet, so
		-- move towards them if we're not already
		--
		if self.current_action ~= BARRICADE_ATTACK_GROUP_MOVING_TOWARDS_BARRICADES then
			self:move_towards_barricades(planner_centre, planner_to_barricade_centre_distance, planner_to_barricade_movement_distance);
		end;
	end;
	
	-- update again in a while
	self.bm:callback(function() self:update() end, self.update_time, self.name .. "_Update");
end;



-- calculate a point between the planner and the barricades to which the planner can be ordered to.
-- If it's ordered too close units may be ordered to the far side of the barricade which will look broken.
function barricade_attack_group:calculate_barricade_movement_point(planner_centre)
	if self.barricade_movement_point then
		return;
	end;
	
	self.barricade_movement_point = position_along_line(self.barricade_centre_point, planner_centre, self.barricade_to_planner_offset);
	
	if self.is_debug or __barricade_attack_group_debug then
		self.bm:out(self.name .. " calculating barricade movement point to be " .. v_to_s(self.barricade_movement_point));
	end;
end;




-- there is a unit between us and the barricades, attack it
function barricade_attack_group:attack_obstruction(target_sunit, planner_centre)
	if is_routing_or_dead(target_sunit) then
		script_error(self.name .. " ERROR: attack_obstruction() called but supplied target [" .. target_sunit.name .. "] is routing");
		return false;
	end;
	
	if self.is_debug or __barricade_attack_group_debug then
		self.bm:out(self.name .. " is attacking obstructing unit " .. target_sunit.name .. " outside of the barricades at " .. v_to_s(target_sunit.unit:position()));
	end;

	self.current_action = BARRICADE_ATTACK_GROUP_ATTACKING_OBSTRUCTION;
	
	self.interception_point = planner_centre;
	
	self.bm:remove_process(self.name);
		
	self.current_target_sunit = target_sunit;
	
	self:reattach_all_sunits();

	-- attack this unit. If it routs, clear the current_target_sunit and update
	self.planner:move_to_position_of_sunit(target_sunit, function() self.current_target_sunit = nil; self:update() end);
		
	self:call_first_contact_callback();
end;



-- we are far away from the barricades so move towards them
function barricade_attack_group:move_towards_barricades(planner_centre, planner_to_barricade_centre_distance, planner_to_barricade_movement_distance)
	self.current_action = BARRICADE_ATTACK_GROUP_MOVING_TOWARDS_BARRICADES;
	
	self.bm:remove_process(self.name);
	
	self.interception_point = nil;
	
	if self.is_debug or __barricade_attack_group_debug then
		self.bm:out(self.name .. " is moving towards barricade movement point " .. v_to_s(self.barricade_movement_point) .. " from " .. v_to_s(planner_centre) .. " (dist:" .. planner_to_barricade_movement_distance .. "), barricade centre is at " .. v_to_s(self.barricade_centre_point) .. " (dist:" .. planner_to_barricade_centre_distance .. ")");
	end;
	
	self:reattach_all_sunits();
	
	if not self.barricades_breached then
		local spread = self.barricade_movement_point:distance(self.barricade_centre_point);
		self.planner:defend_position(self.barricade_movement_point, spread);
	else
		self.planner:attack_force(self.enemy_force);
	end;
end;



-- we are close to the barricades, so peel units off and attack them
function barricade_attack_group:attack_barricades(planner_centre, planner_to_barricade_centre_distance, planner_to_barricade_movement_distance)
	self.current_action = BARRICADE_ATTACK_GROUP_ATTACKING_BARRICADES;
	
	self.bm:remove_process(self.name);
	
	self:reattach_all_sunits();
	
	self:call_first_contact_callback();
	
	self.interception_point = nil;
	
	-- make a list of units that can attack the barricades
	local eligible_attackers = {};
	local sunit_list = self.planner.sunit_list;
	
	for i = 1, #sunit_list do
		local current_sunit = sunit_list[i];
		
		-- redo
		if self:can_attack_barricades(current_sunit) then
			table.insert(eligible_attackers, current_sunit);
		end;
	end;
	
	-- if we have no eligible attackers, exit
	if #eligible_attackers == 0 then
		script_error(self.name .. " ERROR: attack_barricades() called but we have no eligible attackers");
		return false;
	end;
	
	-- debug output
	if self.is_debug or __barricade_attack_group_debug then
		self.bm:out(self.name .. " attack_barricades called, " .. #eligible_attackers .. " eligible attackers, planner_centre is " .. v_to_s(planner_centre) .. ", barricade movement point is " .. v_to_s(self.barricade_movement_point) .. " (dist:" .. planner_to_barricade_movement_distance .. "), barricade centre is at " .. v_to_s(self.barricade_centre_point) .. " (dist:" .. planner_to_barricade_centre_distance .. ")");
	end;
		
	-- assemble a list of eligible barricades
	local eligible_barricades = {};
	
	for i = 1, #self.barricade_list do
		local curr_barricade = self.barricade_list[i];
		
		if curr_barricade:health() > 0 then
			local barricade_record = {barricade = curr_barricade, original_index = i};
			table.insert(eligible_barricades, barricade_record);
		end;
	end;
	
	-- there are no barricades left standing as we move to attack, so just complete instead
	if #eligible_barricades == 0 then
		self:stop(BARRICADE_ATTACK_GROUP_ATTACKING_ENEMY);
		return;
	end;
	
	-- repeatedly go through the barricade list and assign the closest attacker until the list of eligible attackers is empty
	local barricade_pointer = 0;
	local first_pass_of_barricade_list = true;
	local attacked_barricades_list = {};
	
	while #eligible_attackers > 0 do
		-- increment the barricade pointer (or wrap around)
		if barricade_pointer < #eligible_barricades then
			barricade_pointer = barricade_pointer + 1;
		else
			first_pass_of_barricade_list = false;
			barricade_pointer = 1;
		end;
				
		local curr_barricade = eligible_barricades[barricade_pointer].barricade;
		
		if curr_barricade:health() > 0 then
			-- find the closest attacker to the current barricade
			local closest_attacker_index = get_nearest(curr_barricade:central_position(), eligible_attackers);
			local closest_attacker = eligible_attackers[closest_attacker_index];
			
			-- debug output
			if self.is_debug or __barricade_attack_group_debug then
				self.bm:out("\t" .. closest_attacker.name .. " is attacking barricade at " .. v_to_s(curr_barricade:central_position()));
			end;
						
			-- remove this unit from the eligible attackers and the planner, and add it to the detached unit list
			table.remove(eligible_attackers, closest_attacker_index);
			self.planner:remove_sunits(closest_attacker);
			table.insert(self.detached_sunits, closest_attacker);
			
			local attack_function = function() closest_attacker.uc:attack_building(curr_barricade, 1, true) end;
			local reattack_period = self.reattack_period + (#eligible_attackers * 100);
						
			-- order the attacker to attack the barricade
			attack_function();
			
			-- re-order the attacker to attack the barricade every so often
			self.bm:repeat_callback(function() attack_function() end, reattack_period, self.name); 
			
			-- stash a link to the building's original index in the sunit
			closest_attacker.barricade_attack_group_target = eligible_barricades[barricade_pointer].original_index;
			
			-- increment the number of barricades under attack
			self.barricades_under_attack = self.barricades_under_attack + 1;
			
			-- if we're on our first pass of the barricade list, add this barricade record to attacked_barricades_list
			if first_pass_of_barricade_list then
				table.insert(attacked_barricades_list, eligible_barricades[barricade_pointer]);
			end;			
		end;
	end;

	-- watch morale status of the detached sunits - if they rout, and they're still attacking, decrement the barricade attack counter
	for i = 1, #self.detached_sunits do
		local current_sunit = self.detached_sunits[i];
		
		self.bm:watch(
			function()
				return is_routing_or_dead(current_sunit.unit)
			end,
			0,
			function()
				local sunit = current_sunit;
				
				if self.is_debug or __barricade_attack_group_debug then
					self.bm:out(self.name .. " unit [" .. sunit.name .. "] attacking barricades is routing");
				end; 
				
				if sunit.barricade_attack_group_target then
					sunit.uc:morale_behavior_rout();
					sunit.barricade_attack_group_target = nil;
					self.barricades_under_attack = self.barricades_under_attack - 1;
					self:check_all_barricade_attacks_completed();
				end;
			end,
			self.name			
		);
	end;
	
	-- watch hp of buildings being attacked and have unit storm barricade when it's destroyed
	for i = 1, #attacked_barricades_list do
		self.bm:watch(
			function()
				return attacked_barricades_list[i].barricade:health() < 0.1
			end,
			0,
			function()
				local original_index = attacked_barricades_list[i].original_index;
			
				if self.is_debug or __barricade_attack_group_debug then
					self.bm:out(self.name .. " barricade id " .. original_index .. " at [" .. v_to_s(attacked_barricades_list[i].barricade:central_position()) .. "] is destroyed, reattaching sunits");
				end;
			
				self:storm_barricades_by_barricade_id(original_index);
				
				-- if not all the barricades are destroyed attack the enemy now that we have a breach, otherwise stop the planner
				if not self:check_all_barricade_attacks_completed() then
					self.barricades_breached = true;
					self.planner:attack_force(self.enemy_force);
				end;
			end,
			self.name
		)
	end;
end;


function barricade_attack_group:storm_barricades_by_barricade_id(id)
	-- go through our units, work out which ones were assigned to this building, and have them storm the barricade
	for i = 1, #self.detached_sunits do
		local current_sunit = self.detached_sunits[i];
		
		if current_sunit.barricade_attack_group_target == id and not is_routing_or_dead(current_sunit) then
			current_sunit.barricade_attack_group_target = nil;
			
			table.remove(self.detached_sunits, i);
			
			local closest_enemy = get_closest_standing_unit(self.enemy_force, current_sunit.unit:position());
			
			self.barricades_under_attack = self.barricades_under_attack - 1;
			
			if not is_unit(closest_enemy) then
				if self.is_debug or __barricade_attack_group_debug then
					self.bm:out(self.name .. ":storm_barricades_by_barricade_id(" .. id .. ") is sending unit [" .. current_sunit.name .. "] to charge its closest enemy, but couldn't find one to attack");
					self.planner:add_sunits(current_sunit);
					return;
				end; 
			end;
			
			if self.is_debug or __barricade_attack_group_debug then
				self.bm:out(self.name .. ":storm_barricades_by_barricade_id(" .. id .. ") is sending unit [" .. current_sunit.name .. "] to charge its closest enemy at " .. v_to_s(closest_enemy:position()));
			end;
			
			current_sunit.uc:attack_unit(closest_enemy, true, true);
			
			bm:callback(function() self:reattach_unit_after_barricade_storming(current_sunit) end, self.barricade_storm_time);
						
			-- rescan the list as we've changed its size
			self:storm_barricades_by_barricade_id(id);
			return;
		end;
	end;
end;


function barricade_attack_group:reattach_unit_after_barricade_storming(sunit)
	if self.is_debug or __barricade_attack_group_debug then
		self.bm:out(self.name .. ": reattaching unit [" .. sunit.name .. "] after storming barricades");
	end;
	
	self.planner:add_sunits(sunit);
end;




-- a barricade piece has been destroyed or an attacker has routed, check all the rest and if
-- there are none left standing, stop the attack group
function barricade_attack_group:check_all_barricade_attacks_completed()
	if self.barricades_under_attack == 0 then
		-- all barricades are destroyed
		self:stop(BARRICADE_ATTACK_GROUP_ATTACKING_ENEMY);
		return true;
	end;

	return false;
end;




function barricade_attack_group:can_attack_barricades(sunit)
	return __barricade_attack_group_attacker_type_whitelist[sunit.unit:type()];
end;



function barricade_attack_group:all_barricades_destroyed()
	for i = 1, #self.barricade_list do
		local barricade = self.barricade_list[i];
		
		if barricade:health() > 0 then
			return false;
		end;
	end;
	
	return true;
end;


function barricade_attack_group:get_pre_barricade_target()
	-- for each building in the barricade list that's still standing, 
	-- find any sunit in the target list which is closer to the subject, and then return the closest of these
	local planner_centre = self.planner:get_centre_point();
	
	if not is_vector(planner_centre) then
		-- can only happen if the planner is empty?
		return false;
	end;
			
	-- create a cache of distances to each building in the barricade list
	local buildings = {};
	
	for i = 1, #self.barricade_list do
		local curr_barricade = self.barricade_list[i];
		
		local building_record = {building = curr_barricade, distance = planner_centre:distance_xz(curr_barricade:central_position())};
	
		table.insert(buildings, building_record);
	end;
	
	-- for each enemy in the enemy list that's not routing, go through the
	-- cached building list and if the enemy is closer than all of them, add it to
	-- the candidate list. Factor in the sunit_proximity_modifier
	
	local candidate_list = {};
	local sunit_proximity_modifier = self.sunit_proximity_modifier;
	
	for i = 1, #self.enemy_force do
		local curr_sunit = self.enemy_force[i];
		
		if not is_routing_or_dead(curr_sunit.unit) then
			local sunit_distance = curr_sunit.unit:position():distance_xz(planner_centre) + sunit_proximity_modifier;
			
			local sunit_is_closer = true;
			
			for j = 1, #buildings do
				if sunit_distance > buildings[j].distance then
					sunit_is_closer = false;
				end;
			end;
			
			if sunit_is_closer then				
				local candidate = {sunit = curr_sunit, distance = sunit_distance};
				table.insert(candidate_list, candidate);
			end;
		end;
	end;
	
	-- if the candidate list is not empty return the closest
	if #candidate_list > 0 then
		local closest_distance = 5000;
		local closest_candidate = nil;
		
		for i = 1, #candidate_list do
			local curr_candidate = candidate_list[i];
			local candidate_distance = curr_candidate.distance;
			
			if candidate_distance < closest_distance then
				closest_distance = candidate_distance;
				closest_candidate = curr_candidate;
			end;
		end;
		
		local candidate_sunit = closest_candidate.sunit;		
		
		-- the closest candidate is closest to the planner_centre, but in extreme
		-- scenarios this returns a false positive, so we go through all of our controlled
		-- sunits and verify that this enemy is enemy is closer than any barricade to
		-- at least one of them
		local closest_candidate_pos = candidate_sunit.unit:position();
		local retval = false;
		
		-- look through the planner sunit list and the detached sunits
		local closest_controlled_sunit = self:is_pos_closer_than_sunit_list_to_barricades(closest_candidate_pos, self.planner.sunit_list) or self:is_pos_closer_than_sunit_list_to_barricades(closest_candidate_pos, self.detached_sunits);
		
		if closest_controlled_sunit then
			local closest_barricade_to_controlled_sunit = self:get_closest_barricade(closest_controlled_sunit.unit:position()):central_position();
		
			-- we are returning a sunit !
			if self.is_debug or __barricade_attack_group_debug then
				self.bm:out(self.name .. ":get_pre_barricade_target() is returning a sunit " .. candidate_sunit.name .. " at " .. v_to_s(closest_candidate_pos) .. ", a controlled sunit close to this is " .. closest_controlled_sunit.name .. " at " .. v_to_s(closest_controlled_sunit.unit:position()) .. " (dist:" .. closest_candidate_pos:distance_xz(closest_controlled_sunit.unit:position()) ..") and the closest barricade to this controlled sunit is at " .. v_to_s(closest_barricade_to_controlled_sunit) .. " (dist:" .. closest_controlled_sunit.unit:position():distance_xz(closest_barricade_to_controlled_sunit) .. ")");
			end;
		
			return candidate_sunit;
		end;
	end;

	return false;
end;



function barricade_attack_group:is_pos_closer_than_sunit_list_to_barricades(pos, sunits)	
	for i = 1, #sunits do
		local current_sunit = sunits[i];
		local current_sunit_position = current_sunit.unit:position();
		
		local closest_barricade_pos = self:get_closest_barricade(current_sunit_position):central_position();
		
		if current_sunit_position:distance_xz(pos) < current_sunit_position:distance_xz(closest_barricade_pos) then
			-- the supplied pos is closer to the subject unit than any barricade
			-- return the current sunit
			return current_sunit;
		end;
	end;
	
	return false;
end;





function barricade_attack_group:get_closest_barricade(pos)
	local closest_barricade = nil;
	local closest_barricade_dist = 5000;
	
	for i = 1, #self.barricade_list do
		local curr_barricade = self.barricade_list[i];
		local curr_barricade_dist = pos:distance_xz(curr_barricade:central_position())
	
		if curr_barricade_dist < closest_barricade_dist then
			closest_barricade = curr_barricade;
			closest_barricade_dist = curr_barricade_dist;
		end;
	end;
	
	if not is_building(closest_barricade) then
		script_error(self.name .. " ERROR: get_closest_barricade() called but didn't find a closest barricade, is the barricade list empty? #self.barricade_list is " .. tostring(#self.barricade_list));
		return false;
	end;
	
	return closest_barricade;
end;






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\al_alesia\al_cutscenes.lua

				


-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	CUTSCENES SCRIPT
--
--	Declare intro and other cutscenes
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

POS_Cam_Cutscene_Intro_Final = v(-421.7, 71.5, -26.3);
Targ_Cam_Cutscene_Intro_Final = v(-482.1, 23.4, -127.4);

SFX_Rom_HB_AL_Intro_02 = new_sfx("Play_Rom_HB_AL_Intro_02_1");
SFX_Rom_HB_AL_Intro_03 = new_sfx("Play_Rom_HB_AL_Intro_03_1");
SFX_Rom_HB_AL_Intro_04 = new_sfx("Play_Rom_HB_AL_Intro_04_1");
SFX_Rom_HB_AL_Intro_05 = new_sfx("Play_Rom_HB_AL_Intro_05_1");


Cutscene_Intro = cutscene:new(
	"Cutscene_Intro", 							-- unique string name for cutscene
	UC_Rom_01_All, 								-- unitcontroller over player's army
	35500, 										-- duration of cutscene in ms
	function() Start_Battle() end 				-- what to call when cutscene is finished
);



-- Cutscene_Intro:set_debug();
Cutscene_Intro:set_skip_camera(POS_Cam_Cutscene_Intro_Final, Targ_Cam_Cutscene_Intro_Final);
Cutscene_Intro:set_skippable(true, function() Cutscene_Intro_Skipped() end);

function Play_Cutscene_Intro()

	--Cutscene_Intro:action(function() cam:fade(false, 0.5) end, 0);
	--Cutscene_Intro:action(function() cam:move_to(v(-156.7, 20.7, -682.8), v(-150, 21.1, -744.9), 0, true, 25) end, 2000);
	
	
	local subtitles = Cutscene_Intro:subtitles();
	subtitles:set_alignment("bottom_centre");
	
	enable(Arv_First_Attack_Group, true);
	enable(Arv_Fifth_Attack_Group, true);
	
	Cutscene_Intro:action(function() SUnit_Arv_Fifth_01.uc:set_always_visible_to_all(true) end, 0);
	Cutscene_Intro:action(function() SUnit_Arv_Fifth_02.uc:set_always_visible_to_all(true) end, 0);
	
	Cutscene_Intro:action(function() Teleport_Rom_Army_Cutscene_Intro_Start() end, 0);
	Cutscene_Intro:action(function() Move_Rom_Army_Cutscene_Intro_Start() end, 0);
	Cutscene_Intro:action(function() Teleport_Arv_Army_Cutscene_Intro_Start() end, 0);
	
	Cutscene_Intro:action(function() cam:move_to(v(533.5, 72.5, -627.5), v(516, 70.6, -613.8), 0, true, 35) end, 0);
	Cutscene_Intro:action(function() cam:move_to(v(533.5, 72.5, -627.5), v(516, 70.6, -613.8), 10, true, 33) end, 0);
	Cutscene_Intro:action(function() cam:fade(false, 0.5) end, 0);
	
	-- September, 52BC
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.AL.Intro_01") end, 2500);

	Cutscene_Intro:action(function() subtitles:clear() end, 5500);

	-- Julius Caesar's army surrounds Vercingetorix and his forces at Alesia.
	
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.AL.Intro_02") end, 7000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Rom_HB_AL_Intro_02) end, 7000);
	
	local y_offset = 1.0;	-- height of Caesar from his feet
	
	local x_cam_offset = 3.5;	-- offset from Caesar to camera
	local y_cam_offset = 0.0;
	local z_cam_offset = -3.9;
	
	local x_cam_targ_offset = 0.4;	-- offset from Caesar to camera target
	local y_cam_targ_offset = 0.0;
	local z_cam_targ_offset = 0.4;
	
	local x_cam_dest_offset = 4.4;	-- offset from camera source to camera destination
	local y_cam_dest_offset = 0.4;
	local z_cam_dest_offset = -4.4;
	
	Cutscene_Intro:action(
		function()
			local caesar_position = SUnit_Rom_Cav_01.unit:position_of_officer();
			local pos_x = caesar_position:get_x();
			local pos_y = caesar_position:get_y();
			local pos_z = caesar_position:get_z();
			
			local cam_source_pos = v(pos_x + x_cam_offset, pos_y + y_offset + y_cam_offset, pos_z + z_cam_offset);
			local cam_source_targ = v(pos_x + x_cam_targ_offset, pos_y + y_offset + y_cam_targ_offset, pos_z + z_cam_targ_offset);
			
			local cam_dest_pos = v(pos_x + x_cam_offset + x_cam_dest_offset, pos_y + y_offset + y_cam_offset + y_cam_dest_offset, pos_z + z_cam_offset + z_cam_dest_offset);
			local cam_dest_targ = v(pos_x + x_cam_dest_offset, pos_y + y_offset + y_cam_dest_offset, pos_z + z_cam_dest_offset);
			
			bm:out("caesar_position is " .. v_to_s(caesar_position));
			bm:out("cam_source_pos is " .. v_to_s(cam_source_pos));
			bm:out("cam_source_targ is " .. v_to_s(cam_source_targ));
			bm:out("cam_dest_pos is " .. v_to_s(cam_dest_pos));
			bm:out("cam_dest_targ is " .. v_to_s(cam_dest_targ));
			
			cam:move_to(cam_source_pos, cam_source_targ, 0, true, 25);
			cam:move_to(cam_dest_pos, cam_dest_targ, 5, true, 25);
		end,
		7000
	);

	Cutscene_Intro:action(
		function()
			-- TO DISCOVER THE TARGET POSITION OF THE PREVIOUS CAMERA
			--[[
			local caesar_position = SUnit_Rom_Cav_01.unit:position_of_officer();
			local pos_x = caesar_position:get_x();
			local pos_y = caesar_position:get_y();
			local pos_z = caesar_position:get_z();
			
			local cam_source_pos = v(pos_x + x_cam_offset, pos_y + y_offset + y_cam_offset, pos_z + z_cam_offset);
			local cam_source_targ = v(pos_x + x_cam_targ_offset, pos_y + y_offset + y_cam_targ_offset, pos_z + z_cam_targ_offset);
			
			bm:out("caesar_position is " .. v_to_s(caesar_position));
			bm:out("cam_source_pos is " .. v_to_s(cam_source_pos));
			bm:out("cam_source_targ is " .. v_to_s(cam_source_targ));
			]]
			cam:move_to(v(-503.3, 36.7, -64), v(-550.1, 19.5, 75.1), 0, true, 40);
			cam:move_to(v(-503.3, 34.8, -64), v(-535.8, 11.9, 78.3), 6, true, 38);
		end, 
		9500
	);

	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 12000);
	Cutscene_Intro:action(function() subtitles:clear() end, 12000);
	
	-- The Romans have built two walls of fortification. One to blockade the city, and another to defend against the Gallic reinforcements that now arrive.
	
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.AL.Intro_03") end, 13000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Rom_HB_AL_Intro_03) end, 13000);
	
	Cutscene_Intro:action(function() cam:move_to(v(-517.4, 30.4, -52.8), v(-395.3, 35.8, 30.2), 0, true, 35) end, 13500);
	Cutscene_Intro:action(function() cam:move_to(v(-517.4, 33.4, -52.8), v(-395.3, 38.9, 30.2), 8, true, 35) end, 13500);
	
	Cutscene_Intro:action(function() Move_Arv_Reinforcing_Army_Cutscene_Intro() end, 13000);
		
	Cutscene_Intro:action(function() SUnit_Arv_Fifth_01.uc:occupy_zone(v(-288, 160), true) end, 15500);
	Cutscene_Intro:action(function() SUnit_Arv_Fifth_02.uc:occupy_zone(v(-255, 78), true) end, 12500);
	
	Cutscene_Intro:action(function() cam:move_to(v(-706.6, 38.1, -580.0), v(-645.7, 27.8, -445.8), 0, true, 35) end, 18500);
	Cutscene_Intro:action(function() cam:move_to(v(-706.6, 35.1, -580.0), v(-645.7, 24.8, -445.8), 6, true, 34) end, 18500);
		
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 23000);
	Cutscene_Intro:action(function() subtitles:clear() end, 23000);
	
	-- Caesar and his army now face an attack on two fronts.
	
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.AL.Intro_04") end, 23000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Rom_HB_AL_Intro_04) end, 23000);
	
	Cutscene_Intro:action(function() cam:move_to(v(-233.4, 94.3, 221.9), v(-263.7, 79.6, 187.6), 0, true, 50) end, 23000);
	Cutscene_Intro:action(function() cam:move_to(v(-243.0, 95.7, 221.9), v(-277.9, 83.8, 181.1), 7, true, 49) end, 23000);
	
	Cutscene_Intro:action(function() Teleport_Arv_Reinforcing_Army_Cutscene_Intro_End() end, 23000);
	
	Cutscene_Intro:action(function() Arv_Reinforcing_Army_Taunt_Cutscene_Intro() end, 26000);
	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 28000);
	Cutscene_Intro:action(function() subtitles:clear() end, 28000);
	
	-- Defeat would mean the annihilation of his army and the end of Roman rule in Gaul!
	
	Cutscene_Intro:action(function() subtitles:set_text("Rom.HB.AL.Intro_05") end, 29000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Rom_HB_AL_Intro_05) end, 29000);
	
	Cutscene_Intro:action(function() cam:move_to(v(-680.2, 29.7, -486.2), v(-676.9, 25.7, -507.6), 0, true, 50) end, 29000);
		
	Cutscene_Intro:action(function() SUnit_Arv_First_15.uc:start_taunting() end, 29000);
		
	Cutscene_Intro:action(function() Teleport_Arv_Besieged_Army_Cutscene_Intro_End() end, 29000);
	Cutscene_Intro:action(function() Teleport_Rom_Army_Cutscene_Intro_End() end, 29000);
	
	Cutscene_Intro:action(function() cam:move_to(POS_Cam_Cutscene_Intro_Final, Targ_Cam_Cutscene_Intro_Final, 4, false, 0) end, 31500);
	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 35500);
	Cutscene_Intro:action(function() subtitles:clear() end, 35500);
	
	Cutscene_Intro:start();
end;


function Cutscene_Intro_Skipped()
	cam:fade(true, 0);

	stop_sound(SFX_Rom_HB_AL_Intro_02);
	stop_sound(SFX_Rom_HB_AL_Intro_03);
	stop_sound(SFX_Rom_HB_AL_Intro_04);
	stop_sound(SFX_Rom_HB_AL_Intro_05);
	
	Teleport_Arv_Reinforcing_Army_Cutscene_Intro_End();
	Teleport_Arv_Besieged_Army_Cutscene_Intro_End();
	Teleport_Rom_Army_Cutscene_Intro_End();
	
	bm:callback(function() cam:fade(false, 0.5) end, 500);
end;









Cutscene_Lookat_North_Attack = cutscene:new(
	"Cutscene_Lookat_North_Attack", 				-- unique string name for cutscene
	UC_Rom_01_All, 									-- unitcontroller over player's army
	1500, 											-- duration of cutscene in ms
	function() --[[ do nothing]] end 				-- what to call when cutscene is finished
);

Cutscene_Lookat_North_Attack:set_close_advisor_on_end(false);

function Play_Cutscene_Lookat_North_Attack()
	local cam_pos = cam:position();
	Cutscene_Lookat_North_Attack:action(function() cam:move_to(cam_pos, SUnit_Arv_Fourth_11.unit:position(), 1.5, false, 0) end, 0);
	-- Look fast, the tribes attack once more!
	Cutscene_Lookat_North_Attack:action(function() bm:queue_advisor("Rom.HB.AL.002", 8000) end, 0);
	
	Cutscene_Lookat_North_Attack:start();
end;






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\al_alesia\al_declarations.lua




-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	DECLARATIONS SCRIPT
--
--	Declare alliances, armies, convex areas and anything else of note in here
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

cam = bm:camera();
eh = event_handler:new(AddEventCallBack);

--
-- Army Declarations
--

Alliances = bm:alliances();

Alliance_Rom = Alliances:item(1);
Army_Rom_01 = Alliance_Rom:armies():item(1);

Alliance_Arv = Alliances:item(2); 
Army_Arv_01 = Alliance_Arv:armies():item(1);
Army_Arv_02 = Alliance_Arv:armies():item(2);
Army_Arv_03 = Alliance_Arv:armies():item(3);




--
-- Script Unit Declarations
--

SUnit_Rom_Cav_01 = script_unit:new(Army_Rom_01, "Rom_Cav_01");
SUnit_Rom_Cav_02 = script_unit:new(Army_Rom_01, "Rom_Cav_02");
SUnit_Rom_Cav_03 = script_unit:new(Army_Rom_01, "Rom_Cav_03");
SUnit_Rom_Cav_04 = script_unit:new(Army_Rom_01, "Rom_Cav_04");
SUnit_Rom_Inf_01 = script_unit:new(Army_Rom_01, "Rom_Inf_01");
SUnit_Rom_Inf_02 = script_unit:new(Army_Rom_01, "Rom_Inf_02");
SUnit_Rom_Inf_03 = script_unit:new(Army_Rom_01, "Rom_Inf_03");
SUnit_Rom_Inf_04 = script_unit:new(Army_Rom_01, "Rom_Inf_04");
SUnit_Rom_Inf_05 = script_unit:new(Army_Rom_01, "Rom_Inf_05");
SUnit_Rom_Inf_06 = script_unit:new(Army_Rom_01, "Rom_Inf_06");
SUnit_Rom_Inf_07 = script_unit:new(Army_Rom_01, "Rom_Inf_07");
SUnit_Rom_Inf_08 = script_unit:new(Army_Rom_01, "Rom_Inf_08");
SUnit_Rom_Inf_09 = script_unit:new(Army_Rom_01, "Rom_Inf_09");
SUnit_Rom_Rng_01 = script_unit:new(Army_Rom_01, "Rom_Rng_01");
SUnit_Rom_Rng_02 = script_unit:new(Army_Rom_01, "Rom_Rng_02");
SUnit_Rom_Rng_03 = script_unit:new(Army_Rom_01, "Rom_Rng_03");
SUnit_Rom_Rng_04 = script_unit:new(Army_Rom_01, "Rom_Rng_04");
SUnit_Rom_Art_01 = script_unit:new(Army_Rom_01, "Rom_Art_01");
SUnit_Rom_Art_02 = script_unit:new(Army_Rom_01, "Rom_Art_02");
UC_Rom_01_All = unitcontroller_from_army(Army_Rom_01);


Rom_SUnits = {
	SUnit_Rom_Cav_01,
	SUnit_Rom_Cav_02,
	SUnit_Rom_Cav_03,
	SUnit_Rom_Cav_04,
	SUnit_Rom_Inf_01,
	SUnit_Rom_Inf_02,
	SUnit_Rom_Inf_03,
	SUnit_Rom_Inf_04,
	SUnit_Rom_Inf_05,
	SUnit_Rom_Inf_06,
	SUnit_Rom_Inf_07,
	SUnit_Rom_Inf_08,
	SUnit_Rom_Inf_09,
	SUnit_Rom_Rng_01,
	SUnit_Rom_Rng_02,
	SUnit_Rom_Rng_03,
	SUnit_Rom_Rng_04,
	SUnit_Rom_Art_01,
	SUnit_Rom_Art_02
};


Rom_Ranged_SUnits = {
	SUnit_Rom_Rng_01,
	SUnit_Rom_Rng_02,
	SUnit_Rom_Rng_03,
	SUnit_Rom_Rng_04,
	SUnit_Rom_Art_01,
	SUnit_Rom_Art_02
};











SUnit_Arv_First_01 = script_unit:new(Army_Arv_01, "Arv_First_01");
SUnit_Arv_First_02 = script_unit:new(Army_Arv_01, "Arv_First_02");
SUnit_Arv_First_03 = script_unit:new(Army_Arv_01, "Arv_First_03");
SUnit_Arv_First_04 = script_unit:new(Army_Arv_01, "Arv_First_04");
SUnit_Arv_First_05 = script_unit:new(Army_Arv_01, "Arv_First_05");
SUnit_Arv_First_06 = script_unit:new(Army_Arv_01, "Arv_First_06");
SUnit_Arv_First_07 = script_unit:new(Army_Arv_01, "Arv_First_07");
SUnit_Arv_First_08 = script_unit:new(Army_Arv_01, "Arv_First_08");
SUnit_Arv_First_09 = script_unit:new(Army_Arv_01, "Arv_First_09");
SUnit_Arv_First_10 = script_unit:new(Army_Arv_01, "Arv_First_10");
SUnit_Arv_First_11 = script_unit:new(Army_Arv_01, "Arv_First_11");
SUnit_Arv_First_12 = script_unit:new(Army_Arv_01, "Arv_First_12");
SUnit_Arv_First_13 = script_unit:new(Army_Arv_01, "Arv_First_13");
SUnit_Arv_First_14 = script_unit:new(Army_Arv_01, "Arv_First_14");
SUnit_Arv_First_15 = script_unit:new(Army_Arv_01, "Arv_First_15");
SUnit_Arv_First_16 = script_unit:new(Army_Arv_01, "Arv_First_16");
SUnit_Arv_First_17 = script_unit:new(Army_Arv_01, "Arv_First_17");
SUnit_Arv_First_18 = script_unit:new(Army_Arv_01, "Arv_First_18");

SUnit_Arv_Second_01 = script_unit:new(Army_Arv_01, "Arv_Second_01");
SUnit_Arv_Second_02 = script_unit:new(Army_Arv_01, "Arv_Second_02");
SUnit_Arv_Second_03 = script_unit:new(Army_Arv_01, "Arv_Second_03");
SUnit_Arv_Second_04 = script_unit:new(Army_Arv_01, "Arv_Second_04");

SUnit_Arv_Third_01 = script_unit:new(Army_Arv_01, "Arv_Third_01");
SUnit_Arv_Third_02 = script_unit:new(Army_Arv_01, "Arv_Third_02");
SUnit_Arv_Third_03 = script_unit:new(Army_Arv_01, "Arv_Third_03");

SUnit_Arv_Fourth_01 = script_unit:new(Army_Arv_02, "Arv_Fourth_01");
SUnit_Arv_Fourth_02 = script_unit:new(Army_Arv_02, "Arv_Fourth_02");
SUnit_Arv_Fourth_03 = script_unit:new(Army_Arv_02, "Arv_Fourth_03");
SUnit_Arv_Fourth_04 = script_unit:new(Army_Arv_02, "Arv_Fourth_04");
SUnit_Arv_Fourth_05 = script_unit:new(Army_Arv_02, "Arv_Fourth_05");
SUnit_Arv_Fourth_06 = script_unit:new(Army_Arv_02, "Arv_Fourth_06");
SUnit_Arv_Fourth_07 = script_unit:new(Army_Arv_02, "Arv_Fourth_07");
SUnit_Arv_Fourth_08 = script_unit:new(Army_Arv_02, "Arv_Fourth_08");
SUnit_Arv_Fourth_09 = script_unit:new(Army_Arv_02, "Arv_Fourth_09");
SUnit_Arv_Fourth_10 = script_unit:new(Army_Arv_02, "Arv_Fourth_10");
SUnit_Arv_Fourth_11 = script_unit:new(Army_Arv_02, "Arv_Fourth_11");
SUnit_Arv_Fourth_12 = script_unit:new(Army_Arv_02, "Arv_Fourth_12");
SUnit_Arv_Fourth_13 = script_unit:new(Army_Arv_02, "Arv_Fourth_13");
SUnit_Arv_Fourth_14 = script_unit:new(Army_Arv_02, "Arv_Fourth_14");
SUnit_Arv_Fourth_15 = script_unit:new(Army_Arv_02, "Arv_Fourth_15");

SUnit_Arv_Fifth_01 = script_unit:new(Army_Arv_02, "Arv_Fifth_01");
SUnit_Arv_Fifth_02 = script_unit:new(Army_Arv_02, "Arv_Fifth_02");
SUnit_Arv_Fifth_03 = script_unit:new(Army_Arv_02, "Arv_Fifth_03");
SUnit_Arv_Fifth_04 = script_unit:new(Army_Arv_02, "Arv_Fifth_04");
SUnit_Arv_Fifth_05 = script_unit:new(Army_Arv_02, "Arv_Fifth_05");
SUnit_Arv_Fifth_06 = script_unit:new(Army_Arv_02, "Arv_Fifth_06");
SUnit_Arv_Fifth_07 = script_unit:new(Army_Arv_02, "Arv_Fifth_07");
SUnit_Arv_Fifth_08 = script_unit:new(Army_Arv_02, "Arv_Fifth_08");
SUnit_Arv_Fifth_09 = script_unit:new(Army_Arv_02, "Arv_Fifth_09");
SUnit_Arv_Fifth_10 = script_unit:new(Army_Arv_02, "Arv_Fifth_10");
SUnit_Arv_Fifth_11 = script_unit:new(Army_Arv_02, "Arv_Fifth_11");
SUnit_Arv_Fifth_12 = script_unit:new(Army_Arv_02, "Arv_Fifth_12");
SUnit_Arv_Fifth_13 = script_unit:new(Army_Arv_02, "Arv_Fifth_13");
SUnit_Arv_Fifth_14 = script_unit:new(Army_Arv_02, "Arv_Fifth_14");

SUnit_Arv_Sixth_01 = script_unit:new(Army_Arv_02, "Arv_Sixth_01");
SUnit_Arv_Sixth_02 = script_unit:new(Army_Arv_02, "Arv_Sixth_02");
SUnit_Arv_Sixth_03 = script_unit:new(Army_Arv_02, "Arv_Sixth_03");
SUnit_Arv_Sixth_04 = script_unit:new(Army_Arv_02, "Arv_Sixth_04");

SUnit_Arv_Seventh_01 = script_unit:new(Army_Arv_03, "Arv_Seventh_01");
SUnit_Arv_Seventh_02 = script_unit:new(Army_Arv_03, "Arv_Seventh_02");
SUnit_Arv_Seventh_03 = script_unit:new(Army_Arv_03, "Arv_Seventh_03");
SUnit_Arv_Seventh_04 = script_unit:new(Army_Arv_03, "Arv_Seventh_04");
SUnit_Arv_Seventh_05 = script_unit:new(Army_Arv_03, "Arv_Seventh_05");
SUnit_Arv_Seventh_06 = script_unit:new(Army_Arv_03, "Arv_Seventh_06");
SUnit_Arv_Seventh_07 = script_unit:new(Army_Arv_03, "Arv_Seventh_07");

SUnit_Arv_Eighth_01 = script_unit:new(Army_Arv_03, "Arv_Eighth_01");
SUnit_Arv_Eighth_02 = script_unit:new(Army_Arv_03, "Arv_Eighth_02");
SUnit_Arv_Eighth_03 = script_unit:new(Army_Arv_03, "Arv_Eighth_03");
SUnit_Arv_Eighth_04 = script_unit:new(Army_Arv_03, "Arv_Eighth_04");
SUnit_Arv_Eighth_05 = script_unit:new(Army_Arv_03, "Arv_Eighth_05");
SUnit_Arv_Eighth_06 = script_unit:new(Army_Arv_03, "Arv_Eighth_06");
SUnit_Arv_Eighth_07 = script_unit:new(Army_Arv_03, "Arv_Eighth_07");
SUnit_Arv_Eighth_08 = script_unit:new(Army_Arv_03, "Arv_Eighth_08");

UC_Arv_01_All = unitcontroller_from_army(Army_Arv_01);
UC_Arv_01_All:take_control();

UC_Arv_02_All = unitcontroller_from_army(Army_Arv_02);
UC_Arv_02_All:take_control();

UC_Arv_03_All = unitcontroller_from_army(Army_Arv_03);
UC_Arv_03_All:take_control();

--
--	ATTACK GROUPS
--

Arv_First_Attack_Group = {
	SUnit_Arv_First_01,
	SUnit_Arv_First_02,
	SUnit_Arv_First_03,
	SUnit_Arv_First_04,
	SUnit_Arv_First_05,
	SUnit_Arv_First_06,
	SUnit_Arv_First_07,
	SUnit_Arv_First_08,
	SUnit_Arv_First_09,
	SUnit_Arv_First_10,
	SUnit_Arv_First_11,
	SUnit_Arv_First_12,
	SUnit_Arv_First_13,
	SUnit_Arv_First_14,
	SUnit_Arv_First_15,
	SUnit_Arv_First_16,
	SUnit_Arv_First_17,
	SUnit_Arv_First_18
};

Arv_Second_Attack_Group = {
	SUnit_Arv_Second_01,
	SUnit_Arv_Second_02,
	SUnit_Arv_Second_03,
	SUnit_Arv_Second_04
};

Arv_Third_Attack_Group = {
	SUnit_Arv_Third_01,
	SUnit_Arv_Third_02,
	SUnit_Arv_Third_03
};

Arv_Fourth_Attack_Group = {
	SUnit_Arv_Fourth_01,
	SUnit_Arv_Fourth_02,
	SUnit_Arv_Fourth_03,
	SUnit_Arv_Fourth_04,
	SUnit_Arv_Fourth_05,
	SUnit_Arv_Fourth_06,
	SUnit_Arv_Fourth_07,
	SUnit_Arv_Fourth_08,
	SUnit_Arv_Fourth_09,
	SUnit_Arv_Fourth_10,
	SUnit_Arv_Fourth_11,
	SUnit_Arv_Fourth_12,
	SUnit_Arv_Fourth_13,
	SUnit_Arv_Fourth_14,
	SUnit_Arv_Fourth_15
};

Arv_Fifth_Attack_Group = {
	SUnit_Arv_Fifth_01,
	SUnit_Arv_Fifth_02,
	SUnit_Arv_Fifth_03,
	SUnit_Arv_Fifth_04,
	SUnit_Arv_Fifth_05,
	SUnit_Arv_Fifth_06,
	SUnit_Arv_Fifth_07,
	SUnit_Arv_Fifth_08,
	SUnit_Arv_Fifth_09,
	SUnit_Arv_Fifth_10,
	SUnit_Arv_Fifth_11,
	SUnit_Arv_Fifth_12
};

Arv_Sixth_Attack_Group = {
	SUnit_Arv_Sixth_01,
	SUnit_Arv_Sixth_02,
	SUnit_Arv_Sixth_03,
	SUnit_Arv_Sixth_04
};

Arv_Seventh_Attack_Group = {
	SUnit_Arv_Seventh_01,
	SUnit_Arv_Seventh_02,
	SUnit_Arv_Seventh_03,
	SUnit_Arv_Seventh_04,
	SUnit_Arv_Seventh_05,
	SUnit_Arv_Seventh_06,
	SUnit_Arv_Seventh_07
};

Arv_Eighth_Attack_Group = {
	SUnit_Arv_Eighth_01,
	SUnit_Arv_Eighth_02,
	SUnit_Arv_Eighth_03,
	SUnit_Arv_Eighth_04,
	SUnit_Arv_Eighth_05,
	SUnit_Arv_Eighth_06,
	SUnit_Arv_Eighth_07,
	SUnit_Arv_Eighth_08
};






--
--	BUILDINGS
--

Tower_01 = bm:buildings():item(2);
buildings = bm:buildings();
--  buildings:item(245);


Arv_First_Attack_Building_01 = buildings:item(17); --get_building_near(-690, -110);
Arv_First_Attack_Building_02 = buildings:item(18); --get_building_near(-682, -115);
Arv_First_Attack_Building_03 = buildings:item(225); --get_building_near(-622, -153);
Arv_First_Attack_Building_04 = buildings:item(224); --get_building_near(-613, -158);
Arv_First_Attack_Building_05 = buildings:item(223); --get_building_near(-605, -165);
Arv_First_Attack_Building_06 = buildings:item(228); --get_building_near(-598, -171);
Arv_First_Attack_Building_07 = buildings:item(226); --get_building_near(-590, -177);
Arv_First_Attack_Building_08 = buildings:item(227); --get_building_near(-582, -182);
Arv_First_Attack_Building_09 = buildings:item(212); --get_building_near(-516, -210);
Arv_First_Attack_Building_10 = buildings:item(213); --get_building_near(-505, -211);
Arv_First_Attack_Building_11 = buildings:item(219); --get_building_near(-496, -212);
Arv_First_Attack_Building_12 = buildings:item(215); --get_building_near(-486, -213);
Arv_First_Attack_Building_13 = buildings:item(214); --get_building_near(-476, -215);
Arv_First_Attack_Building_14 = buildings:item(216); --get_building_near(-466, -218);
Arv_First_Attack_Building_15 = buildings:item(217); --get_building_near(-456, -222);
Arv_First_Attack_Building_16 = buildings:item(218); --get_building_near(-448, -226);
Arv_First_Attack_Building_17 = buildings:item(222); --get_building_near(-440, -230);
Arv_First_Attack_Building_18 = buildings:item(220); --get_building_near(-431, -236);
Arv_First_Attack_Building_19 = buildings:item(221); --get_building_near(-422, -241);

Arv_Second_Attack_Building_01 = Arv_First_Attack_Building_18;
Arv_Second_Attack_Building_02 = Arv_First_Attack_Building_19;
Arv_Second_Attack_Building_03 = buildings:item(207); --get_building_near(-368, -287);
Arv_Second_Attack_Building_04 = buildings:item(210); --get_building_near(-360, -292);
Arv_Second_Attack_Building_05 = buildings:item(211); --get_building_near(-350, -296);
Arv_Second_Attack_Building_06 = buildings:item(208); --get_building_near(-340, -298);
Arv_Second_Attack_Building_07 = buildings:item(209); --get_building_near(-330, -299);
Arv_Second_Attack_Building_08 = buildings:item(202); --get_building_near(-259, -293);
Arv_Second_Attack_Building_09 = buildings:item(204); --get_building_near(-249, -290);

Arv_Third_Attack_Building_01 = buildings:item(15); --get_building_near(-697, -80);
Arv_Third_Attack_Building_02 = buildings:item(19); --get_building_near(-697, -91);
Arv_Third_Attack_Building_03 = buildings:item(16); --get_building_near(-697, -101);
Arv_Third_Attack_Building_04 = Arv_First_Attack_Building_01;
Arv_Third_Attack_Building_05 = Arv_First_Attack_Building_02;

Arv_Fourth_Attack_Building_01 = buildings:item(41); --get_building_near(-577, 294);
Arv_Fourth_Attack_Building_02 = buildings:item(34); --get_building_near(-589, 216);
Arv_Fourth_Attack_Building_03 = buildings:item(35); --get_building_near(-595, 208);
Arv_Fourth_Attack_Building_04 = buildings:item(36); --get_building_near(-601, 200);
Arv_Fourth_Attack_Building_05 = buildings:item(33); --get_building_near(-609, 194);
Arv_Fourth_Attack_Building_06 = buildings:item(32); --get_building_near(-618, 188);
Arv_Fourth_Attack_Building_07 = buildings:item(37); --get_building_near(-626, 184);
Arv_Fourth_Attack_Building_08 = buildings:item(26); --get_building_near(-699, 153);
Arv_Fourth_Attack_Building_09 = buildings:item(27); --get_building_near(-706, 145);

Arv_Fifth_Attack_Building_01 = buildings:item(411); --get_building_near(-434, -62);
Arv_Fifth_Attack_Building_02 = buildings:item(410); --get_building_near(-441, -54);
Arv_Fifth_Attack_Building_03 = buildings:item(415); --get_building_near(-448, -48);
Arv_Fifth_Attack_Building_04 = buildings:item(414); --get_building_near(-454, -40);
Arv_Fifth_Attack_Building_05 = buildings:item(906); --get_building_near(-503, 10);
Arv_Fifth_Attack_Building_06 = buildings:item(905); --get_building_near(-511, 17);
Arv_Fifth_Attack_Building_07 = buildings:item(904); --get_building_near(-519, 24);
Arv_Fifth_Attack_Building_08 = buildings:item(903); --get_building_near(-527, 30);
Arv_Fifth_Attack_Building_09 = buildings:item(902); --get_building_near(-534, 37);
Arv_Fifth_Attack_Building_10 = buildings:item(901); --get_building_near(-540, 45);
Arv_Fifth_Attack_Building_11 = buildings:item(914); --get_building_near(-545, 52);
Arv_Fifth_Attack_Building_12 = buildings:item(237); --get_building_near(-543, 142);
Arv_Fifth_Attack_Building_13 = buildings:item(236); --get_building_near(-537, 150);
Arv_Fifth_Attack_Building_14 = buildings:item(235); --get_building_near(-532, 155);

Arv_Eighth_Attack_Building_01 = Arv_Fourth_Attack_Building_08;
Arv_Eighth_Attack_Building_02 = Arv_Fourth_Attack_Building_09;
Arv_Eighth_Attack_Building_03 = buildings:item(29); --get_building_near(-710, 136);
Arv_Eighth_Attack_Building_04 = buildings:item(28); --get_building_near(-712, 125);
Arv_Eighth_Attack_Building_05 = buildings:item(24); --get_building_near(-713, 115);


--
--	BUILDINGS LISTS
--

Arv_First_Attack_Full_Building_List = {
	Arv_First_Attack_Building_01,
	Arv_First_Attack_Building_02,
	-- Arv_First_Attack_Building_03,
	Arv_First_Attack_Building_04,
	Arv_First_Attack_Building_05,
	Arv_First_Attack_Building_06,
	Arv_First_Attack_Building_07,
	Arv_First_Attack_Building_08,
	Arv_First_Attack_Building_09,
	Arv_First_Attack_Building_10,
	Arv_First_Attack_Building_11,
	Arv_First_Attack_Building_12,
	Arv_First_Attack_Building_13,
	Arv_First_Attack_Building_14,
	Arv_First_Attack_Building_15,
	Arv_First_Attack_Building_16,
	Arv_First_Attack_Building_17,
	Arv_First_Attack_Building_18,
	Arv_First_Attack_Building_19
};


Arv_Second_Attack_Full_Building_List = {
	Arv_Second_Attack_Building_01,
	Arv_Second_Attack_Building_02,
	Arv_Second_Attack_Building_03,
	Arv_Second_Attack_Building_04,
	Arv_Second_Attack_Building_05,
	Arv_Second_Attack_Building_06,
	Arv_Second_Attack_Building_07,
	Arv_Second_Attack_Building_08,
	Arv_Second_Attack_Building_09
};

Arv_Third_Attack_Full_Building_List = {
	Arv_Third_Attack_Building_01,
	Arv_Third_Attack_Building_02,
	Arv_Third_Attack_Building_03,
	Arv_Third_Attack_Building_04,
	Arv_Third_Attack_Building_05
};

Arv_Fourth_Attack_Full_Building_List = {
	Arv_Fourth_Attack_Building_01,
	Arv_Fourth_Attack_Building_02,
	Arv_Fourth_Attack_Building_03,
	Arv_Fourth_Attack_Building_04,
	Arv_Fourth_Attack_Building_05,
	Arv_Fourth_Attack_Building_06,
	Arv_Fourth_Attack_Building_07,
	Arv_Fourth_Attack_Building_08,
	Arv_Fourth_Attack_Building_09
};

Arv_Fifth_Attack_Full_Building_List = {
	Arv_Fifth_Attack_Building_01,
	Arv_Fifth_Attack_Building_02,
	Arv_Fifth_Attack_Building_03,
	Arv_Fifth_Attack_Building_04,
	Arv_Fifth_Attack_Building_05,
	Arv_Fifth_Attack_Building_06,
	Arv_Fifth_Attack_Building_07,
	Arv_Fifth_Attack_Building_08,
	Arv_Fifth_Attack_Building_09,
	Arv_Fifth_Attack_Building_10,
	Arv_Fifth_Attack_Building_11,
	Arv_Fifth_Attack_Building_12,
	Arv_Fifth_Attack_Building_13,
	Arv_Fifth_Attack_Building_14
};

Arv_Sixth_Attack_Full_Building_List = Arv_Second_Attack_Full_Building_List;

Arv_Seventh_Attack_Full_Building_List = Arv_First_Attack_Full_Building_List;

Arv_Eighth_Attack_Full_Building_List = {
	Arv_Eighth_Attack_Building_01,
	Arv_Eighth_Attack_Building_02,
	Arv_Eighth_Attack_Building_03,
	Arv_Eighth_Attack_Building_04,
	Arv_Eighth_Attack_Building_05
};



-- TO REDO

Arv_First_Attack_Building_List = random_subset(Arv_First_Attack_Full_Building_List, 5, 7);
Arv_Second_Attack_Building_List = random_subset(Arv_Second_Attack_Full_Building_List, 3, 4);
Arv_Third_Attack_Building_List = random_subset(Arv_Third_Attack_Full_Building_List, 2, 3);
Arv_Fourth_Attack_Building_List = random_subset(Arv_Fourth_Attack_Full_Building_List, 4, 6);
Arv_Fifth_Attack_Building_List = random_subset(Arv_Fifth_Attack_Full_Building_List, 6, 8);
Arv_Sixth_Attack_Building_List = random_subset(Arv_Sixth_Attack_Full_Building_List, 3, 4);
Arv_Seventh_Attack_Building_List = random_subset(Arv_Seventh_Attack_Full_Building_List, 4, 5);
Arv_Eighth_Attack_Building_List = random_subset(Arv_Eighth_Attack_Full_Building_List, 2, 3);





function Setup_BAG_Attacker_Whitelist(bag)
	bag:add_attacker_to_whitelist("Cel_Spear_Nobles");
	bag:add_attacker_to_whitelist("Cel_Axe_Warriors");
	bag:add_attacker_to_whitelist("Cel_Warriors");
	bag:add_attacker_to_whitelist("Cel_Short_Swords");
	bag:add_attacker_to_whitelist("Cel_Tribesmen");
	bag:add_attacker_to_whitelist("Cel_Levy_Freemen");
	bag:add_attacker_to_whitelist("Cel_Chosen_Spear");
	bag:add_attacker_to_whitelist("Cel_Chosen_Sword");
	bag:add_attacker_to_whitelist("Cel_Oathsworn");
	bag:add_attacker_to_whitelist("Cel_Spear_Warriors");
	bag:add_attacker_to_whitelist("Cel_Naked_Warriors");
	bag:add_attacker_to_whitelist("Cel_Naked_Spears");
	bag:add_attacker_to_whitelist("Cel_Naked_Swords");
end;



Ammo_Top_Up_Refresh_Time = 10000;

function Keep_Ammo_Topped_Up(sunit)
	if is_shattered_or_dead(sunit) then
		return;
	end;
	
	local unit = sunit.unit;
	local unit_ammo_proportion = unit:ammo_left() / unit:starting_ammo();
	
	if unit_ammo_proportion < 0.9 then
		refill_ammo(sunit.unit, unit_ammo_proportion + 0.1);
	end;
	
	bm:callback(function() Keep_Ammo_Topped_Up(sunit) end, Ammo_Top_Up_Refresh_Time, sunit.name .. "_Ammo_Top_Up");
end;


function Stop_Ammo_Top_Up(sunit)
	bm:remove_callback(sunit.name .. "_Ammo_Top_Up");
end;











function Teleport_Rom_Army_Cutscene_Intro_Start()
	SUnit_Rom_Cav_01.uc:teleport_to_location(v(-525.9, -26.8), r_to_d(2.34), 18.5);
	SUnit_Rom_Cav_02.uc:teleport_to_location(v(-540.8, -11.3), r_to_d(2.36), 21.8);
	SUnit_Rom_Cav_03.uc:teleport_to_location(v(-560.4, 9.78), r_to_d(2.45), 22.1);
	SUnit_Rom_Cav_04.uc:teleport_to_location(v(-579.5, 32.9), r_to_d(2.43), 16.8);
end;

POS_Roman_Cav_Destination_Cutscene_Intro = v(-480, -70);

function Move_Rom_Army_Cutscene_Intro_Start()
	SUnit_Rom_Cav_01.uc:goto_location(POS_Roman_Cav_Destination_Cutscene_Intro);
	SUnit_Rom_Cav_02.uc:goto_location(POS_Roman_Cav_Destination_Cutscene_Intro);
	SUnit_Rom_Cav_03.uc:goto_location(POS_Roman_Cav_Destination_Cutscene_Intro);
	SUnit_Rom_Cav_04.uc:goto_location(POS_Roman_Cav_Destination_Cutscene_Intro);
end;

function Teleport_Arv_Army_Cutscene_Intro_Start()
	for i = 1, #Arv_First_Attack_Group do
		local current_sunit = Arv_First_Attack_Group[i];
		
		current_sunit:teleport_to_start_location_offset(0, -45);
		current_sunit.uc:set_always_visible_to_all(true);
	end;
	
	-- units in town
	SUnit_Arv_Fifth_01.uc:teleport_to_location(v(-245.1, 200.1), r_to_d(-1.55), 22.5);
	SUnit_Arv_Fifth_02.uc:teleport_to_location(v(-230.7, 119.3), r_to_d(-1.99), 44.9);
end;

function Move_Arv_Reinforcing_Army_Cutscene_Intro()
	for i = 1, #Arv_First_Attack_Group do
		local current_sunit = Arv_First_Attack_Group[i];
		
		current_sunit:goto_start_location();
	end;
end;


function Teleport_Arv_Reinforcing_Army_Cutscene_Intro_End()
	for i = 1, #Arv_First_Attack_Group do
		local current_sunit = Arv_First_Attack_Group[i];
		
		current_sunit:teleport_to_start_location();
	end;
end;


function Arv_Reinforcing_Army_Taunt_Cutscene_Intro()
	for i = 1, #Arv_First_Attack_Group do
		local current_sunit = Arv_First_Attack_Group[i];
		
		if current_sunit.name ~= "Arv_First_15" then
			current_sunit.uc:start_taunting();
		end;
	end;
end;


function Arv_Reinforcing_Army_Set_Default_Visibility()
	for i = 1, #Arv_First_Attack_Group do
		local current_sunit = Arv_First_Attack_Group[i];
		
		current_sunit.uc:set_always_visible_to_all(false);
	end;
end;


function Teleport_Arv_Besieged_Army_Cutscene_Intro_End()
	SUnit_Arv_Fifth_01:teleport_to_start_location();
	SUnit_Arv_Fifth_02:teleport_to_start_location();
end;


function Teleport_Rom_Army_Cutscene_Intro_End()
	SUnit_Rom_Cav_01:teleport_to_start_location();
	SUnit_Rom_Cav_02:teleport_to_start_location();
	SUnit_Rom_Cav_03:teleport_to_start_location();
	SUnit_Rom_Cav_04:teleport_to_start_location();
	SUnit_Rom_Rng_01:teleport_to_start_location();
end;






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\al_alesia\al_main.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	MAIN BATTLE SCRIPT
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------



-- called at start of deployment phase
function Deployment_Phase()
	bm:out("Battle is in deployment phase");
	
	SUnit_Rom_Rng_01.uc:occupy_zone(v(-484, -10));
end;



-- end of deployment phase i.e. battle start
function End_Deployment_Phase()

	-- disable all enemy
	-- enable(Arv_First_Attack_Group, false);
	enable(Arv_Second_Attack_Group, false);
	enable(Arv_Third_Attack_Group, false);
	enable(Arv_Fourth_Attack_Group, false);
	-- enable(Arv_Fifth_Attack_Group, false);
	enable(Arv_Sixth_Attack_Group, false);
	enable(Arv_Seventh_Attack_Group, false);
	enable(Arv_Eighth_Attack_Group, false);
		
	-- launch cutscene, or straight into battle without it
	Play_Cutscene_Intro();
	-- Start_Battle_No_Cutscene();
end;


function Start_Battle_No_Cutscene()
	cam:fade(false, 0.5);
	
	Start_Battle();
end;



-- the interactive battle has started
function Start_Battle()
	bm:out("Battle is Starting");
				
	--start rout manager
	bm:start_rout_manager(1);
	
	-- register victory and defeat VO callbacks
	bm:setup_victory_callback(function() Battle_Is_Ending() end);
	
	-- startup advice
	-- The relief force is attacking, Commander! Man the barricades!
	bm:callback(function() bm:queue_advisor("Rom.HB.AL.001", 8000) end, 2000);
	
	-- objective
	bm:callback(function() set_objective("Rom.HB.AL.Objective_01") end, 5000);
	
	-- watch for Julius Caesar being "wounded"
	bm:watch(
		function()
			return not Army_Rom_01:is_commander_alive()
		end,
		0,
		function()
			-- Sir! Caesar himself has been injured in the fighting, and can no longer rally the men! They lose heart!
			bm:stop_advisor_queue();
			bm:queue_advisor("Rom.HB.AL.005", 10000);
			bm:out("Player's general is dead");
		end,
		"Allied_Commander_Watch"
	);
	
	-- set default visibility on the first attacking army
	Arv_Reinforcing_Army_Set_Default_Visibility();
	
	-- start gaulish attack
	Start_Arv_First_Attack();
	bm:callback(function() Start_Arv_Second_Attack() end, 120000);
	
	-- tell the defenders of Alesia to defend
	Arv_Fifth_Attack_Planner = script_ai_planner:new("Arv_Fifth_Attack_Planner", Arv_Fifth_Attack_Group);
	Arv_Fifth_Attack_Planner:defend_position(v(-116, 185), 150);
	
	-- keep the Roman ranged units ammo topped up
	for i = 1, #Rom_Ranged_SUnits do
		local current_sunit = Rom_Ranged_SUnits[i];
		Keep_Ammo_Topped_Up(current_sunit);
	end;
end;





--
--	FIRST ATTACK
--


function Start_Arv_First_Attack()
	bm:out("Start_Arv_First_Attack() called");
	
	local Arv_First_Attack_Planner = script_ai_planner:new("Arv_First_Attack_Planner", Arv_First_Attack_Group);
	
	local BAG_Arv_First_Attack = barricade_attack_group:new(
		"BAG_Arv_First_Attack", 
		Arv_First_Attack_Planner, 
		Arv_First_Attack_Building_List, 
		Rom_SUnits, 
		function()
			bm:out("BAG_Arv_First_Attack has finished, watching for units to rout");
			bm:watch(
				function()
					return is_routing_or_dead(Arv_First_Attack_Group)
				end,
				0,
				function()
					BAG_Attack_Has_Finished("First");
				end
			);
		end
	);
	
	BAG_Arv_First_Attack:set_debug_all();
	BAG_Arv_First_Attack:set_first_contact_callback(function() Arv_First_Attack_Has_Made_Contact() end);

	Setup_BAG_Attacker_Whitelist(BAG_Arv_First_Attack);
	
	BAG_Arv_First_Attack:start();
end;



function Arv_First_Attack_Has_Made_Contact()
	bm:out("Arv_First_Attack_Has_Made_Contact() called");
	
	bm:callback(function() Start_Arv_Third_Attack() end, 30000);
	bm:callback(function() Start_Arv_Fourth_Attack() end, 8000);
end;




--
--	SECOND ATTACK
--

function Start_Arv_Second_Attack()
	bm:out("Start_Arv_Second_Attack() called");
	
	enable(Arv_Second_Attack_Group, true);
	
	local Arv_Second_Attack_Planner = script_ai_planner:new("Arv_Second_Attack_Planner", Arv_Second_Attack_Group);
	
	local BAG_Arv_Second_Attack = barricade_attack_group:new(
		"BAG_Arv_Second_Attack", 
		Arv_Second_Attack_Planner, 
		Arv_Second_Attack_Building_List, 
		Rom_SUnits, 
		function()
			bm:out("BAG_Arv_Second_Attack has finished, watching for units to rout");
			bm:watch(
				function()
					return is_routing_or_dead(Arv_Second_Attack_Group)
				end,
				0,
				function()
					BAG_Attack_Has_Finished("Second");
				end
			);
		end
	);
	
	BAG_Arv_Second_Attack:start();
end;



--
--	THIRD ATTACK
--

function Start_Arv_Third_Attack()
	bm:out("Start_Arv_Third_Attack() called");
	
	enable(Arv_Third_Attack_Group, true);
	
	local Arv_Third_Attack_Planner = script_ai_planner:new("Arv_Third_Attack_Planner", Arv_Third_Attack_Group);
	
	local BAG_Arv_Third_Attack = barricade_attack_group:new(
		"BAG_Arv_Third_Attack", 
		Arv_Third_Attack_Planner, 
		Arv_Third_Attack_Building_List, 
		Rom_SUnits, 
		function()
			bm:out("BAG_Arv_Third_Attack has finished, watching for units to rout");
			bm:watch(
				function()
					return is_routing_or_dead(Arv_Third_Attack_Group)
				end,
				0,
				function()
					BAG_Attack_Has_Finished("Third");
				end
			);
		end
	);
	
	BAG_Arv_Third_Attack:start();
end;




--
--	FOURTH ATTACK
--

POS_Arv_Fourth_Attack_Tripwire_A = v(-840, 350);
POS_Arv_Fourth_Attack_Tripwire_B = v(-680, 440);


function Start_Arv_Fourth_Attack()
	bm:out("Start_Arv_Fourth_Attack() called");
	
	enable(Arv_Fourth_Attack_Group, true);
	
	local Arv_Fourth_Attack_Planner = script_ai_planner:new("Arv_Fourth_Attack_Planner", Arv_Fourth_Attack_Group);
	
	local BAG_Arv_Fourth_Attack = barricade_attack_group:new(
		"BAG_Arv_Fourth_Attack", 
		Arv_Fourth_Attack_Planner, 
		Arv_Fourth_Attack_Building_List, 
		Rom_SUnits, 
		function()
			bm:out("BAG_Arv_Fourth_Attack has finished, watching for units to rout");
			bm:watch(
				function()
					return is_routing_or_dead(Arv_Fourth_Attack_Group)
				end,
				0,
				function()
					BAG_Attack_Has_Finished("Fourth");
				end
			);
		end
	);
	
	BAG_Arv_Fourth_Attack:set_first_contact_callback(function() Arv_Fourth_Attack_Has_Made_Contact() end);
	BAG_Arv_Fourth_Attack:start();
	
	bm:watch(
		function()
			return has_crossed_line(SUnit_Arv_Fourth_11.unit:position(), POS_Arv_Fourth_Attack_Tripwire_A, POS_Arv_Fourth_Attack_Tripwire_B);
		end,
		0,
		function()
			Play_Cutscene_Lookat_North_Attack();
		end
	);
end;


Fifth_Wave_Units_Routing_Precondition = math.floor((#Arv_First_Attack_Group + #Arv_Second_Attack_Group + #Arv_Third_Attack_Group) * 2 / 3);

function Arv_Fourth_Attack_Has_Made_Contact()
	bm:out("Arv_Fourth_Attack_Has_Made_Contact() called");
	
	bm:watch(
		function()
			if num_units_routing(Arv_First_Attack_Group) + num_units_routing(Arv_Second_Attack_Group) + num_units_routing(Arv_Third_Attack_Group) > Fifth_Wave_Units_Routing_Precondition then
				bm:out("Conditions satisfied to start Arv Fifth Attack, beginning countdown");
				return true;
			end;
		end,
		20000,
		function()
			Start_Arv_Fifth_Attack();
		end,
		"Arv_Fifth_Attack_Start"
	);
	
	bm:callback(
		function()
			bm:out("Releasing Arv Fifth Attack on timeout");
			Start_Arv_Fifth_Attack() 
		end, 
		300000, 
		"Arv_Fifth_Attack_Start"
	);
end;





--
--	FIFTH ATTACK
--

function Start_Arv_Fifth_Attack()
	bm:out("Start_Arv_Fifth_Attack() called");
	
	bm:remove_process("Arv_Fifth_Attack_Start");
	
	-- enable(Arv_Fifth_Attack_Group, true);
	
	--local Arv_Fifth_Attack_Planner = script_ai_planner:new("Arv_Fifth_Attack_Planner", Arv_Fifth_Attack_Group);
	
	local BAG_Arv_Fifth_Attack = barricade_attack_group:new(
		"BAG_Arv_Fifth_Attack", 
		Arv_Fifth_Attack_Planner, 
		Arv_Fifth_Attack_Building_List, 
		Rom_SUnits, 
		function()
			bm:out("BAG_Arv_Fifth_Attack has finished, watching for units to rout");
			bm:watch(
				function()
					return is_routing_or_dead(Arv_Fifth_Attack_Group)
				end,
				0,
				function()
					BAG_Attack_Has_Finished("Fifth");
				end
			);
		end
	);
	
	BAG_Arv_Fifth_Attack:set_first_contact_callback(function() Arv_Fifth_Attack_Has_Made_Contact() end);
	BAG_Arv_Fifth_Attack:start();
	
	-- advice
	-- Now Vercingetorix has sent his warriors out of the fort and they are joining the fray! We fight on both sides!
	bm:callback(function() bm:queue_advisor("Rom.HB.AL.004", 8000) end, 45000);
end;


--Final_Wave_Units_Routing_Precondition = math.floor(#Arv_Fourth_Attack_Group * 0.5);
Final_Wave_Units_Routing_Precondition = 1;

function Arv_Fifth_Attack_Has_Made_Contact()
	bm:out("Arv_Fifth_Attack_Has_Made_Contact() called, Final_Wave_Units_Routing_Precondition is " .. Final_Wave_Units_Routing_Precondition);
	
	bm:watch(
		function()
			if num_units_routing(Arv_Fourth_Attack_Group) > Final_Wave_Units_Routing_Precondition then
				bm:out("Conditions satisfied to start Arv Final Attack, beginning countdown");
				return true;
			end;
		end,
		150000,
		function()
			Start_Arv_Final_Waves();
		end,
		"Arv_Final_Attack_Start"
	);
	
	bm:callback(
		function()
			bm:out("Releasing Arv Final Attack on timeout");
			Start_Arv_Final_Waves() 
		end, 
		300000, 
		"Arv_Final_Attack_Start"
	);
end;


function Start_Arv_Final_Waves()
	bm:remove_process("Arv_Final_Attack_Start");
	
	bm:out("Start_Arv_Final_Waves() called");

	bm:callback(function() Start_Arv_Sixth_Attack() end, 40000);
	Start_Arv_Seventh_Attack();
	bm:callback(function() Start_Arv_Eighth_Attack() end, 60000);
	
	-- More Gauls attack our position! They threaten to engulf us!
	bm:callback(function() bm:queue_advisor("Rom.HB.AL.003", 8000) end, 40000);
end;





--
--	SIXTH ATTACK
--

function Start_Arv_Sixth_Attack()
	bm:out("Start_Arv_Sixth_Attack() called");
	
	enable(Arv_Sixth_Attack_Group, true);
	
	local Arv_Sixth_Attack_Planner = script_ai_planner:new("Arv_Sixth_Attack_Planner", Arv_Sixth_Attack_Group);
	
	local BAG_Arv_Sixth_Attack = barricade_attack_group:new(
		"BAG_Arv_Sixth_Attack", 
		Arv_Sixth_Attack_Planner, 
		Arv_Sixth_Attack_Building_List, 
		Rom_SUnits, 
		function()
			bm:out("BAG_Arv_Sixth_Attack has finished, watching for units to rout");
			bm:watch(
				function()
					return is_routing_or_dead(Arv_Sixth_Attack_Group)
				end,
				0,
				function()
					BAG_Attack_Has_Finished("Sixth");
				end
			);
		end
	);
	
	BAG_Arv_Sixth_Attack:start();
end;


--
--	SEVENTH ATTACK
--

function Start_Arv_Seventh_Attack()
	bm:out("Start_Arv_Seventh_Attack() called");
	
	enable(Arv_Seventh_Attack_Group, true);
	
	local Arv_Seventh_Attack_Planner = script_ai_planner:new("Arv_Seventh_Attack_Planner", Arv_Seventh_Attack_Group);
	
	local BAG_Arv_Seventh_Attack = barricade_attack_group:new(
		"BAG_Arv_Seventh_Attack", 
		Arv_Seventh_Attack_Planner, 
		Arv_Seventh_Attack_Building_List, 
		Rom_SUnits, 
		function() 
			bm:out("BAG_Arv_Seventh_Attack has finished, watching for units to rout");
			bm:watch(
				function()
					return is_routing_or_dead(Arv_Seventh_Attack_Group)
				end,
				0,
				function()
					BAG_Attack_Has_Finished("Seventh");
				end
			);
		end
	);
	
	BAG_Arv_Seventh_Attack:start();
end;


--
--	EIGHTH ATTACK
--

function Start_Arv_Eighth_Attack()
	bm:out("Start_Arv_Eighth_Attack() called");
	
	enable(Arv_Eighth_Attack_Group, true);
	
	local Arv_Eighth_Attack_Planner = script_ai_planner:new("Arv_Eighth_Attack_Planner", Arv_Eighth_Attack_Group);
	
	local BAG_Arv_Eighth_Attack = barricade_attack_group:new(
		"BAG_Arv_Eighth_Attack", 
		Arv_Eighth_Attack_Planner, 
		Arv_Eighth_Attack_Building_List, 
		Rom_SUnits, 
		function()
			bm:out("BAG_Arv_Eighth_Attack has finished, watching for units to rout");
			bm:watch(
				function()
					return is_routing_or_dead(Arv_Eighth_Attack_Group)
				end,
				0,
				function()
					BAG_Attack_Has_Finished("Eighth");
				end
			);
		end
	);
	
	BAG_Arv_Eighth_Attack:start();
end;





Count_BAG_Attack_Finished = 0;
Total_BAG_Attack_Groups = 8;

function BAG_Attack_Has_Finished(attack_id)
	Count_BAG_Attack_Finished = Count_BAG_Attack_Finished + 1;
	
	bm:out(tostring(attack_id) .. " BAG attack has finished, number of BAG attack groups that have finished is:" .. Count_BAG_Attack_Finished);
	
	if Count_BAG_Attack_Finished >= Total_BAG_Attack_Groups then
		Battle_Is_Ending(true);
	end;
end;

















BOOL_Battle_Is_Ending = false;

-- the game has gone to victory countdown phase, someone has won
function Battle_Is_Ending(player_wins)
	if not BOOL_Battle_Is_Ending then
		BOOL_Battle_Is_Ending = true;
		
		if player_wins then
			bm:out("Player has won !");
			
			-- rout remaining Gauls
			SUnit_Arv_Fifth_13.uc:morale_behavior_rout();
			SUnit_Arv_Fifth_14.uc:morale_behavior_rout();
			
			bm:stop_advisor_queue();
			-- The Gauls are beaten! This day they learn the true might of Rome!
			bm:queue_advisor("Rom.HB.AL.007", 10000);
			complete_objective("Rom.HB.AL.Objective_01");
			
			--  achievement
			local difficulty = Army_Rom_01:army_handicap();
	
			if difficulty <= 0 then			-- difficulty is "normal" or harder
				bm:unlock_achievement("ACHIEVEMENT_HISTORICAL_BATTLE_2");
			end;
			
			bm:callback(function() bm:end_battle() end, 10000);
					
		else
			bm:out("Player has lost, army is routing");
			
			bm:stop_advisor_queue();
			-- We are beaten! Let us hope that the Gauls show mercy!
			bm:queue_advisor("Rom.HB.AL.006", 10000);
			fail_objective("Rom.HB.AL.Objective_01")
							
			bm:callback(function() bm:end_battle() end, 10000);
		end;
	end;
end;







C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\al_alesia\al_start.lua



-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	INITIAL SCRIPT SETUP
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

-- clear out loaded files
system.ClearRequiredFiles();

-- load in battle script library
require "lua_scripts.Battle_Script_Header";

-- declare battlemanager object
bm = battle_manager:new(empire_battle:new());

-- get battle name from folder, and print header
battle_name, battle_shortform = get_folder_name_and_shortform();

bm:out("==============");
bm:out("==============");
bm:out("==============");
bm:out("Script started: Battle of " .. battle_name);
bm:out("==============");

-- load in other script files associated with this battle
package.path = package.path .. ";data/Script/" .. battle_name .. "/?.lua";

require (battle_shortform .. "_Declarations");
require (battle_shortform .. "_Cutscenes");
require (battle_shortform .. "_Main");
require (battle_shortform .. "_Attack");

-- register functions to be called on phase changes
bm:register_phase_change_callback("Deployment", function() Deployment_Phase() end);			-- optional deployment phase callback
bm:setup_battle(function() End_Deployment_Phase() end);										-- called when battle starts








C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ba_battle_of_bastards\ba_battle.xml
<?xml version="1.0"?>
<battle>

	<alliance id="0">
	
		<army>
		
			<faction>historical_house_stark</faction>
			
			<deployment_area>
				<centre x="160.00" y="-170.00"/>
				<width metres="250.00"/>
				<height metres="125.00"/>
				<orientation radians="0.00"/>
			</deployment_area>
			
			<unit script_name="stark1" hide_prebattle="true">
				<unit_type type="Historical_Jon"/>
				<position x="160.70" y="-130.35"/>
				<orientation radians="0.00"/>
				<width metres="21.70"/>
				<general>
					<name>2147363093</name>
					<star_rating level="0"/>
				</general>
			</unit>
			
			<unit script_name="stark3">
				<unit_type type="North_Stark_1_Guard_Davos"/>
				<position x="230.40" y="-130.35"/>
				<orientation radians="0.00"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>

			<unit script_name="stark8">
				<unit_type type="North_Stark_7_Light_Swordmen"/>
				<position x="160.85" y="-190.35"/>
				<orientation radians="0.00"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>
			
			<unit script_name="stark9">
				<unit_type type="North_Stark_9_Archers"/>
				<position x="115.45" y="-210.85"/>
				<orientation radians="0.00"/>
				<width metres="27.00"/>
				<unit_experience level="0"/>
			</unit>
			
			<unit script_name="stark11">
				<unit_type type="North_Stark_2_Heavy_Cavalry"/>
				<position x="130.45" y="-130.85"/>
				<orientation radians="0.00"/>
				<width metres="35.00"/>
				<unit_experience level="0"/>
			</unit>			

			<unit script_name="stark4">
				<unit_type type="North_Mormont_4_Heavy_Swordmen"/>
				<position x="115.75" y="-190.35"/>
				<orientation radians="0.00"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>		

			<unit script_name="stark5">
				<unit_type type="North_Hornwood_4_Heavy_Swordmen"/>
				<position x="205.65" y="-190.35"/>
				<orientation radians="0.00"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>

			<unit script_name="stark10">
				<unit_type type="North_Hornwood_9_Archers"/>
				<position x="205.35" y="-210.85"/>
				<orientation radians="0.00"/>
				<width metres="27.00"/>
				<unit_experience level="0"/>
			</unit>

			<unit script_name="stark12">
				<unit_type type="North_Hornwood_2_Heavy_Cavalry"/>
				<position x="195.35" y="-130.85"/>
				<orientation radians="0.00"/>
				<width metres="35.00"/>
				<unit_experience level="0"/>
			</unit>				
			
			<unit script_name="stark13">
				<unit_type type="Wall_Free_Folk_1_Guard_Tormund_Giantsbane"/>
				<position x="100.00" y="-130.35"/>
				<orientation radians="0.00"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>			

			<unit script_name="stark6">
				<unit_type type="Wall_Free_Folk_6_Wildling_Horde_Axemen"/>
				<position x="70.95" y="-190.85"/>
				<orientation radians="0.00"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>

			<unit script_name="stark7">
				<unit_type type="Wall_Free_Folk_6_Wildling_Horde_Axemen"/>
				<position x="250.05" y="-190.35"/>
				<orientation radians="0.00"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>
		</army>

		<army>
			<faction>historical_vale</faction>
			
			<deployment_area>
				<centre x="-330.00" y="-131.00"/>
				<width metres="250.00"/>
				<height metres="125.00"/>
				<orientation radians="1.00"/>
			</deployment_area>
			
			<unit script_name="valegeneral" hide_prebattle="true">
				<unit_type type="Vale_Arryn_1_Guard_Royce"/>
				<position x="-330" y="-131"/>
				<orientation radians="1"/>
				<width metres="40"/>
				<general>
					<name>2147363107</name>
					<star_rating level="0"/>
				</general>
			</unit>
			<unit script_name="valereinforcements1" hide_prebattle="true">
				<unit_type type="Vale_Arryn_2_Heavy_Cavalry"/>
				<position x="-250" y="-206"/>
				<orientation radians="1"/>
				<width metres="30"/>
				<unit_experience level="4"/>
			</unit>
			<unit script_name="valereinforcements2" hide_prebattle="true">
				<unit_type type="Vale_Arryn_2_Heavy_Cavalry"/>
				<position x="-270" y="-176"/>
				<orientation radians="1"/>
				<width metres="30"/>
				<unit_experience level="4"/>
			</unit>
			<unit script_name="valereinforcements3" hide_prebattle="true">
				<unit_type type="Vale_Arryn_2_Heavy_Cavalry"/>
				<position x="-290" y="-146"/>
				<orientation radians="1"/>
				<width metres="30"/>
				<unit_experience level="4"/>
			</unit>
			<unit script_name="valereinforcements4" hide_prebattle="true">
				<unit_type type="Vale_Arryn_2_Heavy_Cavalry"/>
				<position x="-310" y="-116"/>
				<orientation radians="1"/>
				<width metres="30"/>
				<unit_experience level="4"/>
			</unit>
			<unit script_name="valereinforcements5" hide_prebattle="true">
				<unit_type type="Vale_Arryn_2_Heavy_Cavalry"/>
				<position x="-330" y="-86"/>
				<orientation radians="1"/>
				<width metres="30"/>
				<unit_experience level="4"/>
			</unit>
			<unit script_name="valereinforcements6" hide_prebattle="true">
				<unit_type type="Vale_Arryn_2_Heavy_Cavalry"/>
				<position x="-350" y="-56"/>
				<orientation radians="1"/>
				<width metres="30"/>
				<unit_experience level="4"/>
			</unit>
		</army>		
		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		<rout_position x="0.00" y="0.00"/>
		
	</alliance>	
	
	<alliance id="1">
	
		<army>
		
			<faction>historical_house_bolton</faction>
			
			<deployment_area>
				<centre x="160.00" y="210.00"/>
				<width metres="280.00"/>
				<height metres="170.00"/>
				<orientation radians="3.14"/>
			</deployment_area>
						
			<unit script_name="bolt1">
				<unit_type type="Historical_Ramsay"/>
				<position x="160.75" y="200.00"/>
				<orientation radians="3.14"/>
				<width metres="23.60"/>
				<general>
					<name>2147363101</name>
					<star_rating level="0"/>
				</general>
			</unit>

			<unit script_name="bolt4">
				<unit_type type="North_Bolton_3_Heavy_Spearmen"/>
				<position x="70.75" y="220.00"/>
				<orientation radians="3.14"/>
				<width metres="23.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit script_name="bolt5">
				<unit_type type="North_Bolton_3_Heavy_Spearmen"/>
				<position x="115.55" y="220.00"/>
				<orientation radians="3.14"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>

			<unit script_name="bolt6">
				<unit_type type="North_Bolton_3_Heavy_Spearmen"/>
				<position x="160.40" y="220.00"/>
				<orientation radians="3.14"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>

			<unit script_name="bolt7">
				<unit_type type="North_Bolton_3_Heavy_Spearmen"/>
				<position x="205.85" y="220.00"/>
				<orientation radians="3.14"/>
				<width metres="23.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit script_name="bolt8">
				<unit_type type="North_Bolton_3_Heavy_Spearmen"/>
				<position x="250.25" y="220.00"/>
				<orientation radians="3.14"/>
				<width metres="23.60"/>
				<unit_experience level="0"/>
			</unit>			
			
			<unit script_name="bolt13">
				<unit_type type="North_Bolton_8_Longbowmen"/>
				<position x="115.81" y="240.00"/>
				<orientation radians="3.14"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit script_name="bolt14">
				<unit_type type="North_Bolton_8_Longbowmen"/>
				<position x="160.62" y="240.00"/>
				<orientation radians="3.14"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit script_name="bolt15">
				<unit_type type="North_Bolton_8_Longbowmen"/>
				<position x="205.72" y="240.00"/>
				<orientation radians="3.14"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit script_name="bolt16">
				<unit_type type="North_Bolton_8_Longbowmen"/>
				<position x="160.05" y="260.00"/>
				<orientation radians="3.14"/>
				<width metres="56.60"/>
				<unit_experience level="0"/>
			</unit>			
			
			<unit script_name="bolt2">
				<unit_type type="Historical_Smalljon"/>
				<position x="70.95" y="200.00"/>
				<orientation radians="3.14"/>
				<width metres="19.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit script_name="bolt9">
				<unit_type type="North_Umber_7_Light_Swordmen"/>
				<position x="70.90" y="240.00"/>
				<orientation radians="3.14"/>
				<width metres="23.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit script_name="bolt10">
				<unit_type type="North_Umber_7_Light_Swordmen"/>
				<position x="250.05" y="240.00"/>
				<orientation radians="3.14"/>
				<width metres="23.60"/>
				<unit_experience level="0"/>
			</unit>			
			
			<unit script_name="bolt17">
				<unit_type type="North_Umber_2_Heavy_Cavalry"/>
				<position x="70.81" y="140.00"/>
				<orientation radians="3.14"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit script_name="bolt18">
				<unit_type type="North_Umber_2_Heavy_Cavalry"/>
				<position x="115.62" y="160.00"/>
				<orientation radians="3.14"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>			
			
			<unit script_name="bolt3">
				<unit_type type="Historical_Harald"/>
				<position x="250.55" y="200.00"/>
				<orientation radians="3.14"/>
				<width metres="19.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit script_name="bolt11">
				<unit_type type="North_Karstark_7_Light_Swordmen"/>
				<position x="115.05" y="260.00"/>
				<orientation radians="3.14"/>
				<width metres="56.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit script_name="bolt12">
				<unit_type type="North_Karstark_7_Light_Swordmen"/>
				<position x="205.55" y="260.00"/>
				<orientation radians="3.14"/>
				<width metres="56.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit script_name="bolt19">
				<unit_type type="North_Karstark_2_Heavy_Cavalry"/>
				<position x="250.72" y="140.00"/>
				<orientation radians="3.14"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit script_name="bolt20">
				<unit_type type="North_Karstark_2_Heavy_Cavalry"/>
				<position x="205.05" y="160.00"/>
				<orientation radians="3.14"/>
				<width metres="56.60"/>
				<unit_experience level="0"/>
			</unit>

		</army>
		
		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		<rout_position x="0.00" y="0.00"/>
		
	</alliance>
	
	<battle_description>
		<battle_script prepare_for_fade_in="true">ba_start.lua</battle_script>
		<time_of_day>day</time_of_day>
		<season>Summer</season>
		<precipitation_type>dry</precipitation_type>
		<type>land_normal</type>
		<duration>3600.00</duration>
		<timeout_winning_alliance_index>1</timeout_winning_alliance_index>
		<boiling_oil></boiling_oil>
	</battle_description>
	
	<weather>
		<environment_key>weather\default\default\land\day\snow\snow_5_heavy.environment</environment_key>
		<prevailing_wind x="1.00" y="0.00"/>
	</weather>
	
	<sea_surface_name>wind_level_4</sea_surface_name>
	
	<battle_map_definition>
        <name>terrain/tiles/battle/assembly_kit/battle_of_the_bastards/battlefield</name>
	</battle_map_definition>
	
	<playable_area dimension="1300"></playable_area>
	
</battle>






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\fi_fist_of_first_men\fi_battle.xml
<?xml version="1.0"?>
<battle>

	<alliance id="0">
	
		<army>
		
			<faction>historical_nights_watch</faction>
			
			<deployment_area>
				<centre x="0.00" y="368.00"/>
				<width metres="832.00"/>
				<height metres="352.00"/>
				<orientation radians="3.14"/>
			</deployment_area>
			
			<unit>
				<unit_type type="Wall_Watch_1_Jeor_Mormont"/>
				<position x="-21.70" y="400.35"/>
				<orientation radians="3.14"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
				<general>
					<name>2147363108</name>
					<star_rating level="0"/>
				</general>
			</unit>

			<unit>
				<unit_type type="Wall_Watch_3_Rangers_Melee"/>
				<position x="10.00" y="400.35"/>
				<orientation radians="3.14"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="Wall_Watch_3_Rangers_Melee"/>
				<position x="-53.40" y="400.35"/>
				<orientation radians="3.14"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="Wall_Watch_5_Garrison_Brothers_Melee"/>
				<position x="29.75" y="425.35"/>
				<orientation radians="3.14"/>
				<width metres="19.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="Wall_Watch_5_Garrison_Brothers_Melee"/>
				<position x="-59.65" y="425.35"/>
				<orientation radians="3.14"/>
				<width metres="19.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="Wall_Watch_2_Rangers_Longbows"/>
				<position x="-14.95" y="440.85"/>
				<orientation radians="3.14"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="Wall_Watch_7_Garrison_Brothers_Bows"/>
				<position x="-0.05" y="425.35"/>
				<orientation radians="3.14"/>
				<width metres="19.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="Wall_Watch_7_Garrison_Brothers_Bows"/>
				<position x="-29.85" y="425.35"/>
				<orientation radians="3.14"/>
				<width metres="19.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="Wall_Watch_4_Mounted_Rangers"/>
				<position x="48.45" y="455.85"/>
				<orientation radians="3.14"/>
				<width metres="35.00"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="Wall_Watch_4_Mounted_Rangers"/>
				<position x="-78.35" y="455.85"/>
				<orientation radians="3.14"/>
				<width metres="35.00"/>
				<unit_experience level="0"/>
			</unit>
		</army>
		
		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		<rout_position x="0.00" y="0.00"/>
		
	</alliance>	
	
	<alliance id="1">
	
		<army>
		
			<faction>historical_white_walkers</faction>
			
			<deployment_area>
				<centre x="0.00" y="0.00"/>
				<width metres="832.00"/>
				<height metres="352.00"/>
				<orientation radians="0.00"/>
			</deployment_area>
						
			<unit>
				<unit_type type="Wall_WW_1_Wight"/>
				<position x="25.75" y="0.00"/>
				<orientation radians="0.00"/>
				<width metres="23.60"/>
				<unit_experience level="0"/>
				<general>
					<name>2147363116</name>
					<star_rating level="0"/>
				</general>
			</unit>

			<unit>
				<unit_type type="Wall_WW_1_Wight"/>
				<position x="-76.95" y="0.00"/>
				<orientation radians="0.00"/>
				<width metres="19.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="Wall_WW_1_Wight"/>
				<position x="-26.55" y="0.00"/>
				<orientation radians="0.00"/>
				<width metres="19.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="Wall_WW_1_Wight"/>
				<position x="-13.75" y="0.00"/>
				<orientation radians="0.00"/>
				<width metres="23.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="Wall_WW_1_Wight"/>
				<position x="-26.55" y="0.00"/>
				<orientation radians="0.00"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="Wall_WW_1_Wight"/>
				<position x="50.40" y="0.00"/>
				<orientation radians="0.00"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="Wall_WW_1_Wight"/>
				<position x="-2.85" y="0.00"/>
				<orientation radians="0.00"/>
				<width metres="23.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="Wall_WW_1_Wight"/>
				<position x="-53.25" y="0.00"/>
				<orientation radians="0.00"/>
				<width metres="23.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="Wall_WW_1_Wight"/>
				<position x="-1.90" y="0.00"/>
				<orientation radians="0.00"/>
				<width metres="23.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="Wall_WW_1_Wight"/>
				<position x="75.05" y="0.00"/>
				<orientation radians="0.00"/>
				<width metres="23.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="Wall_WW_2_Wight_Ancient"/>
				<position x="-43.05" y="0.00"/>
				<orientation radians="0.00"/>
				<width metres="56.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="Wall_WW_2_Wight_Ancient"/>
				<position x="15.55" y="0.00"/>
				<orientation radians="0.00"/>
				<width metres="56.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="Wall_WW_2_Wight_Ancient"/>
				<position x="105.81" y="0.00"/>
				<orientation radians="0.00"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="Wall_WW_2_Wight_Ancient"/>
				<position x="-165.62" y="0.00"/>
				<orientation radians="0.00"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="Wall_WW_2_Wight_Ancient"/>
				<position x="135.72" y="0.00"/>
				<orientation radians="0.00"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="Wall_WW_2_Wight_Ancient"/>
				<position x="-43.05" y="0.00"/>
				<orientation radians="0.00"/>
				<width metres="56.60"/>
				<unit_experience level="0"/>
			</unit>

		</army>
		
		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		<rout_position x="0.00" y="0.00"/>
		
	</alliance>
	
	<battle_description>
		<battle_script prepare_for_fade_in="true">fi_start.lua</battle_script>
		<time_of_day>day</time_of_day>
		<season>Summer</season>
		<precipitation_type>dry</precipitation_type>
		<type>land_normal</type>
		<duration>3600.00</duration>
		<timeout_winning_alliance_index>1</timeout_winning_alliance_index>
		<boiling_oil></boiling_oil>
	</battle_description>
	
	<weather>
		<environment_key>weather\default\default\land\day\snow\snow_3_heavy.environment</environment_key>
		<prevailing_wind x="1.00" y="0.00"/>
	</weather>
	
	<sea_surface_name>wind_level_4</sea_surface_name>
	
	<battle_map_definition>
		<name>Terrain/battles/main_attila_map/</name>
		<tile_map_position x="0.089" y="0.094">/</tile_map_position>
		<tile_upgrade>level1</tile_upgrade>
		<tile_upgrade>escalation3</tile_upgrade>
	</battle_map_definition>
	
	<playable_area dimension="1924"></playable_area>
	
</battle>






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ad_ad_decimum\ad_battle.xml
<?xml version="1.0"?>
<battle>

	<alliance id="0">
	
		<army>
			
			<faction>att_fact_eastern_roman_empire</faction>
			
			<deployment_area>
				<centre x="0.00" y="-368.00"/>
				<width metres="832.00"/>
				<height metres="352.00"/>
				<orientation radians="0.00"/>
			</deployment_area>
			
			<unit>
				<unit_type type="att_rom_palatina_guards"/>
				<position x="-96.85" y="-244.52"/>
				<orientation radians="0.00"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
				<general>
					<name>2147350398</name>
					<star_rating level="5"/>
				</general>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>com_shock_and_awe</special_ability>
					<special_ability>att_gen_fast_03</special_ability>
				</unit_capabilities>
			</unit>

			<unit>
				<unit_type type="att_rom_limitanei_borderguards"/>
				<position x="52.30" y="-244.92"/>
				<orientation radians="0.00"/>
				<width metres="19.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_comitatensis_spears"/>
				<position x="-74.10" y="-244.92"/>
				<orientation radians="0.00"/>
				<width metres="19.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_merc_nom_bosphoran_warriors"/>
				<position x="74.10" y="-244.92"/>
				<orientation radians="0.00"/>
				<width metres="19.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_menaulatoi"/>
				<position x="0.00" y="-244.92"/>
				<orientation radians="0.00"/>
				<width metres="23.60"/>
				<unit_experience level="0"/>
			</unit>

			<!--unit>
				<unit_type type="att_rom_menaulatoi"/>
				<position x="25.60" y="-244.92"/>
				<orientation radians="0.00"/>
				<width metres="23.60"/>
				<unit_experience level="0"/>
			</unit-->

			<unit>
				<unit_type type="att_rom_exploratores"/>
				<position x="0.00" y="-196.64"/>
				<orientation radians="0.00"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_protectores_domestici"/>
				<position x="-51.35" y="-244.92"/>
				<orientation radians="0.00"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_protectores_domestici"/>
				<position x="96.85" y="-244.92"/>
				<orientation radians="0.00"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_numeroi"/>
				<position x="-27.65" y="-244.92"/>
				<orientation radians="0.00"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_sagittarii"/>
				<position x="12.80" y="-226.92"/>
				<orientation radians="0.00"/>
				<width metres="56.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_equites_promoti"/>
				<position x="-156.56" y="-245.82"/>
				<orientation radians="0.00"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_merc_nom_hunnic_horse_archers"/>
				<position x="126.65" y="-244.52"/>
				<orientation radians="0.00"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_contarii"/>
				<position x="-126.65" y="-245.82"/>
				<orientation radians="0.00"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_catafractarii"/>
				<position x="156.57" y="-244.52"/>
				<orientation radians="0.00"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_imperial_dromedarii"/>
				<position x="-141.61" y="-215.92"/>
				<orientation radians="0.00"/>
				<width metres="38.41"/>
				<unit_experience level="0"/>
			</unit>

			<!--unit>
				<unit_type type="att_rom_imperial_dromedarii"/>
				<position x="141.61" y="-215.92"/>
				<orientation radians="0.00"/>
				<width metres="38.41"/>
				<unit_experience level="0"/>
			</unit-->

		</army>
		
		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		<rout_position x="0.00" y="0.00"/>
		
	</alliance>
	
	
	<alliance id="1">
	
		<army>
		
			<faction>att_fact_vandali</faction>
			
			<deployment_area>
				<centre x="0.00" y="368.00"/>
				<width metres="832.00"/>
				<height metres="352.00"/>
				<orientation radians="3.14"/>
			</deployment_area>
			
			<unit>
				<unit_type type="att_ger_vandal_warlord"/>
				<position x="63.55" y="220.85"/>
				<orientation radians="3.14"/>
				<width metres="23.60"/>
				<unit_experience level="0"/>
				<general>
					<name>2147350406</name>
					<star_rating level="5"/>
				</general>
			</unit>

			<unit>
				<unit_type type="att_ger_vandal_berserkers"/>
				<position x="38.90" y="220.85"/>
				<orientation radians="3.14"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_vandal_berserkers"/>
				<position x="14.25" y="220.85"/>
				<orientation radians="3.14"/>
				<width metres="23.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_vandal_berserkers"/>
				<position x="-11.35" y="220.85"/>
				<orientation radians="3.14"/>
				<width metres="23.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_vandal_raiders"/>
				<position x="0.00" y="202.85"/>
				<orientation radians="3.14"/>
				<width metres="56.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_vandal_raiders"/>
				<position x="44.87" y="236.75"/>
				<orientation radians="3.14"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_vandal_raiders"/>
				<position x="29.91" y="256.75"/>
				<orientation radians="3.14"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_vandal_raiders"/>
				<position x="14.96" y="236.75"/>
				<orientation radians="3.14"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_chosen_vandal_raiders"/>
				<position x="0.00" y="341.75"/>
				<orientation radians="3.14"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_chosen_vandal_raiders"/>
				<position x="0.00" y="265.45"/>
				<orientation radians="3.14"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_chosen_vandal_raiders"/>
				<position x="-14.95" y="245.45"/>
				<orientation radians="3.14"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_light_moorish_cavalry"/>
				<position x="-29.91" y="265.45"/>
				<orientation radians="3.14"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_light_moorish_cavalry"/>
				<position x="-44.86" y="245.45"/>
				<orientation radians="3.14"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_light_moorish_cavalry"/>
				<position x="-50.25" y="220.45"/>
				<orientation radians="3.14"/>
				<width metres="50.20"/>
				<unit_experience level="0"/>
			</unit>

		</army>
		
		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		
		<rout_position x="0.00" y="0.00"/>
		
	</alliance>
	
	<battle_description>
		<battle_script prepare_for_fade_in="true">AD_Start.lua</battle_script>
		<time_of_day>day</time_of_day>
		<season>Autumn</season>
		<precipitation_type>dry</precipitation_type>
		<type>land_normal</type>
		<duration>3600.00</duration>
		<timeout_winning_alliance_index>1</timeout_winning_alliance_index>
		<boiling_oil></boiling_oil>
	</battle_description>
	
	<weather>
		<environment_key>Weather\ROME_Med\default\Land\day\dry\morn_med_1.environment</environment_key>
		<prevailing_wind x="1.00" y="0.00"/>
	</weather>
	
	<sea_surface_name>wind_level_4</sea_surface_name>
	
	<battle_map_definition>
		<name>terrain/battles/ad_decimum/</name>
		<tile_upgrade>road</tile_upgrade>
	</battle_map_definition>
	
	<playable_area dimension="1924"></playable_area>
	
</battle>






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\an_adrianople\an_battle.xml
<?xml version="1.0"?>
<battle>		
	
	<alliance id="0">
		<army>
			<faction>att_fact_visigothi</faction>
			
			<deployment_area>
				<position x='-280' y='200'/>
				<position x='120' y='200'/>
				<position x='120' y='-200'/>
				<position x='-280' y='-200'/>
				<orientation radians="0.00"/>
			</deployment_area>
			
			<unit script_name="Vgt_01">
				<unit_type type="att_ger_germanic_nobles"/>
				<position x="-86.59" y="76.97"/>
				<orientation radians="2.93"/>
				<width metres="23.61"/>
				<unit_experience level="3"/>
				<general>
					<name>2147350412</name>
					<star_rating level="5"/>
				</general>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>com_shock_and_awe</special_ability>
					<special_ability>att_gen_war_03</special_ability>
				</unit_capabilities>
			</unit>
			<unit script_name="Vgt_02">
				<unit_type type="att_ger_germanic_spearmen"/>
				<position x="-0.07" y="47.19"/>
				<orientation radians="3.40"/>
				<width metres="17.80"/>
				<unit_experience level="2"/>
			</unit>
			<unit script_name="Vgt_03">
				<unit_type type="att_ger_germanic_pikes"/>
				<position x="-20.07" y="52.53"/>
				<orientation radians="3.40"/>
				<width metres="17.60"/>
				<unit_experience level="1"/>
			</unit>
			<unit script_name="Vgt_04">
				<unit_type type="att_ger_germanic_warband"/>
				<position x="-39.97" y="57.84"/>
				<orientation radians="3.40"/>
				<width metres="17.60"/>
				<unit_experience level="1"/>
			</unit>
			<unit script_name="Vgt_05">
				<unit_type type="att_ger_germanic_warband"/>
				<position x="-59.88" y="63.16"/>
				<orientation radians="3.40"/>
				<width metres="17.60"/>
				<unit_experience level="1"/>
			</unit>
			<unit script_name="Vgt_06">
				<unit_type type="att_ger_gothic_warband"/>
				<position x="11.80" y="62.56"/>
				<orientation radians="3.39"/>
				<width metres="18.80"/>
				<unit_experience level="1"/>
			</unit>
			<unit script_name="Vgt_07">
				<unit_type type="att_ger_gothic_warband"/>
				<position x="-8.74" y="67.81"/>
				<orientation radians="3.39"/>
				<width metres="17.60"/>
				<unit_experience level="1"/>
			</unit>
			<unit script_name="Vgt_08">
				<unit_type type="att_ger_thracian_warriors"/>
				<position x="-28.69" y="72.91"/>
				<orientation radians="3.39"/>
				<width metres="17.60"/>
				<unit_experience level="2"/>
			</unit>
			<unit script_name="Vgt_09">
				<unit_type type="att_ger_thracian_warriors"/>
				<position x="-48.65" y="78.01"/>
				<orientation radians="3.39"/>
				<width metres="17.60"/>
				<unit_experience level="1"/>
			</unit>
			
			
			<!-- ranged -->
			<unit script_name="Vgt_20">
				<unit_type type="att_ger_germanic_hunters"/>
				<position x="-149.56" y="39.68"/>
				<orientation radians="2.92"/>
				<width metres="29.60"/>
				<unit_experience level="1"/>
			</unit>
			<unit script_name="Vgt_21">
				<unit_type type="att_ger_germanic_hunters"/>
				<position x="-182.35" y="32.36"/>
				<orientation radians="2.92"/>
				<width metres="29.60"/>
				<unit_experience level="1"/>
			</unit>
			<unit script_name="Vgt_22">
				<unit_type type="att_ger_visigothic_slingers"/>
				<position x="16.58" y="-55.61"/>
				<orientation radians="4.34"/>
				<width metres="26.00"/>
				<unit_experience level="1"/>
			</unit>
			<unit script_name="Vgt_23">
				<unit_type type="att_ger_germanic_hurlers"/>
				<position x="6.05" y="-28.58"/>
				<orientation radians="4.34"/>
				<width metres="26.00"/>
				<unit_experience level="1"/>
			</unit>
			<unit script_name="Vgt_24">
				<unit_type type="att_ger_germanic_hurlers"/>
				<position x="-34.68" y="18.06"/>
				<orientation radians="-2.99"/>
				<width metres="54.8"/>
				<unit_experience level="1"/>
			</unit>
			<unit script_name="Vgt_25">
				<unit_type type="att_ger_germanic_brigands"/>
				<position x="-92.82" y="26.86"/>
				<orientation radians="3.39"/>
				<width metres="53.00"/>
				<unit_experience level="1"/>
			</unit>
			
			
			<!-- cavalry -->
			<unit script_name="Vgt_30" hide_prebattle="true">
				<unit_type type="att_ger_germanic_horsemen"/>
				<position x="-136.03" y="147.83"/>
				<orientation radians="3.14"/>
				<width metres="18.91"/>
				<unit_experience level="0"/>
			</unit>
			<unit script_name="Vgt_31" hide_prebattle="true">
				<unit_type type="att_ger_germanic_horsemen"/>
				<position x="-157.94" y="147.83"/>
				<orientation radians="3.14"/>
				<width metres="18.91"/>
				<unit_experience level="0"/>
			</unit>
			<unit script_name="Vgt_32" hide_prebattle="true">
				<unit_type type="att_ger_germanic_mounted_warband"/>
				<position x="-179.85" y="147.84"/>
				<orientation radians="3.14"/>
				<width metres="18.91"/>
				<unit_experience level="0"/>
			</unit>
			<unit script_name="Vgt_33" hide_prebattle="true">
				<unit_type type="att_ger_germanic_lancers"/>
				<position x="-201.76" y="147.84"/>
				<orientation radians="3.14"/>
				<width metres="18.91"/>
				<unit_experience level="0"/>
			</unit>
			<unit script_name="Vgt_34" hide_prebattle="true">
				<unit_type type="att_ger_gothic_lancers"/>
				<position x="-223.67" y="147.84"/>
				<orientation radians="3.14"/>
				<width metres="18.91"/>
				<unit_experience level="0"/>
			</unit>
			<unit script_name="Vgt_35" hide_prebattle="true">
				<unit_type type="att_ger_germanic_raiders"/>
				<position x="-245.33" y="147.84"/>
				<orientation radians="3.14"/>
				<width metres="18.41"/>
				<unit_experience level="0"/>
			</unit>
			<unit script_name="Vgt_36" hide_prebattle="true">
				<unit_type type="att_ger_germanic_mounted_brigands"/>
				<position x="-266.74" y="147.84"/>
				<orientation radians="3.14"/>
				<width metres="18.41"/>
				<unit_experience level="0"/>
			</unit>
		</army>
		
		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		<rout_position x="-800.00" y="1200.00"/>	
	</alliance>
	
	
	<alliance id="1">
		<army>
			<faction>att_fact_eastern_roman_empire</faction>
			
			<!--
			<deployment_area>
				<position x='-900' y='900'/>
				<position x='900' y='900'/>
				<position x='900' y='-900'/>
				<position x='-900' y='-900'/>
				<orientation radians="0.00"/>
			</deployment_area>
			-->
			
			<deployment_area>
				<boundary type="standard additive">
					<position x="-900.0" y="-900.0"/>
					<position x="-900.0" y="900.0"/>
					<position x="900.0" y="900.0"/>
					<position x="900.0" y="-900.0"/>
				</boundary>
				
				<boundary type="standard subtractive">
					<position x='-380' y='300'/>
					<position x='220' y='300'/>
					<position x='220' y='-300'/>
					<position x='-380' y='-300'/>
				</boundary>
				<orientation radians="0.00"/>
			</deployment_area>
			
			<unit script_name="Rom_01">
				<unit_type type="att_rom_excubitores_cavalry_guard"/>
				<position x="-168.06" y="-486.19"/>
				<orientation radians="0.34"/>
				<width metres="19.68"/>
				<unit_experience level="0"/>
				<general>
					<name>2147350410</name>
					<star_rating level="5"/>
				</general>
			</unit>
			<unit script_name="Rom_02">
				<unit_type type="att_rom_equites_dalmatae"/>
				<position x="-215.35" y="-480.55"/>
				<orientation radians="0.35"/>
				<width metres="20.71"/>
				<unit_experience level="0"/>
			</unit>
			<unit script_name="Rom_03">
				<unit_type type="att_rom_scout_equites"/>
				<position x="-193.06" y="-488.63"/>
				<orientation radians="0.35"/>
				<width metres="20.71"/>
				<unit_experience level="0"/>
			</unit>	
			<unit script_name="Rom_04">
				<unit_type type="att_rom_scout_equites"/>
				<position x="-149.37" y="-503.00"/>
				<orientation radians="0.33"/>
				<width metres="20.71"/>
				<unit_experience level="0"/>
			</unit>
			<unit script_name="Rom_05">
				<unit_type type="att_rom_scout_equites"/>
				<position x="-126.98" y="-510.79"/>
				<orientation radians="0.33"/>
				<width metres="20.71"/>
				<unit_experience level="0"/>
			</unit>
		
			
			<!-- infantry -->
			<unit script_name="Rom_10">
				<unit_type type="att_rom_comitatensis_spears"/>
				<position x="-192.38" y="-518.18"/>
				<orientation radians="0.33"/>
				<width metres="23.80"/>
				<unit_experience level="1"/>
			</unit>
			<unit script_name="Rom_11">
				<unit_type type="att_merc_rom_comitatensis_spears"/>
				<position x="-225.25" y="-443.38"/>
				<orientation radians="0.33"/>
				<width metres="22.80"/>
				<unit_experience level="0"/>
			</unit>
			<unit script_name="Rom_12">
				<unit_type type="att_rom_exploratores"/>
				<position x="-217.54" y="-508.75"/>
				<orientation radians="0.32"/>
				<width metres="23.01"/>
				<unit_experience level="0"/>
			</unit>
			<unit script_name="Rom_13">
				<unit_type type="att_rom_legio"/>
				<position x="-201.77" y="-451.37"/>
				<orientation radians="0.33"/>
				<width metres="22.80"/>
				<unit_experience level="1"/>
			</unit>
			<unit script_name="Rom_14">
				<unit_type type="att_rom_cohors"/>
				<position x="-178.81" y="-459.18"/>
				<orientation radians="0.33"/>
				<width metres="21.70"/>
				<unit_experience level="1"/>
			</unit>
			<unit script_name="Rom_15">
				<unit_type type="att_rom_protectores_domestici"/>
				<position x="-156.38" y="-466.81"/>
				<orientation radians="0.33"/>
				<width metres="21.70"/>
				<unit_experience level="1"/>
			</unit>
			<unit script_name="Rom_16">
				<unit_type type="att_rom_cohors"/>
				<position x="-133.94" y="-474.45"/>
				<orientation radians="0.33"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>
			<unit script_name="Rom_17">
				<unit_type type="att_rom_limitanei_borderguards"/>
				<position x="-111.45" y="-482.09"/>
				<orientation radians="0.33"/>
				<width metres="21.80"/>
				<unit_experience level="1"/>
			</unit>
			<unit script_name="Rom_18">
				<unit_type type="att_rom_praeventores"/>
				<position x="-88.97" y="-489.74"/>
				<orientation radians="0.33"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>
			<unit script_name="Rom_19">
				<unit_type type="att_rom_praeventores"/>
				<position x="-140.07" y="-534.06"/>
				<orientation radians="0.30"/>
				<width metres="26.26"/>
				<unit_experience level="0"/>
			</unit>
			<unit script_name="Rom_20">
				<unit_type type="att_rom_comitatensis_spears"/>
				<position x="-167.02" y="-526.85"/>
				<orientation radians="0.33"/>
				<width metres="23.80"/>
				<unit_experience level="0"/>
			</unit>
			<unit script_name="Rom_21">
				<unit_type type="att_rom_menaulatoi"/>
				<position x="-66.77" y="-497.29"/>
				<orientation radians="0.33"/>
				<width metres="21.20"/>
				<unit_experience level="1"/>
			</unit>
			<unit script_name="Rom_22">
				<unit_type type="att_rom_legio"/>
				<position x="-220.72" y="-519.81"/>
				<orientation radians="0.33"/>
				<width metres="25.0"/>
				<unit_experience level="0"/>
			</unit>
			<unit script_name="Rom_23">
				<unit_type type="att_rom_cohors"/>
				<position x="-143.27" y="-544.54"/>
				<orientation radians="0.31"/>
				<width metres="25.0"/>
				<unit_experience level="0"/>
			</unit>
			<unit script_name="Rom_24">
				<unit_type type="att_rom_eastern_auxilia_palatina"/>
				<position x="-117.57" y="-552.78"/>
				<orientation radians="0.31"/>
				<width metres="25.0"/>
				<unit_experience level="0"/>
			</unit>
			<unit script_name="Rom_25">
				<unit_type type="att_rom_legio"/>
				<position x="-246.43" y="-511.57"/>
				<orientation radians="0.33"/>
				<width metres="25.0"/>
				<unit_experience level="0"/>
			</unit>
			<unit script_name="Rom_26">
				<unit_type type="att_rom_eastern_auxilia_palatina"/>
				<position x="-193.84" y="-530.34"/>
				<orientation radians="0.30"/>
				<width metres="22.8"/>
				<unit_experience level="0"/>
			</unit>
			<unit script_name="Rom_27">
				<unit_type type="att_rom_cohors"/>
				<position x="-170.14" y="-537.65"/>
				<orientation radians="0.30"/>
				<width metres="22.8"/>
				<unit_experience level="0"/>
			</unit>
			
			<!-- ranged -->
			<unit script_name="Rom_30">
				<unit_type type="att_rom_sagittarii"/>
				<position x="-202.13" y="-429.25"/>
				<orientation radians="0.33"/>
				<width metres="42.20"/>
				<unit_experience level="0"/>
			</unit>
			<unit script_name="Rom_31">
				<unit_type type="att_rom_funditores"/>
				<position x="-160.25" y="-443.38"/>
				<orientation radians="0.33"/>
				<width metres="42.20"/>
				<unit_experience level="0"/>
			</unit>
			<unit script_name="Rom_32">
				<unit_type type="att_rom_levis_armaturae"/>
				<position x="-118.37" y="-457.51"/>
				<orientation radians="0.33"/>
				<width metres="42.20"/>
				<unit_experience level="0"/>
			</unit>
			<unit script_name="Rom_33">
				<unit_type type="att_rom_sagittarii"/>
				<position x="-76.49" y="-471.63"/>
				<orientation radians="0.33"/>
				<width metres="42.20"/>
				<unit_experience level="0"/>
			</unit>
			
			<!-- additional ranged -->
			<unit script_name="Rom_34">
				<unit_type type="att_rom_sagittarii"/>
				<position x="-135.8" y="-561.2"/>
				<orientation radians="0.33"/>
				<width metres="42.20"/>
				<unit_experience level="0"/>
			</unit>
			<unit script_name="Rom_35">
				<unit_type type="att_rom_sagittarii"/>
				<position x="-236.97" y="-528.7"/>
				<orientation radians="0.33"/>
				<width metres="42.20"/>
				<unit_experience level="0"/>
			</unit>
		</army>
		
		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		
		<rout_position x="200.00" y="-1500.00"/>	
	</alliance>
	
	
	<battle_description>
		<battle_script prepare_for_fade_in="true">AN_Start.lua</battle_script>
		<time_of_day>day</time_of_day>
		<season>Summer</season>
		<precipitation_type>dry</precipitation_type>
		<type>land_normal</type>
		<timeout_winning_alliance_index>0</timeout_winning_alliance_index>
		<boiling_oil></boiling_oil>
	</battle_description>
	
	<weather>
		<environment_key>Script\AN_Adrianople\AN.environment</environment_key>
		<prevailing_wind x="1.00" y="0.00"/>
	</weather>
	
	<sea_surface_name>wind_level_4</sea_surface_name>
	
	<battle_map_definition>
		<name>terrain/battles/adrianople/</name>
	</battle_map_definition>
	
	<loading_screen_title_override>battle_title_adrianople</loading_screen_title_override> 
	
	<playable_area dimension="1924"></playable_area>
	
</battle>






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ca_cartagena\ca_battle.xml
<?xml version="1.0"?>
<battle>

	<alliance id="0">
	
		<army>
			<faction>att_fact_vandali</faction>
			
			<deployment_area>
				<centre x="0.00" y="-368.00"/>
				<width metres="832.00"/>
				<height metres="352.00"/>
				<orientation radians="0.00"/>
			</deployment_area>
						
			<unit>
				<unit_type type="att_shp_van_heavy_marauders_lon_heavy"/>
				<position x="-9.68" y="-221.07"/>
				<orientation radians="0.03"/>
				<width metres="15.00"/>
				<unit_experience level="0"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>douse_fire</special_ability>
					<special_ability>att_gen_inspire_03</special_ability>
					<shot_type>small_arm_default</shot_type>
				</unit_capabilities>
				<general>
					<name>2147351197</name>		<!-- Theodoric II -->
					<star_rating level="5"/>
				</general>
			</unit>

			<unit>
				<unit_type type="att_shp_van_elite_marauders_lon_heavy"/>
				<position x="35.31" y="-222.19"/>
				<orientation radians="0.03"/>
				<width metres="15.00"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_shp_van_chosen_marauders_lib_heavy_ft"/>
				<position x="77.06" y="-225.24"/>
				<orientation radians="0.03"/>
				<width metres="8.64"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_shp_van_bowmen_lon_light_sword"/>
				<position x="116.27" y="-217.22"/>
				<orientation radians="0.03"/>
				<width metres="9.36"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_shp_van_bowmen_lon_light_sword"/>
				<position x="155.62" y="-218.20"/>
				<orientation radians="0.03"/>
				<width metres="9.36"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_shp_van_artillery_lib_heavy"/>
				<position x="194.39" y="-228.18"/>
				<orientation radians="0.03"/>
				<width metres="8.64"/>
				<unit_experience level="0"/>
			</unit>
			
			<unit>
				<unit_type type="att_shp_rom_heavy_marines_lib_heavy"/>
				<position x="-181.34" y="-222.09"/>
				<orientation radians="0.03"/>
				<width metres="8.64"/>
				<unit_experience level="2"/>
			</unit>

			<unit>
				<unit_type type="att_shp_rom_light_marines_lib_light"/>
				<position x="-142.72" y="-223.39"/>
				<orientation radians="0.03"/>
				<width metres="8.64"/>
				<unit_experience level="2"/>
			</unit>

			<unit>
				<unit_type type="att_shp_rom_bowmen_lib_light"/>
				<position x="-104.10" y="-224.69"/>
				<orientation radians="0.03"/>
				<width metres="8.64"/>
				<unit_experience level="2"/>
			</unit>

			<unit>
				<unit_type type="att_shp_wr_light_marines_lib_light_ram"/>
				<position x="-64.82" y="-217.01"/>
				<orientation radians="0.03"/>
				<width metres="9.36"/>
				<unit_experience level="2"/>
			</unit>

		</army>

		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		
		<rout_position x="0.00" y="0.00"/>
		
	</alliance>
	
	<alliance id="1">
		
		<army>
		
			<faction>att_fact_western_roman_empire</faction>
			
			<deployment_area>
				<centre x="0.00" y="368.00"/>
				<width metres="832.00"/>
				<height metres="352.00"/>
				<orientation radians="3.14"/>
			</deployment_area>
			
			<unit>
				<unit_type type="att_shp_rom_heavy_marines_lib_heavy"/>
				<position x="29.68" y="234.95"/>
				<orientation radians="3.14"/>
				<width metres="8.64"/>
				<unit_experience level="0"/>
				<general>
					<name>2147345123</name>
					<star_rating level="5"/>
				</general>
			</unit>

			<unit>
				<unit_type type="att_shp_rom_light_marines_lib_light"/>
				<position x="128.96" y="234.95"/>
				<orientation radians="3.14"/>
				<width metres="8.64"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_shp_rom_light_marines_lib_light"/>
				<position x="-128.96" y="234.95"/>
				<orientation radians="3.14"/>
				<width metres="8.64"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_shp_wr_heavy_marines_lib_heavy_ft"/>
				<position x="-22.96" y="234.95"/>
				<orientation radians="3.14"/>
				<width metres="8.64"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_shp_rom_bowmen_lib_light"/>
				<position x="117.32" y="430.95"/>
				<orientation radians="3.14"/>
				<width metres="8.64"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_shp_rom_bowmen_lib_light"/>
				<position x="70.68" y="430.95"/>
				<orientation radians="3.14"/>
				<width metres="8.64"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_shp_wr_ballista_lib_heavy"/>
				<position x="82.32" y="234.95"/>
				<orientation radians="3.14"/>
				<width metres="8.64"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_shp_rom_skirmisher_lib_light"/>
				<position x="24.04" y="430.95"/>
				<orientation radians="3.14"/>
				<width metres="8.64"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_shp_rom_skirmisher_lib_light"/>
				<position x="-22.60" y="430.95"/>
				<orientation radians="3.14"/>
				<width metres="8.64"/>
				<unit_experience level="0"/>
			</unit>

			<!--unit>
				<unit_type type="att_shp_rom_artillery_dbl_lib_light"/>
				<position x="0.00" y="332.95"/>
				<orientation radians="3.14"/>
				<width metres="8.64"/>
				<unit_experience level="0"/>
			</unit-->

			<unit>
				<unit_type type="att_shp_wr_light_marines_lib_light_spike"/>
				<position x="-75.96" y="225.95"/>
				<orientation radians="3.14"/>
				<width metres="9.36"/>
				<unit_experience level="0"/>
			</unit>

			<!--unit>
				<unit_type type="att_shp_wr_light_marines_lib_light_spike"/>
				<position x="-69.60" y="421.95"/>
				<orientation radians="3.14"/>
				<width metres="9.36"/>
				<unit_experience level="0"/>
			</unit-->

			<unit>
				<unit_type type="att_shp_wr_light_marines_lib_light_ram"/>
				<position x="-116.96" y="421.95"/>
				<orientation radians="3.14"/>
				<width metres="9.36"/>
				<unit_experience level="0"/>
			</unit>

		</army>
		
		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		
		<rout_position x="0.00" y="0.00"/>
		
	</alliance>
	
	<battle_description>
		<battle_script prepare_for_fade_in="true">CA_Start.lua</battle_script>
		<time_of_day>day</time_of_day>
		<season>Summer</season>
		<precipitation_type>dry</precipitation_type>
		<type>naval_normal</type>
		<boiling_oil></boiling_oil>
	</battle_description>
	
	<weather>
		<environment_key>Weather\ROME_Med\default\Land\day\dry\evening_med_3.environment</environment_key>
		<prevailing_wind x="1.00" y="0.00"/>
	</weather>
	
	<sea_surface_name>wind_level_4</sea_surface_name>
	
	<battle_map_definition>
		<name>Terrain/battles/main_attila_map/</name>
		<tile_map_position x="0.1325" y="0.613"></tile_map_position>
		<tile_upgrade>level2_att_cult_roman</tile_upgrade>
	</battle_map_definition>
	
	<use_deployment_radar_on_loading_screen>true</use_deployment_radar_on_loading_screen>
	
	<playable_area dimension="1924"></playable_area>
	
</battle>






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\cp_catalaunian_plains\cp_battle.xml
<?xml version="1.0" encoding="UTF-8"?>
<battle>

	<alliance id="0">
	
		<army>
		
			<faction>att_fact_western_roman_empire</faction>
			
			<deployment_area>
				<centre x="0.00" y="-368.00"/>
				<width metres="832.00"/>
				<height metres="352.00"/>
				<orientation radians="0.00"/>
			</deployment_area>
			
			<unit>
				<unit_type type="att_rom_magister_militum"/>
				<position x="-358.08" y="-362.33"/>
				<orientation radians="0.04"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
				<general>
					<name>2147345106</name>
					<star_rating level="5"/>
        		</general>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>com_shock_and_awe</special_ability>
					<special_ability>att_gen_rally_03</special_ability>
				</unit_capabilities>
			</unit>
			
			<unit>
				<unit_type type="att_rom_equites_dalmatae"/>
				<position x="-329.09" y="-363.45"/>
				<orientation radians="0.04"/>
				<width metres="26.11"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_alani_horsemen"/>
				<position x="-301.00" y="-364.53"/>
				<orientation radians="0.04"/>
				<width metres="26.11"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_equites_promoti"/>
				<position x="-272.91" y="-365.61"/>
				<orientation radians="0.04"/>
				<width metres="26.11"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_scout_equites"/>
				<position x="-244.92" y="-366.69"/>
				<orientation radians="0.04"/>
				<width metres="25.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_exculcatores"/>
				<position x="-345.05" y="-302.53"/>
				<orientation radians="6.28"/>
				<width metres="42.20"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_exculcatores"/>
				<position x="-300.75" y="-302.35"/>
				<orientation radians="6.28"/>
				<width metres="40.40"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_funditores"/>
				<position x="-257.35" y="-302.18"/>
				<orientation radians="6.28"/>
				<width metres="40.40"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_cohors"/>
				<position x="-392.50" y="-325.02"/>
				<orientation radians="0.02"/>
				<width metres="20.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_cohors"/>
				<position x="-369.90" y="-325.44"/>
				<orientation radians="0.02"/>
				<width metres="20.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_cornuti_seniores"/>
				<position x="-347.21" y="-325.87"/>
				<orientation radians="0.02"/>
				<width metres="20.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_exploratores"/>
				<position x="-325.06" y="-326.28"/>
				<orientation radians="0.02"/>
				<width metres="19.50"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_nor_saxon_spears"/>
				<position x="-303.56" y="-326.69"/>
				<orientation radians="0.02"/>
				<width metres="19.50"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_legio"/>
				<position x="-282.07" y="-327.09"/>
				<orientation radians="0.02"/>
				<width metres="19.50"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_legio"/>
				<position x="-260.57" y="-327.50"/>
				<orientation radians="0.02"/>
				<width metres="19.50"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_legio_comitatenses"/>
				<position x="-239.08" y="-327.90"/>
				<orientation radians="0.02"/>
				<width metres="19.50"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_axe_heerbann"/>
				<position x="-217.58" y="-328.30"/>
				<orientation radians="0.02"/>
				<width metres="19.50"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_western_auxilia_palatina"/>
				<position x="-195.93" y="-328.71"/>
				<orientation radians="0.02"/>
				<width metres="19.80"/>
				<unit_experience level="0"/>
			</unit>

		</army>
		
		<army>
		
			<faction>att_fact_visigothi</faction>
			
			<deployment_area>
				<centre x="0.00" y="-368.00"/>
				<width metres="832.00"/>
				<height metres="352.00"/>
				<orientation radians="0.00"/>
			</deployment_area>
			
			<unit>
				<unit_type type="att_ger_gothic_general"/>
				<position x="78.57" y="-420.13"/>
				<orientation radians="0.00"/>
				<width metres="22.51"/>
				<unit_experience level="0"/>
				<general>
					<name>2147345103</name>
					<star_rating level="5"/>
        		</general>
			</unit>

			<unit>
				<unit_type type="att_ger_gardingi_cavalry"/>
				<position x="174.41" y="-420.54"/>
				<orientation radians="0.00"/>
				<width metres="20.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_germanic_horsemen"/>
				<position x="198.22" y="-420.65"/>
				<orientation radians="0.00"/>
				<width metres="20.71"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_germanic_mounted_warband"/>
				<position x="103.18" y="-420.24"/>
				<orientation radians="0.00"/>
				<width metres="20.71"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_noble_germanic_horsemen"/>
				<position x="221.93" y="-420.75"/>
				<orientation radians="0.00"/>
				<width metres="20.71"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_noble_germanic_horsemen"/>
				<position x="126.89" y="-420.34"/>
				<orientation radians="0.00"/>
				<width metres="20.71"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_taifali_cavalry"/>
				<position x="245.64" y="-420.85"/>
				<orientation radians="0.00"/>
				<width metres="20.71"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_taifali_cavalry"/>
				<position x="150.60" y="-420.44"/>
				<orientation radians="0.00"/>
				<width metres="20.71"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_elite_germanic_archers"/>
				<position x="159.51" y="-360.18"/>
				<orientation radians="0.00"/>
				<width metres="56.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_germanic_brigands"/>
				<position x="144.56" y="-220.18"/>
				<orientation radians="0.00"/>
				<width metres="56.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_germanic_band"/>
				<position x="75.51" y="-396.28"/>
				<orientation radians="0.00"/>
				<width metres="23.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_germanic_band"/>
				<position x="109.11" y="-396.68"/>
				<orientation radians="0.00"/>
				<width metres="23.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_germanic_band"/>
				<position x="142.71" y="-396.68"/>
				<orientation radians="0.00"/>
				<width metres="23.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_germanic_band"/>
				<position x="176.31" y="-396.68"/>
				<orientation radians="0.00"/>
				<width metres="23.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_germanic_band"/>
				<position x="209.91" y="-396.68"/>
				<orientation radians="0.00"/>
				<width metres="23.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_germanic_spearmen"/>
				<position x="159.51" y="-378.18"/>
				<orientation radians="0.00"/>
				<width metres="19.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_gothic_falxmen"/>
				<position x="243.51" y="-396.68"/>
				<orientation radians="0.00"/>
				<width metres="23.60"/>
				<unit_experience level="0"/>
			</unit>

		</army>
		
		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		
		<rout_position x="0.00" y="0.00"/>
		
	</alliance>
	
	<alliance id="1">
	
		<army>
		
			<faction>att_fact_hunni</faction>
			
			<deployment_area>
				<centre x="0.00" y="368.00"/>
				<width metres="832.00"/>
				<height metres="352.00"/>
				<orientation radians="3.14"/>
			</deployment_area>
			
			<unit>
				<unit_type type="att_nom_hunnic_warlord"/>
				<position x="169.46" y="252.71"/>
				<orientation radians="3.14"/>
				<width metres="24.31"/>
				<unit_experience level="0"/>
				<general>
					<name>2147344592</name>
					<uniform>att_general_huns_attila</uniform>
					<star_rating level="8"/>
        		</general>
			</unit>

			<unit>
				<unit_type type="att_nom_hunnic_devil_archers"/>
				<position x="347.33" y="252.40"/>
				<orientation radians="3.14"/>
				<width metres="23.41"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_nom_hunnic_devil_cavalry"/>
				<position x="184.90" y="276.08"/>
				<orientation radians="3.14"/>
				<width metres="17.11"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_nom_hunnic_mounted_warband"/>
				<position x="324.32" y="275.84"/>
				<orientation radians="3.14"/>
				<width metres="17.11"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_nom_noble_acatziri_raiders"/>
				<position x="163.79" y="276.12"/>
				<orientation radians="3.14"/>
				<width metres="17.11"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_nom_noble_horse_archers"/>
				<position x="142.82" y="237.75"/>
				<orientation radians="3.14"/>
				<width metres="20.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_nom_nokkors"/>
				<position x="304.11" y="275.87"/>
				<orientation radians="3.14"/>
				<width metres="15.31"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_nom_shamans_of_the_eternal_sky"/>
				<position x="143.58" y="276.15"/>
				<orientation radians="3.14"/>
				<width metres="15.31"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_nom_steppe_horse_archers"/>
				<position x="319.90" y="242.45"/>
				<orientation radians="3.14"/>
				<width metres="23.41"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_nom_steppe_mounted_bows"/>
				<position x="117.94" y="252.80"/>
				<orientation radians="3.14"/>
				<width metres="20.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_nom_steppe_bows"/>
				<position x="284.81" y="251.61"/>
				<orientation radians="3.14"/>
				<width metres="36.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_nom_steppe_bows"/>
				<position x="244.01" y="251.68"/>
				<orientation radians="3.14"/>
				<width metres="36.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_nom_steppe_bows"/>
				<position x="204.11" y="251.75"/>
				<orientation radians="3.14"/>
				<width metres="35.00"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_nom_bosphoran_infantry"/>
				<position x="284.45" y="275.01"/>
				<orientation radians="3.14"/>
				<width metres="14.00"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_nom_scirii_warriors"/>
				<position x="268.05" y="275.04"/>
				<orientation radians="3.14"/>
				<width metres="12.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_nom_scirii_warriors"/>
				<position x="252.25" y="275.06"/>
				<orientation radians="3.14"/>
				<width metres="12.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_nom_hunnic_spears"/>
				<position x="236.45" y="275.09"/>
				<orientation radians="3.14"/>
				<width metres="12.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_gothic_warband"/>
				<position x="220.65" y="275.12"/>
				<orientation radians="3.14"/>
				<width metres="12.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_gothic_warband"/>
				<position x="204.85" y="275.15"/>
				<orientation radians="3.14"/>
				<width metres="12.80"/>
				<unit_experience level="0"/>
			</unit>

		</army>
		
		<army>
		
			<faction>att_fact_hunni</faction>
			
			<deployment_area>
				<centre x="0.00" y="368.00"/>
				<width metres="832.00"/>
				<height metres="352.00"/>
				<orientation radians="3.14"/>
			</deployment_area>
			
			<unit>
				<unit_type type="att_nom_steppe_chieftain"/>
				<position x="-61.73" y="297.19"/>
				<orientation radians="3.14"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
				<general>
					<name>2147345096</name>
					<star_rating level="5"/>
        		</general>
			</unit>

			<unit>
				<unit_type type="att_nom_hunnic_horsemen"/>
				<position x="-94.64" y="297.19"/>
				<orientation radians="3.14"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_nom_hunnic_horsemen"/>
				<position x="-127.55" y="297.19"/>
				<orientation radians="3.14"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_nom_steppe_bows"/>
				<position x="-72.14" y="278.29"/>
				<orientation radians="3.14"/>
				<width metres="56.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_nom_steppe_shield_archers"/>
				<position x="-133.74" y="278.29"/>
				<orientation radians="3.14"/>
				<width metres="56.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_nom_uar_archers"/>
				<position x="-195.34" y="278.29"/>
				<orientation radians="3.14"/>
				<width metres="56.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_nom_bosphoran_infantry"/>
				<position x="-62.24" y="256.29"/>
				<orientation radians="3.14"/>
				<width metres="23.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_nom_hunnic_dismounted_warband"/>
				<position x="-90.84" y="256.29"/>
				<orientation radians="3.14"/>
				<width metres="23.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_nom_hunnic_spears"/>
				<position x="-156.40" y="296.29"/>
				<orientation radians="3.14"/>
				<width metres="19.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_gothic_falxmen"/>
				<position x="-181.20" y="296.29"/>
				<orientation radians="3.14"/>
				<width metres="19.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_nom_steppe_tribespeople"/>
				<position x="-119.44" y="256.29"/>
				<orientation radians="3.14"/>
				<width metres="23.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_elite_ostrogothic_pikemen"/>
				<position x="-148.04" y="256.29"/>
				<orientation radians="3.14"/>
				<width metres="23.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_nom_scirii_warriors"/>
				<position x="-176.64" y="256.29"/>
				<orientation radians="3.14"/>
				<width metres="23.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_nom_scirii_warriors"/>
				<position x="-205.24" y="256.29"/>
				<orientation radians="3.14"/>
				<width metres="23.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_nom_scirii_warriors"/>
				<position x="-207.90" y="296.29"/>
				<orientation radians="3.14"/>
				<width metres="23.60"/>
				<unit_experience level="0"/>
			</unit>

		</army>
		
		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		
		<rout_position x="0.00" y="0.00"/>
		
	</alliance>
	
	<battle_description>
		<battle_script prepare_for_fade_in="true">CP_Start.lua</battle_script>
		<time_of_day>day</time_of_day>
		<season>Summer</season>
		<precipitation_type>dry</precipitation_type>
		<type>land_normal</type>
		<duration>3600.00</duration>
		<timeout_winning_alliance_index>1</timeout_winning_alliance_index>
		<boiling_oil></boiling_oil>
	</battle_description>

	<sea_surface_name>wind_level_2</sea_surface_name>
		
	<weather>
		<environment_key>Weather\default\default\land\day\dry\evening_north_3.environment</environment_key>
		<prevailing_wind x="0" y="9"/>
	</weather>
	
	<battle_map_definition>
		<name>terrain/battles/catalaunian_plains/</name>
	</battle_map_definition>
	
	<playable_area dimension="1924"></playable_area>
	
</battle>







C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\da_dara\da_battle.xml
<?xml version="1.0"?>
<battle>
	
	<alliance>
		<army>	
			<faction>att_fact_eastern_roman_empire</faction>
			
			<deployment_area>
				<centre x="0.00" y="200"/>
				<width metres="800.00"/>
				<height metres="1000.00"/>
				<orientation radians="0.00"/>
			</deployment_area>
			
			<camera_start_position x="-26.5" y="812.2" z="109.4"/>
			<camera_target_position x="-27.3" y="769.2" z="2.8"/>
			
			<!-- cav -->
			<unit script_name="Byz_01">
				<unit_type type="att_rom_comes"/>
				<position x="-4.7" y="14.5"/>
				<orientation radians="-3.13"/>
				<width metres="24.3"/>
				<unit_experience level="3"/>
				<unit_capabilities>
					<special_ability>com_shock_and_awe</special_ability>
					<special_ability>form_diamond</special_ability>
				</unit_capabilities>
				<general>
					<name>2147350398</name>		<!-- Flavius Belisarius -->
					<star_rating level="4"/>
					<uniform>bel_belisarius</uniform>
				</general>
			</unit>
			<unit script_name="Byz_02">
				<unit_type type="att_rom_excubitores_cavalry_guard"/>
				<position x="-31.1" y="14.8"/>
				<orientation radians="-3.13"/>
				<width metres="24.3"/>
				<unit_experience level="2"/>
				<unit_capabilities>
					<special_ability>form_diamond</special_ability>
					<special_ability>steady_retreat</special_ability>
				</unit_capabilities>
			</unit>
			<unit script_name="Byz_03">
				<unit_type type="att_rom_excubitores_cavalry_guard"/>
				<position x="-57.4" y="15.2"/>
				<orientation radians="-3.13"/>
				<width metres="24.3"/>
				<unit_experience level="2"/>
				<unit_capabilities>
					<special_ability>form_diamond</special_ability>
					<special_ability>steady_retreat</special_ability>
				</unit_capabilities>
			</unit>
				
			<!-- melee -->
			<unit script_name="Byz_10">
				<unit_type type="att_rom_hetaireia_guards"/>
				<position x="26.5" y="-60.2"/>
				<orientation radians="3.13"/>
				<width metres="20.6"/>
				<unit_experience level="2"/>
				<unit_capabilities>
					<special_ability>headhunt</special_ability>
					<special_ability>rapid_advance</special_ability>
				</unit_capabilities>
			</unit>
			<unit script_name="Byz_11">
				<unit_type type="att_rom_eastern_auxilia_palatina"/>
				<position x="4.3" y="-60.4"/>
				<orientation radians="3.13"/>
				<width metres="19.8"/>
				<unit_experience level="2"/>
				<unit_capabilities>
					<special_ability>form_testudo_defensive</special_ability>
				</unit_capabilities>
			</unit>
			<unit script_name="Byz_12">
				<unit_type type="att_rom_eastern_armoured_legio"/>
				<position x="-17.3" y="-60.7"/>
				<orientation radians="3.13"/>
				<width metres="19.5"/>
				<unit_experience level="2"/>
				<unit_capabilities>
					<special_ability>form_testudo_defensive</special_ability>
				</unit_capabilities>
			</unit>
			<unit script_name="Byz_13">
				<unit_type type="att_rom_legio"/>
				<position x="-38.8" y="-60.9"/>
				<orientation radians="3.13"/>
				<width metres="19.5"/>
				<unit_experience level="2"/>
				<unit_capabilities>
					<special_ability>form_testudo_defensive</special_ability>
				</unit_capabilities>
			</unit>
			<unit script_name="Byz_14">
				<unit_type type="att_rom_comitatensis_spears"/>
				<position x="-60.0" y="-61.2"/>
				<orientation radians="3.13"/>
				<width metres="18.8"/>
				<unit_experience level="3"/>
				<unit_capabilities>
					<special_ability>form_testudo_defensive</special_ability>
				</unit_capabilities>
			</unit>
			<unit script_name="Byz_15">
				<unit_type type="att_merc_nom_bosphoran_warriors"/>
				<position x="-80.8" y="-61.4"/>
				<orientation radians="3.13"/>
				<width metres="18.8"/>
				<unit_experience level="2"/>
				<unit_capabilities>
					<special_ability>steady_retreat</special_ability>
				</unit_capabilities>
			</unit>
			<unit script_name="Byz_16">
				<unit_type type="att_merc_nom_bosphoran_warriors"/>
				<position x="-101.9" y="-61.7"/>
				<orientation radians="3.12"/>
				<width metres="19.5"/>
				<unit_experience level="3"/>
				<unit_capabilities>
					<special_ability>steady_retreat</special_ability>
				</unit_capabilities>
			</unit>
			<unit script_name="Byz_17">
				<unit_type type="att_rom_lanciarii_seniores"/>
				<position x="-37.6" y="-40.6"/>
				<orientation radians="3.13"/>
				<width metres="15.8"/>
				<unit_experience level="3"/>
				<unit_capabilities>
					<special_ability>form_testudo_defensive</special_ability>
				</unit_capabilities>
			</unit>
			<unit script_name="Byz_18">
				<unit_type type="att_rom_eastern_armoured_legio"/>
				<position x="-19.6" y="-40.4"/>
				<orientation radians="3.13"/>
				<width metres="16.2"/>
				<unit_experience level="2"/>
				<unit_capabilities>
					<special_ability>form_testudo_defensive</special_ability>
				</unit_capabilities>
			</unit>
			<unit script_name="Byz_19">
				<unit_type type="att_rom_eastern_armoured_legio"/>
				<position x="-55.4" y="-40.8"/>
				<orientation radians="3.13"/>
				<width metres="15.8"/>
				<unit_experience level="3"/>
				<unit_capabilities>
					<special_ability>form_testudo_defensive</special_ability>
				</unit_capabilities>
			</unit>
			
			
			<!-- ranged -->
			<unit script_name="Byz_30">
				<unit_type type="att_rom_funditores"/>
				<position x="-18.3" y="-23.4"/>
				<orientation radians="3.14"/>
				<width metres="40.4"/>
				<unit_experience level="1"/>
				<unit_capabilities>
					<special_ability>precision_shot</special_ability>
				</unit_capabilities>
			</unit>
			<unit script_name="Byz_31">
				<unit_type type="att_rom_levis_armaturae"/>
				<position x="-60.7" y="-23.2"/>
				<orientation radians="3.14"/>
				<width metres="40.4"/>
				<unit_experience level="2"/>
			</unit>
			<unit script_name="Byz_32">
				<unit_type type="att_rom_armoured_sagittarii"/>
				<position x="32" y="21"/>
				<orientation radians="3.13"/>
				<width metres="42.9"/>
				<unit_experience level="2"/>
				<unit_capabilities>
					<special_ability>precision_shot</special_ability>
				</unit_capabilities>
			</unit>
			<unit script_name="Byz_33">
				<unit_type type="att_rom_armoured_sagittarii"/>
				<position x="-96.3" y="18.0"/>
				<orientation radians="-3.13"/>
				<width metres="48.2"/>
				<unit_experience level="2"/>
				<unit_capabilities>
					<special_ability>precision_shot</special_ability>
				</unit_capabilities>
			</unit>	
		</army>
		
		<starting_tickets>150</starting_tickets>
		
		<victory_condition>
			<kill_or_rout_enemy />
		</victory_condition>
		<rout_position x="0.00" y="0.00"/>
	</alliance>
	
	
	<alliance>
		<army>
			<faction>att_fact_sassanid_empire</faction>
			
			<deployment_area>
				<boundary type="standard additive">
					<position x="-1000.0" y="-1000.0"/>
					<position x="-1000.0" y="1000.0"/>
					<position x="1000.0" y="1000.0"/>
					<position x="1000.0" y="-1000.0"/>
				</boundary>
				<boundary type="standard subtractive">
					<position x='-500' y='800'/>
					<position x='500' y='800'/>
					<position x='500' y='-400'/>
					<position x='-500' y='-400'/>
				</boundary>
			</deployment_area>
			
			
			<!-- cavalry -->
			<unit script_name="Sas_01">
				<unit_type type="att_est_savaran_sardar"/>
				<position x="-72.3" y="-627.3"/>
				<orientation radians="-0.05"/>
				<width metres="22.5"/>
				<unit_experience level="2"/>
				<general>
					<name>2147355186</name>
					<star_rating level="2"/>
				</general>
			</unit>
			<unit script_name="Sas_02">
				<unit_type type="att_est_zhayedan_immortal_cavalry"/>
				<position x="-86.8" y="-588.1"/>
				<orientation radians="-0.05"/>
				<width metres="30.9"/>
				<unit_experience level="1"/>
			</unit>
			<unit script_name="Sas_03">
				<unit_type type="att_est_zhayedan_immortal_cavalry"/>
				<position x="123.2" y="-578.4"/>
				<orientation radians="-0.05"/>
				<width metres="30.9"/>
				<unit_experience level="1"/>
			</unit>
			<unit script_name="Sas_04">
				<unit_type type="att_est_sogdian_camel_raiders"/>
				<position x="120.9" y="-618.4"/>
				<orientation radians="-0.05"/>
				<width metres="22.5"/>
				<unit_experience level="1"/>
			</unit>
			<unit script_name="Sas_05">
				<unit_type type="att_est_lakhmid_scouts"/>
				<position x="-47.9" y="-626.2"/>
				<orientation radians="-0.05"/>
				<width metres="22.5"/>
				<unit_experience level="1"/>
			</unit>
			<unit script_name="Sas_06">
				<unit_type type="att_est_lakhmid_scouts"/>
				<position x="-53.9" y="-586.6"/>
				<orientation radians="-0.05"/>
				<width metres="30.9"/>
				<unit_experience level="1"/>
			</unit>
			<unit script_name="Sas_07">
				<unit_type type="att_est_persian_mounted_bowmen"/>
				<position x="156.1" y="-576.9"/>
				<orientation radians="-0.05"/>
				<width metres="30.9"/>
				<unit_experience level="1"/>
			</unit>
			<unit script_name="Sas_08">
				<unit_type type="att_est_lakhmid_scouts"/>
				<position x="145.7" y="-617.9"/>
				<orientation radians="-0.05"/>
				<width metres="20.7"/>
				<unit_experience level="1"/>
			</unit>
			<unit script_name="Sas_09">
				<unit_type type="att_est_lakhmid_scouts"/>
				<position x="170.4" y="-616.9"/>
				<orientation radians="-0.05"/>
				<width metres="20.7"/>
				<unit_experience level="1"/>
			</unit>
			
			
			<!-- infantry -->
			<unit script_name="Sas_10">
				<unit_type type="att_est_dailamite_warriors"/>
				<position x="-23.4" y="-602.8"/>
				<orientation radians="-0.05"/>
				<width metres="18.4"/>
				<unit_experience level="1"/>
			</unit>
			<unit script_name="Sas_11">
				<unit_type type="att_est_sogdian_warriors"/>
				<position x="-3.07" y="-601.9"/>
				<orientation radians="-0.05"/>
				<width metres="18.4"/>
				<unit_experience level="1"/>
			</unit>
			<unit script_name="Sas_12">
				<unit_type type="att_est_persian_brigade"/>
				<position x="17.3" y="-600.9"/>
				<orientation radians="-0.05"/>
				<width metres="18.4"/>
				<unit_experience level="1"/>
			</unit>
			<unit script_name="Sas_13">
				<unit_type type="att_est_persian_brigade"/>
				<position x="37.1" y="-600"/>
				<orientation radians="-0.05"/>
				<width metres="17.3"/>
				<unit_experience level="1"/>
			</unit>
			<unit script_name="Sas_14">
				<unit_type type="att_est_persian_brigade"/>
				<position x="56.4" y="-599.1"/>
				<orientation radians="-0.05"/>
				<width metres="17.3"/>
				<unit_experience level="1"/>
			</unit>
			<unit script_name="Sas_15">
				<unit_type type="att_est_persian_brigade"/>
				<position x="75.7" y="-598.2"/>
				<orientation radians="-0.05"/>
				<width metres="17.3"/>
				<unit_experience level="1"/>
			</unit>
			<unit script_name="Sas_16">
				<unit_type type="att_est_persian_brigade"/>
				<position x="95.0" y="-597.3"/>
				<orientation radians="-0.05"/>
				<width metres="17.3"/>
				<unit_experience level="1"/>
			</unit>
			<unit script_name="Sas_17">
				<unit_type type="att_est_persian_levy"/>
				<position x="16.8" y="-582.4"/>
				<orientation radians="-0.05"/>
				<width metres="16.8"/>
				<unit_experience level="1"/>
			</unit>
			<unit script_name="Sas_18">
				<unit_type type="att_est_immortals"/>
				<position x="35.1" y="-581.6"/>
				<orientation radians="-0.05"/>
				<width metres="15.8"/>
				<unit_experience level="1"/>
			</unit>
			<unit script_name="Sas_19">
				<unit_type type="att_est_immortals"/>
				<position x="52.9" y="-580.8"/>
				<orientation radians="-0.05"/>
				<width metres="15.8"/>
				<unit_experience level="1"/>
			</unit>
			<unit script_name="Sas_20">
				<unit_type type="att_est_persian_levy"/>
				<position x="-1.98" y="-623.54"/>
				<orientation radians="6.23"/>
				<width metres="18.80"/>
				<unit_experience level="1"/>
			</unit>
			<unit script_name="Sas_21">
				<unit_type type="att_est_persian_levy"/>
				<position x="18.29" y="-622.36"/>
				<orientation radians="6.23"/>
				<width metres="17.80"/>
				<unit_experience level="1"/>
			</unit>
			<unit script_name="Sas_22">
				<unit_type type="att_est_persian_brigade"/>
				<position x="37.81" y="-621.23"/>
				<orientation radians="6.23"/>
				<width metres="17.30"/>
				<unit_experience level="1"/>
			</unit>
			<unit script_name="Sas_23">
				<unit_type type="att_est_persian_levy"/>
				<position x="57.32" y="-620.10"/>
				<orientation radians="6.23"/>
				<width metres="17.80"/>
				<unit_experience level="1"/>
			</unit>
			<unit script_name="Sas_24">
				<unit_type type="att_est_persian_levy"/>
				<position x="77.09" y="-618.95"/>
				<orientation radians="6.23"/>
				<width metres="17.80"/>
				<unit_experience level="1"/>
			</unit>
			<unit script_name="Sas_25">
				<unit_type type="att_est_persian_brigade"/>
				<position x="8.3" y="-642.6"/>
				<orientation radians="-0.05"/>
				<width metres="18.4"/>
				<unit_experience level="1"/>
			</unit>
			<unit script_name="Sas_26">
				<unit_type type="att_est_persian_brigade"/>
				<position x="29.1" y="-641.7"/>
				<orientation radians="-0.05"/>
				<width metres="17.3"/>
				<unit_experience level="1"/>
			</unit>
			<unit script_name="Sas_27">
				<unit_type type="att_est_persian_brigade"/>
				<position x="49.5" y="-640.9"/>
				<orientation radians="-0.05"/>
				<width metres="17.3"/>
				<unit_experience level="1"/>
			</unit>
			<unit script_name="Sas_28">
				<unit_type type="att_est_persian_brigade"/>
				<position x="69.7" y="-640.0"/>
				<orientation radians="-0.05"/>
				<width metres="17.3"/>
				<unit_experience level="1"/>
			</unit>
			

			<!-- ranged -->
			<unit script_name="Sas_30">
				<unit_type type="att_est_persian_skirmishers"/>
				<position x="-14" y="-565.8"/>
				<orientation radians="-0.05"/>
				<width metres="45.8"/>
				<unit_experience level="1"/>
			</unit>
			<unit script_name="Sas_31">
				<unit_type type="att_est_persian_hurlers"/>
				<position x="33.8" y="-563.6"/>
				<orientation radians="-0.05"/>
				<width metres="45.8"/>
				<unit_experience level="1"/>
			</unit>
			<unit script_name="Sas_32">
				<unit_type type="att_est_persian_skirmishers"/>
				<position x="81.5" y="-561.4"/>
				<orientation radians="-0.05"/>
				<width metres="45.8"/>
				<unit_experience level="1"/>
			</unit>
		</army>
		
		<victory_condition>
			<capture_settlement />
		</victory_condition>
		<victory_condition>
			<kill_or_rout_enemy />
		</victory_condition>
		
		<rout_position x="0.00" y="0.00"/>
	</alliance>
	
	
	<battle_description>
		<battle_script prepare_for_fade_in="true">DA_Start.lua</battle_script>
		<time_of_day>day</time_of_day>
		<season>Autumn</season>
		<precipitation_type>dry</precipitation_type>
		<type>settlement_standard</type>
	</battle_description>
	
	<weather>
		<environment_key>Weather\ROME_Med\default\Land\day\dry\day_med_clear.environment</environment_key>
		<prevailing_wind x="1.00" y="0.00"/>
	</weather>
	
	<sea_surface_name>wind_level_4</sea_surface_name>
	
	<battle_map_definition>
		<name>terrain/battles/dara/</name>
		<tile_upgrade>road</tile_upgrade>
		<tile_upgrade>escalation1</tile_upgrade>
	</battle_map_definition>
	
	<playable_area dimension="1924"></playable_area>
	
	<!-- <skip_deployment /> -->
	
</battle>






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\fr_frigidus_river\fr_battle.xml
<?xml version="1.0"?>
<battle>

	<alliance id="0">
		
		<army>
		
			<faction>att_fact_eastern_roman_empire</faction>
			
			<deployment_area>
				<centre x="0.00" y="368.00"/>
				<width metres="832.00"/>
				<height metres="352.00"/>
				<orientation radians="3.14"/>
			</deployment_area>
			
			<unit>
				<unit_type type="att_rom_palatina_guards"/>
				<position x="10.82" y="279.75"/>
				<orientation radians="3.14"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
				<general>
					<name>2147345079</name>
					<star_rating level="5"/>
        		</general>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>com_shock_and_awe</special_ability>
					<special_ability>att_gen_rally_03</special_ability>
				</unit_capabilities>
			</unit>

			<unit>
				<unit_type type="att_rom_eastern_auxilia_palatina"/>
				<position x="-11.93" y="279.75"/>
				<orientation radians="3.14"/>
				<width metres="19.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_menaulatoi"/>
				<position x="-46.53" y="327.65"/>
				<orientation radians="3.14"/>
				<width metres="23.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_menaulatoi"/>
				<position x="-72.13" y="327.65"/>
				<orientation radians="3.14"/>
				<width metres="23.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_cohors"/>
				<position x="-34.68" y="279.75"/>
				<orientation radians="3.14"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_eastern_armoured_legio"/>
				<position x="-58.38" y="279.75"/>
				<orientation radians="3.14"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_legio_comitatenses"/>
				<position x="-82.08" y="279.75"/>
				<orientation radians="3.14"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_protectores_domestici"/>
				<position x="-105.78" y="279.75"/>
				<orientation radians="3.14"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_protectores_domestici"/>
				<position x="-129.48" y="279.75"/>
				<orientation radians="3.14"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_ballistarii"/>
				<position x="-30.03" y="261.75"/>
				<orientation radians="3.14"/>
				<width metres="56.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_funditores"/>
				<position x="-88.63" y="261.75"/>
				<orientation radians="3.14"/>
				<width metres="56.60"/>
				<unit_experience level="1"/>
			</unit>

			<unit>
				<unit_type type="att_rom_equites_dalmatae"/>
				<position x="-141.13" y="296.25"/>
				<orientation radians="3.14"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_tagmata_cavalry"/>
				<position x="-59.33" y="301.95"/>
				<orientation radians="3.14"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_clibanarii"/>
				<position x="22.48" y="296.25"/>
				<orientation radians="3.14"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_equites_sagittarii"/>
				<position x="-141.13" y="257.65"/>
				<orientation radians="3.14"/>
				<width metres="38.41"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_equites_sagittarii"/>
				<position x="22.48" y="257.65"/>
				<orientation radians="3.14"/>
				<width metres="38.41"/>
				<unit_experience level="0"/>
			</unit>

		</army>
		
		<army>
		
			<faction>att_fact_visigothi</faction>
			
			<deployment_area>
				<centre x="0.00" y="368.00"/>
				<width metres="832.00"/>
				<height metres="352.00"/>
				<orientation radians="3.14"/>
			</deployment_area>
			
			<unit>
				<unit_type type="att_ger_germanic_nobles"/>
				<position x="-6.99" y="371.98"/>
				<orientation radians="3.12"/>
				<width metres="15.20"/>
				<unit_experience level="0"/>
				<general>
					<name>2147345091</name>
					<star_rating level="5"/>
        		</general>
			</unit>

			<unit>
				<unit_type type="att_ger_germanic_spearmen"/>
				<position x="-26.49" y="371.52"/>
				<orientation radians="3.12"/>
				<width metres="15.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_germanic_spear_masters"/>
				<position x="-46.28" y="371.06"/>
				<orientation radians="3.12"/>
				<width metres="15.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_thracian_warriors"/>
				<position x="-65.78" y="370.60"/>
				<orientation radians="3.12"/>
				<width metres="15.20"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_thracian_oathsworns"/>
				<position x="-84.97" y="370.15"/>
				<orientation radians="3.12"/>
				<width metres="15.20"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_germanic_bows"/>
				<position x="46.90" y="351.63"/>
				<orientation radians="3.12"/>
				<width metres="42.20"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_germanic_hunters"/>
				<position x="0.71" y="350.55"/>
				<orientation radians="3.12"/>
				<width metres="42.20"/>
				<unit_experience level="1"/>
			</unit>

			<unit>
				<unit_type type="att_ger_germanic_hurlers"/>
				<position x="-45.48" y="349.47"/>
				<orientation radians="3.12"/>
				<width metres="42.20"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_germanic_hurlers"/>
				<position x="-91.66" y="348.39"/>
				<orientation radians="3.12"/>
				<width metres="42.20"/>
				<unit_experience level="1"/>
			</unit>

			<unit>
				<unit_type type="att_ger_germanic_hurlers"/>
				<position x="-137.85" y="347.31"/>
				<orientation radians="3.12"/>
				<width metres="42.20"/>
				<unit_experience level="1"/>
			</unit>

			<unit>
				<unit_type type="att_ger_noble_germanic_horsemen"/>
				<position x="-166.67" y="384.14"/>
				<orientation radians="3.12"/>
				<width metres="20.71"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_gothic_lancers"/>
				<position x="-46.35" y="386.96"/>
				<orientation radians="3.12"/>
				<width metres="20.71"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_gothic_lancers"/>
				<position x="-191.37" y="383.57"/>
				<orientation radians="3.12"/>
				<width metres="20.71"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_germanic_night_raiders"/>
				<position x="-178.16" y="347.27"/>
				<orientation radians="3.12"/>
				<width metres="28.41"/>
				<unit_experience level="1"/>
			</unit>

		</army>
		
		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		
		<rout_position x="0.00" y="0.00"/>
		
	</alliance>
	
	<alliance id="1">
	
	<army>
		
			<faction>att_fact_western_roman_empire</faction>
			
			<deployment_area>
				<centre x="0.00" y="-368.00"/>
				<width metres="832.00"/>
				<height metres="352.00"/>
				<orientation radians="0.00"/>
			</deployment_area>
			
			<unit>
				<unit_type type="att_rom_comes"/>
				<position x="-200.57" y="-452.55"/>
				<orientation radians="0.00"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
				<general>
					<name>2147345089</name>
					<star_rating level="5"/>
        		</general>
			</unit>

			<unit>
				<unit_type type="att_rom_limitanei_borderguards"/>
				<position x="-104.30" y="-411.85"/>
				<orientation radians="0.00"/>
				<width metres="19.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_limitanei_borderguards"/>
				<position x="-74.50" y="-411.85"/>
				<orientation radians="0.00"/>
				<width metres="19.80"/>
				<unit_experience level="1"/>
			</unit>

			<unit>
				<unit_type type="att_rom_comitatensis_spears"/>
				<position x="-44.70" y="-411.45"/>
				<orientation radians="0.00"/>
				<width metres="19.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_western_auxilia_palatina"/>
				<position x="-14.90" y="-411.85"/>
				<orientation radians="0.00"/>
				<width metres="19.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_western_auxilia_palatina"/>
				<position x="14.90" y="-411.85"/>
				<orientation radians="0.00"/>
				<width metres="19.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_cornuti_seniores"/>
				<position x="44.70" y="-411.85"/>
				<orientation radians="0.00"/>
				<width metres="19.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_cornuti_seniores"/>
				<position x="74.50" y="-411.85"/>
				<orientation radians="0.00"/>
				<width metres="19.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_cornuti_seniores"/>
				<position x="104.30" y="-411.85"/>
				<orientation radians="0.00"/>
				<width metres="19.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_cohors"/>
				<position x="-110.95" y="-409.95"/>
				<orientation radians="0.00"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_protectores_domestici"/>
				<position x="-79.25" y="-430.35"/>
				<orientation radians="0.00"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_elite_palatina"/>
				<position x="-47.55" y="-430.35"/>
				<orientation radians="0.00"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_herculiani_seniores"/>
				<position x="-15.85" y="-429.95"/>
				<orientation radians="0.00"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_herculiani_seniores"/>
				<position x="15.85" y="-430.35"/>
				<orientation radians="0.00"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_herculiani_seniores"/>
				<position x="47.55" y="-430.35"/>
				<orientation radians="0.00"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_herculiani_seniores"/>
				<position x="79.25" y="-430.35"/>
				<orientation radians="0.00"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_herculiani_seniores"/>
				<position x="110.95" y="-430.35"/>
				<orientation radians="0.00"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_sagittarii"/>
				<position x="-87.90" y="-393.45"/>
				<orientation radians="0.00"/>
				<width metres="56.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_sagittarii"/>
				<position x="-29.30" y="-393.45"/>
				<orientation radians="0.00"/>
				<width metres="56.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_elite_ballistarii"/>
				<position x="29.30" y="-393.85"/>
				<orientation radians="0.00"/>
				<width metres="56.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_ravenna_elite_ballistarii"/>
				<position x="105.49" y="-387.62"/>
				<orientation radians="0.00"/>
				<width metres="56.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_scholae_palatinae"/>
				<position x="140.75" y="-452.55"/>
				<orientation radians="0.00"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_catafractarii"/>
				<position x="-170.66" y="-452.55"/>
				<orientation radians="0.00"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_catafractarii"/>
				<position x="170.66" y="-452.55"/>
				<orientation radians="0.00"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_scholae_gentiles"/>
				<position x="-140.75" y="-452.55"/>
				<orientation radians="0.00"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_scholae_gentiles"/>
				<position x="200.57" y="-452.55"/>
				<orientation radians="0.00"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_scout_equites"/>
				<position x="-24.20" y="-194.75"/>
				<orientation radians="0.00"/>
				<width metres="38.41"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_scout_equites"/>
				<position x="24.20" y="-194.75"/>
				<orientation radians="0.00"/>
				<width metres="38.41"/>
				<unit_experience level="0"/>
			</unit>

		</army>
		
		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		
		<rout_position x="0.00" y="0.00"/>
		
	</alliance>
	
	<battle_description>
		<battle_script prepare_for_fade_in="true">FR_Start.lua</battle_script>
		<time_of_day>day</time_of_day>
		<season>Summer</season>
		<precipitation_type>dry</precipitation_type>
		<type>land_normal</type>
		<duration>3600.00</duration>
		<timeout_winning_alliance_index>1</timeout_winning_alliance_index>
		<boiling_oil></boiling_oil>
	</battle_description>
	
	<weather>
		<environment_key>Weather\ROME_Med\default\Land\day\dry\day_med_1.environment</environment_key>
		<prevailing_wind x="1.00" y="0.00"/>
	</weather>
	
	<sea_surface_name>wind_level_4</sea_surface_name>
	
	<battle_map_definition>
		<name>terrain/battles/frigidus/</name>
	</battle_map_definition>
	
	<playable_area dimension="1924"></playable_area>
	
</battle>






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\po_prologue_olbia\po_battle.xml
<?xml version="1.0" encoding="UTF-8"?>
<battle xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="battle.xsd">

	<alliance id="0">
		<!-- <non_playable></non_playable> -->
		<army>
			<faction>att_fact_visigothi</faction>

			<deployment_area>
				<position x='-140' y='275'/>
				<position x='540' y='275'/>
				<position x='540' y='-1000'/>
				<position x='-140' y='-1000'/>
				<orientation radians="0.00"/>
			</deployment_area>
			
			<camera_start_position x="322.2" y="46.6" z="-16.1"/>
			<camera_target_position x="233.8" y="27.0" z="-15.3"/>
			<campaign_ai_battle_hints aggression="0.50"/>
			
			<!-- INITIAL ARMY -->
			<unit num_soldiers="160" script_name="Vgt_01">
				<unit_type type="att_ger_germanic_nobles"/>
				<position x="-117.97" y="-55.11"/>
				<orientation radians="4.79"/>
				<width metres="23.60"/>
				<unit_capabilities>
				</unit_capabilities>
				<general>
					<name>2147345066</name>					<!-- Fritigern -->
					<star_rating level="2"/>
				</general>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Vgt_02">
				<unit_type type="att_ger_germanic_levy"/>
				<position x="-115.98" y="-29.18"/>
				<orientation radians="4.79"/>
				<width metres="22.40"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Vgt_03">
				<unit_type type="att_ger_gothic_warband"/>
				<position x="-114.03" y="-3.86"/>
				<orientation radians="4.79"/>
				<width metres="22.40"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Vgt_04">
				<unit_type type="att_ger_gothic_falxmen"/>
				<position x="-112.09" y="21.47"/>
				<orientation radians="4.79"/>
				<width metres="22.40"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Vgt_05">
				<unit_type type="att_ger_gothic_warband"/>
				<position x="-110.14" y="46.79"/>
				<orientation radians="4.79"/>
				<width metres="22.40"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Vgt_06">
				<unit_type type="att_ger_germanic_spearmen"/>
				<position x="-108.18" y="72.32"/>
				<orientation radians="4.79"/>
				<width metres="22.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			
			
			<!-- TOWN DEFENDERS -->
			<unit num_soldiers="160" hide_prebattle="true" script_name="Vgt_10">
				<unit_type type="att_ger_germanic_levy"/>
				<position x="169.16" y="-27.46"/>
				<orientation radians="-0.52"/>
				<width metres="19.27"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" hide_prebattle="true" script_name="Vgt_11">
				<unit_type type="att_ger_germanic_levy"/>
				<position x="190.57" y="-15.92"/>
				<orientation radians="-0.43"/>
				<width metres="19.93"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			
			
			<!-- NAVAL REINFORCEMENTS -->
			<unit num_soldiers="80" hide_prebattle="true" script_name="Vgt_20">
				<unit_type type="att_shp_ger_archers_lon_light"/>
				<position x="256.50" y="-572.44"/>
				<orientation radians="6.26"/>
				<width metres="8.96"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="80" hide_prebattle="true" script_name="Vgt_21">
				<unit_type type="att_shp_ger_archers_lon_light"/>
				<position x="295.38" y="-561.42"/>
				<orientation radians="6.26"/>
				<width metres="9.36"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="80" hide_prebattle="true" script_name="Vgt_22">
				<unit_type type="att_shp_ger_archers_lon_light"/>
				<position x="334.73" y="-560.39"/>
				<orientation radians="6.26"/>
				<width metres="9.36"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
		</army>
		
		<starting_tickets>200</starting_tickets>
		
		<victory_condition>
		     <kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
				
		<rout_position x ="-1300.0" y = "-150"></rout_position>
	</alliance>
	
	<alliance id="1">	
		<army>
			<faction>att_fact_ostrogothi</faction>
					
			<deployment_area>
				<boundary type="standard additive">
					<position x="-1000.0" y="-1000.0"/>
					<position x="-1000.0" y="1000.0"/>
					<position x="1000.0" y="1000.0"/>
					<position x="1000.0" y="-1000.0"/>
				</boundary>
				<boundary type="standard subtractive">
					<position x='-290' y='425'/>
					<position x='690' y='425'/>
					<position x='690' y='-1000'/>
					<position x='-290' y='-1000'/>
				</boundary>
			</deployment_area>
			
			<camera_start_position x="-749.98" y="46.07" z="415.28"/>
			<camera_target_position x="-714.75" y="26.62" z="358.67"/>
			<campaign_ai_battle_hints aggression="1.00"/>
			
			<unit num_soldiers="160" script_name="Ogt_01">
				<unit_type type="att_ger_noble_germanic_swordsmen"/>
				<position x="-834.35" y="-20.81"/>
				<orientation radians="1.49"/>
				<width metres="24.8"/>
				<unit_capabilities>
				</unit_capabilities>
				<general>
					<name>2147344895</name>			<!-- Valamir -->
					<star_rating level="1"/>
				</general>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ogt_02">
				<unit_type type="att_ger_germanic_spearmen"/>
				<position x="-832.32" y="-46.94"/>
				<orientation radians="1.49"/>
				<width metres="23.6"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Ogt_03">
				<unit_type type="att_ger_germanic_levy"/>
				<position x="-830.33" y="-72.46"/>
				<orientation radians="1.49"/>
				<width metres="23.6"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ogt_04">
				<unit_type type="att_ger_germanic_spearmen"/>
				<position x="-828.35" y="-97.99"/>
				<orientation radians="1.49"/>
				<width metres="23.6"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Ogt_05">
				<unit_type type="att_ger_germanic_warband"/>
				<position x="-826.37" y="-123.51"/>
				<orientation radians="1.49"/>
				<width metres="23.6"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Ogt_06">
				<unit_type type="att_ger_germanic_levy"/>
				<position x="-824.38" y="-149.03"/>
				<orientation radians="1.49"/>
				<width metres="23.6"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
		</army>
		
		<army hide_results="true">
			<faction>att_fact_hunni</faction>
					
			<deployment_area>
				<boundary type="standard additive">
					<position x="-1000.0" y="-1000.0"/>
					<position x="-1000.0" y="1000.0"/>
					<position x="1000.0" y="1000.0"/>
					<position x="1000.0" y="-1000.0"/>
				</boundary>
				<boundary type="standard subtractive">
					<position x='-290' y='425'/>
					<position x='690' y='425'/>
					<position x='690' y='-1000'/>
					<position x='-290' y='-1000'/>
				</boundary>
			</deployment_area>
			
			<camera_start_position x="-749.98" y="46.07" z="415.28"/>
			<camera_target_position x="-714.75" y="26.62" z="358.67"/>
			<campaign_ai_battle_hints aggression="1.00"/>
				
			<!-- FIRST WAVE -->
			<unit num_soldiers="80" script_name="Hun_01">
				<unit_type type="att_nom_first_wave_lancers"/>
				<position x="-58.59" y="496.65"/>
				<orientation radians="3.03"/>
				<width metres="21.25"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Hun_02">
				<unit_type type="att_nom_first_wave_lancers"/>
				<position x="-82.18" y="501.08"/>
				<orientation radians="2.98"/>
				<width metres="21.53"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Hun_03">
				<unit_type type="att_nom_first_wave_lancers"/>
				<position x="-109.9" y="490.09"/>
				<orientation radians="2.99"/>
				<width metres="19.45"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Hun_04">
				<unit_type type="att_nom_hunnic_horse_archers"/>
				<position x="-129.68" y="479.74"/>
				<orientation radians="3.01"/>
				<width metres="19.31"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Hun_05">
				<unit_type type="att_nom_hunnic_dismounted_warband"/>
				<position x="-68.47" y="555.09"/>
				<orientation radians="2.92"/>
				<width metres="21.92"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Hun_06">
				<unit_type type="att_nom_steppe_levy"/>
				<position x="-85.72" y="541.79"/>
				<orientation radians="2.93"/>
				<width metres="15.51"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Hun_07">
				<unit_type type="att_nom_steppe_levy"/>
				<position x="-0.02" y="546.72"/>
				<orientation radians="2.96"/>
				<width metres="22.68"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Hun_08">
				<unit_type type="att_nom_steppe_levy"/>
				<position x="-27.75" y="544.89"/>
				<orientation radians="2.97"/>
				<width metres="24.02"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Hun_09">
				<unit_type type="att_nom_steppe_levy"/>
				<position x="-48.31" y="530.97"/>
				<orientation radians="2.94"/>
				<width metres="21.02"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			
			
			
			<!-- FOREST ARMY -->
			<unit num_soldiers="40" script_name="Hun_10">
				<unit_type type="att_nom_steppe_warlord"/>
				<position x="863.43" y="219.85"/>
				<orientation radians="4.33"/>
				<width metres="24.31"/>
				<unit_capabilities>
				</unit_capabilities>
				<general>
					<name>2147344779</name>			<!-- Csaba -->
					<star_rating level="1"/>
				</general>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="80" script_name="Hun_11">
				<unit_type type="att_nom_first_wave_lancers"/>
				<position x="853.88" y="243.40"/>
				<orientation radians="4.33"/>
				<width metres="22.51"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Hun_12">
				<unit_type type="att_nom_hunnic_horse_archers"/>
				<position x="876.85" y="153.04"/>
				<orientation radians="4.36"/>
				<width metres="30.91"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Hun_13">
				<unit_type type="att_nom_hunnic_horse_archers"/>
				<position x="864.81" y="185.81"/>
				<orientation radians="4.36"/>
				<width metres="30.91"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Hun_14">
				<unit_type type="att_nom_steppe_levy"/>
				<position x="840.78" y="269.91"/>
				<orientation radians="4.33"/>
				<width metres="22.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Hun_15">
				<unit_type type="att_nom_steppe_levy"/>
				<position x="831.46" y="292.89"/>
				<orientation radians="4.33"/>
				<width metres="22.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Hun_16">
				<unit_type type="att_nom_steppe_levy"/>
				<position x="822.14" y="315.87"/>
				<orientation radians="4.33"/>
				<width metres="22.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			
			<!-- ADDITIONAL -->
			<unit num_soldiers="80" script_name="Hun_20">
				<unit_type type="att_nom_steppe_raiders"/>
				<position x="297.82" y="931.47"/>
				<orientation radians="3.12"/>
				<width metres="25.88"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="80" script_name="Hun_21">
				<unit_type type="att_nom_steppe_raiders"/>
				<position x="264.33" y="928.83"/>
				<orientation radians="3.19"/>
				<width metres="24.37"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
		</army>
		
		
		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		<victory_condition>
			<capture_settlement></capture_settlement>
		</victory_condition>
		
		<rout_position x ="-1200" y = "0"></rout_position>
	</alliance>	
	

	<battle_description>
		<battle_script is_tutorial="true" prepare_for_fade_in="true">PO_Start.lua</battle_script>
		<next_campaign>pro_attila</next_campaign>
		<next_campaign_faction>att_fact_visigothi</next_campaign_faction>
		<time_of_day>day</time_of_day>
		<season>Summer</season>
		<precipitation_type>dry</precipitation_type>
		<subculture>att_sub_cult_barbarian_germanic_west</subculture>
		<type>land_normal</type>
		<timeout_winning_alliance_index>0</timeout_winning_alliance_index>
		<battlefield_owner_alliance_index>0</battlefield_owner_alliance_index>
	</battle_description>

	<sea_surface_name>wind_level_2</sea_surface_name>
		
	<weather>
		<environment_key>Script/PO_Prologue_Olbia/PO.environment</environment_key>
		<prevailing_wind x="0" y="3"/>
	</weather>
	
	<battle_map_definition>
		<name>terrain/battles/olbia/</name>
	</battle_map_definition>
	<loading_screen_title_override>battle_title_olbia</loading_screen_title_override> 
	<!-- <use_deployment_radar_on_loading_screen>false</use_deployment_radar_on_loading_screen> -->

	<!-- <skip_deployment></skip_deployment> -->
	<playable_area dimension = "1940"></playable_area>
</battle>
 






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ra_ravenna\ra_battle.xml
<?xml version="1.0"?>
<battle>

	<alliance id="0">
	
		<army>
		
			<faction>att_fact_western_roman_empire</faction>
			
			<deployment_area>
				<position x="-409.1" y="89.2"/>
				<position x="-385.5" y="67.1"/>
				<position x="-386.7" y="-91"/>
				<position x="-400.3" y="-104.7"/>
				<position x="-405.1" y="-99.6"/>
				<position x="-416" y="-110.7"/>
				<position x="-411.1" y="-116.4"/>
				<position x="-566.3" y="-270.8"/>
				<position x="-566" y="-312.5"/>
				<position x="-411.1" y="-468"/>
				<position x="-416.7" y="-473.5"/>
				<position x="-405.6" y="-484.2"/>
				<position x="-400" y="-479.9"/>
				<position x="-364.5" y="-514.2"/>
				<position x="-323" y="-513.8"/>
				<position x="-202.9" y="-393.7"/>
				<position x="-165.5" y="-393.8"/>
				<position x="-131.3" y="-428"/>
				<position x="-136.6" y="-433.3"/>
				<position x="-125" y="-444.6"/>
				<position x="-120" y="-439.4"/>
				<position x="-40.7" y="-518.2"/>
				<position x="-4.1" y="-510.6"/>
				<position x="291.4" y="-402.6"/>
				<position x="294.9" y="-409.8"/>
				<position x="309.5" y="-404.7"/>
				<position x="306.9" y="-397.1"/>
				<position x="405.2" y="-360"/>
				<position x="383.1" y="-301.4"/>
				<position x="389.7" y="-298.9"/>
				<position x="384.7" y="-286.6"/>
				<position x="378" y="-288.1"/>
				<position x="267.6" y="15.6"/>
				<position x="291.6" y="67.1"/>
				<position x="257" y="162.7"/>
				<position x="237.5" y="171.9"/>
				<position x="240.5" y="178.5"/>
				<position x="226.1" y="184.8"/>
				<position x="222.8" y="178.3"/>
				<position x="205.4" y="186.6"/>
				<position x="159.5" y="314.2"/>
				<position x="117.7" y="315.2"/>
				<position x="56.1" y="287.7"/>
				<position x="-50.9" y="219.3"/>
				<position x="-85" y="197.7"/>
				<position x="-180.5" y="165.9"/>
				<position x="-292" y="127.4"/>
				<position x="-350.3" y="116.3"/>
				<position x="-378" y="128.5"/>
				<orientation radians="0.00"/>
			</deployment_area>
			
			<deployment_area_alliance_index>1</deployment_area_alliance_index>
			
			<unit>
				<unit_type type="att_rom_palatina_guards"/>
				<position x="103.65" y="-284.68"/>
				<orientation radians="2.77"/>
				<width metres="25.89"/>
				<unit_experience level="0"/>
				<general>
					<name>2147344829</name>
					<star_rating level="5"/>
        		</general>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>com_shock_and_awe</special_ability>
					<special_ability>att_gen_brace_03</special_ability>
				</unit_capabilities>
			</unit>

			<unit>
				<unit_type type="att_rom_limitanei_borderguards"/>
				<position x="123.39" y="-273.68"/>
				<orientation radians="2.80"/>
				<width metres="13.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_western_auxilia_palatina"/>
				<position x="138.88" y="-268.14"/>
				<orientation radians="2.80"/>
				<width metres="15.10"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_western_auxilia_palatina"/>
				<position x="-406.27" y="-429.15"/>
				<orientation radians="3.93"/>
				<width metres="14.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_cornuti_seniores"/>
				<position x="-418.09" y="-417.21"/>
				<orientation radians="3.93"/>
				<width metres="14.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_exploratores"/>
				<position x="-429.62" y="-405.55"/>
				<orientation radians="3.93"/>
				<width metres="14.00"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_elite_palatina"/>
				<position x="-440.88" y="-394.18"/>
				<orientation radians="3.93"/>
				<width metres="14.00"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_praeventores"/>
				<position x="125.45" y="-261.15"/>
				<orientation radians="2.81"/>
				<width metres="14.35"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_sagittarii"/>
				<position x="-455.98" y="-416.76"/>
				<orientation radians="0.00"/>
				<width metres="56.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_sagittarii"/>
				<position x="143.77" y="-448.38"/>
				<orientation radians="0.00"/>
				<width metres="56.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_ravenna_elite_ballistarii"/>
				<position x="-386.12" y="-487.76"/>
				<orientation radians="0.00"/>
				<width metres="56.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_ravenna_elite_ballistarii"/>
				<position x="-423.09" y="-451.88"/>
				<orientation radians="0.00"/>
				<width metres="27.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_funditores"/>
				<position x="93.65" y="-468.46"/>
				<orientation radians="0.00"/>
				<width metres="56.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_equites_dalmatae"/>
				<position x="68.33" y="-168.57"/>
				<orientation radians="2.87"/>
				<width metres="35.11"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_scholae_palatinae"/>
				<position x="31.66" y="-178.94"/>
				<orientation radians="2.87"/>
				<width metres="35.11"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_contarii"/>
				<position x="-18.28" y="-198.81"/>
				<orientation radians="2.80"/>
				<width metres="27.48"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_scout_equites"/>
				<position x="-46.46" y="-212.05"/>
				<orientation radians="2.87"/>
				<width metres="33.41"/>
				<unit_experience level="0"/>
			</unit>
			
			<building_mountable_artillery>
				<unit_type type="att_rom_onager_bastion" />
				<position x="-405" y="-473"/>
				<orientation radians="0"/>
				<width metres="20"/>
				<unit_experience level="0"/>
			</building_mountable_artillery>
			
			<building_mountable_artillery>
				<unit_type type="att_rom_onager_bastion" />
				<position x="300" y="-400"/>
				<orientation radians="0"/>
				<width metres="20"/>
				<unit_experience level="0"/>
			</building_mountable_artillery>

		</army>
		
		<starting_tickets>150</starting_tickets>
		
		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		
		<rout_position x="0.00" y="0.00"/>
		
	</alliance>
	
	
	<alliance id="1">
	
		<army>
		
			<faction>att_fact_separatist_western_roman</faction>
			
			<deployment_area>
				<position x="-975" y="-113.2"/>
				<position x="-858.4" y="-115.2"/>
				<position x="-792.9" y="-111.1"/>
				<position x="-758.9" y="-107.2"/>
				<position x="-721.7" y="-100.1"/>
				<position x="-709.5" y="-100.5"/>
				<position x="-702.5" y="-107.1"/>
				<position x="-703" y="-113.8"/>
				<position x="-708" y="-123.5"/>
				<position x="-760.5" y="-174.2"/>
				<position x="-768.5" y="-187.9"/>
				<position x="-771.1" y="-206"/>
				<position x="-770.5" y="-369.6"/>
				<position x="-765.5" y="-394.6"/>
				<position x="-752.6" y="-415.5"/>
				<position x="-491.3" y="-675.7"/>
				<position x="-461.9" y="-696.5"/>
				<position x="-425.6" y="-712.6"/>
				<position x="-383.8" y="-721.6"/>
				<position x="-102.4" y="-735.8"/>
				<position x="-25.6" y="-727.5"/>
				<position x="53.7" y="-706.5"/>
				<position x="625" y="-499.4"/>
				<position x="640.8" y="-490.5"/>
				<position x="648.7" y="-478.6"/>
				<position x="652.9" y="-461.5"/>
				<position x="651.9" y="-443.1"/>
				<position x="503.3" y="-27.3"/>
				<position x="503.5" y="-18.9"/>
				<position x="506.9" y="-12.9"/>
				<position x="515" y="-10.2"/>
				<position x="523.9" y="-11.5"/>
				<position x="553.7" y="-34.1"/>
				<position x="616.6" y="-66.7"/>
				<position x="706.5" y="-99.5"/>
				<position x="797.5" y="-119.6"/>
				<position x="908.1" y="-123"/>
				<position x="975" y="-123"/>
				<position x="975" y="-975"/>
				<position x="-975" y="-975"/>
				<orientation radians="0.00"/>
			</deployment_area>
		
			<deployment_area_alliance_index>0</deployment_area_alliance_index>
			
			<assault_equipment>
			
				<assault_equipment_item equipment_name="siege_tower_15m_heavy">
					<position x="-650.6" y="-529.8"/>
					<orientation radians="0.79"/>
				</assault_equipment_item>
				
				<assault_equipment_item equipment_name="siege_tower_15m_heavy">
					<position x="-706" y="-615"/>
					<orientation radians="0.79"/>
				</assault_equipment_item>
				
				<assault_equipment_item equipment_name="siege_tower_15m_medium">
					<position x="193.77" y="-658.96"/>
					<orientation radians="5.91"/>
				</assault_equipment_item>
				
				<assault_equipment_item equipment_name="siege_tower_15m_medium">
					<position x="-588" y="-576"/>
					<orientation radians="0.79"/>
				</assault_equipment_item>
				
				<assault_equipment_item equipment_name="siege_ladder_15m">
				<position x="170.12" y="-669.04"/>
				<orientation radians="5.91"/>
				</assault_equipment_item>
				
				<assault_equipment_item equipment_name="siege_ladder_15m">
					<position x="217.84" y="-650.22"/>
					<orientation radians="5.91"/>
				</assault_equipment_item>
				
				<assault_equipment_item equipment_name="battering_ram_medium">
					<position x="-624.3" y="-547.0"/>
					<orientation radians="0.79"/>
				</assault_equipment_item>
				
			</assault_equipment>
			
			<unit>
				<unit_type type="att_ger_germanic_nobles"/>
				<position x="-649.46" y="-630.68"/>
				<orientation radians="0.77"/>
				<width metres="28.21"/>
				<unit_experience level="0"/>
				<general>
					<name>2147344826</name>
					<star_rating level="5"/>
        		</general>
			</unit>

			<unit>
				<unit_type type="att_ger_germanic_spearmen"/>
				<position x="170.12" y="-669.04"/>
				<orientation radians="5.91"/>
				<width metres="5.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_germanic_band"/>
				<position x="193.77" y="-658.96"/>
				<orientation radians="5.91"/>
				<width metres="7.00"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_germanic_band"/>
				<position x="217.84" y="-650.22"/>
				<orientation radians="5.91"/>
				<width metres="5.60"/>
				<unit_experience level="0"/>
			</unit>
			
			<unit>
				<unit_type type="att_ger_germanic_band"/>
				<position x="193.77" y="-658.96"/>
				<orientation radians="5.91"/>
				<width metres="7.00"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_germanic_band"/>
				<position x="217.84" y="-650.22"/>
				<orientation radians="5.91"/>
				<width metres="5.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_sarmatian_warband"/>
				<position x="-624.35" y="-547.00"/>
				<orientation radians="0.79"/>
				<width metres="7.00"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_agathyrsi_warriors"/>
				<position x="-565.22" y="-606.75"/>
				<orientation radians="0.79"/>
				<width metres="7.00"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_noble_germanic_swordsmen"/>
				<position x="-593.81" y="-578.63"/>
				<orientation radians="0.79"/>
				<width metres="9.00"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_germanic_hunters"/>
				<position x="174.97" y="-732.81"/>
				<orientation radians="5.93"/>
				<width metres="29.60"/>
				<unit_experience level="1"/>
			</unit>
			
			<unit>
				<unit_type type="att_ger_germanic_hunters"/>
				<position x="174.97" y="-732.81"/>
				<orientation radians="5.93"/>
				<width metres="29.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_elite_germanic_archers"/>
				<position x="-617.58" y="-629.52"/>
				<orientation radians="0.80"/>
				<width metres="38.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_germanic_brigands"/>
				<position x="-646.01" y="-600.54"/>
				<orientation radians="0.80"/>
				<width metres="38.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_germanic_horsemen"/>
				<position x="204.13" y="-723.00"/>
				<orientation radians="5.93"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_elite_agathyrsi_cavalry"/>
				<position x="232.19" y="-712.64"/>
				<orientation radians="5.93"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_grey_hairs"/>
				<position x="260.48" y="-702.19"/>
				<orientation radians="5.93"/>
				<width metres="28.41"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_sarmatian_mounted_skirmishers"/>
				<position x="-708.72" y="-600.93"/>
				<orientation radians="0.79"/>
				<width metres="38.41"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_germanic_raiders"/>
				<position x="-678.18" y="-631.78"/>
				<orientation radians="0.79"/>
				<width metres="38.41"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_onager"/>
				<position x="-542.54" y="-670.83"/>
				<orientation radians="0.60"/>
				<width metres="37.20"/>
				<unit_experience level="0"/>
			</unit>
			
			<unit>
				<unit_type type="att_ger_onager"/>
				<position x="-542.54" y="-670.83"/>
				<orientation radians="0.60"/>
				<width metres="37.20"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_germanic_spear_masters"/>
				<position x="-646.29" y="-663.61"/>
				<orientation radians="0.77"/>
				<width metres="42.40"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_germanic_spear_masters"/>
				<position x="-614.04" y="-695.14"/>
				<orientation radians="0.77"/>
				<width metres="39.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_germanic_spear_masters"/>
				<position x="226.91" y="-743.68"/>
				<orientation radians="5.95"/>
				<width metres="39.46"/>
				<unit_experience level="0"/>
			</unit>

		</army>
		
		<victory_condition>
			<capture_settlement></capture_settlement>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
				
		<rout_position x="0.00" y="0.00"/>
		
		<deploys_first></deploys_first>
		
	</alliance>
	
	<battle_description>
		<battle_script prepare_for_fade_in="false">RA_Start.lua</battle_script>
		<time_of_day>day</time_of_day>
		<season>Summer</season>
		<precipitation_type>dry</precipitation_type>
		<type>settlement_standard</type>
		<duration>3600.00</duration>
		<timeout_winning_alliance_index>0</timeout_winning_alliance_index>
		<boiling_oil></boiling_oil>
	</battle_description>
	
	<fortification_wall_damage>0.8</fortification_wall_damage>
	<fortification_building_damage>0.8</fortification_building_damage>
	<!--fortification_wall_breaches>12</fortification_wall_breaches-->
	
	<weather>
		<environment_key>Weather/ROME_Destruct/default/land/day/dry/day_dark_4c.environment</environment_key>
		<prevailing_wind x="1.00" y="0.00"/>
	</weather>
	
	<sea_surface_name>wind_level_4</sea_surface_name>
	
	<battle_map_definition>
		<name>Terrain/battles/main_attila_map/</name>
		<tile_map_position x="0.32185" y="0.425887"></tile_map_position>
		<tile_upgrade>level2</tile_upgrade>
		<tile_upgrade>escalation3</tile_upgrade>
	</battle_map_definition>
	
	<playable_area dimension="1924"></playable_area>
	
</battle>






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\sa_samarra\sa_battle.xml
<?xml version="1.0"?>
<battle>

	<alliance id="0">
	
		<army>
		
			<faction>att_fact_sassanid_empire</faction>
			
			<deployment_area>
				<centre x="0.00" y="-368.00"/>
				<width metres="832.00"/>
				<height metres="352.00"/>
				<orientation radians="0.00"/>
			</deployment_area>

			<unit>
				<unit_type type="att_est_savaran_sardar"/>
				<position x="47.86" y="-243.89"/>
				<orientation radians="0.00"/>
				<width metres="27.91"/>
				<unit_experience level="3"/>
				<general>
					<name>2147345121</name>
					<star_rating level="5"/>
        		</general>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>com_shock_and_awe</special_ability>
					<special_ability>att_gen_brace_03</special_ability>
					<shot_type>small_arm_default</shot_type>
					<shot_type>small_arm_flaming</shot_type>
					<shot_type>small_arm_heavy</shot_type>
					<shot_type>small_arm_whistling</shot_type>
				</unit_capabilities>
			</unit>

			<unit>
				<unit_type type="att_est_persian_levy"/>
				<position x="-33.65" y="-269.59"/>
				<orientation radians="0.00"/>
				<width metres="19.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_est_armenian_spears"/>
				<position x="-11.85" y="-269.59"/>
				<orientation radians="0.00"/>
				<width metres="19.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_est_armenian_spears"/>
				<position x="9.95" y="-269.59"/>
				<orientation radians="0.00"/>
				<width metres="19.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_est_elite_dailamite_infantry"/>
				<position x="32.70" y="-269.59"/>
				<orientation radians="0.00"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_est_persian_bowmen"/>
				<position x="92.91" y="-214.39"/>
				<orientation radians="0.00"/>
				<width metres="56.60"/>
				<unit_experience level="3"/>
			</unit>

			<unit>
				<unit_type type="att_est_kurdish_archers"/>
				<position x="-92.91" y="-214.39"/>
				<orientation radians="0.00"/>
				<width metres="56.60"/>
				<unit_experience level="2"/>
			</unit>

			<unit>
				<unit_type type="att_est_grivpanvar_cataphracts"/>
				<position x="-77.78" y="-243.89"/>
				<orientation radians="0.00"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_est_persian_camel_raiders"/>
				<position x="77.78" y="-243.89"/>
				<orientation radians="0.00"/>
				<width metres="27.91"/>
				<unit_experience level="1"/>
			</unit>

			<unit>
				<unit_type type="att_est_persian_cataphracts"/>
				<position x="-47.86" y="-243.89"/>
				<orientation radians="0.00"/>
				<width metres="27.91"/>
				<unit_experience level="2"/>
			</unit>

			<unit>
				<unit_type type="att_est_gyan_avspar"/>
				<position x="-14.95" y="-243.89"/>
				<orientation radians="0.00"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_est_pushtighban_cataphracts"/>
				<position x="14.95" y="-243.89"/>
				<orientation radians="0.00"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_est_persian_mounted_bowmen"/>
				<position x="-40.41" y="-215.29"/>
				<orientation radians="0.00"/>
				<width metres="38.41"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_est_zhayedan_immortal_cavalry"/>
				<position x="0.00" y="-215.29"/>
				<orientation radians="0.00"/>
				<width metres="38.41"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_est_elite_savaran_cavalry"/>
				<position x="40.41" y="-215.29"/>
				<orientation radians="0.00"/>
				<width metres="38.41"/>
				<unit_experience level="0"/>
			</unit>

		</army>
		
		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		
		<rout_position x="0.00" y="0.00"/>
		
	</alliance>
	
	<alliance id="1">
	
		<army>
		
			<faction>att_fact_eastern_roman_empire</faction>
			
			<deployment_area>
				<centre x="0.00" y="368.00"/>
				<width metres="832.00"/>
				<height metres="352.00"/>
				<orientation radians="3.14"/>
			</deployment_area>
			
			<unit>
				<unit_type type="att_rom_palatina_guards"/>
				<position x="50.70" y="251.72"/>
				<orientation radians="3.14"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
				<general>
					<name>2147345118</name>
					<star_rating level="5"/>
        		</general>
			</unit>

			<unit>
				<unit_type type="att_rom_eastern_auxilia_palatina"/>
				<position x="27.95" y="251.72"/>
				<orientation radians="3.14"/>
				<width metres="19.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_eastern_auxilia_palatina"/>
				<position x="6.15" y="251.72"/>
				<orientation radians="3.14"/>
				<width metres="19.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_menaulatoi"/>
				<position x="30.80" y="273.02"/>
				<orientation radians="3.14"/>
				<width metres="23.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_menaulatoi"/>
				<position x="5.20" y="273.02"/>
				<orientation radians="3.14"/>
				<width metres="23.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_menaulatoi"/>
				<position x="-20.40" y="273.02"/>
				<orientation radians="3.14"/>
				<width metres="23.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_praeventores"/>
				<position x="28.90" y="230.42"/>
				<orientation radians="3.14"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_praeventores"/>
				<position x="5.20" y="230.42"/>
				<orientation radians="3.14"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_protectores_domestici"/>
				<position x="-16.60" y="251.72"/>
				<orientation radians="3.14"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_numeroi"/>
				<position x="-40.30" y="251.72"/>
				<orientation radians="3.14"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_hetaireia_guards"/>
				<position x="-18.50" y="230.42"/>
				<orientation radians="3.14"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_armoured_sagittarii"/>
				<position x="34.50" y="212.42"/>
				<orientation radians="3.14"/>
				<width metres="56.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_funditores"/>
				<position x="-24.10" y="212.42"/>
				<orientation radians="3.14"/>
				<width metres="56.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_tagmata_cavalry"/>
				<position x="110.42" y="252.62"/>
				<orientation radians="3.14"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_tagmata_cavalry"/>
				<position x="-70.10" y="252.62"/>
				<orientation radians="3.14"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_contarii"/>
				<position x="80.51" y="252.62"/>
				<orientation radians="3.14"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_imperial_dromedarii"/>
				<position x="-105.26" y="252.62"/>
				<orientation radians="3.14"/>
				<width metres="38.41"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_cheiroballistra"/>
				<position x="-76.00" y="215.52"/>
				<orientation radians="3.14"/>
				<width metres="37.20"/>
				<unit_experience level="0"/>
			</unit>

		</army>
		
		
		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		
		<rout_position x="0.00" y="0.00"/>
		
	</alliance>
	
	<battle_description>
		<battle_script prepare_for_fade_in="true">SA_Start.lua</battle_script>
		<time_of_day>day</time_of_day>
		<season>Summer</season>
		<precipitation_type>dry</precipitation_type>
		<type>land_normal</type>
		<duration>3600.00</duration>
		<timeout_winning_alliance_index>1</timeout_winning_alliance_index>
		<boiling_oil></boiling_oil>
	</battle_description>
	
	<weather>
		<environment_key>Weather\ROME_Desert\default\Land\day\dry\evening_med_3.environment</environment_key>
		<prevailing_wind x="1.00" y="0.00"/>
	</weather>
	
	<sea_surface_name>wind_level_4</sea_surface_name>
	
	<battle_map_definition>
		<name>terrain/battles/samarra/</name>
	</battle_map_definition>
	
	<playable_area dimension="1924"></playable_area>
	
</battle>






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\so_soissons\so_battle.xml
<?xml version="1.0"?>
<battle>

	<alliance id="0">
	
		<army>
		
			<faction>att_fact_franci</faction>
			
			<deployment_area>
				<centre x="0.00" y="-368.00"/>
				<width metres="832.00"/>
				<height metres="352.00"/>
				<orientation radians="0.00"/>
			</deployment_area>
						
			<unit>
				<unit_type type="att_ger_germanic_nobles"/>
				<position x="25.75" y="-208.35"/>
				<orientation radians="0.00"/>
				<width metres="23.60"/>
				<unit_experience level="0"/>
				<general>
					<name>2147345124</name>
					<star_rating level="5"/>
				</general>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>com_shock_and_awe</special_ability>
					<special_ability>att_gen_fear_03</special_ability>
				</unit_capabilities>
			</unit>

			<unit>
				<unit_type type="att_ger_germanic_levy"/>
				<position x="-76.95" y="-208.35"/>
				<orientation radians="0.00"/>
				<width metres="19.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_germanic_spear_masters"/>
				<position x="-26.55" y="-208.35"/>
				<orientation radians="0.00"/>
				<width metres="19.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_germanic_pikes"/>
				<position x="-13.75" y="-270.35"/>
				<orientation radians="0.00"/>
				<width metres="23.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_germanic_warband"/>
				<position x="-26.55" y="-248.35"/>
				<orientation radians="0.00"/>
				<width metres="21.70"/>
				<unit_experience level="1"/>
			</unit>

			<unit>
				<unit_type type="att_ger_germanic_warband"/>
				<position x="50.40" y="-208.35"/>
				<orientation radians="0.00"/>
				<width metres="21.70"/>
				<unit_experience level="1"/>
			</unit>

			<unit>
				<unit_type type="att_ger_elite_sword_heerbann"/>
				<position x="-2.85" y="-208.35"/>
				<orientation radians="0.00"/>
				<width metres="23.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_francisca_heerbann"/>
				<position x="-53.25" y="-208.35"/>
				<orientation radians="0.00"/>
				<width metres="23.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_axe_heerbann"/>
				<position x="-1.90" y="-248.35"/>
				<orientation radians="0.00"/>
				<width metres="23.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_axe_heerbann"/>
				<position x="75.05" y="-208.35"/>
				<orientation radians="0.00"/>
				<width metres="23.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_germanic_hunters"/>
				<position x="-43.05" y="-230.35"/>
				<orientation radians="0.00"/>
				<width metres="56.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_germanic_archers"/>
				<position x="15.55" y="-230.35"/>
				<orientation radians="0.00"/>
				<width metres="56.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_taifali_cavalry"/>
				<position x="105.81" y="-209.25"/>
				<orientation radians="0.00"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_taifali_cavalry"/>
				<position x="-165.62" y="-209.25"/>
				<orientation radians="0.00"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_germanic_lancers"/>
				<position x="135.72" y="-209.25"/>
				<orientation radians="0.00"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_frankish_lancers"/>
				<position x="-135.71" y="-209.25"/>
				<orientation radians="0.00"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_antrustriones_cavalry_guard"/>
				<position x="165.63" y="-209.25"/>
				<orientation radians="0.00"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_ger_sacra_francisca"/>
				<position x="-105.80" y="-209.25"/>
				<orientation radians="0.00"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

		</army>
		
		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		<rout_position x="0.00" y="0.00"/>
		
	</alliance>
	
	
	<alliance id="1">
	
		<army>
		
			<faction>att_fact_soissons</faction>
			
			<deployment_area>
				<centre x="0.00" y="368.00"/>
				<width metres="832.00"/>
				<height metres="352.00"/>
				<orientation radians="3.14"/>
			</deployment_area>
			
			<unit>
				<unit_type type="att_rom_palatina_guards"/>
				<position x="48.45" y="244.85"/>
				<orientation radians="3.14"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
				<general>
					<name>2147345134</name>
					<star_rating level="5"/>
				</general>
			</unit>

			<unit>
				<unit_type type="att_rom_comitatensis_spears"/>
				<position x="29.75" y="226.35"/>
				<orientation radians="3.14"/>
				<width metres="19.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_western_auxilia_palatina"/>
				<position x="-29.85" y="226.35"/>
				<orientation radians="3.14"/>
				<width metres="19.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_western_auxilia_palatina"/>
				<position x="-59.65" y="226.35"/>
				<orientation radians="3.14"/>
				<width metres="19.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_foederati_spears"/>
				<position x="-0.05" y="226.35"/>
				<orientation radians="3.14"/>
				<width metres="19.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_exploratores"/>
				<position x="10.00" y="193.35"/>
				<orientation radians="3.14"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_exploratores"/>
				<position x="-21.70" y="193.35"/>
				<orientation radians="3.14"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_praeventores"/>
				<position x="-53.40" y="193.35"/>
				<orientation radians="3.14"/>
				<width metres="21.70"/>
				<unit_experience level="1"/>
			</unit>

			<unit>
				<unit_type type="att_rom_legio_comitatenses"/>
				<position x="16.75" y="244.85"/>
				<orientation radians="3.14"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_herculiani_seniores"/>
				<position x="-14.95" y="244.85"/>
				<orientation radians="3.14"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_herculiani_seniores"/>
				<position x="-46.65" y="244.85"/>
				<orientation radians="3.14"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_herculiani_seniores"/>
				<position x="-78.35" y="244.85"/>
				<orientation radians="3.14"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_funditores"/>
				<position x="14.35" y="208.35"/>
				<orientation radians="3.14"/>
				<width metres="56.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_exculcatores"/>
				<position x="-44.25" y="208.35"/>
				<orientation radians="3.14"/>
				<width metres="56.60"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_scholae_palatinae"/>
				<position x="108.16" y="267.05"/>
				<orientation radians="3.14"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_contarii"/>
				<position x="-108.16" y="267.05"/>
				<orientation radians="3.14"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_contarii"/>
				<position x="78.25" y="267.05"/>
				<orientation radians="3.14"/>
				<width metres="27.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_scout_equites"/>
				<position x="45.05" y="184.25"/>
				<orientation radians="3.14"/>
				<width metres="38.41"/>
				<unit_experience level="0"/>
			</unit>

		</army>
		
		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		
		<rout_position x="0.00" y="0.00"/>
		
	</alliance>
	
	<battle_description>
		<battle_script prepare_for_fade_in="true">SO_Start.lua</battle_script>
		<time_of_day>day</time_of_day>
		<season>Winter</season>
		<precipitation_type>snow</precipitation_type>
		<type>land_normal</type>
		<duration>3600.00</duration>
		<timeout_winning_alliance_index>1</timeout_winning_alliance_index>
		<boiling_oil></boiling_oil>
	</battle_description>
	
	<weather>
		<environment_key>Weather\default\default\land\day\snow\snow.environment</environment_key>
		<prevailing_wind x="1.00" y="0.00"/>
	</weather>
	
	<sea_surface_name>wind_level_4</sea_surface_name>
	
	<battle_map_definition>
		<name>terrain/battles/soissons/</name>
	</battle_map_definition>
	
	<playable_area dimension="1924"></playable_area>
	
</battle>






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ut_utus\ut_battle.xml
<?xml version="1.0"?>
<battle>

	<alliance id="0">
	
		<army>
		
			<faction>att_fact_hunni</faction>
			
			<deployment_area>
				<centre x="0.00" y="-368.00"/>
				<width metres="832.00"/>
				<height metres="352.00"/>
				<orientation radians="0.00"/>
			</deployment_area>
			
			<unit>
				<unit_type type="att_nom_steppe_chieftain"/>
				<position x="0.07" y="-216.92"/>
				<orientation radians="6.28"/>
				<width metres="38.70"/>
				<unit_experience level="0"/>
				<general>
					<name>2147344592</name>
					<uniform>att_general_huns_attila</uniform>
					<star_rating level="8"/>
        		</general>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>com_shock_and_awe</special_ability>
					<special_ability>att_gen_fear_03</special_ability>
					<shot_type>small_arm_default</shot_type>
				</unit_capabilities>
			</unit>

			<unit>
				<unit_type type="att_nom_steppe_spearmen"/>
				<position x="-55.27" y="-193.45"/>
				<orientation radians="6.28"/>
				<width metres="20.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_nom_scirii_warriors"/>
				<position x="-32.97" y="-193.33"/>
				<orientation radians="6.28"/>
				<width metres="19.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_nom_scirii_warriors"/>
				<position x="-11.17" y="-193.23"/>
				<orientation radians="6.28"/>
				<width metres="19.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_nom_steppe_warriors"/>
				<position x="10.73" y="-193.12"/>
				<orientation radians="6.28"/>
				<width metres="20.00"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_nom_steppe_warriors"/>
				<position x="32.73" y="-193.01"/>
				<orientation radians="6.28"/>
				<width metres="20.00"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_nom_chosen_uar_warriors"/>
				<position x="54.73" y="-192.90"/>
				<orientation radians="6.28"/>
				<width metres="20.00"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_nom_steppe_mounted_brigands"/>
				<position x="182.58" y="-229.97"/>
				<orientation radians="0.00"/>
				<width metres="38.71"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_nom_steppe_mounted_tribespeople"/>
				<position x="-159.49" y="-225.58"/>
				<orientation radians="0.00"/>
				<width metres="33.31"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_nom_hunnic_horsemen"/>
				<position x="-123.18" y="-225.74"/>
				<orientation radians="0.00"/>
				<width metres="33.31"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_nom_steppe_lancers"/>
				<position x="-86.87" y="-225.91"/>
				<orientation radians="0.00"/>
				<width metres="33.31"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_nom_hunnic_horse_archers"/>
				<position x="140.87" y="-229.95"/>
				<orientation radians="0.00"/>
				<width metres="38.71"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_nom_hunnic_horse_archers"/>
				<position x="99.16" y="-229.94"/>
				<orientation radians="0.00"/>
				<width metres="38.71"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_nom_hunnic_mounted_bows"/>
				<position x="-96.55" y="-203.22"/>
				<orientation radians="6.28"/>
				<width metres="48.41"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_nom_hunnic_mounted_bows"/>
				<position x="-148.96" y="-203.45"/>
				<orientation radians="6.28"/>
				<width metres="48.41"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_nom_avar_horde"/>
				<position x="141.44" y="-206.39"/>
				<orientation radians="6.28"/>
				<width metres="38.41"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_nom_hunnic_devil_archers"/>
				<position x="181.85" y="-206.36"/>
				<orientation radians="6.28"/>
				<width metres="38.41"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_nom_hunnic_ambushers"/>
				<position x="101.03" y="-206.42"/>
				<orientation radians="6.28"/>
				<width metres="38.41"/>
				<unit_experience level="0"/>
			</unit>

		</army>
		
		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		<rout_position x="0.00" y="0.00"/>
		
	</alliance>
	
	
	<alliance id="1">
	
		<army>
		
			<faction>att_fact_eastern_roman_empire</faction>
			
			<deployment_area>
				<centre x="0.00" y="368.00"/>
				<width metres="832.00"/>
				<height metres="352.00"/>
				<orientation radians="3.14"/>
			</deployment_area>
			
			<unit>
				<unit_type type="att_rom_palatina_guards"/>
				<position x="122.48" y="279.82"/>
				<orientation radians="3.15"/>
				<width metres="22.80"/>
				<unit_experience level="0"/>
				<general>
					<name>2147344601</name>
					<star_rating level="5"/>
        		</general>
			</unit>

			<unit>
				<unit_type type="att_rom_limitanei_borderguards"/>
				<position x="97.68" y="279.90"/>
				<orientation radians="3.15"/>
				<width metres="22.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_limitanei_borderguards"/>
				<position x="72.88" y="279.99"/>
				<orientation radians="3.15"/>
				<width metres="22.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_lanciarii_seniores"/>
				<position x="48.08" y="280.08"/>
				<orientation radians="3.15"/>
				<width metres="22.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_lanciarii_seniores"/>
				<position x="23.28" y="280.17"/>
				<orientation radians="3.15"/>
				<width metres="22.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_lanciarii_seniores"/>
				<position x="-1.52" y="280.26"/>
				<orientation radians="3.15"/>
				<width metres="22.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_eastern_auxilia_palatina"/>
				<position x="-26.31" y="280.34"/>
				<orientation radians="3.15"/>
				<width metres="22.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_palatina"/>
				<position x="-51.11" y="280.43"/>
				<orientation radians="3.15"/>
				<width metres="22.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_protectores_domestici"/>
				<position x="-75.36" y="280.52"/>
				<orientation radians="3.15"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_protectores_domestici"/>
				<position x="-99.06" y="280.60"/>
				<orientation radians="3.15"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_hetaireia_guards"/>
				<position x="0.21" y="301.55"/>
				<orientation radians="3.15"/>
				<width metres="22.80"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_hetaireia_guards"/>
				<position x="-122.76" y="280.69"/>
				<orientation radians="3.15"/>
				<width metres="21.70"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_levis_armaturae"/>
				<position x="0.07" y="262.25"/>
				<orientation radians="3.15"/>
				<width metres="60.20"/>
				<unit_experience level="2"/>
			</unit>

			<unit>
				<unit_type type="att_rom_excubitores_cavalry_guard"/>
				<position x="16.83" y="236.49"/>
				<orientation radians="3.15"/>
				<width metres="29.71"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_contarii"/>
				<position x="-16.88" y="236.61"/>
				<orientation radians="3.15"/>
				<width metres="29.71"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_imperial_dromedarii"/>
				<position x="-57.18" y="236.75"/>
				<orientation radians="3.15"/>
				<width metres="40.91"/>
				<unit_experience level="0"/>
			</unit>

			<unit>
				<unit_type type="att_rom_imperial_dromedarii"/>
				<position x="57.14" y="236.35"/>
				<orientation radians="3.15"/>
				<width metres="40.91"/>
				<unit_experience level="0"/>
			</unit>

		</army>
		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		<rout_position x="0.00" y="0.00"/>
	</alliance>
	
	<battle_description>
		<battle_script prepare_for_fade_in="true">UT_Start.lua</battle_script>
		<time_of_day>day</time_of_day>
		<season>Spring</season>
		<precipitation_type>dry</precipitation_type>
		<type>land_normal</type>
		<duration>3600.00</duration>
		<timeout_winning_alliance_index>1</timeout_winning_alliance_index>
		<boiling_oil></boiling_oil>
	</battle_description>
	
	<weather>
		<environment_key>Weather\ROME_Med\default\Land\day\dry\morn_med_2.environment</environment_key>
		<prevailing_wind x="1.00" y="0.00"/>
	</weather>
	
	<sea_surface_name>wind_level_4</sea_surface_name>
	
	<battle_map_definition>
		<name>terrain/battles/utus/</name>
	</battle_map_definition>
	
	<playable_area dimension="1924"></playable_area>
	
</battle>






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ambush_valley\ambush_valley_attacker.xml
<?xml version="1.0"?>
<battle>
	<alliance id="0">
		<army>
			<faction>chosokabe</faction>
			<deployment_area>
				<orientation radians="0.00"/>
				<position x='-20.850290' y='351.528564'/>
				<position x='-30.864651' y='305.410400'/>
				<position x='-48.943447' y='283.370087'/>
				<position x='-72.214897' y='276.153564'/>
				<position x='-93.822426' y='266.385101'/>
				<position x='-108.069168' y='253.569077'/>
				<position x='-123.736221' y='239.309998'/>
				<position x='-128.194702' y='224.496979'/>
				<position x='-131.709579' y='195.875183'/>
				<position x='-135.343475' y='169.130463'/>
				<position x='-132.660156' y='151.823029'/>
				<position x='-129.892258' y='137.191360'/>
				<position x='-123.603607' y='113.522346'/>
				<position x='-102.858414' y='84.553894'/>
				<position x='-89.170403' y='62.395401'/>
				<position x='-77.036346' y='50.697296'/>
				<position x='-30.265102' y='41.017918'/>
				<position x='-16.402559' y='25.256493'/>
				<position x='-8.965141' y='5.809793'/>
				<position x='-3.491589' y='-9.205403'/>
				<position x='0.352602' y='-35.645103'/>
				<position x='0.489224' y='-54.718559'/>
				<position x='-1.754296' y='-81.962700'/>
				<position x='-13.694187' y='-103.903717'/>
				<position x='-25.157255' y='-127.031540'/>
				<position x='-40.182060' y='-147.072205'/>
				<position x='-53.703388' y='-163.878525'/>
				<position x='-55.322216' y='-180.993912'/>
				<position x='-53.151741' y='-226.373459'/>
				<position x='-64.505142' y='-274.189117'/>
				<position x='-72.805054' y='-306.643829'/>
				<position x='-88.691422' y='-355.986328'/>
				<position x='-90.480255' y='-374.135193'/>
				<position x='-83.684250' y='-396.259521'/>
				<position x='-52.260769' y='-415.853241'/>
				<position x='-18.927626' y='-418.721680'/>
				<position x='4.224049' y='-413.400146'/>
				<position x='24.577061' y='-398.669678'/>
				<position x='30.855072' y='-378.850769'/>
				<position x='30.655191' y='-354.348694'/>
				<position x='24.763824' y='-334.082977'/>
				<position x='20.111395' y='-315.466644'/>
				<position x='23.237156' y='-299.180756'/>
				<position x='40.114006' y='-277.246918'/>
				<position x='53.167118' y='-263.134521'/>
				<position x='65.687126' y='-245.615463'/>
				<position x='72.845627' y='-224.935760'/>
				<position x='75.790970' y='-197.072449'/>
				<position x='72.268906' y='-186.648514'/>
				<position x='69.096954' y='-161.790802'/>
				<position x='67.980408' y='-134.944794'/>
				<position x='68.720428' y='-110.099998'/>
				<position x='66.378479' y='-83.340286'/>
				<position x='59.744423' y='-56.252476'/>
				<position x='49.829056' y='-37.140034'/>
				<position x='39.857719' y='-16.402676'/>
				<position x='32.735603' y='4.545856'/>
				<position x='31.040131' y='21.488037'/>
				<position x='31.720678' y='46.912361'/>
				<position x='46.645660' y='80.386848'/>
				<position x='60.368580' y='100.867981'/>
				<position x='78.239441' y='125.336456'/>
				<position x='89.497345' y='149.274826'/>
				<position x='99.458801' y='173.379501'/>
				<position x='105.738907' y='201.441742'/>
				<position x='108.739655' y='223.107315'/>
				<position x='107.218315' y='238.106384'/>
				<position x='92.547264' y='259.745148'/>
				<position x='75.362358' y='277.683411'/>
				<position x='66.878601' y='290.340515'/>
				<position x='63.925262' y='301.958557'/>
				<position x='69.332535' y='315.437347'/>
				<position x='75.865845' y='332.755707'/>
				<position x='71.783051' y='345.588837'/>
				<position x='58.568527' y='361.224182'/>
				<position x='42.718719' y='368.053833'/>
				<position x='20.952812' y='373.538452'/>
				<position x='4.071129' y='371.330048'/>
				<position x='-16.733681' y='355.330231'/>
				<position x='-17.093180' y='478.890625'/>
				<position x='276.499359' y='472.026611'/>
				<position x='277.255859' y='-527.827087'/>
				<position x='-291.994324' y='-523.481140'/>
				<position x='-292.695313' y='480.179657'/>
				<position x='-19.903006' y='478.678131'/>
			</deployment_area>
			<camera_start_position x="69.4" y="39.7" z="46.6"/>
			<camera_target_position x="-13.8" y="-20.5" z="135.4"/>
			<campaign_ai_battle_hints aggression="0.50"/>
			<unit unit_category="cavalry" num_soldiers="10" script_name="Attacker_01">
				<unit_type type="Gen_Chosokabe_Motochika"/>
				<position x="71.78" y="59.24"/>
				<orientation radians="5.38"/>
				<width metres="14.15"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>rally_position</special_ability>
					<special_ability>inspire_unit</special_ability>
					<special_ability>rally</special_ability>
					<special_ability>we_stand_and_fight</special_ability>
					<special_ability>dismount</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="30" script_name="Attacker_02">
				<unit_type type="Inf_Missile_Matchlock_Samurai"/>
				<position x="61.27" y="41.80"/>
				<orientation radians="5.13"/>
				<width metres="18.55"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>rapid_volley</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="30" script_name="Attacker_03">
				<unit_type type="Inf_Missile_Matchlock_Samurai"/>
				<position x="59.19" y="-0.58"/>
				<orientation radians="4.37"/>
				<width metres="18.93"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>rapid_volley</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="30" script_name="Attacker_04">
				<unit_type type="Inf_Missile_Matchlock_Samurai"/>
				<position x="74.92" y="-35.46"/>
				<orientation radians="4.35"/>
				<width metres="18.93"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>rapid_volley</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="30" script_name="Attacker_05">
				<unit_type type="Inf_Missile_Matchlock_Samurai"/>
				<position x="-34.35" y="-26.73"/>
				<orientation radians="1.57"/>
				<width metres="18.29"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>rapid_volley</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="30" script_name="Attacker_06">
				<unit_type type="Inf_Missile_Matchlock_Samurai"/>
				<position x="-36.98" y="-65.65"/>
				<orientation radians="1.70"/>
				<width metres="19.52"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>rapid_volley</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="30" script_name="Attacker_07">
				<unit_type type="Inf_Missile_Matchlock_Samurai"/>
				<position x="-103.09" y="3.68"/>
				<orientation radians="0.79"/>
				<width metres="18.31"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>rapid_volley</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="30" script_name="Attacker_08">
				<unit_type type="Inf_Missile_Matchlock_Samurai"/>
				<position x="-62.63" y="-9.43"/>
				<orientation radians="0.34"/>
				<width metres="18.33"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>rapid_volley</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="30" script_name="Attacker_09">
				<unit_type type="Inf_Missile_Matchlock_Samurai"/>
				<position x="105.57" y="-84.12"/>
				<orientation radians="5.00"/>
				<width metres="18.19"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>rapid_volley</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="30" script_name="Attacker_10">
				<unit_type type="Inf_Missile_Bow_Samurai_Chosokabe"/>
				<position x="55.99" y="20.72"/>
				<orientation radians="4.68"/>
				<width metres="17.74"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>flaming_arrows_ability</special_ability>
					<shot_type>flaming_arrow</shot_type>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="30" script_name="Attacker_11">
				<unit_type type="Inf_Missile_Bow_Samurai_Chosokabe"/>
				<position x="67.36" y="-18.16"/>
				<orientation radians="4.29"/>
				<width metres="17.90"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>flaming_arrows_ability</special_ability>
					<shot_type>flaming_arrow</shot_type>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="30" script_name="Attacker_12">
				<unit_type type="Inf_Missile_Bow_Samurai_Chosokabe"/>
				<position x="-34.89" y="-7.31"/>
				<orientation radians="1.55"/>
				<width metres="19.00"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>flaming_arrows_ability</special_ability>
					<shot_type>flaming_arrow</shot_type>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="30" script_name="Attacker_13">
				<unit_type type="Inf_Missile_Bow_Samurai_Chosokabe"/>
				<position x="-35.48" y="-45.76"/>
				<orientation radians="1.65"/>
				<width metres="17.89"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>flaming_arrows_ability</special_ability>
					<shot_type>flaming_arrow</shot_type>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="30" script_name="Attacker_14">
				<unit_type type="Inf_Missile_Bow_Samurai_Chosokabe"/>
				<position x="-81.39" y="-2.85"/>
				<orientation radians="0.37"/>
				<width metres="18.20"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>flaming_arrows_ability</special_ability>
					<shot_type>flaming_arrow</shot_type>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="cavalry" num_soldiers="15" script_name="Attacker_15">
				<unit_type type="Cav_Spear_Light_Cavalry"/>
				<position x="-132.15" y="34.50"/>
				<orientation radians="1.39"/>
				<width metres="15.00"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>wedge_formation</special_ability>
					<special_ability>dismount</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="cavalry" num_soldiers="15" script_name="Attacker_16">
				<unit_type type="Cav_Spear_Light_Cavalry"/>
				<position x="-129.12" y="17.77"/>
				<orientation radians="1.39"/>
				<width metres="15.00"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>wedge_formation</special_ability>
					<special_ability>dismount</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="cavalry" num_soldiers="15" script_name="Attacker_17">
				<unit_type type="Cav_Spear_Light_Cavalry"/>
				<position x="100.78" y="-58.51"/>
				<orientation radians="4.32"/>
				<width metres="16.84"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>wedge_formation</special_ability>
					<special_ability>dismount</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
		</army>
		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		<rout_position x="1000.00" y="0.00"/>
	</alliance>
	<alliance id="1">
		<army>
			<faction>hojo</faction>
			<deployment_area>
				<orientation radians="0.00"/>
				<position x='-122.783417' y='221.850616'/>
				<position x='-119.039276' y='236.730576'/>
				<position x='-90.704620' y='262.828552'/>
				<position x='-70.823959' y='271.110901'/>
				<position x='-47.427673' y='276.718170'/>
				<position x='-27.618923' y='301.997955'/>
				<position x='-13.691335' y='337.356537'/>
				<position x='-13.637925' y='352.307220'/>
				<position x='3.676650' y='366.080048'/>
				<position x='20.725052' y='368.426392'/>
				<position x='54.188351' y='356.430420'/>
				<position x='67.009834' y='343.431000'/>
				<position x='70.714935' y='331.936676'/>
				<position x='59.315395' y='301.659424'/>
				<position x='63.157845' y='286.322906'/>
				<position x='71.410194' y='273.603363'/>
				<position x='86.409798' y='259.970917'/>
				<position x='102.456329' y='235.716370'/>
				<position x='103.275337' y='223.105453'/>
				<position x='94.576614' y='173.892212'/>
				<position x='73.190262' y='126.387024'/>
				<position x='42.083134' y='81.014473'/>
				<position x='27.042448' y='46.462173'/>
				<position x='28.406128' y='4.012260'/>
				<position x='35.418037' y='-16.639610'/>
				<position x='55.381577' y='-57.241211'/>
				<position x='61.580788' y='-83.895645'/>
				<position x='64.120140' y='-112.778168'/>
				<position x='63.493546' y='-136.679031'/>
				<position x='65.031464' y='-161.887238'/>
				<position x='67.706902' y='-187.910446'/>
				<position x='70.881401' y='-198.275635'/>
				<position x='68.344994' y='-224.661652'/>
				<position x='62.032845' y='-243.699875'/>
				<position x='49.107384' y='-260.895203'/>
				<position x='36.115044' y='-274.869568'/>
				<position x='19.010313' y='-297.051208'/>
				<position x='14.777413' y='-315.671448'/>
				<position x='26.062948' y='-354.751190'/>
				<position x='26.376900' y='-378.127350'/>
				<position x='20.399910' y='-395.044617'/>
				<position x='6.069168' y='-409.706940'/>
				<position x='-18.349209' y='-415.271667'/>
				<position x='-50.585831' y='-411.086700'/>
				<position x='-80.016182' y='-392.206848'/>
				<position x='-85.948532' y='-373.919617'/>
				<position x='-84.567566' y='-356.403503'/>
				<position x='-66.995712' y='-306.468719'/>
				<position x='-49.086826' y='-225.509613'/>
				<position x='-51.352894' y='-180.550858'/>
				<position x='-49.077335' y='-164.485443'/>
				<position x='-21.287218' y='-131.273895'/>
				<position x='1.390313' y='-82.421677'/>
				<position x='4.250196' y='-49.788883'/>
				<position x='3.947945' y='-33.586933'/>
				<position x='0.272508' y='-8.420479'/>
				<position x='-12.955046' y='28.112514'/>
				<position x='-28.824562' y='45.856541'/>
				<position x='-75.134361' y='56.250263'/>
				<position x='-85.306519' y='66.159309'/>
				<position x='-117.229736' y='114.740143'/>
				<position x='-129.201675' y='169.507095'/>
			</deployment_area>
			<camera_start_position x="6.03" y="56.28" z="157.77"/>
			<camera_target_position x="-13.99" y="-7.64" z="39.71"/>
			<campaign_ai_battle_hints aggression="0.50"/>
			<unit unit_category="cavalry" num_soldiers="10" script_name="Defender_01">
				<unit_type type="Gen_Hojo_Ujiyasu"/>
				<position x="2.84" y="115.95"/>
				<orientation radians="3.01"/>
				<width metres="10.98"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>rally</special_ability>
					<special_ability>rally_position</special_ability>
					<special_ability>inspire_unit</special_ability>
					<special_ability>we_stand_and_fight</special_ability>
					<special_ability>dismount</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_melee" num_soldiers="50" script_name="Defender_02">
				<unit_type type="Inf_Spear_Yari_Ashigaru"/>
				<position x="0.07" y="140.84"/>
				<orientation radians="3.11"/>
				<width metres="15.10"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>pike_wall_formation</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_melee" num_soldiers="50" script_name="Defender_03">
				<unit_type type="Inf_Spear_Yari_Ashigaru"/>
				<position x="-17.02" y="140.22"/>
				<orientation radians="3.11"/>
				<width metres="15.10"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>pike_wall_formation</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_melee" num_soldiers="50" script_name="Defender_04">
				<unit_type type="Inf_Spear_Yari_Ashigaru"/>
				<position x="17.15" y="141.45"/>
				<orientation radians="3.11"/>
				<width metres="15.10"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>pike_wall_formation</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_melee" num_soldiers="50" script_name="Defender_05">
				<unit_type type="Inf_Spear_Yari_Ashigaru"/>
				<position x="11.95" y="179.16"/>
				<orientation radians="3.05"/>
				<width metres="13.90"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>pike_wall_formation</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_melee" num_soldiers="50" script_name="Defender_06">
				<unit_type type="Inf_Spear_Yari_Ashigaru"/>
				<position x="-19.93" y="176.38"/>
				<orientation radians="3.05"/>
				<width metres="12.70"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>pike_wall_formation</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_melee" num_soldiers="50" script_name="Defender_07">
				<unit_type type="Inf_Spear_Yari_Ashigaru"/>
				<position x="-4.29" y="177.74"/>
				<orientation radians="3.05"/>
				<width metres="12.70"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>pike_wall_formation</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_melee" num_soldiers="50" script_name="Defender_08">
				<unit_type type="Inf_Spear_Yari_Ashigaru"/>
				<position x="-17.90" y="213.86"/>
				<orientation radians="3.06"/>
				<width metres="19.90"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>pike_wall_formation</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_melee" num_soldiers="50" script_name="Defender_09">
				<unit_type type="Inf_Spear_Yari_Ashigaru"/>
				<position x="3.93" y="215.56"/>
				<orientation radians="3.06"/>
				<width metres="19.90"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>pike_wall_formation</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_melee" num_soldiers="40" script_name="Defender_10">
				<unit_type type="Inf_Sword_Katana_Samurai"/>
				<position x="15.24" y="154.70"/>
				<orientation radians="3.09"/>
				<width metres="13.90"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_melee" num_soldiers="40" script_name="Defender_11">
				<unit_type type="Inf_Sword_Katana_Samurai"/>
				<position x="-0.64" y="153.88"/>
				<orientation radians="3.09"/>
				<width metres="13.90"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_melee" num_soldiers="40" script_name="Defender_12">
				<unit_type type="Inf_Sword_Katana_Samurai"/>
				<position x="-16.52" y="153.06"/>
				<orientation radians="3.09"/>
				<width metres="13.90"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_melee" num_soldiers="40" script_name="Defender_13">
				<unit_type type="Inf_Sword_Katana_Samurai"/>
				<position x="-5.01" y="190.49"/>
				<orientation radians="3.06"/>
				<width metres="12.70"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_melee" num_soldiers="40" script_name="Defender_14">
				<unit_type type="Inf_Sword_Katana_Samurai"/>
				<position x="-20.67" y="189.27"/>
				<orientation radians="3.06"/>
				<width metres="12.70"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_melee" num_soldiers="40" script_name="Defender_15">
				<unit_type type="Inf_Sword_Katana_Samurai"/>
				<position x="10.64" y="191.71"/>
				<orientation radians="3.06"/>
				<width metres="12.70"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_melee" num_soldiers="40" script_name="Defender_16">
				<unit_type type="Inf_Sword_Katana_Samurai"/>
				<position x="3.18" y="224.58"/>
				<orientation radians="3.06"/>
				<width metres="18.70"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_melee" num_soldiers="40" script_name="Defender_17">
				<unit_type type="Inf_Sword_Katana_Samurai"/>
				<position x="-18.45" y="222.85"/>
				<orientation radians="3.06"/>
				<width metres="18.70"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="40" script_name="Defender_18">
				<unit_type type="Inf_Missile_Bow_Ashigaru"/>
				<position x="-17.52" y="164.39"/>
				<orientation radians="3.07"/>
				<width metres="12.70"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>flaming_arrows_ability</special_ability>
					<shot_type>flaming_arrow</shot_type>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="40" script_name="Defender_19">
				<unit_type type="Inf_Missile_Bow_Ashigaru"/>
				<position x="-1.86" y="165.55"/>
				<orientation radians="3.07"/>
				<width metres="12.70"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>flaming_arrows_ability</special_ability>
					<shot_type>flaming_arrow</shot_type>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="40" script_name="Defender_20">
				<unit_type type="Inf_Missile_Bow_Ashigaru"/>
				<position x="13.79" y="166.70"/>
				<orientation radians="3.07"/>
				<width metres="12.70"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>flaming_arrows_ability</special_ability>
					<shot_type>flaming_arrow</shot_type>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="40" script_name="Defender_21">
				<unit_type type="Inf_Missile_Bow_Ashigaru"/>
				<position x="9.69" y="204.05"/>
				<orientation radians="3.05"/>
				<width metres="12.70"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>flaming_arrows_ability</special_ability>
					<shot_type>flaming_arrow</shot_type>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="40" script_name="Defender_22">
				<unit_type type="Inf_Missile_Bow_Ashigaru"/>
				<position x="-21.58" y="201.23"/>
				<orientation radians="3.05"/>
				<width metres="12.70"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>flaming_arrows_ability</special_ability>
					<shot_type>flaming_arrow</shot_type>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="40" script_name="Defender_23">
				<unit_type type="Inf_Missile_Bow_Ashigaru"/>
				<position x="-5.94" y="202.64"/>
				<orientation radians="3.05"/>
				<width metres="12.70"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>flaming_arrows_ability</special_ability>
					<shot_type>flaming_arrow</shot_type>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="40" script_name="Defender_24">
				<unit_type type="Inf_Missile_Bow_Ashigaru"/>
				<position x="1.51" y="233.85"/>
				<orientation radians="3.07"/>
				<width metres="18.70"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>flaming_arrows_ability</special_ability>
					<shot_type>flaming_arrow</shot_type>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="40" script_name="Defender_25">
				<unit_type type="Inf_Missile_Bow_Ashigaru"/>
				<position x="-19.53" y="232.27"/>
				<orientation radians="3.07"/>
				<width metres="17.50"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>flaming_arrows_ability</special_ability>
					<shot_type>flaming_arrow</shot_type>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="cavalry" num_soldiers="15" script_name="Defender_26">
				<unit_type type="Cav_Spear_Light_Cavalry"/>
				<position x="7.66" y="246.47"/>
				<orientation radians="3.07"/>
				<width metres="15.00"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>wedge_formation</special_ability>
					<special_ability>dismount</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="cavalry" num_soldiers="15" script_name="Defender_27">
				<unit_type type="Cav_Spear_Light_Cavalry"/>
				<position x="-10.30" y="245.24"/>
				<orientation radians="3.07"/>
				<width metres="15.00"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>wedge_formation</special_ability>
					<special_ability>dismount</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="cavalry" num_soldiers="15" script_name="Defender_28">
				<unit_type type="Cav_Spear_Light_Cavalry"/>
				<position x="-28.26" y="244.00"/>
				<orientation radians="3.07"/>
				<width metres="15.00"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>wedge_formation</special_ability>
					<special_ability>dismount</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="cavalry" num_soldiers="15" script_name="Defender_29">
				<unit_type type="Cav_Spear_Light_Cavalry"/>
				<position x="-7.11" y="128.29"/>
				<orientation radians="3.07"/>
				<width metres="15.00"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>wedge_formation</special_ability>
					<special_ability>dismount</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="cavalry" num_soldiers="15" script_name="Defender_30">
				<unit_type type="Cav_Spear_Light_Cavalry"/>
				<position x="9.86" y="129.43"/>
				<orientation radians="3.07"/>
				<width metres="15.00"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>wedge_formation</special_ability>
					<special_ability>dismount</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
		</army>
		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		<rout_position x="-1000.00" y="0.00"/>
	</alliance>

	<battle_description>
		<battle_script prepare_for_fade_in="false">Ambush_Valley_Attacker.lua</battle_script>
		<time_of_day>day</time_of_day>
		<season>Summer</season>
		<precipitation_type>dry</precipitation_type>
		<subculture>sc_japanese</subculture>
		<type>land_normal</type>
		<timeout_winning_alliance_index>1</timeout_winning_alliance_index>
	</battle_description>

  <weather>
    <prevailing_wind x="0" y="9"/>
    <lighting>default</lighting>
    <environment_key>Weather/ROME_Alpine/Land/Summer_Day_Dry_Test.environment</environment_key>
  </weather>

  <sea_surface_name>wind_level_2</sea_surface_name>
  <Climate>
    <name>japan_deciduous</name>
  </Climate>
  <Season>
    <name>season_summer</name>
  </Season>
  <battle_map_definition>
    <name>BattleTerrain/presets/Ambush_Valley/</name>
  </battle_map_definition>
	<playable_area dimension = "2000"></playable_area>
</battle>






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ambush_valley\ambush_valley_defender.xml
<?xml version="1.0"?>
<battle>
	<alliance id="0">
		<army>
			<faction>chosokabe</faction>
			<deployment_area>
				<orientation radians="0.00"/>
				<position x='-122.783417' y='221.850616'/>
				<position x='-119.039276' y='236.730576'/>
				<position x='-90.704620' y='262.828552'/>
				<position x='-70.823959' y='271.110901'/>
				<position x='-47.427673' y='276.718170'/>
				<position x='-27.618923' y='301.997955'/>
				<position x='-13.691335' y='337.356537'/>
				<position x='-13.637925' y='352.307220'/>
				<position x='3.676650' y='366.080048'/>
				<position x='20.725052' y='368.426392'/>
				<position x='54.188351' y='356.430420'/>
				<position x='67.009834' y='343.431000'/>
				<position x='70.714935' y='331.936676'/>
				<position x='59.315395' y='301.659424'/>
				<position x='63.157845' y='286.322906'/>
				<position x='71.410194' y='273.603363'/>
				<position x='86.409798' y='259.970917'/>
				<position x='102.456329' y='235.716370'/>
				<position x='103.275337' y='223.105453'/>
				<position x='94.576614' y='173.892212'/>
				<position x='73.190262' y='126.387024'/>
				<position x='42.083134' y='81.014473'/>
				<position x='27.042448' y='46.462173'/>
				<position x='28.406128' y='4.012260'/>
				<position x='35.418037' y='-16.639610'/>
				<position x='55.381577' y='-57.241211'/>
				<position x='61.580788' y='-83.895645'/>
				<position x='64.120140' y='-112.778168'/>
				<position x='63.493546' y='-136.679031'/>
				<position x='65.031464' y='-161.887238'/>
				<position x='67.706902' y='-187.910446'/>
				<position x='70.881401' y='-198.275635'/>
				<position x='68.344994' y='-224.661652'/>
				<position x='62.032845' y='-243.699875'/>
				<position x='49.107384' y='-260.895203'/>
				<position x='36.115044' y='-274.869568'/>
				<position x='19.010313' y='-297.051208'/>
				<position x='14.777413' y='-315.671448'/>
				<position x='26.062948' y='-354.751190'/>
				<position x='26.376900' y='-378.127350'/>
				<position x='20.399910' y='-395.044617'/>
				<position x='6.069168' y='-409.706940'/>
				<position x='-18.349209' y='-415.271667'/>
				<position x='-50.585831' y='-411.086700'/>
				<position x='-80.016182' y='-392.206848'/>
				<position x='-85.948532' y='-373.919617'/>
				<position x='-84.567566' y='-356.403503'/>
				<position x='-66.995712' y='-306.468719'/>
				<position x='-49.086826' y='-225.509613'/>
				<position x='-51.352894' y='-180.550858'/>
				<position x='-49.077335' y='-164.485443'/>
				<position x='-21.287218' y='-131.273895'/>
				<position x='1.390313' y='-82.421677'/>
				<position x='4.250196' y='-49.788883'/>
				<position x='3.947945' y='-33.586933'/>
				<position x='0.272508' y='-8.420479'/>
				<position x='-12.955046' y='28.112514'/>
				<position x='-28.824562' y='45.856541'/>
				<position x='-75.134361' y='56.250263'/>
				<position x='-85.306519' y='66.159309'/>
				<position x='-117.229736' y='114.740143'/>
				<position x='-129.201675' y='169.507095'/>
			</deployment_area>
			<camera_start_position x="6.03" y="56.28" z="157.77"/>
			<camera_target_position x="-13.99" y="-7.64" z="39.71"/>
			<campaign_ai_battle_hints aggression="0.50"/>
			<unit unit_category="cavalry" num_soldiers="10" script_name="Defender_01">
				<unit_type type="Gen_Hojo_Ujiyasu"/>
				<position x="2.84" y="115.95"/>
				<orientation radians="3.01"/>
				<width metres="10.98"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>rally</special_ability>
					<special_ability>rally_position</special_ability>
					<special_ability>inspire_unit</special_ability>
					<special_ability>we_stand_and_fight</special_ability>
					<special_ability>dismount</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_melee" num_soldiers="50" script_name="Defender_02">
				<unit_type type="Inf_Spear_Yari_Ashigaru"/>
				<position x="0.07" y="140.84"/>
				<orientation radians="3.11"/>
				<width metres="15.10"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>pike_wall_formation</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_melee" num_soldiers="50" script_name="Defender_03">
				<unit_type type="Inf_Spear_Yari_Ashigaru"/>
				<position x="-17.02" y="140.22"/>
				<orientation radians="3.11"/>
				<width metres="15.10"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>pike_wall_formation</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_melee" num_soldiers="50" script_name="Defender_04">
				<unit_type type="Inf_Spear_Yari_Ashigaru"/>
				<position x="17.15" y="141.45"/>
				<orientation radians="3.11"/>
				<width metres="15.10"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>pike_wall_formation</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_melee" num_soldiers="50" script_name="Defender_05">
				<unit_type type="Inf_Spear_Yari_Ashigaru"/>
				<position x="11.95" y="179.16"/>
				<orientation radians="3.05"/>
				<width metres="13.90"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>pike_wall_formation</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_melee" num_soldiers="50" script_name="Defender_06">
				<unit_type type="Inf_Spear_Yari_Ashigaru"/>
				<position x="-19.93" y="176.38"/>
				<orientation radians="3.05"/>
				<width metres="12.70"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>pike_wall_formation</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_melee" num_soldiers="50" script_name="Defender_07">
				<unit_type type="Inf_Spear_Yari_Ashigaru"/>
				<position x="-4.29" y="177.74"/>
				<orientation radians="3.05"/>
				<width metres="12.70"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>pike_wall_formation</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_melee" num_soldiers="50" script_name="Defender_08">
				<unit_type type="Inf_Spear_Yari_Ashigaru"/>
				<position x="-17.90" y="213.86"/>
				<orientation radians="3.06"/>
				<width metres="19.90"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>pike_wall_formation</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_melee" num_soldiers="50" script_name="Defender_09">
				<unit_type type="Inf_Spear_Yari_Ashigaru"/>
				<position x="3.93" y="215.56"/>
				<orientation radians="3.06"/>
				<width metres="19.90"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>pike_wall_formation</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_melee" num_soldiers="40" script_name="Defender_10">
				<unit_type type="Inf_Sword_Katana_Samurai"/>
				<position x="15.24" y="154.70"/>
				<orientation radians="3.09"/>
				<width metres="13.90"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_melee" num_soldiers="40" script_name="Defender_11">
				<unit_type type="Inf_Sword_Katana_Samurai"/>
				<position x="-0.64" y="153.88"/>
				<orientation radians="3.09"/>
				<width metres="13.90"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_melee" num_soldiers="40" script_name="Defender_12">
				<unit_type type="Inf_Sword_Katana_Samurai"/>
				<position x="-16.52" y="153.06"/>
				<orientation radians="3.09"/>
				<width metres="13.90"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_melee" num_soldiers="40" script_name="Defender_13">
				<unit_type type="Inf_Sword_Katana_Samurai"/>
				<position x="-5.01" y="190.49"/>
				<orientation radians="3.06"/>
				<width metres="12.70"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_melee" num_soldiers="40" script_name="Defender_14">
				<unit_type type="Inf_Sword_Katana_Samurai"/>
				<position x="-20.67" y="189.27"/>
				<orientation radians="3.06"/>
				<width metres="12.70"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_melee" num_soldiers="40" script_name="Defender_15">
				<unit_type type="Inf_Sword_Katana_Samurai"/>
				<position x="10.64" y="191.71"/>
				<orientation radians="3.06"/>
				<width metres="12.70"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_melee" num_soldiers="40" script_name="Defender_16">
				<unit_type type="Inf_Sword_Katana_Samurai"/>
				<position x="3.18" y="224.58"/>
				<orientation radians="3.06"/>
				<width metres="18.70"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_melee" num_soldiers="40" script_name="Defender_17">
				<unit_type type="Inf_Sword_Katana_Samurai"/>
				<position x="-18.45" y="222.85"/>
				<orientation radians="3.06"/>
				<width metres="18.70"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="40" script_name="Defender_18">
				<unit_type type="Inf_Missile_Bow_Ashigaru"/>
				<position x="-17.52" y="164.39"/>
				<orientation radians="3.07"/>
				<width metres="12.70"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>flaming_arrows_ability</special_ability>
					<shot_type>flaming_arrow</shot_type>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="40" script_name="Defender_19">
				<unit_type type="Inf_Missile_Bow_Ashigaru"/>
				<position x="-1.86" y="165.55"/>
				<orientation radians="3.07"/>
				<width metres="12.70"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>flaming_arrows_ability</special_ability>
					<shot_type>flaming_arrow</shot_type>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="40" script_name="Defender_20">
				<unit_type type="Inf_Missile_Bow_Ashigaru"/>
				<position x="13.79" y="166.70"/>
				<orientation radians="3.07"/>
				<width metres="12.70"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>flaming_arrows_ability</special_ability>
					<shot_type>flaming_arrow</shot_type>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="40" script_name="Defender_21">
				<unit_type type="Inf_Missile_Bow_Ashigaru"/>
				<position x="9.69" y="204.05"/>
				<orientation radians="3.05"/>
				<width metres="12.70"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>flaming_arrows_ability</special_ability>
					<shot_type>flaming_arrow</shot_type>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="40" script_name="Defender_22">
				<unit_type type="Inf_Missile_Bow_Ashigaru"/>
				<position x="-21.58" y="201.23"/>
				<orientation radians="3.05"/>
				<width metres="12.70"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>flaming_arrows_ability</special_ability>
					<shot_type>flaming_arrow</shot_type>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="40" script_name="Defender_23">
				<unit_type type="Inf_Missile_Bow_Ashigaru"/>
				<position x="-5.94" y="202.64"/>
				<orientation radians="3.05"/>
				<width metres="12.70"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>flaming_arrows_ability</special_ability>
					<shot_type>flaming_arrow</shot_type>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="40" script_name="Defender_24">
				<unit_type type="Inf_Missile_Bow_Ashigaru"/>
				<position x="1.51" y="233.85"/>
				<orientation radians="3.07"/>
				<width metres="18.70"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>flaming_arrows_ability</special_ability>
					<shot_type>flaming_arrow</shot_type>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="40" script_name="Defender_25">
				<unit_type type="Inf_Missile_Bow_Ashigaru"/>
				<position x="-19.53" y="232.27"/>
				<orientation radians="3.07"/>
				<width metres="17.50"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>flaming_arrows_ability</special_ability>
					<shot_type>flaming_arrow</shot_type>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="cavalry" num_soldiers="15" script_name="Defender_26">
				<unit_type type="Cav_Spear_Light_Cavalry"/>
				<position x="7.66" y="246.47"/>
				<orientation radians="3.07"/>
				<width metres="15.00"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>wedge_formation</special_ability>
					<special_ability>dismount</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="cavalry" num_soldiers="15" script_name="Defender_27">
				<unit_type type="Cav_Spear_Light_Cavalry"/>
				<position x="-10.30" y="245.24"/>
				<orientation radians="3.07"/>
				<width metres="15.00"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>wedge_formation</special_ability>
					<special_ability>dismount</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="cavalry" num_soldiers="15" script_name="Defender_28">
				<unit_type type="Cav_Spear_Light_Cavalry"/>
				<position x="-28.26" y="244.00"/>
				<orientation radians="3.07"/>
				<width metres="15.00"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>wedge_formation</special_ability>
					<special_ability>dismount</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="cavalry" num_soldiers="15" script_name="Defender_29">
				<unit_type type="Cav_Spear_Light_Cavalry"/>
				<position x="-7.11" y="128.29"/>
				<orientation radians="3.07"/>
				<width metres="15.00"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>wedge_formation</special_ability>
					<special_ability>dismount</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="cavalry" num_soldiers="15" script_name="Defender_30">
				<unit_type type="Cav_Spear_Light_Cavalry"/>
				<position x="9.86" y="129.43"/>
				<orientation radians="3.07"/>
				<width metres="15.00"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>wedge_formation</special_ability>
					<special_ability>dismount</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
		</army>
		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		<rout_position x="1000.00" y="0.00"/>
	</alliance>
	<alliance id="1">
		<army>
			<faction>hojo</faction>
			<deployment_area>
				<orientation radians="0.00"/>
				<position x='-20.850290' y='351.528564'/>
				<position x='-30.864651' y='305.410400'/>
				<position x='-48.943447' y='283.370087'/>
				<position x='-72.214897' y='276.153564'/>
				<position x='-93.822426' y='266.385101'/>
				<position x='-108.069168' y='253.569077'/>
				<position x='-123.736221' y='239.309998'/>
				<position x='-128.194702' y='224.496979'/>
				<position x='-131.709579' y='195.875183'/>
				<position x='-135.343475' y='169.130463'/>
				<position x='-132.660156' y='151.823029'/>
				<position x='-129.892258' y='137.191360'/>
				<position x='-123.603607' y='113.522346'/>
				<position x='-102.858414' y='84.553894'/>
				<position x='-89.170403' y='62.395401'/>
				<position x='-77.036346' y='50.697296'/>
				<position x='-30.265102' y='41.017918'/>
				<position x='-16.402559' y='25.256493'/>
				<position x='-8.965141' y='5.809793'/>
				<position x='-3.491589' y='-9.205403'/>
				<position x='0.352602' y='-35.645103'/>
				<position x='0.489224' y='-54.718559'/>
				<position x='-1.754296' y='-81.962700'/>
				<position x='-13.694187' y='-103.903717'/>
				<position x='-25.157255' y='-127.031540'/>
				<position x='-40.182060' y='-147.072205'/>
				<position x='-53.703388' y='-163.878525'/>
				<position x='-55.322216' y='-180.993912'/>
				<position x='-53.151741' y='-226.373459'/>
				<position x='-64.505142' y='-274.189117'/>
				<position x='-72.805054' y='-306.643829'/>
				<position x='-88.691422' y='-355.986328'/>
				<position x='-90.480255' y='-374.135193'/>
				<position x='-83.684250' y='-396.259521'/>
				<position x='-52.260769' y='-415.853241'/>
				<position x='-18.927626' y='-418.721680'/>
				<position x='4.224049' y='-413.400146'/>
				<position x='24.577061' y='-398.669678'/>
				<position x='30.855072' y='-378.850769'/>
				<position x='30.655191' y='-354.348694'/>
				<position x='24.763824' y='-334.082977'/>
				<position x='20.111395' y='-315.466644'/>
				<position x='23.237156' y='-299.180756'/>
				<position x='40.114006' y='-277.246918'/>
				<position x='53.167118' y='-263.134521'/>
				<position x='65.687126' y='-245.615463'/>
				<position x='72.845627' y='-224.935760'/>
				<position x='75.790970' y='-197.072449'/>
				<position x='72.268906' y='-186.648514'/>
				<position x='69.096954' y='-161.790802'/>
				<position x='67.980408' y='-134.944794'/>
				<position x='68.720428' y='-110.099998'/>
				<position x='66.378479' y='-83.340286'/>
				<position x='59.744423' y='-56.252476'/>
				<position x='49.829056' y='-37.140034'/>
				<position x='39.857719' y='-16.402676'/>
				<position x='32.735603' y='4.545856'/>
				<position x='31.040131' y='21.488037'/>
				<position x='31.720678' y='46.912361'/>
				<position x='46.645660' y='80.386848'/>
				<position x='60.368580' y='100.867981'/>
				<position x='78.239441' y='125.336456'/>
				<position x='89.497345' y='149.274826'/>
				<position x='99.458801' y='173.379501'/>
				<position x='105.738907' y='201.441742'/>
				<position x='108.739655' y='223.107315'/>
				<position x='107.218315' y='238.106384'/>
				<position x='92.547264' y='259.745148'/>
				<position x='75.362358' y='277.683411'/>
				<position x='66.878601' y='290.340515'/>
				<position x='63.925262' y='301.958557'/>
				<position x='69.332535' y='315.437347'/>
				<position x='75.865845' y='332.755707'/>
				<position x='71.783051' y='345.588837'/>
				<position x='58.568527' y='361.224182'/>
				<position x='42.718719' y='368.053833'/>
				<position x='20.952812' y='373.538452'/>
				<position x='4.071129' y='371.330048'/>
				<position x='-16.733681' y='355.330231'/>
				<position x='-17.093180' y='478.890625'/>
				<position x='276.499359' y='472.026611'/>
				<position x='277.255859' y='-527.827087'/>
				<position x='-291.994324' y='-523.481140'/>
				<position x='-292.695313' y='480.179657'/>
				<position x='-19.903006' y='478.678131'/>
			</deployment_area>
			<camera_start_position x="6.03" y="56.28" z="157.77"/>
			<camera_target_position x="-13.99" y="-7.64" z="39.71"/>
			<campaign_ai_battle_hints aggression="0.50"/>
			<unit unit_category="cavalry" num_soldiers="10" script_name="Attacker_01">
				<unit_type type="Gen_Chosokabe_Motochika"/>
				<position x="71.78" y="59.24"/>
				<orientation radians="5.38"/>
				<width metres="14.15"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>rally_position</special_ability>
					<special_ability>inspire_unit</special_ability>
					<special_ability>rally</special_ability>
					<special_ability>we_stand_and_fight</special_ability>
					<special_ability>dismount</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="30" script_name="Attacker_02">
				<unit_type type="Inf_Missile_Matchlock_Samurai"/>
				<position x="61.27" y="41.80"/>
				<orientation radians="5.13"/>
				<width metres="18.55"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>rapid_volley</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="30" script_name="Attacker_03">
				<unit_type type="Inf_Missile_Matchlock_Samurai"/>
				<position x="59.19" y="-0.58"/>
				<orientation radians="4.37"/>
				<width metres="18.93"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>rapid_volley</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="30" script_name="Attacker_04">
				<unit_type type="Inf_Missile_Matchlock_Samurai"/>
				<position x="74.92" y="-35.46"/>
				<orientation radians="4.35"/>
				<width metres="18.93"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>rapid_volley</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="30" script_name="Attacker_05">
				<unit_type type="Inf_Missile_Matchlock_Samurai"/>
				<position x="-34.35" y="-26.73"/>
				<orientation radians="1.57"/>
				<width metres="18.29"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>rapid_volley</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="30" script_name="Attacker_06">
				<unit_type type="Inf_Missile_Matchlock_Samurai"/>
				<position x="-36.98" y="-65.65"/>
				<orientation radians="1.70"/>
				<width metres="19.52"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>rapid_volley</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="30" script_name="Attacker_07">
				<unit_type type="Inf_Missile_Matchlock_Samurai"/>
				<position x="-103.09" y="3.68"/>
				<orientation radians="0.79"/>
				<width metres="18.31"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>rapid_volley</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="30" script_name="Attacker_08">
				<unit_type type="Inf_Missile_Matchlock_Samurai"/>
				<position x="-62.63" y="-9.43"/>
				<orientation radians="0.34"/>
				<width metres="18.33"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>rapid_volley</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="30" script_name="Attacker_09">
				<unit_type type="Inf_Missile_Matchlock_Samurai"/>
				<position x="105.57" y="-84.12"/>
				<orientation radians="5.00"/>
				<width metres="18.19"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>rapid_volley</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="30" script_name="Attacker_10">
				<unit_type type="Inf_Missile_Bow_Samurai_Chosokabe"/>
				<position x="55.99" y="20.72"/>
				<orientation radians="4.68"/>
				<width metres="17.74"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>flaming_arrows_ability</special_ability>
					<shot_type>flaming_arrow</shot_type>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="30" script_name="Attacker_11">
				<unit_type type="Inf_Missile_Bow_Samurai_Chosokabe"/>
				<position x="67.36" y="-18.16"/>
				<orientation radians="4.29"/>
				<width metres="17.90"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>flaming_arrows_ability</special_ability>
					<shot_type>flaming_arrow</shot_type>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="30" script_name="Attacker_12">
				<unit_type type="Inf_Missile_Bow_Samurai_Chosokabe"/>
				<position x="-34.89" y="-7.31"/>
				<orientation radians="1.55"/>
				<width metres="19.00"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>flaming_arrows_ability</special_ability>
					<shot_type>flaming_arrow</shot_type>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="30" script_name="Attacker_13">
				<unit_type type="Inf_Missile_Bow_Samurai_Chosokabe"/>
				<position x="-35.48" y="-45.76"/>
				<orientation radians="1.65"/>
				<width metres="17.89"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>flaming_arrows_ability</special_ability>
					<shot_type>flaming_arrow</shot_type>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="30" script_name="Attacker_14">
				<unit_type type="Inf_Missile_Bow_Samurai_Chosokabe"/>
				<position x="-81.39" y="-2.85"/>
				<orientation radians="0.37"/>
				<width metres="18.20"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>flaming_arrows_ability</special_ability>
					<shot_type>flaming_arrow</shot_type>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="cavalry" num_soldiers="15" script_name="Attacker_15">
				<unit_type type="Cav_Spear_Light_Cavalry"/>
				<position x="-132.15" y="34.50"/>
				<orientation radians="1.39"/>
				<width metres="15.00"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>wedge_formation</special_ability>
					<special_ability>dismount</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="cavalry" num_soldiers="15" script_name="Attacker_16">
				<unit_type type="Cav_Spear_Light_Cavalry"/>
				<position x="-129.12" y="17.77"/>
				<orientation radians="1.39"/>
				<width metres="15.00"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>wedge_formation</special_ability>
					<special_ability>dismount</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit unit_category="cavalry" num_soldiers="15" script_name="Attacker_17">
				<unit_type type="Cav_Spear_Light_Cavalry"/>
				<position x="100.78" y="-58.51"/>
				<orientation radians="4.32"/>
				<width metres="16.84"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>wedge_formation</special_ability>
					<special_ability>dismount</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
		</army>
		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		<rout_position x="-1000.00" y="0.00"/>
	</alliance>

	<battle_description>
		<battle_script prepare_for_fade_in="false">Ambush_Valley_Defender.lua</battle_script>
		<time_of_day>day</time_of_day>
		<season>Summer</season>
		<precipitation_type>dry</precipitation_type>
		<subculture>sc_japanese</subculture>
		<type>land_normal</type>
		<timeout_winning_alliance_index>1</timeout_winning_alliance_index>
	</battle_description>

  <weather>
    <prevailing_wind x="0" y="9"/>
    <lighting>default</lighting>
    <environment_key>Weather/ROME_Alpine/Land/Summer_Day_Dry_Test.environment</environment_key>
  </weather>

  <sea_surface_name>wind_level_2</sea_surface_name>
  <Climate>
    <name>japan_deciduous</name>
  </Climate>
  <Season>
    <name>season_summer</name>
  </Season>
  <battle_map_definition>
    <name>BattleTerrain/presets/Ambush_Valley/</name>
  </battle_map_definition>
	<playable_area dimension = "2000"></playable_area>
</battle>






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\bm_benchmark\bm_battle.xml
<?xml version="1.0" encoding="UTF-8"?>
<battle xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="battle.xsd">


	<alliance id="0">
		<army>
			<faction>rom_rome</faction>

			<deployment_area>
				<position x='-900' y='-900'/>
				<position x='-900' y='900'/>
				<position x='900' y='900'/>
				<position x='900' y='-900'/>
				<orientation radians="0.00"/>
			</deployment_area>
			
			<camera_start_position x="-32.9" y="336.4" z="-548.4" /> 
			<camera_target_position x="-26.2" y="316.6" z="-489.5" />
			
			<!-- cavalry -->
			<unit num_soldiers="80" script_name="Rom_Cav_01">
				<unit_type type="Rom_Legatus"/>
				<position x="-25.48" y="-464.38"/>
				<orientation radians="0.11"/>
				<width metres="21.12"/>
				<unit_capabilities>
				</unit_capabilities>
				<general>
					<name>Roman General</name>
					<star_rating level ="5"/>
        		</general>
				<unit_experience level="4"/>
			</unit>
			<unit num_soldiers="80" script_name="Rom_Cav_02">
				<unit_type type="Rom_Legionary_Cav" />
				<position x="-249.57" y="-406.88"/>
				<orientation radians="0.08"/>
				<width metres="24.18"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="80" script_name="Rom_Cav_03">
				<unit_type type="Rom_Legionary_Cav" />
				<position x="-223.48" y="-409.03"/>
				<orientation radians="0.08"/>
				<width metres="24.18"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="80" script_name="Rom_Cav_04">
				<unit_type type="Aux_Cav" />
				<position x="-197.39" y="-411.18"/>
				<orientation radians="0.08"/>
				<width metres="24.18"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="80" script_name="Rom_Cav_05">
				<unit_type type="Aux_Cav" />
				<position x="-171.30" y="-413.33"/>
				<orientation radians="0.08"/>
				<width metres="24.18"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="80" script_name="Rom_Cav_06">
				<unit_type type="Rom_Legionary_Cav" />
				<position x="119.45" y="-442.87"/>
				<orientation radians="0.00"/>
				<width metres="24.18"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="80" script_name="Rom_Cav_07">
				<unit_type type="Rom_Legionary_Cav" />
				<position x="145.63" y="-442.92"/>
				<orientation radians="0.00"/>
				<width metres="24.18"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="80" script_name="Rom_Cav_08">
				<unit_type type="Aux_Cav" />
				<position x="171.81" y="-442.98"/>
				<orientation radians="0.00"/>
				<width metres="24.18"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="80" script_name="Rom_Cav_09">
				<unit_type type="Aux_Cav" />
				<position x="197.99" y="-443.04"/>
				<orientation radians="0.00"/>
				<width metres="24.18"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			
			<!-- infantry -->
			<unit num_soldiers="160" script_name="Rom_Inf_01">
				<unit_type type="Aux_Infantry" />
				<position x="-143.48" y="-415.46"/>
				<orientation radians="0.10"/>
				<width metres="24.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_Inf_02">
				<unit_type type="Rom_Legionary_Cohort" />
				<position x="-117.51" y="-418.07"/>
				<orientation radians="0.10"/>
				<width metres="24.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_Inf_03">
				<unit_type type="Aux_Infantry" />
				<position x="-91.54" y="-420.68"/>
				<orientation radians="0.10"/>
				<width metres="24.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_Inf_04">
				<unit_type type="Rom_Eagle_Cohort" />
				<position x="-65.57" y="-423.29"/>
				<orientation radians="0.10"/>
				<width metres="24.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_Inf_05">
				<unit_type type="Aux_Infantry" />
				<position x="-39.60" y="-425.89"/>
				<orientation radians="0.10"/>
				<width metres="24.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_Inf_06">
				<unit_type type="Aux_Infantry" />
				<position x="-13.63" y="-428.50"/>
				<orientation radians="0.10"/>
				<width metres="24.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_Inf_07">
				<unit_type type="Rom_Legionary_Cohort" />
				<position x="12.34" y="-431.11"/>
				<orientation radians="0.10"/>
				<width metres="24.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_Inf_08">
				<unit_type type="Aux_Infantry" />
				<position x="38.30" y="-433.72"/>
				<orientation radians="0.10"/>
				<width metres="24.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_Inf_09">
				<unit_type type="Rom_Eagle_Cohort" />
				<position x="64.27" y="-436.33"/>
				<orientation radians="0.10"/>
				<width metres="24.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_Inf_10">
				<unit_type type="Aux_Infantry" />
				<position x="90.24" y="-438.93"/>
				<orientation radians="0.10"/>
				<width metres="24.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_Inf_11">
				<unit_type type="Aux_Infantry" />
				<position x="-142.53" y="-450.93"/>
				<orientation radians="0.12"/>
				<width metres="17.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_Inf_12">
				<unit_type type="Aux_Infantry" />
				<position x="-122.87" y="-453.21"/>
				<orientation radians="0.12"/>
				<width metres="17.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_Inf_13">
				<unit_type type="Aux_Infantry" />
				<position x="-103.20" y="-455.49"/>
				<orientation radians="0.12"/>
				<width metres="17.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_Inf_14">
				<unit_type type="Aux_Infantry" />
				<position x="43.03" y="-466.46"/>
				<orientation radians="0.06"/>
				<width metres="17.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_Inf_15">
				<unit_type type="Aux_Infantry" />
				<position x="63.79" y="-467.66"/>
				<orientation radians="0.06"/>
				<width metres="17.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_Inf_16">
				<unit_type type="Aux_Infantry" />
				<position x="84.56" y="-468.87"/>
				<orientation radians="0.06"/>
				<width metres="17.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			
			<!-- ranged -->
			<unit num_soldiers="120" script_name="Rom_Rng_01">
				<unit_type type="Rom_Velites" />
				<position x="-51.43" y="-390.07"/>
				<orientation radians="0.15"/>
				<width metres="24.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="120" script_name="Rom_Rng_02">
				<unit_type type="Rom_Velites" />
				<position x="-24.62" y="-394.01"/>
				<orientation radians="0.15"/>
				<width metres="24.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="120" script_name="Rom_Rng_03">
				<unit_type type="Rom_Velites" />
				<position x="2.20" y="-397.94"/>
				<orientation radians="0.15"/>
				<width metres="24.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="120" script_name="Rom_Rng_04">
				<unit_type type="Rom_Velites" />
				<position x="29.01" y="-401.88"/>
				<orientation radians="0.15"/>
				<width metres="24.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="120" script_name="Rom_Rng_05">
				<unit_type type="Rom_Velites" />
				<position x="55.82" y="-405.82"/>
				<orientation radians="0.15"/>
				<width metres="24.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			
			<!-- art -->
			<unit num_soldiers="40" script_name="Rom_Art_01">
				<unit_type type="Rom_Onager" />
				<position x="-63.60" y="-460.58"/>
				<orientation radians="0.10"/>
				<width metres="35.50"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="40" script_name="Rom_Art_02">
				<unit_type type="Rom_Onager" />
				<position x="8.80" y="-465.83"/>
				<orientation radians="0.07"/>
				<width metres="35.50"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
		</army>
		
		<victory_condition>
		     <kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		
		<rout_position x ="-800.0" y = "-1300"></rout_position>
	</alliance>
	

		
	<alliance id="1">
		<!-- <non_playable></non_playable> -->	
		<army>
			<faction>rom_cherusci</faction>

			<deployment_area>
				<position x='-900' y='-900'/>
				<position x='-900' y='900'/>
				<position x='900' y='900'/>
				<position x='900' y='-900'/>
				<orientation radians="0.00"/>
			</deployment_area>
				
			<camera_start_position x="0" y="40" z="500" /> 
			<camera_target_position x="0" y="22.5" z="440" />
			<campaign_ai_battle_hints aggression="1.0"/>
			
			<!-- cavalry -->
			<unit num_soldiers="80" script_name="Ger_Cav_01">
				<unit_type type="Ger_Noble_Riders"/>
				<position x="-130.48" y="-26.47"/>
				<orientation radians="3.16"/>
				<width metres="22.38"/>
				<unit_capabilities>
				</unit_capabilities>
				<general>
					<name>German General</name>
					<star_rating level ="5"/>
        		</general>
				<unit_experience level="4"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_Cav_02">
				<unit_type type="Ger_Noble_Riders"/>
				<position x="-154.96" y="-26.13"/>
				<orientation radians="3.16"/>
				<width metres="20.58"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_Cav_03">
				<unit_type type="Ger_Noble_Riders"/>
				<position x="-178.53" y="-25.81"/>
				<orientation radians="3.16"/>
				<width metres="20.58"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_Cav_04">
				<unit_type type="Ger_Riders_Hunt"/>
				<position x="-202.11" y="-25.48"/>
				<orientation radians="3.16"/>
				<width metres="20.58"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_Cav_05">
				<unit_type type="Ger_Riders_Hunt"/>
				<position x="-225.69" y="-25.15"/>
				<orientation radians="3.16"/>
				<width metres="20.58"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_Cav_06">
				<unit_type type="Ger_Riders_Hunt"/>
				<position x="-249.27" y="-24.83"/>
				<orientation radians="3.16"/>
				<width metres="20.58"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_Cav_07">
				<unit_type type="Ger_Noble_Riders"/>
				<position x="257.79" y="-18.89"/>
				<orientation radians="3.06"/>
				<width metres="22.38"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_Cav_08">
				<unit_type type="Ger_Noble_Riders"/>
				<position x="233.39" y="-20.87"/>
				<orientation radians="3.06"/>
				<width metres="20.58"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_Cav_09">
				<unit_type type="Ger_Riders_Hunt"/>
				<position x="209.89" y="-22.78"/>
				<orientation radians="3.06"/>
				<width metres="20.58"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_Cav_10">
				<unit_type type="Ger_Riders_Hunt"/>
				<position x="186.39" y="-24.69"/>
				<orientation radians="3.06"/>
				<width metres="20.58"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_Cav_11">
				<unit_type type="Ger_Scout_Riders"/>
				<position x="162.89" y="-26.60"/>
				<orientation radians="3.06"/>
				<width metres="20.58"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_Cav_12">
				<unit_type type="Ger_Scout_Riders"/>
				<position x="139.38" y="-28.51"/>
				<orientation radians="3.06"/>
				<width metres="20.58"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			
			<!-- infantry -->
			<unit num_soldiers="160" script_name="Ger_Inf_01">
				<unit_type type="Ger_Spear_Levy"/>
				<position x="114.19" y="-27.62"/>
				<orientation radians="3.14"/>
				<width metres="18.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_Inf_02">
				<unit_type type="Ger_Spear_Levy"/>
				<position x="93.49" y="-27.71"/>
				<orientation radians="3.14"/>
				<width metres="18.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_Inf_03">
				<unit_type type="Ger_Sword_Brothers"/>
				<position x="72.79" y="-27.81"/>
				<orientation radians="3.14"/>
				<width metres="18.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_Inf_04">
				<unit_type type="Ger_Berserkers"/>
				<position x="71.44" y="-41.93"/>
				<orientation radians="3.13"/>
				<width metres="10.30"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_Inf_05">
				<unit_type type="Ger_Berserkers"/>
				<position x="58.14" y="-42.07"/>
				<orientation radians="3.13"/>
				<width metres="10.30"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_Inf_06">
				<unit_type type="Ger_Wodanaz_Spears"/>
				<position x="52.69" y="-27.90"/>
				<orientation radians="3.14"/>
				<width metres="17.50"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_Inf_07">
				<unit_type type="Ger_Wodanaz_Spears"/>
				<position x="33.19" y="-27.99"/>
				<orientation radians="3.14"/>
				<width metres="17.50"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_Inf_08">
				<unit_type type="Ger_Spear_Levy"/>
				<position x="13.42" y="-28.69"/>
				<orientation radians="3.16"/>
				<width metres="16.30"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_Inf_09">
				<unit_type type="Ger_Sword_Masters"/>
				<position x="-5.87" y="-28.30"/>
				<orientation radians="3.16"/>
				<width metres="16.30"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_Inf_10">
				<unit_type type="Ger_Berserkers"/>
				<position x="-9.37" y="-43.73"/>
				<orientation radians="3.20"/>
				<width metres="11.50"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_Inf_11">
				<unit_type type="Ger_Berserkers"/>
				<position x="-22.85" y="-42.95"/>
				<orientation radians="3.20"/>
				<width metres="11.50"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_Inf_12">
				<unit_type type="Ger_Berserkers"/>
				<position x="-36.33" y="-42.18"/>
				<orientation radians="3.20"/>
				<width metres="11.50"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_Inf_13">
				<unit_type type="Ger_Wodanaz_Spears"/>
				<position x="-25.17" y="-27.91"/>
				<orientation radians="3.16"/>
				<width metres="16.30"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_Inf_14">
				<unit_type type="Ger_Wodanaz_Spears"/>
				<position x="-44.46" y="-27.52"/>
				<orientation radians="3.16"/>
				<width metres="16.30"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_Inf_15">
				<unit_type type="Ger_Spear_Brothers"/>
				<position x="-63.76" y="-27.12"/>
				<orientation radians="3.16"/>
				<width metres="16.30"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_Inf_16">
				<unit_type type="Ger_Spear_Levy"/>
				<position x="-83.06" y="-26.73"/>
				<orientation radians="3.16"/>
				<width metres="16.30"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_Inf_17">
				<unit_type type="Ger_Spear_Levy"/>
				<position x="-102.35" y="-26.34"/>
				<orientation radians="3.16"/>
				<width metres="16.30"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			
			<!-- ranged -->
			<unit num_soldiers="120" script_name="Ger_Rng_01">
				<unit_type type="Ger_Longbow_Hunters"/>
				<position x="115.28" y="-68.83"/>
				<orientation radians="3.17"/>
				<width metres="38.50"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="120" script_name="Ger_Rng_02">
				<unit_type type="Ger_Longbow_Hunters"/>
				<position x="73.80" y="-67.51"/>
				<orientation radians="3.17"/>
				<width metres="38.50"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="120" script_name="Ger_Rng_03">
				<unit_type type="Ger_Youths"/>
				<position x="32.32" y="-66.18"/>
				<orientation radians="3.17"/>
				<width metres="38.50"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="120" script_name="Ger_Rng_04">
				<unit_type type="Ger_Youths"/>
				<position x="-9.15" y="-64.86"/>
				<orientation radians="3.17"/>
				<width metres="38.50"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="120" script_name="Ger_Rng_05">
				<unit_type type="Ger_Youths"/>
				<position x="-50.63" y="-63.53"/>
				<orientation radians="3.17"/>
				<width metres="38.50"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="120" script_name="Ger_Rng_06">
				<unit_type type="Ger_Youths"/>
				<position x="-92.11" y="-62.21"/>
				<orientation radians="3.17"/>
				<width metres="38.50"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
		</army>

		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		
		<rout_position x ="0" y = "1300"></rout_position>
	</alliance>
	
	<battle_description>
		<battle_script prepare_for_fade_in="true">BM_Start.lua</battle_script>
		<time_of_day>day</time_of_day>
		<season>Summer</season>
		<precipitation_type>dry</precipitation_type>
		<subculture>sc_rom_Carthaginian</subculture>
		<type>land_normal</type>
		<timeout_winning_alliance_index>0</timeout_winning_alliance_index>
	</battle_description>

	<sea_surface_name>wind_level_2</sea_surface_name>
		
	<weather>
		<environment_key>terrain/battles/benchmark/Default.environment</environment_key>
		<prevailing_wind x="0" y="9"/>
	</weather>
	
	<battle_map_definition>
		<name>terrain/battles/benchmark/</name>
	</battle_map_definition>
	<!-- <use_deployment_radar_on_loading_screen>false</use_deployment_radar_on_loading_screen> -->

	<!-- <skip_deployment></skip_deployment> -->
	<playable_area dimension = "2000"></playable_area>
</battle>







C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\cn_cannae_test\cn_battle.xml
<?xml version="1.0" encoding="UTF-8"?>
<battle xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="battle.xsd">

	<alliance id="0">
		<army>
		
			<faction>rom_carthage</faction>
			
			<deployment_area>
				<position x="578" y="-80.5"/>
                <position x="494" y="-127"/>
                <position x="276" y="333"/>
                <position x="363" y="374"/>
			</deployment_area>
			
			<unit num_soldiers="40" script_name="Car_01">
				<unit_type type="Car_General"/>
				<position x="447.87" y="141.82"/>
				<orientation radians="4.21"/>
				<width metres="25.16"/>
				<general>
					<name>2147343852</name>					<!--name>Hannibal</name-->
					<uniform>Hannibal_Barca</uniform>
				</general>
				<unit_capabilities>
					<special_ability>com_rally</special_ability>
					<special_ability>com_raise_banner</special_ability>
				</unit_capabilities>
				<unit_experience level="7"/>
			</unit>

			<unit num_soldiers="160" script_name="Car_02">
				<unit_type type="Mer_Ibe_Sword"/>
				<position x="424.80" y="96.89"/>
				<orientation radians="4.26"/>
				<width metres="18.80"/>
				<unit_experience level="3"/>
			</unit>

			<unit num_soldiers="160" script_name="Car_03">
				<unit_type type="Mer_Ibe_Sword"/>
				<position x="415.99" y="115.07"/>
				<orientation radians="4.26"/>
				<width metres="17.60"/>
				<unit_experience level="3"/>
			</unit>

			<unit num_soldiers="160" script_name="Car_04">
				<unit_type type="Mer_Gal_Warriors"/>
				<position x="479.15" y="36.99"/>
				<orientation radians="4.26"/>
				<width metres="17.60"/>
				<unit_experience level="3"/>
			</unit>

			<unit num_soldiers="160" script_name="Car_05">
				<unit_type type="Mer_Gal_Warriors"/>
				<position x="410.96" y="177.75"/>
				<orientation radians="4.26"/>
				<width metres="16.40"/>
				<unit_experience level="3"/>
			</unit>

			<unit num_soldiers="160" script_name="Car_06">
				<unit_type type="Car_Libyan_Infantry"/>
				<position x="470.56" y="54.72"/>
				<orientation radians="4.26"/>
				<width metres="17.80"/>
				<unit_experience level="3"/>
			</unit>

			<unit num_soldiers="160" script_name="Car_07">
				<unit_type type="Car_Libyan_Infantry"/>
				<position x="402.86" y="194.49"/>
				<orientation radians="4.26"/>
				<width metres="16.80"/>
				<unit_experience level="3"/>
			</unit>

			<unit num_soldiers="160" script_name="Car_08">
				<unit_type type="Car_Libyan_Infantry"/>
				<position x="462.14" y="72.09"/>
				<orientation radians="4.26"/>
				<width metres="16.80"/>
				<unit_experience level="3"/>
			</unit>

			<unit num_soldiers="160" script_name="Car_09">
				<unit_type type="Car_Libyan_Hoplites"/>
				<position x="407.40" y="132.80"/>
				<orientation radians="4.26"/>
				<width metres="17.80"/>
				<unit_experience level="3"/>
			</unit>

			<unit num_soldiers="160" script_name="Car_10">
				<unit_type type="Car_Libyan_Hoplites"/>
				<position x="398.77" y="150.62"/>
				<orientation radians="4.26"/>
				<width metres="17.80"/>
				<unit_experience level="3"/>
			</unit>

			<unit num_soldiers="160" script_name="Car_11">
				<unit_type type="Car_Hoplites"/>
				<position x="394.88" y="210.96"/>
				<orientation radians="4.26"/>
				<width metres="15.80"/>
				<unit_experience level="4"/>
			</unit>

			<unit num_soldiers="160" script_name="Car_12">
				<unit_type type="Car_Hoplites"/>
				<position x="453.95" y="89.01"/>
				<orientation radians="4.26"/>
				<width metres="16.80"/>
				<unit_experience level="4"/>
			</unit>

			<unit num_soldiers="160" script_name="Car_13">
				<unit_type type="Car_Hoplites"/>
				<position x="387.12" y="226.97"/>
				<orientation radians="4.26"/>
				<width metres="15.80"/>
				<unit_experience level="4"/>
			</unit>

			<unit num_soldiers="120" script_name="Car_14">
				<unit_type type="Mer_Gre_Cretan_Archers"/>
				<position x="421.02" y="59.28"/>
				<orientation radians="4.26"/>
				<width metres="36.80"/>
				<unit_experience level="1"/>
			</unit>

			<unit num_soldiers="120" script_name="Car_15">
				<unit_type type="Mer_Ibe_Balearic_Slingers"/>
				<position x="403.66" y="95.10"/>
				<orientation radians="4.26"/>
				<width metres="36.80"/>
				<unit_experience level="1"/>
			</unit>

			<unit num_soldiers="120" script_name="Car_16">
				<unit_type type="Mer_Ibe_Balearic_Slingers"/>
				<position x="386.31" y="130.92"/>
				<orientation radians="4.26"/>
				<width metres="36.80"/>
				<unit_experience level="1"/>
			</unit>

			<unit num_soldiers="120" script_name="Car_17">
				<unit_type type="Mer_Ibe_Balearic_Slingers"/>
				<position x="368.96" y="166.73"/>
				<orientation radians="4.26"/>
				<width metres="36.80"/>
				<unit_experience level="1"/>
			</unit>

			<unit num_soldiers="80" script_name="Car_18">
				<unit_type type="Car_Cav"/>
				<position x="524.79" y="-63.04"/>
				<orientation radians="4.29"/>
				<width metres="27.91"/>
				<unit_experience level="1"/>
			</unit>

			<unit num_soldiers="80" script_name="Car_20">
				<unit_type type="Mer_Ibe_Cav"/>
				<position x="512.23" y="-34.80"/>
				<orientation radians="4.29"/>
				<width metres="27.91"/>
				<unit_experience level="1"/>
			</unit>

			<unit num_soldiers="80" script_name="Car_22">
				<unit_type type="Mer_Gal_Noble_Horse"/>
				<position x="498.14" y="-7.46"/>
				<orientation radians="4.29"/>
				<width metres="28.41"/>
				<unit_experience level="1"/>
			</unit>

			<unit num_soldiers="80" script_name="Car_19">
				<unit_type type="Mer_Num_Cav"/>
				<position x="354.96" y="298.45"/>
				<orientation radians="4.31"/>
				<width metres="27.91"/>
				<unit_experience level="1"/>
			</unit>

			<unit num_soldiers="80" script_name="Car_21">
				<unit_type type="Mer_Ibe_Cav"/>
				<position x="342.87" y="326.90"/>
				<orientation radians="4.31"/>
				<width metres="27.91"/>
				<unit_experience level="1"/>
			</unit>

			<unit num_soldiers="80" script_name="Car_23">
				<unit_type type="Mer_Num_Cav"/>
				<position x="366.65" y="270.92"/>
				<orientation radians="4.31"/>
				<width metres="25.91"/>
				<unit_experience level="1"/>
			</unit>

		</army>
		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		<rout_position x="-800.00" y="-1300.00"/>
	</alliance>
	
	<alliance id="1">
		<!-- <non_playable></non_playable> -->	
		<army>
	
			<faction>rom_rome</faction>
			
			<deployment_area>
				<position x="-131" y="105"/>
                <position x="-61" y="140"/>
                <position x="113" y="-224"/>
                <position x="37.5" y="-261"/>
			</deployment_area>
			
			<camera_start_position x="688.80" y="262.58" z="225.37"/>
			<camera_target_position x="606.86" y="209.29" z="232.07"/>
			<campaign_ai_battle_hints aggression="0.50"/>
			
			<unit num_soldiers="40" script_name="Rom_01">
				<unit_type type="Rom_Legatus"/>
				<position x="-42.74" y="-64.57"/>
				<orientation radians="1.17"/>
				<width metres="24.78"/>
				<general>
					<name>2147343857</name>			<!--name>Gaius Terentius Varro</name-->
					<uniform>Rom_General_15</uniform>
        		</general>
			</unit>

			<unit num_soldiers="160" script_name="Rom_02">
				<unit_type type="Rom_Hastati"/>
				<position x="-58.69" y="17.20"/>
				<orientation radians="1.14"/>
				<width metres="15.80"/>
			</unit>

			<unit num_soldiers="160" script_name="Rom_03">
				<unit_type type="Rom_Hastati"/>
				<position x="-32.06" y="8.79"/>
				<orientation radians="1.14"/>
				<width metres="15.80"/>
			</unit>

			<unit num_soldiers="160" script_name="Rom_04">
				<unit_type type="Rom_Hastati"/>
				<position x="-50.85" y="0.11"/>
				<orientation radians="1.14"/>
				<width metres="15.80"/>
			</unit>

			<unit num_soldiers="160" script_name="Rom_05">
				<unit_type type="Rom_Hastati"/>
				<position x="-24.60" y="-7.38"/>
				<orientation radians="1.14"/>
				<width metres="15.80"/>
			</unit>

			<unit num_soldiers="160" script_name="Rom_06">
				<unit_type type="Rom_Hastati"/>
				<position x="-43.39" y="-16.05"/>
				<orientation radians="1.14"/>
				<width metres="15.80"/>
			</unit>

			<unit num_soldiers="160" script_name="Rom_07">
				<unit_type type="Rom_Hastati"/>
				<position x="-17.14" y="-23.54"/>
				<orientation radians="1.14"/>
				<width metres="15.80"/>
			</unit>

			<unit num_soldiers="160" script_name="Rom_08">
				<unit_type type="Rom_Hastati"/>
				<position x="-35.94" y="-32.21"/>
				<orientation radians="1.14"/>
				<width metres="15.80"/>
			</unit>

			<unit num_soldiers="160" script_name="Rom_09">
				<unit_type type="Rom_Principes"/>
				<position x="-9.68" y="-39.70"/>
				<orientation radians="1.14"/>
				<width metres="15.80"/>
			</unit>

			<unit num_soldiers="160" script_name="Rom_10">
				<unit_type type="Rom_Principes"/>
				<position x="-28.48" y="-48.37"/>
				<orientation radians="1.14"/>
				<width metres="15.80"/>
			</unit>

			<unit num_soldiers="160" script_name="Rom_11">
				<unit_type type="Rom_Principes"/>
				<position x="-2.23" y="-55.86"/>
				<orientation radians="1.14"/>
				<width metres="15.80"/>
			</unit>

			<unit num_soldiers="160" script_name="Rom_12">
				<unit_type type="Rom_Principes"/>
				<position x="-21.02" y="-64.54"/>
				<orientation radians="1.14"/>
				<width metres="15.80"/>
			</unit>

			<unit num_soldiers="160" script_name="Rom_13">
				<unit_type type="Rom_Principes"/>
				<position x="5.23" y="-72.03"/>
				<orientation radians="1.14"/>
				<width metres="15.80"/>
			</unit>

			<unit num_soldiers="160" script_name="Rom_14">
				<unit_type type="Rom_Principes"/>
				<position x="-13.56" y="-80.70"/>
				<orientation radians="1.14"/>
				<width metres="15.80"/>
			</unit>

			<unit num_soldiers="160" script_name="Rom_15">
				<unit_type type="Rom_Principes"/>
				<position x="12.69" y="-88.19"/>
				<orientation radians="1.14"/>
				<width metres="15.80"/>
			</unit>

			<unit num_soldiers="160" script_name="Rom_16">
				<unit_type type="Rom_Triarii"/>
				<position x="-6.11" y="-96.86"/>
				<orientation radians="1.14"/>
				<width metres="15.80"/>
			</unit>

			<unit num_soldiers="160" script_name="Rom_17">
				<unit_type type="Rom_Triarii"/>
				<position x="20.15" y="-104.35"/>
				<orientation radians="1.14"/>
				<width metres="15.80"/>
			</unit>

			<unit num_soldiers="160" script_name="Rom_18">
				<unit_type type="Rom_Triarii"/>
				<position x="1.35" y="-113.02"/>
				<orientation radians="1.14"/>
				<width metres="15.80"/>
			</unit>

			<unit num_soldiers="160" script_name="Rom_19">
				<unit_type type="Rom_Triarii"/>
				<position x="27.60" y="-120.51"/>
				<orientation radians="1.14"/>
				<width metres="15.80"/>
			</unit>

			<unit num_soldiers="160" script_name="Rom_20">
				<unit_type type="Rom_Triarii"/>
				<position x="8.81" y="-129.19"/>
				<orientation radians="1.14"/>
				<width metres="15.80"/>
			</unit>

			<unit num_soldiers="160" script_name="Rom_21">
				<unit_type type="Rom_Triarii"/>
				<position x="-39.51" y="24.95"/>
				<orientation radians="1.14"/>
				<width metres="15.80"/>
			</unit>

			<unit num_soldiers="80" script_name="Rom_22">
				<unit_type type="Aux_Ita_Socii_Equites_Extraordinarii"/>
				<position x="32.96" y="-161.95"/>
				<orientation radians="1.18"/>
				<width metres="26.11"/>
			</unit>

			<unit num_soldiers="80" script_name="Rom_23">
				<unit_type type="Rom_Equites"/>
				<position x="44.11" y="-188.84"/>
				<orientation radians="1.18"/>
				<width metres="26.11"/>
			</unit>

			<unit num_soldiers="80" script_name="Rom_24">
				<unit_type type="Rom_Equites"/>
				<position x="55.26" y="-215.73"/>
				<orientation radians="1.18"/>
				<width metres="26.11"/>
			</unit>

			<unit num_soldiers="80" script_name="Rom_25">
				<unit_type type="Aux_Ita_Socii_Equites_Extraordinarii"/>
				<position x="-73.79" y="88.00"/>
				<orientation radians="1.18"/>
				<width metres="26.11"/>
			</unit>

			<unit num_soldiers="80" script_name="Rom_26">
				<unit_type type="Rom_Equites"/>
				<position x="-62.64" y="61.11"/>
				<orientation radians="1.18"/>
				<width metres="26.11"/>
			</unit>

		</army>
		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		<rout_position x="0.00" y="1300.00"/>
	</alliance>
	
	<battle_description>
		<battle_script prepare_for_fade_in="true">CN_Start.lua</battle_script>
		<time_of_day>day</time_of_day>
		<season>Summer</season>
		<precipitation_type>dry</precipitation_type>
		<type>land_normal</type>
		<timeout_winning_alliance_index>1</timeout_winning_alliance_index>
	</battle_description>

	<sea_surface_name>wind_level_2</sea_surface_name>
		
	<weather>
		<environment_key>terrain/battles/cannae/cannae.environment</environment_key>
		<prevailing_wind x="0" y="9"/>
	</weather>
	
	<battle_map_definition>
		<name>terrain/battles/cannae/</name>
	</battle_map_definition>
	
	<!-- <use_deployment_radar_on_loading_screen>false</use_deployment_radar_on_loading_screen> -->

	<!-- <skip_deployment></skip_deployment> -->
	<playable_area dimension = "1940"></playable_area>
</battle>







C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\e3_carthage\e3_battle.xml
<?xml version="1.0" encoding="UTF-8"?>
<battle xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="battle.xsd">

	<alliance id="0">
		<army>
			<faction>rom_rome</faction>
			
			<!--
			<deployment_area>
				<position x='-1000' y='-1000'/>
				<position x='-1000' y='1000'/>
				<position x='1000' y='1000'/>
				<position x='1000' y='-1000'/>
				<orientation radians="0.00"/>
			</deployment_area>
			-->
			
			<deployment_area>
				<orientation radians="0.00"/>
				<position x='1000' y='-1000'/>
				<position x='-1000' y='-1000'/>
				<position x='-1000' y='-350'/>
				<position x='-540' y='-350'/>
				<position x='-360' y='-175'/>
				<position x='-85' y='-175'/>
				<position x='20' y='-265'/>
				<position x='1000' y='-265'/>
			</deployment_area>
			
			<camera_start_position x="-2.8" y="27.2" z="-744.1"/>
			<camera_target_position x="-54.2" y="9.9" z="-634.5"/>
			
			
			<assault_equipment>
				<assault_equipment_item equipment_name="siege_tower_15m_medium">
					<position x="-242" y="-247"/>
					<orientation radians="0.00"/>
				</assault_equipment_item>
				<assault_equipment_item equipment_name="siege_tower_15m_medium">
					<position x="-132" y="-275"/>
					<orientation radians="0.0"/>
				</assault_equipment_item>	
				<assault_equipment_item equipment_name="siege_tower_15m_medium">
					<position x="-407" y="-344"/>
					<orientation radians="5"/>
				</assault_equipment_item>
				<assault_equipment_item equipment_name="siege_tower_15m_medium">
					<position x="-620" y="-447"/>
					<orientation radians="5"/>
				</assault_equipment_item>
				<assault_equipment_item equipment_name="siege_tower_15m_medium">
					<position x="-715" y="-438"/>
					<orientation radians="0"/>
				</assault_equipment_item>
			</assault_equipment>			
			
			<unit num_soldiers="200" script_name="Rom_Main_01_Mid_St_01">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines" main_type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-15" y="-707"/>
				<orientation radians="5.68"/>
				<width metres="80"/>
				<unit_capabilities>
					<special_ability>dismount</special_ability>
				</unit_capabilities>
				<general>
					<name>Scipio</name>
					<star_rating level="4"/>
        		</general>
			</unit>
			<unit num_soldiers="180" script_name="Rom_Main_02_Main_St_02">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines" main_type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-117" y="-788"/>
				<orientation radians="5.65"/>
				<width metres="80"/>
				<unit_capabilities>
					<special_ability>dismount</special_ability>
				</unit_capabilities>
			</unit>
			<unit num_soldiers="180" script_name="Rom_Main_03_Main_St_01">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines" main_type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-118" y="-842"/>
				<orientation radians="5.58"/>
				<width metres="80"/>
				<unit_capabilities>
					<special_ability>dismount</special_ability>
				</unit_capabilities>
			</unit>
			<unit num_soldiers="180" script_name="Rom_Main_04_Mid_St_02">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines" main_type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-59" y="-832"/>
				<orientation radians="5.69"/>
				<width metres="80"/>
				<unit_capabilities>
					<special_ability>dismount</special_ability>
				</unit_capabilities>
			</unit>
			<unit num_soldiers="200" script_name="Rom_Main_05_Dock_St_01">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines" main_type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="20" y="-751"/>
				<orientation radians="5.79"/>
				<width metres="80"/>
				<unit_capabilities>
					<special_ability>dismount</special_ability>
				</unit_capabilities>
			</unit>
			<unit num_soldiers="180" script_name="Rom_Main_06_Dock_St_03">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines" main_type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="103" y="-656"/>
				<orientation radians="5.79"/>
				<width metres="80"/>
				<unit_capabilities>
					<special_ability>dismount</special_ability>
				</unit_capabilities>
			</unit>
			<unit num_soldiers="180" script_name="Rom_Main_07_Dock_St_05">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines" main_type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-194" y="-916"/>
				<orientation radians="5.2"/>
				<width metres="80"/>
				<unit_capabilities>
					<special_ability>dismount</special_ability>
				</unit_capabilities>
			</unit>
			<unit num_soldiers="180" script_name="Rom_Main_08_Dock_St_06">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines" main_type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-255" y="-919"/>
				<orientation radians="5.2"/>
				<width metres="80"/>
				<unit_capabilities>
					<special_ability>dismount</special_ability>
				</unit_capabilities>
			</unit>
			<unit num_soldiers="180" script_name="Rom_Main_09_Dock_St_04">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines" main_type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="135" y="-905"/>
				<orientation radians="5.59"/>
				<width metres="80"/>
				<unit_capabilities>
					<special_ability>dismount</special_ability>
				</unit_capabilities>
			</unit>
			<unit num_soldiers="160" script_name="Rom_Main_10_Main_St_05">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines" main_type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="70" y="-918"/>
				<orientation radians="5.68"/>
				<width metres="80"/>
				<unit_capabilities>
					<special_ability>dismount</special_ability>
				</unit_capabilities>
			</unit>
			<unit num_soldiers="160" script_name="Rom_Main_11_Mid_St_04">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines" main_type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="12" y="-830"/>
				<orientation radians="5.66"/>
				<width metres="80"/>
				<unit_capabilities>
					<special_ability>dismount</special_ability>
				</unit_capabilities>
			</unit>
			<unit num_soldiers="160" script_name="Rom_Main_12_Dock_St_07">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines" main_type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="91" y="-841"/>
				<orientation radians="5.78"/>
				<width metres="80"/>
				<unit_capabilities>
					<special_ability>dismount</special_ability>
				</unit_capabilities>
			</unit>
			<unit num_soldiers="180" script_name="Rom_Main_13_Dock_St_02">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines" main_type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="141" y="-742"/>
				<orientation radians="5.75"/>
				<width metres="80"/>
				<unit_capabilities>
					<special_ability>dismount</special_ability>
				</unit_capabilities>
			</unit>
			
			<unit num_soldiers="180" script_name="Rom_Main_14_Main_St_03">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines" main_type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-108" y="-910"/>
				<orientation radians="5.67"/>
				<width metres="80"/>
				<unit_capabilities>
					<special_ability>dismount</special_ability>
				</unit_capabilities>
			</unit>
			<unit num_soldiers="180" script_name="Rom_Main_15_Main_St_04">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines" main_type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-25" y="-915"/>
				<orientation radians="5.73"/>
				<width metres="80"/>
				<unit_capabilities>
					<special_ability>dismount</special_ability>
				</unit_capabilities>
			</unit>
			<unit num_soldiers="160" script_name="Rom_Beach_01_Dock_St_Arch_01">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-220" y="-270"/>
				<orientation radians="0.0"/>
				<width metres="20"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="140" script_name="Rom_Beach_02_Mid_St_Arch_01">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-218" y="-334"/>
				<orientation radians="0.0"/>
				<width metres="20"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_Beach_03">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-356" y="-430"/>
				<orientation radians="5.5"/>
				<width metres="50"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_Beach_04_Mid_St_03">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-300" y="-380"/>
				<orientation radians="0.0"/>
				<width metres="30"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="120" script_name="Rom_Beach_05_Main_St_Arch_01">
				 <unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-278" y="-370"/>
				<orientation radians="0.0"/>
				<width metres="30"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="180" script_name="Rom_Beach_06">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-395" y="-469"/>
				<orientation radians="-0.85"/>
				<width metres="26"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
		</army>
		
	
		<army>
			<faction>rom_rome</faction>
			<!--
			<deployment_area>
				<position x='-1000' y='-1000'/>
				<position x='-1000' y='1000'/>
				<position x='1000' y='1000'/>
				<position x='1000' y='-1000'/>
				<orientation radians="0.00"/>
			</deployment_area>
			-->
			
			<deployment_area>
				<orientation radians="0.00"/>
				<position x='1000' y='-1000'/>
				<position x='-1000' y='-1000'/>
				<position x='-1000' y='-350'/>
				<position x='-540' y='-350'/>
				<position x='-360' y='-175'/>
				<position x='-85' y='-175'/>
				<position x='20' y='-265'/>
				<position x='1000' y='-265'/>
			</deployment_area>
			
			<camera_start_position x="-78.36" y="39.25" z="-584.02"/>
			<camera_target_position x="-124.20" y="17.05" z="-465.51"/>		
			
				<!-- ROMAN ALLIED ARMY WEST-->
			
			<unit num_soldiers="140" script_name="Rom_West_01">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-817.788" y="-747.189"/>
				<orientation radians="0.00210922"/>
				<width metres="12.4"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="140" script_name="Rom_West_02">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-803.388" y="-747.219"/>
				<orientation radians="0.00210922"/>
				<width metres="12.4"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="140" script_name="Rom_West_03">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-788.988" y="-747.249"/>
				<orientation radians="0.00210922"/>
				<width metres="12.4"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<!--unit num_soldiers="180" script_name="Rom_West_04">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-774.589" y="-747.28"/>
				<orientation radians="0.00210922"/>
				<width metres="12.4"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit-->
			<unit num_soldiers="140" script_name="Rom_West_05">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-760.189" y="-747.31"/>
				<orientation radians="0.00210922"/>
				<width metres="12.4"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="140" script_name="Rom_West_06">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-745.789" y="-747.341"/>
				<orientation radians="0.00210922"/>
				<width metres="12.4"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<!--unit num_soldiers="180" script_name="Rom_West_07">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-523.375" y="-542.553"/>
				<orientation radians="-0.184365"/>
				<width metres="29.3179"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit-->
			<unit num_soldiers="40" script_name="Rom_West_08">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-523.375" y="-542.553"/>
				<orientation radians="-0.184365"/>
				<width metres="29.3179"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<!--
			<unit num_soldiers="80" script_name="Rom_West_09">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-958.78" y="-421.14"/>
				<orientation radians="0.902077"/>
				<width metres="48.1562"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			-->
			<unit num_soldiers="120" script_name="Rom_West_11">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-794.609" y="-705.687"/>
				<orientation radians="-0.00949151"/>
				<width metres="16.9"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="120" script_name="Rom_West_10">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-774.71" y="-705.498"/>
				<orientation radians="-0.00949151"/>
				<width metres="16.9"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="120" script_name="Rom_West_12">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-754.81" y="-705.309"/>
				<orientation radians="-0.00949151"/>
				<width metres="16.9"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="60" script_name="Rom_West_13">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-823.632" y="-795.943"/>
				<orientation radians="0.772743"/>
				<width metres="15.4"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="60" script_name="Rom_West_14">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-811.174" y="-808.09"/>
				<orientation radians="0.772743"/>
				<width metres="15.4"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="60" script_name="Rom_West_15">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-798.716" y="-820.237"/>
				<orientation radians="0.772743"/>
				<width metres="15.4"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="60" script_name="Rom_West_16">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-829.816" y="-838.387"/>
				<orientation radians="0.772743"/>
				<width metres="15.4"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="40" script_name="Rom_West_Art_01">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-526" y="-530"/>
				<orientation radians="-0.153015"/>
				<width metres="27.50"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<!--
			<unit num_soldiers="40" script_name="Rom_West_Art_02">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-959" y="-396"/>
				<orientation radians="0.894886"/>
				<width metres="27.50"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			-->
			<unit num_soldiers="40" script_name="Rom_West_Art_03">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-937.608" y="-421.976"/>
				<orientation radians="0.881464"/>
				<width metres="27.50"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			
			<!-- ROMAN NAVAL SUPPORT -->
			
			<unit num_soldiers="100" script_name="Rom_Harbour_01">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines" main_type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="238" y="-679"/>
				<orientation radians="5.80"/>
				<width metres="80"/>
				<unit_capabilities>
				</unit_capabilities>
			</unit>
			<unit num_soldiers="100" script_name="Rom_Harbour_02">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines" main_type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="209" y="-766"/>
				<orientation radians="5.78"/>
				<width metres="80"/>
				<unit_capabilities>
				</unit_capabilities>
			</unit>
			<unit num_soldiers="100" script_name="Rom_Harbour_03">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines" main_type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="238" y="-850"/>
				<orientation radians="5.78"/>
				<width metres="80"/>
				<unit_capabilities>
				</unit_capabilities>
			</unit>	
		</army>
		
		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
			<capture_locations></capture_locations>
		</victory_condition>
		
		<rout_position x ="220.0" y = "1200.0"></rout_position>
	</alliance>	 

	<alliance id="1">
		<army>
			<faction>rom_carthage</faction>
			<deployment_area>
				<orientation radians="0.00"/>
				<position x='1000' y='-255'/>
				<position x='25' y='-255'/>
				<position x='-80' y='-165'/>
				<position x='-365' y='-165'/>
				<position x='-545' y='-340'/>
				<position x='-1000' y='-340'/>
				<position x='-1000' y='1000'/>
				<position x='1000' y='1000'/>
			</deployment_area>
			
			<camera_start_position x="-2.5" y="418.0" z="-150.0"/>
			<camera_target_position x="-2.5" y="114.0" z="-100.0"/>	  

			<!-- LAND UNITS -->
			<unit num_soldiers="160" script_name="Car_Dock_01">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="0.20" y="-37.46"/>
				<orientation radians="3.17"/>
				<width metres="18.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			
			<unit num_soldiers="160" script_name="Car_Dock_02">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-20.49" y="-36.96"/>
				<orientation radians="3.17"/>
				<width metres="18.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Car_Dock_03">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-39.85" y="146.64"/>
				<orientation radians="1.60"/>
				<width metres="21.38"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Car_Dock_04">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-112.17" y="142.93"/>
				<orientation radians="3.18"/>
				<width metres="21.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="120" script_name="Car_Dock_05">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-136.25" y="143.74"/>
				<orientation radians="3.18"/>
				<width metres="21.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="140" script_name="Car_Dock_06">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-14.55" y="-125"/>
				<orientation radians="3.17"/>
				<width metres="22.53"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Car_Mid_01">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-95.04" y="-13.53"/>
				<orientation radians="3.16"/>
				<width metres="13.66"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Car_Mid_02">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-96.04" y="40.69"/>
				<orientation radians="3.13"/>
				<width metres="13.32"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="180" script_name="Car_Mid_03">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-160.34" y="144.55"/>
				<orientation radians="3.18"/>
				<width metres="21.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="100" script_name="Car_Mid_04">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-183.76" y="-95.82"/>
				<orientation radians="3.14"/>
				<width metres="20.5"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			
			<unit num_soldiers="160" script_name="Car_Main_01">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-200.00" y="74.00"/>
				<orientation radians="3.14"/>
				<width metres="17.52"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="140" script_name="Car_Main_02">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-172.84" y="73.70"/>
				<orientation radians="3.22"/>
				<width metres="17.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="140" script_name="Car_Main_03">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-184.43" y="145.36"/>
				<orientation radians="3.18"/>
				<width metres="21.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="100" script_name="Car_Main_04">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-228.74" y="5.21"/>
				<orientation radians="3.09"/>
				<width metres="28.54"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="100" script_name="Car_Main_05">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-233.53" y="-97.93"/>
				<orientation radians="3.141"/>
				<width metres="19.5"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="120" script_name="Car_Wall_01">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-24.12" y="-165.23"/>
				<orientation radians="3.93"/>
				<width metres="33.81"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="100" script_name="Car_Wall_02">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-89.67" y="-131.71"/>
				<orientation radians="3.16"/>
				<width metres="34.62"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Car_Wall_03">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-159.92" y="-130.02"/>
				<orientation radians="3.18"/>
				<width metres="34.52"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Car_Wall_04">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-276.00" y="-128.96"/>
				<orientation radians="3.14"/>
				<width metres="64.42"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="4"/>
			</unit>
			<unit num_soldiers="140" script_name="Car_Wall_05">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-415.21" y="-173.11"/>
				<orientation radians="2.37"/>
				<width metres="70.54"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="120" script_name="Car_Wall_06">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-487.06" y="-241.54"/>
				<orientation radians="2.36"/>
				<width metres="60.33"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="120" script_name="Car_Wall_07">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-532.95" y="-287.74"/>
				<orientation radians="2.34"/>
				<width metres="67.14"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="100" script_name="Car_Wall_08">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-611.01" y="-313.04"/>
				<orientation radians="3.13"/>
				<width metres="48.57"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="80" script_name="Car_Wall_09">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-674.80" y="-313.09"/>
				<orientation radians="3.13"/>
				<width metres="48.16"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="120" script_name="Car_Wall_10">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-769.36" y="-283.60"/>
				<orientation radians="3.93"/>
				<width metres="60.39"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="120" script_name="Car_Wall_11">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-340" y="-135"/>
				<orientation radians="3.141"/>
				<width metres="65"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="40" script_name="Car_Art_01">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-422.85" y="-84.94"/>
				<orientation radians="2.79"/>
				<width metres="27.50"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="40" script_name="Car_Art_02">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-330.75" y="70.95"/>
				<orientation radians="2.87"/>
				<width metres="27.50"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="40" script_name="Car_Art_03">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-333.71" y="101.51"/>
				<orientation radians="2.90"/>
				<width metres="27.50"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="40" script_name="Car_Art_04">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="10.00" y="75.00"/>
				<orientation radians="3.14"/>
				<width metres="30.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			
			<unit num_soldiers="8" script_name="Car_Ele_01">
				<unit_type type="Inf_Melee_Roman_Heavy_Marines"/>
				<position x="-244.53" y="158.40"/>
				<orientation radians="3.14"/>
				<width metres="21.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
		</army>
		
		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		<rout_position x ="220.0" y = "1200.0"></rout_position>
	</alliance>

	
	
	<battle_description>
		<battle_script prepare_for_fade_in="true">E3_Main.lua</battle_script>
		<time_of_day>day</time_of_day>
		<season>Summer</season>
		<precipitation_type>dry</precipitation_type>
		<subculture>sc_japanese</subculture>
		<type>land_normal</type>
		<duration>3600</duration>
		<timeout_winning_alliance_index>1</timeout_winning_alliance_index>
	</battle_description>

	<weather>
		<prevailing_wind x="0.3" y="0.47"/>
		<lighting>default</lighting>
		<environment_key>BattleTerrain/presets/Carthage_E3/e3_env.environment</environment_key>
	</weather>

	<sea_surface_name>wind_level_2</sea_surface_name>
	
	<Climate>
		<name>ROME_Med</name>
	</Climate>
	
	<Season>
		<name>season_summer</name>
	</Season>
	
	<battle_map_definition>
		<name>BattleTerrain/presets/Carthage_E3/</name>
	</battle_map_definition>
	<playable_area dimension = "2000"></playable_area>
	<!-- <skip_deployment></skip_deployment> -->
	<skip_results></skip_results>
	<loading_screen_directory>BattleTerrain/presets/Carthage_E3/</loading_screen_directory>
</battle>







C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\et_environment_test\et_battle.xml
<?xml version="1.0" encoding="UTF-8"?>
<battle xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="battle.xsd">

	<alliance id="0">
		<army>
			<faction>rom_ptolemaics</faction>

			<deployment_area>
				<position x='-900' y='-900'/>
				<position x='-900' y='900'/>
				<position x='900' y='900'/>
				<position x='900' y='-900'/>
				<orientation radians="0.00"/>
			</deployment_area>
			
			<camera_start_position x="-176.8" y="344.7" z="-382.2" /> 
			<camera_target_position x="-143.5" y="323.8" z="-330.8" />
					
			<unit num_soldiers="40" script_name="Egy_01">
				<unit_type type="Gre_Ptolemaic_Cav"/>
				<position x="-149.89" y="-340.35"/>
				<orientation radians="0.59"/>
				<width metres="19.94"/>
				<unit_capabilities>
				</unit_capabilities>
				<general>
					<name>Ptolemy IV</name>
					<star_rating level ="5"/>
        		</general>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Egy_02">
				<unit_type type="Egy_Cav" />
				<position x="-214.95" y="-251.10"/>
				<orientation radians="0.59"/>
				<width metres="31.38"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Egy_03">
				<unit_type type="Egy_Cav"/>
				<position x="-187.89" y="-269.08"/>
				<orientation radians="0.59"/>
				<width metres="29.58"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Egy_04">
				<unit_type type="Gre_Citizen_Cav" />
				<position x="-161.93" y="-286.34"/>
				<orientation radians="0.59"/>
				<width metres="28.78"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
		</army>
		
		<victory_condition>
		     <kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		
		<rout_position x ="-800.0" y = "-1300"></rout_position>
	</alliance>
	
	<alliance id="1">
		<!-- <non_playable></non_playable> -->	
		<army>
			<faction>rom_seleucid</faction>

			<deployment_area>
				<position x='-900' y='-900'/>
				<position x='-900' y='900'/>
				<position x='900' y='900'/>
				<position x='900' y='-900'/>
				<orientation radians="0.00"/>
			</deployment_area>
				
			<camera_start_position x="0" y="40" z="500" /> 
			<camera_target_position x="0" y="22.5" z="440" />
			<campaign_ai_battle_hints aggression="1.0"/>
			
			<unit num_soldiers="160" script_name="Sel_01">
				<unit_type type="Gre_Silver_Shield_Sword"/>
				<position x="257.33" y="263.92"/>
				<orientation radians="3.77"/>
				<width metres="18.87"/>
				<unit_capabilities>
				</unit_capabilities>
				<general>
					<name>Antiochus III the Great</name>
					<star_rating level ="5"/>
        		</general>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Sel_02">
				<unit_type type="Gre_Companion_Cav" />
				<position x="97.74" y="353.14"/>
				<orientation radians="3.77"/>
				<width metres="35.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Sel_03">
				<unit_type type="Gre_Companion_Cav" />
				<position x="67.81" y="374.90"/>
				<orientation radians="3.77"/>
				<width metres="35.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Sel_04">
				<unit_type type="Gre_Companion_Cav" />
				<position x="406.97" y="128.27"/>
				<orientation radians="3.77"/>
				<width metres="35.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
		</army>

		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		
		<rout_position x ="0" y = "1300"></rout_position>
	</alliance>
	
	<battle_description>
		<battle_script prepare_for_fade_in="true">ET_Start.lua</battle_script>
		<time_of_day>day</time_of_day>
		<season>Summer</season>
		<precipitation_type>dry</precipitation_type>
		<subculture>sc_rom_african_arabian</subculture>
		<type>land_normal</type>
		<timeout_winning_alliance_index>1</timeout_winning_alliance_index>
	</battle_description>

	<sea_surface_name>wind_level_2</sea_surface_name>
		
	<weather>
		<environment_key>terrain/battles/raphia/default.environment</environment_key>
		<prevailing_wind x="0" y="9"/>
	</weather>
	
	<battle_map_definition>
		<name>terrain/battles/raphia/</name>
	</battle_map_definition>
	<!-- <use_deployment_radar_on_loading_screen>false</use_deployment_radar_on_loading_screen> -->

	<!-- <skip_deployment></skip_deployment> -->
	<playable_area dimension = "2000"></playable_area>
</battle>







C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ni_nile\ni_battle.xml
<?xml version="1.0" encoding="UTF-8"?>
<battle xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="battle.xsd">


	<alliance id="0">
		<army>
			<faction>rom_rome</faction>
			<!-- deployment area for land forces -->
			<deployment_area id='0'>
				<boundary type='standard additive'>
					<position x='-170' y='-900'/>
					<position x='-170' y='-750'/>
					<position x='220' y='-750'/>
					<position x='220' y='-900'/>
				</boundary>
			
				<!-- area for naval forces -->
				<boundary type='standard additive'>
					<position x='330' y='-900'/>
					<position x='330' y='-650'/>
					<position x='800' y='-650'/>
					<position x='800' y='-900'/>
				</boundary>
			</deployment_area>
			
			<camera_start_position x="-82" y="57.3" z="-942.2"/>
			<camera_target_position x="-43.7" y="40.3" z="-895.6"/>
			<campaign_ai_battle_hints aggression="0.50"/>
	
			<unit num_soldiers="40" script_name="Rom_01">
				<unit_type type="Rom_Legatus"/>
				<position x="87.88" y="-876.06"/>
				<orientation radians="0.03"/>
				<width metres="18.32"/>
				<unit_capabilities>
					<special_ability>com_rally</special_ability>
					<special_ability>com_inspire_unit</special_ability>
				</unit_capabilities>
				<general>
					<name>2147343696</name>			<!-- <name>Julius Caesar</name> -->
					<star_rating level ="7"/>
					<uniform>Caesar</uniform>
				</general>
				<unit_experience level="7"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_02">
				<unit_type type="Rom_Evocati_Cohort"/>
				<position x="37.41" y="-825.30"/>
				<orientation radians="0.00"/>
				<width metres="18.34"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_03">
				<unit_type type="Rom_Evocati_Cohort"/>
				<position x="37.41" y="-848.00"/>
				<orientation radians="0.00"/>
				<width metres="18.34"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_04">
				<unit_type type="Rom_Evocati_Cohort"/>
				<position x="65.75" y="-825.30"/>
				<orientation radians="0.00"/>
				<width metres="18.34"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="4"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_05">
				<unit_type type="Rom_Evocati_Cohort"/>
				<position x="65.75" y="-848.00"/>
				<orientation radians="0.00"/>
				<width metres="18.34"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>			
			<unit num_soldiers="160" script_name="Rom_06">
				<unit_type type="Rom_Evocati_Cohort"/>
				<position x="10.93" y="-825.30"/>
				<orientation radians="0.00"/>
				<width metres="18.34"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="4"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_07">
				<unit_type type="Rom_Evocati_Cohort"/>
				<position x="10.93" y="-848.00"/>
				<orientation radians="0.00"/>
				<width metres="18.34"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="4"/>
			</unit>			
			<unit num_soldiers="80" script_name="Rom_08">
				<unit_type type="Aux_Cav"/>
				<position x="-40.88" y="-871.65"/>
				<orientation radians="0.00"/>
				<width metres="24.88"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="4"/>
			</unit>
			<unit num_soldiers="80" script_name="Rom_09">
				<unit_type type="Aux_Ara_Camel_Archers"/>
				<position x="-40.88" y="-826.25"/>
				<orientation radians="0.00"/>
				<width metres="24.88"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>			
			<unit num_soldiers="12" script_name="Rom_10">
				<unit_type type="Aux_Afr_Elephant"/>
				<position x="-73.65" y="-873.10"/>
				<orientation radians="0.00"/>
				<width metres="36.67"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>	
			<unit num_soldiers="40" script_name="Rom_11">
				<unit_type type="Gre_Pontic_Royal_Cav"/>
				<position x="-103.21" y="-871.65"/>
				<orientation radians="0.00"/>
				<width metres="18.45"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="5"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_12">
				<unit_type type="Cel_Galatian_Swords"/>
				<position x="94.09" y="-825.30"/>
				<orientation radians="0.00"/>
				<width metres="18.34"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_13">
				<unit_type type="Cel_Galatian_Swords"/>
				<position x="94.09" y="-848.00"/>
				<orientation radians="0.00"/>
				<width metres="18.34"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>			
			<unit num_soldiers="160" script_name="Rom_14">
				<unit_type type="Cel_Galatian_Noblemen"/>
				<position x="-14.27" y="-825.30"/>
				<orientation radians="0.00"/>
				<width metres="18.34"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="4"/>
			</unit>
			<unit num_soldiers="120" script_name="Rom_15">
				<unit_type type="Aux_Gre_Cretan_Archers"/>
				<position x="-129.95" y="-825.30"/>
				<orientation radians="0.00"/>
				<width metres="42.47"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="9"/>
			</unit>
			<unit num_soldiers="120" script_name="Rom_16">
				<unit_type type="Aux_Gre_Cretan_Archers"/>
				<position x="-76.55" y="-825.30"/>
				<orientation radians="0.00"/>
				<width metres="42.47"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="9"/>
			</unit>
			<unit num_soldiers="120" script_name="Rom_17">
				<unit_type type="Aux_Gre_Cretan_Archers"/>
				<position x="129.50" y="-825.30"/>
				<orientation radians="0.00"/>
				<width metres="42.47"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="9"/>
			</unit>
			<unit num_soldiers="120" script_name="Rom_18">
				<unit_type type="Aux_Gre_Cretan_Archers"/>
				<position x="182.9" y="-825.30"/>
				<orientation radians="0.00"/>
				<width metres="42.47"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="9"/>
			</unit>
			<unit num_soldiers="80" script_name="Rom_19">
				<unit_type type="Aux_Cav"/>
				<position x="120.70" y="-871.65"/>
				<orientation radians="0.00"/>
				<width metres="24.88"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="9"/>
			</unit>
			<unit num_soldiers="80" script_name="Rom_20">
				<unit_type type="Aux_Cav"/>
				<position x="147.58" y="-871.65"/>
				<orientation radians="0.00"/>
				<width metres="24.88"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>		
			
			<unit num_soldiers="160" script_name="Rom_Ship_1">
				<unit_type type="Rom_Evocati_Six"/>
				<position x="528.412" y="-759.347"/>
				<orientation radians="6.30"/>
				<width metres="0"/>
				<unit_experience level="4"/>
			</unit>
			<unit num_soldiers="140" script_name="Rom_Ship_2">
				<unit_type type="Rom_Velites_Five"/>  
				<position x="568.181" y="-759.857"/>
				<orientation radians="6.30"/>
				<width metres="45"/>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="40" script_name="Rom_Ship_3">
				<unit_type type="Rom_Onager_Five"/>
				<position x="451.32" y="-755.418"/>
				<orientation radians="6.30"/>
				<width metres="0"/>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="120" script_name="Rom_Ship_4">
				<unit_type type="Rom_Legionary_Cohort_Four"/>
				<position x="489.66" y="-754.372"/>
				<orientation radians="6.30"/>
				<width metres="40.4"/>
				<unit_experience level="4"/>
			</unit>
			<unit num_soldiers="120" script_name="Rom_Ship_5">
				<unit_type type="Rom_Legionary_Cohort_Four"/>  
				<position x="606.521" y="-758.811"/>
				<orientation radians="6.30"/>
				<width metres="40.4"/>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="120" script_name="Rom_Ship_6">
				<unit_type type="Rom_Legionary_Cohort_Four"/>
				<position x="413.17" y="-751.467"/>
				<orientation radians="6.30"/>
				<width metres="40.4"/>
				<unit_experience level="3"/>
			</unit>	
		</army>
		
		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		
		<rout_position x="-800.00" y="-1300.00"/>
	</alliance>
	
	<alliance id="1">
		<army>
			<faction>rom_ptolemaics</faction>
			<deployment_area>
				<centre x="-40.00" y="-190.00"/>
				<width metres="500.00"/>
				<height metres="500.00"/>
				<orientation radians="3.14"/>
			</deployment_area>
			
			<camera_start_position x="-38.64" y="45.35" z="-684.05"/>
			<camera_target_position x="-54.77" y="25.75" z="-741.24"/>
			
			<campaign_ai_battle_hints aggression="1.00"/>
			<baggage_train_position x="-35.0" y="-190.0"/>	
			
			<deployables>
				<deployable_item name="deployable_fireball" num_deployables ="1">
				</deployable_item>
				<deployable_item name="deployable_fireball" num_deployables ="1">
				</deployable_item>
				<deployable_item name="deployable_fireball" num_deployables ="1">
				</deployable_item>
			</deployables>
			
			<unit num_soldiers="40" script_name="Egy_01">
				<unit_type type="Gre_Ptolemaic_Cav"/>
				<position x="23.81" y="-180.56"/>
				<orientation radians="3.01"/>
				<width metres="17.54"/>
				<unit_capabilities>
				</unit_capabilities>
				<general>
					<name>2147343697</name>		<!-- <name>Ptolemy XIII</name> -->
					<star_rating level="2"/>
					<uniform>Gre_General_05</uniform>
				</general>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Egy_02">
				<unit_type type="Egy_Infantry"/>
				<position x="63.12" y="-252.23"/>
				<orientation radians="3.13"/>
				<width metres="22.30"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Egy_03">
				<unit_type type="Egy_Infantry"/>
				<position x="38.82" y="-252.56"/>
				<orientation radians="3.13"/>
				<width metres="22.30"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Egy_04">
				<unit_type type="Egy_Pike"/>
				<position x="14.33" y="-252.89"/>
				<orientation radians="3.13"/>
				<width metres="22.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Egy_05">
				<unit_type type="Gre_Royal_Guard"/>
				<position x="-10.37" y="-253.23"/>
				<orientation radians="3.13"/>
				<width metres="22.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Egy_06">
				<unit_type type="Egy_Pike"/>
				<position x="-35.07" y="-253.56"/>
				<orientation radians="3.13"/>
				<width metres="22.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>	
			<unit num_soldiers="12" script_name="Egy_07">
				<unit_type type="Afr_Elephants"/>
				<position x="-77.63" y="-247.33"/>
				<orientation radians="3.07"/>
				<width metres="36.64"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="120" script_name="Egy_08">
				<unit_type type="Egy_Slingers"/>
				<position x="-50" y="-130"/>
				<orientation radians="3.14"/>
				<width metres="24.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="120" script_name="Egy_09">
				<unit_type type="Egy_Slingers"/>
				<position x="100" y="-130"/>
				<orientation radians="3.14"/>
				<width metres="24.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="120" script_name="Egy_10">
				<unit_type type="Egy_Slingers"/>
				<position x="40" y="-130"/>
				<orientation radians="3.14"/>
				<width metres="45"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="120" script_name="Egy_11">
				<unit_type type="Egy_Archers"/>
				<position x="-50" y="-100"/>
				<orientation radians="3.14"/>
				<width metres="45"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="20" script_name="Egy_12">
				<unit_type type="Gre_Scythed_Chariots"/>
				<position x="-219.51" y="-37.98"/>
				<orientation radians="3.15"/>
				<width metres="43.22"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="40" script_name="Egy_13">
				<unit_type type="Gre_Ballista"/>
				<position x="86.64" y="-220.25"/>
				<orientation radians="3.11"/>
				<width metres="35.04"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="40" script_name="Egy_14">
				<unit_type type="Gre_Ballista"/>
				<position x="126.66" y="-218.93"/>
				<orientation radians="3.11"/>
				<width metres="35.04"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="80" script_name="Egy_15">
				<unit_type type="Ara_Camel_Spear"/>
				<position x="-52.87" y="-202.96"/>
				<orientation radians="2.85"/>
				<width metres="52.98"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="120" script_name="Egy_16">
				<unit_type type="Egy_Archers"/>
				<position x="90" y="-140"/>
				<orientation radians="3.35"/>
				<width metres="49.21"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="20" script_name="Egy_17">
				<unit_type type="Gre_Scythed_Chariots"/>
				<position x="-262.72" y="-38.00"/>
				<orientation radians="3.15"/>
				<width metres="35.22"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="40" script_name="Egy_18">
				<unit_type type="Gre_Ballista"/>
				<position x="49.62" y="-221.48"/>
				<orientation radians="3.11"/>
				<width metres="35.04"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Egy_19">
				<unit_type type="Egy_Pike"/>
				<position x="-35.07" y="-253.56"/>
				<orientation radians="3.13"/>
				<width metres="22.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>	
			<unit num_soldiers="160" script_name="Egy_20">
				<unit_type type="Egy_Pike"/>
				<position x="-35.07" y="-253.56"/>
				<orientation radians="3.13"/>
				<width metres="22.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>	
			<unit num_soldiers="160" script_name="Egy_21">
				<unit_type type="Egy_Pike"/>
				<position x="-35.07" y="-253.56"/>
				<orientation radians="3.13"/>
				<width metres="22.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>	
			<unit num_soldiers="160" script_name="Egy_22">
				<unit_type type="Egy_Pike"/>
				<position x="-35.07" y="-253.56"/>
				<orientation radians="3.13"/>
				<width metres="22.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
		</army>
		
		<army>
			<faction>rom_ptolemaics</faction>
			<deployment_area>
				<centre x="700.00" y="750.00"/>
				<width metres="400.00"/>
				<height metres="200.00"/>
				<orientation radians="3.14"/>
			</deployment_area>
			<camera_start_position x="-38.64" y="45.35" z="-684.05"/>
			<camera_target_position x="-54.77" y="25.75" z="-741.24"/>
			<campaign_ai_battle_hints aggression="1.00"/>
			
			<can_withdraw>false</can_withdraw>
			
			<unit num_soldiers="200" script_name="Egy_Naval_1">
				<unit_type type="Egy_Infantry_Eight_Dbl_Hft"/>
				<position x="680" y="750"/>
				<orientation radians="3.2"/>
				<width metres="0"/>
				<general>
					<name>2147343698</name>			<!-- <name>Ganymedes</name> -->
					<star_rating level="1"/>
				</general>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="40" script_name="Egy_Naval_2">
				<unit_type type="Afr_Onager_Five"/>
				<position x="640" y="750"/>
				<orientation radians="3.2"/>
				<width metres="0"/>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="40" script_name="Egy_Naval_3">
				<unit_type type="Afr_Onager_Five"/>
				<position x="720" y="750"/>
				<orientation radians="3.2"/>
				<width metres="0"/>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="140" script_name="Egy_Naval_4">
				<unit_type type="Egy_Archers_Five"/>
				<position x="560" y="750"/>
				<orientation radians="3.2"/>
				<width metres="45"/>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="140" script_name="Egy_Naval_5">
				<unit_type type="Egy_Archers_Five"/>
				<position x="820" y="750"/>
				<orientation radians="3.2"/>
				<width metres="45"/>
				<unit_experience level="1"/>
			</unit>		
		</army>
		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		
		<rout_position x="0.00" y="1300.00"/>
	</alliance>
	
	
	
	<battle_description>
		<battle_script prepare_for_fade_in="true">NI_Start.lua</battle_script>
		<time_of_day>day</time_of_day>
		<season>Summer</season>
		<precipitation_type>dry</precipitation_type>
		<subculture>sc_rom_egyptian</subculture>
		<type>land_normal</type>
		<timeout_winning_alliance_index>1</timeout_winning_alliance_index>
	</battle_description>

	<sea_surface_name>wind_level_2</sea_surface_name>

	

	
	
	<weather>
		<environment_key>terrain/battles/nile/nile.environment</environment_key>
		<prevailing_wind x="0" y="9"/>
	</weather>
	
	<battle_map_definition>
		<name>terrain/battles/nile/</name>
	</battle_map_definition>
	<!-- <use_deployment_radar_on_loading_screen>false</use_deployment_radar_on_loading_screen> -->

	<!-- <skip_deployment></skip_deployment> -->
	<playable_area dimension = "1940"></playable_area>
</battle>







C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ni_nile_small\ni_battle2.xml
<?xml version="1.0" encoding="UTF-8"?>
<battle xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="battle.xsd">

	<alliance id="0">
		<army>
			<faction>rom_rome</faction>

			<deployment_area>
		
				<!-- deployment area for land forces -->		
				<boundary type='standard additive'>
					<position x='-220' y='-1000'/>
					<position x='-220' y='-750'/>
					<position x='270' y='-750'/>
					<position x='270' y='-1000'/>
					<orientation radians="0.00"/>
				</boundary>
				
				<!-- deployment area for naval forces -->
				<boundary type='standard additive'>
					<position x='330' y='-900'/>
					<position x='330' y='-650'/>
					<position x='800' y='-650'/>
					<position x='800' y='-900'/>
					<orientation radians="0.00"/>
				</boundary>			

			</deployment_area>
			
			<camera_start_position x="-82" y="57.3" z="-942.2"/>
			<camera_target_position x="-43.7" y="40.3" z="-895.6"/>
			<campaign_ai_battle_hints aggression="0.50"/>
	 <!--<deployables>
	   
        <deployable_item name="deployable_barricade" num_deployables ="2">
        </deployable_item>
        <deployable_item name="deployable_sharp_stones" num_deployables ="2">
        </deployable_item>
        <deployable_item name="deployable_stakes" num_deployables ="2">
        </deployable_item>
        <deployable_item name="deployable_brimstone" num_deployables ="2">
        </deployable_item>
        <deployable_item name="deployable_spiketrap" num_deployables ="2">
        </deployable_item>
        <deployable_item name="deployable_caltrop" num_deployables ="2">
        </deployable_item>
		<deployable_item name="deployable_fireball" num_deployables ="2">
        </deployable_item>

      </deployables>-->
	  		
			<unit num_soldiers="40" script_name="Rom_01">
				<unit_type type="Rom_Legatus"/>
				<position x="-37.84" y="-843.75"/>
				<orientation radians="0.03"/>
				<width metres="25.74"/>
        <unit_capabilities>
			<special_ability>com_inspire_unit</special_ability>
			<special_ability>com_raise_banner</special_ability>
			<special_ability>com_rally</special_ability>
			<special_ability>com_rally_and_inspire</special_ability>
		</unit_capabilities>
				<general>
					<name>Julius Caesar</name>
					<star_rating level ="9"/>
				</general>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_02">
				<unit_type type="Rom_Evocati_Cohort"/>
				<position x="-22.69" y="-829.54"/>
				<orientation radians="0.02"/>
				<width metres="16.00"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>form_testudo</special_ability>
					<special_ability>use_the_whip</special_ability>
					<shot_type>small_arm_default</shot_type>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_03">
				<unit_type type="Rom_Evocati_Cohort"/>
				<position x="-40.68" y="-829.27"/>
				<orientation radians="0.02"/>
				<width metres="16.00"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>form_testudo</special_ability>
					<special_ability>use_the_whip</special_ability>
					<shot_type>small_arm_default</shot_type>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_04">
				<unit_type type="Rom_Evocati_Cohort"/>
				<position x="13.31" y="-830.08"/>
				<orientation radians="0.02"/>
				<width metres="16.00"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>form_testudo</special_ability>
					<special_ability>use_the_whip</special_ability>
					<shot_type>small_arm_default</shot_type>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_05">
				<unit_type type="Rom_Evocati_Cohort"/>
				<position x="-4.69" y="-829.81"/>
				<orientation radians="0.02"/>
				<width metres="16.00"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>form_testudo</special_ability>
					<special_ability>use_the_whip</special_ability>
					<shot_type>small_arm_default</shot_type>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_06">
				<unit_type type="Rom_Evocati_Cohort"/>
				<position x="-59.13" y="-828.99"/>
				<orientation radians="0.02"/>
				<width metres="16.90"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>form_testudo</special_ability>
					<special_ability>use_the_whip</special_ability>
					<shot_type>small_arm_default</shot_type>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_07">
				<unit_type type="Rom_Evocati_Cohort"/>
				<position x="-78.03" y="-828.70"/>
				<orientation radians="0.02"/>
				<width metres="16.90"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>form_testudo</special_ability>
					<special_ability>use_the_whip</special_ability>
					<shot_type>small_arm_default</shot_type>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Rom_08">
				<unit_type type="Aux_Cav"/>
				<position x="-105.22" y="-828.48"/>
				<orientation radians="6.27"/>
				<width metres="27.78"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Rom_09">
				<unit_type type="Aux_Cav"/>	
				<position x="-137.00" y="-828.79"/>
				<orientation radians="6.27"/>
				<width metres="27.78"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="12" script_name="Rom_10">
				<unit_type type="Aux_Afr_Elephant"/>
				<position x="-3.69" y="-844.00"/>
				<orientation radians="0.04"/>
				<width metres="37.19"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<special_ability>kill_elephants</special_ability>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="120" script_name="Rom_11">
				<unit_type type="Aux_Eas_Javelinmen"/>
				<position x="-54.62" y="-819.49"/>
				<orientation radians="6.27"/>
				<width metres="52.90"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<shot_type>small_arm_default</shot_type>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="120" script_name="Rom_12">
				<unit_type type="Aux_Eas_Javelinmen"/>
				<position x="2.28" y="-818.89"/>
				<orientation radians="6.27"/>
				<width metres="52.90"/>
				<unit_capabilities>
					<firing_drill>fire_volley</firing_drill>
					<shot_type>small_arm_default</shot_type>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="50" script_name="Rom_Ship_1">
				<unit_type type="Rom_Onager_Five"/>
				<position x="520" y="-870"/>
				<orientation radians="6.30"/> 
				<width metres="0"/>
				<unit_experience level="0"/>
			</unit>

			<unit num_soldiers="50" script_name="Rom_Ship_3">
				<unit_type type="Rom_Onager_Five"/>
				<position x="490" y="-870"/>
				<orientation radians="6.30"/>
				<width metres="0"/>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="120" script_name="Rom_Ship_4">
				<unit_type type="Rom_Legionary_Cohort_Four"/>
				<position x="520" y="-800"/>
				<orientation radians="6.30"/>
				<width metres="40.4"/>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="120" script_name="Rom_Ship_5">
				<unit_type type="Rom_Legionary_Cohort_Four"/>  
				<position x="585" y="-800"/>
				<orientation radians="6.30"/>
				<width metres="40.4"/>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="120" script_name="Rom_Ship_6">
				<unit_type type="Rom_Legionary_Cohort_Four"/>
				<position x="470" y="-800"/>
				<orientation radians="6.30"/>
				<width metres="40.4"/>
				<unit_experience level="0"/>
			</unit>
			
		</army>
		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		<victory_condition>
			<capture_baggage_train></capture_baggage_train>
		</victory_condition>		
		<rout_position x="-800.00" y="-1300.00"/>
	</alliance>
	

	<alliance id="1">
		<army>
			<faction>rom_ptolemaics</faction>
			<deployment_area>
				<centre x="-22.00" y="-250.00"/>
				<width metres="1800.00"/>
				<height metres="450.00"/>
				<orientation radians="3.14"/>
			</deployment_area>
			<camera_start_position x="-38.64" y="45.35" z="-684.05"/>
			<camera_target_position x="-54.77" y="25.75" z="-741.24"/>
			<campaign_ai_battle_hints aggression="1.00"/>
			<baggage_train_position x="5.0" y="-210.0"/>	
			<unit num_soldiers="40" script_name="Egy_01">
				<unit_type type="Gre_Ptolemaic_Cav"/>
				<position x="147.86" y="-143.21"/>
				<orientation radians="2.85"/>
				<width metres="50.85"/>
				<unit_capabilities>
				</unit_capabilities>
				<general>
					<name>Ptolemy XIII</name>
					<star_rating level="3"/>
				</general>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Egy_02">
				<unit_type type="Egy_Infantry"/>
				<position x="-12.61" y="-191.97"/>
				<orientation radians="2.85"/>
				<width metres="20.46"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Egy_03">
				<unit_type type="Egy_Infantry"/>
				<position x="154.32" y="-508.09"/>
				<orientation radians="3.14"/>
				<width metres="19.20"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>			
			<unit num_soldiers="160" script_name="Egy_04">
				<unit_type type="Egy_Pike"/>
				<position x="110.62" y="-155.29"/>
				<orientation radians="2.85"/>
				<width metres="17.43"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Egy_05">
				<unit_type type="Egy_Pike"/>
				<position x="49.22" y="-173.57"/>
				<orientation radians="2.85"/>
				<width metres="31.34"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="12" script_name="Egy_06">
				<unit_type type="Afr_Elephants"/>
				<position x="15.69" y="-183.54"/>
				<orientation radians="2.85"/>
				<width metres="28.61"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>		
			
			<unit num_soldiers="12" script_name="Egy_07">
				<unit_type type="Afr_Elephants"/>
				<position x="185.07" y="-500.33"/>
				<orientation radians="2.85"/>
				<width metres="29.68"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="120" script_name="Egy_08">
				<unit_type type="Egy_Archers"/>
				<position x="-739.48" y="-577.97"/>
				<orientation radians="1.30"/>
				<width metres="25.90"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="120" script_name="Egy_09">
				<unit_type type="Egy_Archers"/>
				<position x="-46.98" y="-222.76"/>
				<orientation radians="2.85"/>
				<width metres="41.92"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>			
			<unit num_soldiers="8" script_name="Egy_10">
				<unit_type type="Gre_Scythed_Chariots"/>
				<position x="-651.07" y="169.33"/>
				<orientation radians="3.25"/>
				<width metres="53.81"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="40" script_name="Egy_11">
				<unit_type type="Gre_Ballista"/>
				<position x="132.86" y="-217.51"/>
				<orientation radians="2.87"/>
				<width metres="36.00"/>
				<unit_capabilities>
				<shot_type>artillery_default</shot_type>
				<shot_type>artillery_flammable</shot_type>
				<shot_type>artillery_explosive</shot_type>	
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="40" script_name="Egy_12">
				<unit_type type="Gre_Ballista"/>
				<position x="251.67" y="-276.31"/>
				<orientation radians="2.32"/>
				<width metres="22.71"/>
				<unit_capabilities>
				<shot_type>artillery_explosive</shot_type>	
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Egy_13">
				<unit_type type="Ara_Camel_Spear"/>
				<position x="-52.87" y="-202.96"/>
				<orientation radians="2.85"/>
				<width metres="52.98"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Egy_14">
				<unit_type type="Egy_Pike"/>
				<position x="100.25" y="-163.43"/>
				<orientation radians="2.85"/>
				<width metres="29.68"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="40" script_name="Egy_15">
				<unit_type type="Ara_Camel_Archers"/>
				<position x="-150.25" y="-555"/>
				<orientation radians="3.34"/>
				<width metres="20"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>	
			</unit>	

			<unit num_soldiers="8" script_name="Egy_16">
				<unit_type type="Gre_Scythed_Chariots"/>
				<position x="-150.25" y="-555"/>
				<orientation radians="3.25"/>
				<width metres="20.81"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>

			<!--<unit num_soldiers="40" script_name="Egy_26">
				<unit_type type="Gre_Ballista"/>
				<position x="-260.86" y="-260.51"/>
				<orientation radians="2.87"/>
				<width metres="36.00"/>
				<unit_capabilities>
				<shot_type>artillery_default</shot_type>
				<shot_type>artillery_flammable</shot_type>
				<shot_type>artillery_explosive</shot_type>	
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>-->
			<unit num_soldiers="40" script_name="Egy_17">
				<unit_type type="Gre_Ballista"/>
				<position x="92.22" y="-221.50"/>
				<orientation radians="3.35"/>
				<width metres="36.00"/>
				<unit_capabilities>
				<shot_type>artillery_default</shot_type>
				<shot_type>artillery_flammable</shot_type>
				<shot_type>artillery_explosive</shot_type>				
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Egy_18">
				<unit_type type="Ara_Camel_Archers"/>
				<position x="-115.10" y="-607.46"/>
				<orientation radians="2.07"/>
				<width metres="64.78"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>	
			</unit>	
			<!--<unit num_soldiers="40" script_name="Egy_21">
				<unit_type type="Ara_Camel_Archers"/>
				<position x="-102.91" y="-626.85"/>
				<orientation radians="2.15"/>
				<width metres="32.78"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>	
			</unit>	-->
			<unit num_soldiers="40" script_name="Egy_S1">
				<unit_type type="Egy_Infantry"/>
				<position x="-61.08" y="-272.31"/>
				<orientation radians="3.09"/>
				<width metres="22.91"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>	
			</unit>	
			<unit num_soldiers="40" script_name="Egy_S2">
				<unit_type type="Egy_Infantry"/>
				<position x="0.19" y="-271.90"/>
				<orientation radians="3.14"/>
				<width metres="24.35"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>	
			</unit>	
			<unit num_soldiers="40" script_name="Egy_S3">
				<unit_type type="Egy_Infantry"/>
				<position x="-125.33" y="-282.51"/>
				<orientation radians="3.11"/>
				<width metres="33.67"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>	
			</unit>	
				<unit num_soldiers="40" script_name="Egy_S4">
				<unit_type type="Egy_Infantry"/>
				<position x="69.38" y="-271.29"/>
				<orientation radians="3.16"/>
				<width metres="29.07"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>	
			</unit>	
		</army>
		
		<army>
			<faction>rom_ptolemaics</faction>
			<deployment_area>
				<centre x="700.00" y="750.00"/>
				<width metres="400.00"/>
				<height metres="200.00"/>
				<orientation radians="3.14"/>
			</deployment_area>
			<camera_start_position x="-38.64" y="45.35" z="-684.05"/>
			<camera_target_position x="-54.77" y="25.75" z="-741.24"/>
			<campaign_ai_battle_hints aggression="1.00"/>
			
			<can_withdraw>false</can_withdraw>
			
			<unit num_soldiers="200" script_name="Egy_Naval_1">
				<unit_type type="Egy_Infantry_Eight_Dbl_Hft"/>
				<position x="620" y="850"/>
				<orientation radians="3.2"/>
				<width metres="0"/>
				<general>
					<name>Arsinoe IV</name>
					<star_rating level="3"/>
				</general>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="40" script_name="Egy_Naval_2">
				<unit_type type="Gre_Ballista_Five"/>
				<position x="580" y="850"/>
				<orientation radians="3.2"/>
				<width metres="0"/>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="40" script_name="Egy_Naval_3">
				<unit_type type="Gre_Ballista_Five"/>
				<position x="660" y="850"/>
				<orientation radians="3.2"/>
				<width metres="0"/>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="140" script_name="Egy_Naval_4">
				<unit_type type="Egy_Archers_Five"/>
				<position x="500" y="850"/>
				<orientation radians="3.2"/>
				<width metres="45"/>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="140" script_name="Egy_Naval_5">
				<unit_type type="Egy_Archers_Five"/>
				<position x="740" y="850"/>
				<orientation radians="3.2"/>
				<width metres="45"/>
				<unit_experience level="1"/>
			</unit>

			
			
			
			

		<reinforcement_army approach_angle="307.0">
			<faction>rom_ptolemaics</faction>

			<deployment_area>
				<centre x="-22.00" y="-250.00"/>
				<width metres="1800.00"/>
				<height metres="450.00"/>
				<orientation radians="3.14"/>
			</deployment_area>
				
			<camera_start_position x="0" y="40" z="500" /> 
			<camera_target_position x="0" y="22.5" z="440" />
			<campaign_ai_battle_hints aggression="1.0"/>
			
			<unit num_soldiers="160" script_name="Egy_R_01">
				<unit_type type="Egy_Infantry"/>
				<position x="0" y="900"/>
				<orientation radians="3.14"/>
				<width metres="23.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<general>
					<name>Arsinoe IV</name>
					<star_rating level ="9"/>
				</general>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Egy_R_02">
				<unit_type type="Egy_Infantry"/>
				<position x="0" y="900"/>
				<orientation radians="3.14"/>
				<width metres="23.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Egy_R_03">
				<unit_type type="Egy_Infantry"/>
				<position x="0" y="900"/>
				<orientation radians="3.14"/>
				<width metres="23.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Egy_R_04">
				<unit_type type="Egy_Infantry"/>
				<position x="0" y="900"/>
				<orientation radians="3.14"/>
				<width metres="23.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Egy_R_05">
				<unit_type type="Egy_Pike"/>
				<position x="0" y="900"/>
				<orientation radians="3.14"/>
				<width metres="23.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Egy_R_06">
				<unit_type type="Egy_Pike"/>
				<position x="0" y="900"/>
				<orientation radians="3.14"/>
				<width metres="23.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Egy_R_07">
				<unit_type type="Egy_Pike"/>
				<position x="0" y="900"/>
				<orientation radians="3.14"/>
				<width metres="23.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Egy_R_08">
				<unit_type type="Egy_Pike"/>
				<position x="0" y="900"/>
				<orientation radians="3.14"/>
				<width metres="23.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Egy_R_09">
				<unit_type type="Egy_Pike"/>
				<position x="0" y="900"/>
				<orientation radians="3.14"/>
				<width metres="23.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="120" script_name="Egy_R_10">
				<unit_type type="Egy_Archers"/>
				<position x="0" y="900"/>
				<orientation radians="3.14"/>
				<width metres="23.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="120" script_name="Egy_R_11">
				<unit_type type="Egy_Archers"/>
				<position x="0" y="900"/>
				<orientation radians="3.14"/>
				<width metres="23.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="120" script_name="Egy_R_12">
				<unit_type type="Egy_Archers"/>
				<position x="0" y="900"/>
				<orientation radians="3.14"/>
				<width metres="23.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="120" script_name="Egy_R_13">
				<unit_type type="Egy_Archers"/>
				<position x="0" y="900"/>
				<orientation radians="3.14"/>
				<width metres="23.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Egy_R_14">
				<unit_type type="Egy_Infantry"/>
				<position x="0" y="900"/>
				<orientation radians="3.14"/>
				<width metres="23.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Egy_R_15">
				<unit_type type="Egy_Infantry"/>
				<position x="0" y="900"/>
				<orientation radians="3.14"/>
				<width metres="23.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Egy_R_16">
				<unit_type type="Egy_Infantry"/>
				<position x="0" y="900"/>
				<orientation radians="3.14"/>
				<width metres="23.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="12" script_name="Egy_R_17">
				<unit_type type="Mer_Ind_War_Elephants"/>
				<position x="15.69" y="-183.54"/>
				<orientation radians="2.85"/>
				<width metres="28.61"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="12" script_name="Egy_R_18">
				<unit_type type="Mer_Ind_War_Elephants"/>
				<position x="15.69" y="-183.54"/>
				<orientation radians="2.85"/>
				<width metres="28.61"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
		</reinforcement_army>
		
		</army>
		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		<rout_position x="0.00" y="1300.00"/>
	</alliance>
	
		<placed_deployables>
			<deployable_item name="deployable_fireball">
				<placement x="70" y="-275" width ="60" orientation="3.14"/>
				</deployable_item>
			<deployable_item name="deployable_fireball">
				<placement x="00" y="-275" width ="60" orientation="3.14"/>
				</deployable_item>
			<deployable_item name="deployable_fireball">
				<placement x="-60" y="-275" width ="60" orientation="3.14"/>
				</deployable_item>
			<deployable_item name="deployable_fireball">
				<placement x="-125" y="-285" width ="60" orientation="3.14"/>
				</deployable_item>
		</placed_deployables>	
		
	<battle_description>
		<battle_script prepare_for_fade_in="true">NI_Start2.lua</battle_script>
		<time_of_day>day</time_of_day>
		<season>Summer</season>
		<precipitation_type>dry</precipitation_type>
		<subculture>sc_rom_egyptian</subculture>
		<type>land_normal</type>
		<timeout_winning_alliance_index>1</timeout_winning_alliance_index>
	</battle_description>

	<sea_surface_name>wind_level_2</sea_surface_name>
		
	<weather>
		<environment_key>terrain/battles/nile/nile.environment</environment_key>
		<prevailing_wind x="0" y="9"/>
	</weather>
	
	<battle_map_definition>
		<name>terrain/battles/nile/</name>
	</battle_map_definition>
	<!-- <use_deployment_radar_on_loading_screen>false</use_deployment_radar_on_loading_screen> -->

	<!-- <skip_deployment></skip_deployment> -->
	<playable_area dimension = "1900"></playable_area>
</battle>







C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\pa_prologue_capua\pa_battle.xml
<?xml version="1.0" encoding="UTF-8"?>
<battle xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="battle.xsd">

	<alliance id="0">
		
		<!-- 1st - player -->
		<army has_invincible_general="true">
			<faction>pro_rome</faction>

			<deployment_area>
				<position x='-900' y='-900'/>
				<position x='-900' y='900'/>
				<position x='900' y='900'/>
				<position x='900' y='-900'/>
				<orientation radians="0.00"/>
			</deployment_area>
			
			<camera_start_position x="-846.7" y="252.7" z="-278.2" /> 
			<camera_target_position x="-784.5" y="247.5" z="-275.7" />
								
			<unit num_soldiers="160" script_name="Rom_01">
				<unit_type type="Rom_Triarii"/>
				
				<position x="-691.03" y="208.73"/>
				<orientation radians="1.71"/>
				<width metres="14.20"/>
				<!--
				<position x="-723.29" y="210.678"/>
				<orientation radians="1.73541"/>
				<width metres="13.6451"/>
				-->
				<unit_capabilities>
				</unit_capabilities>
				<general>
					<name>2147343700</name>			<!-- <name>Gaius Fulvius Silanus</name> -->
					<star_rating level ="1"/>
					<uniform>Silanus</uniform>
        		</general>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_02">
				<unit_type type="Rom_Hastati" />
				
				<position x="-693.32" y="192.69"/>
				<orientation radians="1.71"/>
				<width metres="14.20"/>
				<!-- 
				<position x="-725.826" y="195.587"/>
				<orientation radians="1.73647"/>
				<width metres="13.479"/>
				-->
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_03">
				<unit_type type="Rom_Hastati"/>
				
				<position x="-695.60" y="176.66"/>
				<orientation radians="1.71"/>
				<width metres="14.20"/>
				<!--
				<position x="-728.431" y="180.465"/>
				<orientation radians="1.74375"/>
				<width metres="13.6285"/>
				-->
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_04">
				<unit_type type="Rom_Hastati"/>
				
				<position x="-697.82" y="161.06"/>
				<orientation radians="1.71"/>
				<width metres="13.30"/>
				<!--
				<position x="-731.013" y="165.42"/>
				<orientation radians="1.73148"/>
				<width metres="13.8001"/>
				-->
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			
			<!-- post-village units -->
			<unit num_soldiers="160" script_name="Rom_05">
				<unit_type type="Ita_Sword"/>
				<position x="-873.16" y="480.99"/>
				<orientation radians="1.58"/>
				<width metres="14.2"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="120" script_name="Rom_06">
				<unit_type type="Ita_Levy_Slingers"/>
				<position x="-873.47" y="464.79"/>
				<orientation radians="1.59"/>
				<width metres="14.2"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="120" script_name="Rom_07">
				<unit_type type="Ita_Levy_Slingers"/>
				<position x="-873.77" y="448.59"/>
				<orientation radians="1.59"/>
				<width metres="14.2"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			
			<building_mountable_artillery num_soldiers="20" script_name="Rom_Art_01">
				<!-- <unit_type type="Rom_Scorpion" /> -->
				<unit_type type="Rom_Ballista_Bastion" />
				<position x="-360" y="-415"/>
				<orientation radians="0"/>
				<width metres="20"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</building_mountable_artillery>
		</army>
		
		<!-- 2nd - village allies -->
		<army hide_results="true">
			<faction>pro_roman_allies</faction>

			<deployment_area>
				<position x='-900' y='-900'/>
				<position x='-900' y='900'/>
				<position x='900' y='900'/>
				<position x='900' y='-900'/>
				<orientation radians="0.00"/>
			</deployment_area>
			
			<camera_start_position x="-855.5" y="79.5" z="209.5" /> 
			<camera_target_position x="-799.4" y="59.9" z="190.3" />
					
			<unit num_soldiers="160" script_name="Allied_01">
				<unit_type type="Ita_Sword"/>
				<position x="-420" y="81"/>
				<orientation radians="0.106"/>
				<width metres="16.6"/>
				<unit_capabilities>
				</unit_capabilities>
				<general>
					<name>2147343708</name>		<!-- <name>Decimus Novius Gabinius</name> -->
					<star_rating level ="0"/>
        		</general>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="120" script_name="Allied_02">
				<unit_type type="Ita_Levy_Slingers" />
				<position x="-342.13" y="38.12"/>
				<orientation radians="0.4"/>
				<width metres="30"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="120" script_name="Allied_03">
				<unit_type type="Ita_Levy_Slingers"/>
				<position x="-382.37" y="5.80"/>
				<orientation radians="0.34"/>
				<width metres="25.49"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
		</army>
		
		<!-- 3rd - town -->
		<army>
			<faction>pro_roman_allies</faction>

			<deployment_area>
				<position x='-900' y='-900'/>
				<position x='-900' y='900'/>
				<position x='900' y='900'/>
				<position x='900' y='-900'/>
				<orientation radians="0.00"/>
			</deployment_area>
			
			<camera_start_position x="-855.5" y="79.5" z="209.5" /> 
			<camera_target_position x="-799.4" y="59.9" z="190.3" />
					
			<unit num_soldiers="34" script_name="Rom_T_01">
				<unit_type type="Rom_General"/>
				<position x="-82.91" y="-491.35"/>
				<orientation radians="1.15"/>
				<width metres="14.20"/>
				<unit_capabilities>
				</unit_capabilities>
				<general>
					<name>2147343710</name>		<!-- <name>Marcus Popillius Laenas</name> -->
					<star_rating level="2"/>
        		</general>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="126" script_name="Rom_T_02">
				<unit_type type="Rom_Hastati" />
				<position x="-43.87" y="-398.79"/>
				<orientation radians="1.00"/>
				<width metres="16.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="135" script_name="Rom_T_03">
				<unit_type type="Rom_Hastati" />
				<position x="-34.19" y="-413.96"/>
				<orientation radians="1.00"/>
				<width metres="16.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="121" script_name="Rom_T_04">
				<unit_type type="Rom_Hastati" />
				<position x="-19.49" y="-460.43"/>
				<orientation radians="1.15"/>
				<width metres="16.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="137" script_name="Rom_T_05">
				<unit_type type="Rom_Hastati" />
				<position x="-4.85" y="-485.65"/>
				<orientation radians="1.18"/>
				<width metres="16.90"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="132" script_name="Rom_T_06">
				<unit_type type="Rom_Triarii" />
				<position x="2.31" y="-503.14"/>
				<orientation radians="1.18"/>
				<width metres="16.90"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="92" script_name="Rom_T_07">
				<unit_type type="Rom_Hastati" />
				<position x="9.47" y="-520.64"/>
				<orientation radians="1.18"/>
				<width metres="16.90"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="134" script_name="Rom_T_08">
				<unit_type type="Rom_Hastati" />
				<position x="-87.90" y="-424.91"/>
				<orientation radians="1.11"/>
				<width metres="19.60"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="88" script_name="Rom_T_09">
				<unit_type type="Ita_Levy_Slingers" />
				<position x="-52.15" y="-422.72"/>
				<orientation radians="1.04"/>
				<width metres="43.47"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="103" script_name="Rom_T_10">
				<unit_type type="Ita_Levy_Slingers" />
				<position x="-7.32" y="-518.36"/>
				<orientation radians="1.18"/>
				<width metres="57.59"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="127" script_name="Rom_T_11">
				<unit_type type="Rom_Hastati" />
				<position x="-78.47" y="-443.84"/>
				<orientation radians="1.11"/>
				<width metres="18.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="102" script_name="Rom_T_12">
				<unit_type type="Rom_Hastati" />
				<position x="-69.25" y="-462.37"/>
				<orientation radians="1.11"/>
				<width metres="18.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="109" script_name="Rom_T_13">
				<unit_type type="Rom_Hastati" />
				<position x="-60.47" y="-481.66"/>
				<orientation radians="1.19"/>
				<width metres="17.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="116" script_name="Rom_T_14">
				<unit_type type="Rom_Principes" />
				<position x="-52.72" y="-500.96"/>
				<orientation radians="1.19"/>
				<width metres="17.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="128" script_name="Rom_T_15">
				<unit_type type="Rom_Hastati" />
				<position x="-24.50" y="-429.13"/>
				<orientation radians="1.00"/>
				<width metres="16.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="96" script_name="Rom_T_16">
				<unit_type type="Rom_Hastati" />
				<position x="16.64" y="-538.13"/>
				<orientation radians="1.18"/>
				<width metres="16.90"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="127" script_name="Rom_T_17">
				<unit_type type="Rom_Principes" />
				<position x="-43.49" y="-520.40"/>
				<orientation radians="1.21"/>
				<width metres="18.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="126" script_name="Rom_T_18">
				<unit_type type="Rom_Triarii" />
				<position x="-35.74" y="-540.67"/>
				<orientation radians="1.21"/>
				<width metres="18.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="90" script_name="Rom_T_19">
				<unit_type type="Ita_Levy_Slingers" />
				<position x="-246.80" y="-505.84"/>
				<orientation radians="0.40"/>
				<width metres="46.23"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="99" script_name="Rom_T_20">
				<unit_type type="Ita_Levy_Slingers" />
				<position x="-206.73" y="-547.82"/>
				<orientation radians="1.18"/>
				<width metres="54.98"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
		</army>
		
		<!-- 4th - reinforcements -->
		<army>
			<faction>pro_roman_allies</faction>

			<deployment_area>
				<position x='-900' y='-900'/>
				<position x='-900' y='900'/>
				<position x='900' y='900'/>
				<position x='900' y='-900'/>
				<orientation radians="0.00"/>
			</deployment_area>
			
			<camera_start_position x="-855.5" y="79.5" z="209.5" /> 
			<camera_target_position x="-799.4" y="59.9" z="190.3" />
					
			<unit num_soldiers="60" script_name="Rom_R_01">
				<unit_type type="Rom_Equites"/>
				<position x="-828.98" y="-563.39"/>
				<orientation radians="1.59"/>
				<width metres="13.38"/>
				<unit_capabilities>
				</unit_capabilities>
				<general>
					<name>2147343720</name>		<!-- <name>Secundus Accius Dentatus</name> -->
					<star_rating level ="1"/>
        		</general>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="60" script_name="Rom_R_02">
				<unit_type type="Rom_Equites"/>
				<position x="-829.35" y="-578.77"/>
				<orientation radians="1.59"/>
				<width metres="13.38"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="60" script_name="Rom_R_03">
				<unit_type type="Rom_Equites"/>
				<position x="-829.72" y="-594.15"/>
				<orientation radians="1.59"/>
				<width metres="13.38"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="60" script_name="Rom_R_04">
				<unit_type type="Rom_Equites"/>
				<position x="-830.08" y="-609.52"/>
				<orientation radians="1.59"/>
				<width metres="13.38"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="60" script_name="Rom_R_05">
				<unit_type type="Rom_Equites"/>
				<position x="-830.45" y="-624.90"/>
				<orientation radians="1.59"/>
				<width metres="13.38"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="60" script_name="Rom_R_06">
				<unit_type type="Rom_Equites"/>
				<position x="-830.82" y="-640.27"/>
				<orientation radians="1.59"/>
				<width metres="13.38"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
		</army>	
			
		<!-- 5th - reinforcements -->
		<army>
			<faction>pro_lucanian</faction>

			<deployment_area>
				<position x='-900' y='-900'/>
				<position x='-900' y='900'/>
				<position x='900' y='900'/>
				<position x='900' y='-900'/>
				<orientation radians="0.00"/>
			</deployment_area>
			
			<camera_start_position x="-855.5" y="79.5" z="209.5" /> 
			<camera_target_position x="-799.4" y="59.9" z="190.3" />	
			
			<unit num_soldiers="60" script_name="Rom_R_11">
				<unit_type type="Rom_Equites"/>
				<position x="-831.18" y="-655.65"/>
				<orientation radians="1.59"/>
				<width metres="13.38"/>
				<unit_capabilities>
				</unit_capabilities>
				<general>
					<name>2147343726</name>		<!-- <name>Appius Camelius Cursor</name> -->
					<star_rating level ="1"/>
        		</general>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="60" script_name="Rom_R_12">
				<unit_type type="Rom_Equites"/>
				<position x="-831.55" y="-671.02"/>
				<orientation radians="1.59"/>
				<width metres="13.38"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="60" script_name="Rom_R_13">
				<unit_type type="Rom_Equites"/>
				<position x="-831.92" y="-686.40"/>
				<orientation radians="1.59"/>
				<width metres="13.38"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="60" script_name="Rom_R_14">
				<unit_type type="Rom_Equites"/>
				<position x="-832.29" y="-701.77"/>
				<orientation radians="1.59"/>
				<width metres="13.38"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
		</army>
		
		<victory_condition>
		     <kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		
		<starting_tickets>100</starting_tickets>
		
		<rout_position x ="-800.0" y = "-1300"></rout_position>
	</alliance>
	
	


	<alliance id="1">
			
		<!-- 1st - Village Samnite force -->	
		<army>
			<faction>pro_samnites</faction>

			<deployment_area>
				<position x='80' y='-900'/>
				<position x='80' y='-350'/>
				<position x='-150' y='-150'/>
				<position x='-650' y='50'/>
				<position x='-650' y='900'/>
				<position x='900' y='900'/>
				<position x='900' y='-900'/>
				<orientation radians="0.00"/>
			</deployment_area>
				
			<camera_start_position x="0" y="40" z="500" /> 
			<camera_target_position x="0" y="22.5" z="440" />
			<campaign_ai_battle_hints aggression="1.0"/>
			
			<unit num_soldiers="120" script_name="Sam_V_01">
				<unit_type type="Ita_Levy_Slingers"/>
				<position x="-500.7" y="260.8"/>
				<orientation radians="-2.23"/>
				<width metres="26.05"/>
				<unit_capabilities>
				</unit_capabilities>
				<general>
					<name>2147343736</name>		<!-- <name>Publius Aelius Flaccus</name> -->
					<star_rating level ="0"/>
        		</general>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="120" script_name="Sam_V_02">
				<unit_type type="Ita_Levy_Slingers"/>
				<position x="-191.10" y="292.34"/>
				<orientation radians="4.16"/>
				<width metres="42.89"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Sam_V_03">
				<unit_type type="Ita_Spear"/>
				<position x="-173" y="217"/>
				<orientation radians="4.43"/>
				<width metres="22.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Sam_V_04">
				<unit_type type="Ita_Spear"/>
				<position x="-177" y="242"/>
				<orientation radians="4.43"/>
				<width metres="22.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="80" script_name="Sam_V_05">
				<unit_type type="Ita_Levy_Skirm"/>
				<position x="-539.3" y="363.5"/>
				<orientation radians="-2.04"/>
				<width metres="17.8"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
		</army>
		
		<!-- 2nd - Siege-position Samnite force -->	
		<army>
			<faction>pro_samnites</faction>

			<deployment_area>
				<position x='80' y='-900'/>
				<position x='80' y='-350'/>
				<position x='-150' y='-150'/>
				<position x='-650' y='50'/>
				<position x='-650' y='900'/>
				<position x='900' y='900'/>
				<position x='900' y='-900'/>
				<orientation radians="0.00"/>
			</deployment_area>
				
			<camera_start_position x="0" y="40" z="500" /> 
			<camera_target_position x="0" y="22.5" z="440" />
			<campaign_ai_battle_hints aggression="1.0"/>
			
			<unit num_soldiers="160" script_name="Sam_S_01">
				<unit_type type="Ita_Sword"/>
				<position x="119.05" y="49.59"/>
				<orientation radians="-2.82"/>
				<width metres="19.56"/>
				<unit_capabilities>
				</unit_capabilities>
				<general>
					<name>2147343740</name>		<!-- <name>Manius Junius Verus</name> -->
					<star_rating level ="0"/>
        		</general>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Sam_S_02">
				<unit_type type="Ita_Spear"/>
				<position x="108.7" y="12.35"/>
				<orientation radians="-2.85"/>
				<width metres="21.24"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Sam_S_03">
				<unit_type type="Ita_Spear"/>
				<position x="25.34" y="37.31"/>
				<orientation radians="-2.78"/>
				<width metres="17.71"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="40" script_name="Sam_S_04">
				<unit_type type="Rom_Onager_Prologue"/>
				<position x="64.29" y="14.01"/>
				<orientation radians="-2.73"/>
				<width metres="55.54"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="40" script_name="Sam_S_05">
				<unit_type type="Rom_Onager_Prologue"/>
				<position x="71.14" y="42.67"/>
				<orientation radians="3.46"/>
				<width metres="35.50"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<!--
			<unit num_soldiers="20" script_name="Sam_S_06">
				<unit_type type="Rom_Large_Onager"/>
				<position x="98.5" y="-16"/>
				<orientation radians="3.53"/>
				<width metres="35.50"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="20" script_name="Sam_S_07">
				<unit_type type="Rom_Large_Onager"/>
				<position x="117.5" y="29"/>
				<orientation radians="3.46"/>
				<width metres="35.50"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			-->
		</army>

		<!-- 3rd - Main Samnite force -->	
		<army>
			<faction>pro_samnites</faction>

			<deployment_area>
				<position x='80' y='-900'/>
				<position x='80' y='-350'/>
				<position x='-150' y='-150'/>
				<position x='-650' y='50'/>
				<position x='-650' y='900'/>
				<position x='900' y='900'/>
				<position x='900' y='-900'/>
				<orientation radians="0.00"/>
			</deployment_area>
				
			<camera_start_position x="0" y="40" z="500" /> 
			<camera_target_position x="0" y="22.5" z="440" />
			<campaign_ai_battle_hints aggression="1.0"/>
			
			<unit num_soldiers="40" script_name="Sam_M_01">
				<unit_type type="Ita_Noble_Cav"/>
				<position x="323.64" y="-134.22"/>
				<orientation radians="4.11"/>
				<width metres="17.11"/>
				<unit_capabilities>
				</unit_capabilities>
				<general>
					<name>2147343749</name>		<!-- <name>Spurius Acilius Lepidus</name> -->
					<star_rating level="3"/>
        		</general>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="60" script_name="Sam_M_02">
				<unit_type type="Ita_Cav"/>
				<position x="311.35" y="-117.90"/>
				<orientation radians="3.93"/>
				<width metres="17.11"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="60" script_name="Sam_M_03">
				<unit_type type="Ita_Cav"/>
				<position x="297.83" y="-104.24"/>
				<orientation radians="3.93"/>
				<width metres="15.31"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Sam_M_04">
				<unit_type type="Ita_Sword"/>
				<position x="327.35" y="-295.99"/>
				<orientation radians="3.91"/>
				<width metres="24.58"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Sam_M_05">
				<unit_type type="Ita_Sword"/>
				<position x="311.67" y="-274.72"/>
				<orientation radians="4.29"/>
				<width metres="24.54"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Sam_M_06">
				<unit_type type="Ita_Sword"/>
				<position x="300.81" y="-249.64"/>
				<orientation radians="4.40"/>
				<width metres="24.12"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Sam_M_07">
				<unit_type type="Ita_Spear"/>
				<position x="349.84" y="-311.25"/>
				<orientation radians="3.59"/>
				<width metres="24.05"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Sam_M_08">
				<unit_type type="Ita_Spear"/>
				<position x="290.62" y="-219.93"/>
				<orientation radians="4.38"/>
				<width metres="23.53"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Sam_M_09">
				<unit_type type="Ita_Spear"/>
				<position x="279.89" y="-188.34"/>
				<orientation radians="4.33"/>
				<width metres="25.01"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Sam_M_10">
				<unit_type type="Ita_Noble_Infantry"/>
				<position x="260.30" y="-152.85"/>
				<orientation radians="3.95"/>
				<width metres="24.86"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Sam_M_11">
				<unit_type type="Ita_Mob"/>
				<position x="404.12" y="-406.72"/>
				<orientation radians="4.53"/>
				<width metres="22.30"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Sam_M_12">
				<unit_type type="Ita_Mob"/>
				<position x="399.43" y="-381.86"/>
				<orientation radians="4.53"/>
				<width metres="22.30"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Sam_M_13">
				<unit_type type="Ita_Mob"/>
				<position x="389.79" y="-356.63"/>
				<orientation radians="4.18"/>
				<width metres="25.90"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Sam_M_14">
				<unit_type type="Ita_Mob"/>
				<position x="212.98" y="-93.35"/>
				<orientation radians="3.80"/>
				<width metres="27.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Sam_M_15">
				<unit_type type="Ita_Mob"/>
				<position x="189.49" y="-75.17"/>
				<orientation radians="3.80"/>
				<width metres="27.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Sam_M_16">
				<unit_type type="Ita_Levy_Slingers"/>
				<position x="423.19" y="-357.52"/>
				<orientation radians="4.25"/>
				<width metres="54.35"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Sam_M_17">
				<unit_type type="Ita_Levy_Slingers"/>
				<position x="364.79" y="-231.54"/>
				<orientation radians="4.23"/>
				<width metres="49.64"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Sam_M_18">
				<unit_type type="Ita_Levy_Slingers"/>
				<position x="220.91" y="-69.92"/>
				<orientation radians="3.80"/>
				<width metres="52.06"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Sam_M_19">
				<unit_type type="Ita_Noble_Infantry"/>
				<position x="348.26" y="-291.15"/>
				<orientation radians="3.72"/>
				<width metres="26.37"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Sam_M_20">
				<unit_type type="Ita_Noble_Infantry"/>
				<position x="327.49" y="-270.14"/>
				<orientation radians="4.13"/>
				<width metres="26.43"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Sam_M_21">
				<unit_type type="Ita_Noble_Infantry"/>
				<position x="314.68" y="-243.76"/>
				<orientation radians="4.37"/>
				<width metres="24.30"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Sam_M_22">
				<unit_type type="Ita_Sword"/>
				<position x="242.97" y="-136.06"/>
				<orientation radians="3.85"/>
				<width metres="21.40"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Sam_M_23">
				<unit_type type="Ita_Sword"/>
				<position x="225.16" y="-120.89"/>
				<orientation radians="3.85"/>
				<width metres="21.40"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Sam_M_24">
				<unit_type type="Ita_Sword"/>
				<position x="205.47" y="-103.71"/>
				<orientation radians="3.82"/>
				<width metres="20.50"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Sam_M_25">
				<unit_type type="Ita_Sword"/>
				<position x="187.20" y="-88.93"/>
				<orientation radians="3.82"/>
				<width metres="20.50"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Sam_M_26">
				<unit_type type="Ita_Mob"/>
				<position x="375.66" y="-332.45"/>
				<orientation radians="4.18"/>
				<width metres="24.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Sam_M_27">
				<unit_type type="Ita_Mob"/>
				<position x="379.11" y="-427.84"/>
				<orientation radians="4.53"/>
				<width metres="25.90"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Sam_M_28">
				<unit_type type="Ita_Mob"/>
				<position x="373.58" y="-398.46"/>
				<orientation radians="4.53"/>
				<width metres="25.90"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Sam_M_29">
				<unit_type type="Ita_Mob"/>
				<position x="247.63" y="-122.64"/>
				<orientation radians="3.82"/>
				<width metres="32.92"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Sam_M_30">
				<unit_type type="Ita_Mob"/>
				<position x="166.00" y="-57.00"/>
				<orientation radians="3.80"/>
				<width metres="27.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
		</army>		
			
	
		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		<victory_condition>
			<capture_settlement></capture_settlement>
		</victory_condition>

		<rout_position x ="-200" y = "1300"></rout_position>
	</alliance>

	<battle_description>
		<battle_script prepare_for_fade_in="false" is_tutorial="true">PA_Start.lua</battle_script>
		<time_of_day>day</time_of_day>
		<season>Summer</season>
		<precipitation_type>dry</precipitation_type>
		<subculture>sc_rom_roman</subculture>
		<type>land_normal</type>
		<timeout_winning_alliance_index>1</timeout_winning_alliance_index>
	</battle_description>

	<sea_surface_name>wind_level_2</sea_surface_name>

	<weather>
		<!-- <environment_key>Weather/ROME_Med/Land/day/dry/day_dry_08.environment</environment_key> -->
		<environment_key>terrain/battles/capua/capua.environment</environment_key>
		<prevailing_wind x="0" y="9"/>
	</weather>
	
	<loading_screen_override>prologue_0</loading_screen_override>
	
	<battle_map_definition>
		<name>terrain/battles/capua/</name>
	</battle_map_definition>
	<!-- <use_deployment_radar_on_loading_screen>false</use_deployment_radar_on_loading_screen> -->

	<!-- <skip_deployment></skip_deployment> -->
	<playable_area dimension = "1940"></playable_area>
</battle>







C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\pb_prologue_vesuvius\pb_battle.xml
<?xml version="1.0" encoding="UTF-8"?>
<battle xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="battle.xsd">

	

	<alliance id="0">
		<army>
			<faction>pro_rome</faction>
			<!--
			<deployment_area>
				<position x='45' y='160'/>
				<position x='125' y='85'/>
				<position x='-80' y='-120'/>
				<position x='-160' y='-45'/>
				<orientation radians="0.00"/>
			</deployment_area>
			-->
			<deployment_area>
				<position x='-12' y='292.3'/>
				<position x='111' y='165'/>
				<position x='-150' y='-75'/>
				<position x='-265' y='54'/>
				<orientation radians="0.00"/>
			</deployment_area>
			
			<camera_start_position x="-143" y="135.8" z="139.9" /> 
			<camera_target_position x="-138.4" y="133.4" z="135.1" />
					
			<unit num_soldiers="40" script_name="Rom_01">
				<unit_type type="Rom_General"/>
				<position x="-122.5" y="116.5"/>
				<orientation radians="2.35"/>
				<width metres="17.48"/>
				<unit_capabilities>
					<special_ability>com_rally</special_ability>
					<special_ability>com_inspire_unit</special_ability>
				</unit_capabilities>
				<general>
					<name>2147343700</name>			<!-- <name>Gaius Fulvius Silanus</name> -->
					<star_rating level="4"/>
					<uniform>Silanus</uniform>
        		</general>
				<unit_experience level="6"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_02">
				<unit_type type="Rom_Hastati"/>
				<position x="-80.3" y="155.6"/>
				<orientation radians="2.37"/>
				<width metres="16.9"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_03">
				<unit_type type="Rom_Hastati"/>
				<position x="-93.9" y="142.5"/>
				<orientation radians="2.37"/>
				<width metres="16.9"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_04">
				<unit_type type="Rom_Hastati"/>
				<position x="-107.5" y="129.4"/>
				<orientation radians="2.37"/>
				<width metres="16.9"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_05">
				<unit_type type="Rom_Hastati"/>
				<position x="-87.9" y="163.8"/>
				<orientation radians="2.37"/>
				<width metres="17.8"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_06">
				<unit_type type="Rom_Hastati"/>
				<position x="-101.7" y="150.4"/>
				<orientation radians="2.37"/>
				<width metres="16.9"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_07">
				<unit_type type="Rom_Hastati"/>
				<position x="-115.3" y="137.2"/>
				<orientation radians="2.37"/>
				<width metres="16.9"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_08">
				<unit_type type="Ita_Sword"/>
				<position x="-171.1" y="72.1"/>
				<orientation radians="2.41"/>
				<width metres="16.2"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="120" script_name="Rom_09">
				<unit_type type="Ita_Levy_Slingers"/>
				<position x="-138.1" y="99.4"/>
				<orientation radians="2.37"/>
				<width metres="20.5"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="120" script_name="Rom_10">
				<unit_type type="Ita_Levy_Slingers"/>
				<position x="-154.2" y="83.7"/>
				<orientation radians="2.37"/>
				<width metres="20.5"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>		
			<unit num_soldiers="80" script_name="Rom_11">
				<unit_type type="Rom_Equites"/>
				<position x="-154.2" y="83.7"/>
				<orientation radians="2.36"/>
				<width metres="24.18"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="80" script_name="Rom_12">
				<unit_type type="Rom_Equites"/>
				<position x="-154.2" y="83.7"/>
				<orientation radians="2.36"/>
				<width metres="24.18"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="80" script_name="Rom_13">
				<unit_type type="Rom_Equites"/>
				<position x="-154.2" y="83.7"/>
				<orientation radians="2.37"/>
				<width metres="24.18"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="80" script_name="Rom_14">
				<unit_type type="Rom_Equites"/>
				<position x="-154.2" y="83.7"/>
				<orientation radians="2.37"/>
				<width metres="24.18"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
		</army>
		
		<victory_condition>
		     <kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		
		<starting_tickets>100</starting_tickets>
		
		<rout_position x ="-800.0" y = "-1300"></rout_position>
	</alliance>
	
	<alliance id="1">
		<!-- <non_playable></non_playable> -->	
		<army>
			<faction>pro_samnites</faction>

			<deployment_area>
				<position x='0' y='-400'/>
				<position x='330' y='-50'/>
				<position x='530' y='-250'/>
				<position x='200' y='-600'/>
				<orientation radians="0.00"/>
			</deployment_area>
				
			<camera_start_position x="446" y="64.8" z="-469.1" /> 
			<camera_target_position x="402.2" y="56.8" z="-425.2" />
			<campaign_ai_battle_hints aggression="1.0"/>
			
			<unit num_soldiers="100" script_name="Sam_01">
				<unit_type type="Ita_Noble_Infantry"/>
				<position x="301.25" y="-379.28"/>
				<orientation radians="5.52"/>
				<width metres="17.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<general>
					<name>2147343754</name>			<!-- <name>Lucius Octavius Macer</name> -->
					<star_rating level ="1"/>
        		</general>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Sam_02">
				<unit_type type="Ita_Spear"/>
				<position x="315.70" y="-365.74"/>
				<orientation radians="5.52"/>
				<width metres="17.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Sam_03">
				<unit_type type="Ita_Spear"/>
				<position x="330.15" y="-352.19"/>
				<orientation radians="5.52"/>
				<width metres="17.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Sam_04">
				<unit_type type="Mer_Ill_Coastal_Levies"/>
				<position x="344.60" y="-338.65"/>
				<orientation radians="5.52"/>
				<width metres="17.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Sam_05">
				<unit_type type="Mer_Ill_Coastal_Levies"/>
				<position x="358.70" y="-325.41"/>
				<orientation radians="5.52"/>
				<width metres="16.90"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Sam_06">
				<unit_type type="Ita_Sword"/>
				<position x="372.48" y="-312.49"/>
				<orientation radians="5.52"/>
				<width metres="16.90"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Sam_07">
				<unit_type type="Ita_Mob"/>
				<position x="299.01" y="-400.36"/>
				<orientation radians="5.49"/>
				<width metres="28.64"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Sam_08">
				<unit_type type="Ita_Mob"/>
				<position x="390.95" y="-311.92"/>
				<orientation radians="5.51"/>
				<width metres="28.75"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="100" script_name="Sam_09">
				<unit_type type="Ita_Levy_Slingers"/>
				<position x="311.23" y="-349.97"/>
				<orientation radians="5.51"/>
				<width metres="40.30"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="100" script_name="Sam_10">
				<unit_type type="Ita_Levy_Slingers"/>
				<position x="342.44" y="-319.98"/>
				<orientation radians="5.51"/>
				<width metres="40.30"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="100" script_name="Sam_11">
				<unit_type type="Ita_Levy_Skirm"/>
				<position x="263.55" y="-362.30"/>
				<orientation radians="5.49"/>
				<width metres="27.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="100" script_name="Sam_12">
				<unit_type type="Ita_Levy_Skirm"/>
				<position x="283.85" y="-341.87"/>
				<orientation radians="5.49"/>
				<width metres="25.90"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="100" script_name="Sam_13">
				<unit_type type="Ita_Levy_Skirm"/>
				<position x="303.51" y="-322.07"/>
				<orientation radians="5.49"/>
				<width metres="25.90"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="100" script_name="Sam_14">
				<unit_type type="Ita_Levy_Skirm"/>
				<position x="323.17" y="-302.27"/>
				<orientation radians="5.49"/>
				<width metres="25.90"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="100" script_name="Sam_15">
				<unit_type type="Ita_Levy_Skirm"/>
				<position x="342.82" y="-282.48"/>
				<orientation radians="5.49"/>
				<width metres="25.90"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="100" script_name="Sam_16">
				<unit_type type="Ita_Levy_Skirm"/>
				<position x="362.49" y="-262.69"/>
				<orientation radians="5.49"/>
				<width metres="25.90"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
		</army>

		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		<victory_condition>
			<capture_settlement></capture_settlement>
		</victory_condition>
		
		<rout_position x ="0" y = "1300"></rout_position>
	</alliance>
	
	
	
	<battle_description>
		<battle_script prepare_for_fade_in="false" is_tutorial="true">PB_Start.lua</battle_script>
		<time_of_day>day</time_of_day>
		<season>Summer</season>
		<precipitation_type>rain</precipitation_type>
		<subculture>sc_rom_carthaginian</subculture>
		<type>land_normal</type>
		<timeout_winning_alliance_index>1</timeout_winning_alliance_index>
	</battle_description>

	<sea_surface_name>wind_level_2</sea_surface_name>
		
	<weather>
		<environment_key>Weather/ROME_Med/default/Land/day/rain/day_rain_01.environment</environment_key>
		<!-- <environment_key>terrain/battles/vesuvius_battle/vesuvius.environment</environment_key> -->
		<prevailing_wind x="0" y="9"/>
	</weather>
	
	<loading_screen_override>prologue_17</loading_screen_override>
	
	<disable_siege_defender_sees_all></disable_siege_defender_sees_all>

	<battle_map_definition>
		<name>terrain/battles/vesuvius_battle/</name>
	</battle_map_definition>
	<!-- <use_deployment_radar_on_loading_screen>false</use_deployment_radar_on_loading_screen> -->

	<!-- <skip_deployment></skip_deployment> -->
	<playable_area dimension = "1800"></playable_area>
</battle>







C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\py_pydna\py_battle.xml
<?xml version="1.0" encoding="UTF-8"?>
<battle xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="battle.xsd">

	<alliance id="0">
		<army>
			<faction>rom_rome</faction>

			<deployment_area>
				<position x='-200' y='-550'/>
				<position x='-200' y='150'/>
				<position x='100' y='150'/>
				<position x='100' y='-550'/>
				<orientation radians="0.00"/>
			</deployment_area>
			
			<camera_start_position x="-162.1" y="114.6" z="-217.4" /> 
			<camera_target_position x="-42.2" y="65.4" z="-209.3" />
					
			<unit num_soldiers="40" script_name="Rom_01">
				<unit_type type="Rom_Legatus"/>
				<position x="-72.54" y="-149.3"/>
				<orientation radians="1.58"/>
				<width metres="20"/>
				<unit_capabilities>
					<special_ability>com_rally</special_ability>
					<special_ability>com_inspire_unit</special_ability>
				</unit_capabilities>
				<general>
					<name>2147345144</name>			<!-- <name>Lucius Aemilius Paullus</name> -->
					<star_rating level ="2"/>
				</general>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="80" script_name="Rom_02">
				<unit_type type="Rom_Equites" />
				<position x="-72.71" y="-179.3"/>
				<orientation radians="1.58"/>
				<width metres="26.11"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="80" script_name="Rom_03">
				<unit_type type="Rom_Equites" />
				<position x="-72.9" y="-208.4"/>
				<orientation radians="1.58"/>
				<width metres="26.11"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="80" script_name="Rom_04">
				<unit_type type="Rom_Equites" />
				<position x="-73" y="-237"/>
				<orientation radians="1.58"/>
				<width metres="26.11"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="12" script_name="Rom_05">
				<unit_type type="Mer_Afr_Elephants" />
				<position x="-74.63" y="-266.95 "/>
				<orientation radians="1.57"/>
				<width metres="26.75"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			
			<unit num_soldiers="160" script_name="Rom_06">
				<unit_type type="Rom_Triarii" />
				<position x="-44.45" y="-91.33"/>
				<orientation radians="1.59"/>
				<width metres="22.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_07">
				<unit_type type="Rom_Triarii" />
				<position x="-44.95" y="-117.12"/>
				<orientation radians="1.59"/>
				<width metres="22.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_08">
				<unit_type type="Rom_Principes" />
				<position x="-45.44" y="-142.92"/>
				<orientation radians="1.59"/>
				<width metres="22.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_09">
				<unit_type type="Rom_Principes" />
				<position x="-45.94" y="-168.71"/>
				<orientation radians="1.59"/>
				<width metres="22.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_10">
				<unit_type type="Rom_Principes" />
				<position x="-46.44" y="-194.51"/>
				<orientation radians="1.59"/>
				<width metres="22.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_11">
				<unit_type type="Rom_Hastati" />
				<position x="-46.93" y="-220.30"/>
				<orientation radians="1.59"/>
				<width metres="22.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_12">
				<unit_type type="Rom_Hastati" />
				<position x="-47.43" y="-246.10"/>
				<orientation radians="1.59"/>
				<width metres="22.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_13">
				<unit_type type="Rom_Hastati" />
				<position x="-47.93" y="-271.89"/>
				<orientation radians="1.59"/>
				<width metres="22.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_14">
				<unit_type type="Rom_Hastati" />
				<position x="-48.92" y="-323.48"/>
				<orientation radians="1.59"/>
				<width metres="22.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_15">
				<unit_type type="Rom_Hastati" />
				<position x="-48.43" y="-297.69"/>
				<orientation radians="1.59"/>
				<width metres="22.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			
			<unit num_soldiers="120" script_name="Rom_16">
				<unit_type type="Rom_Velites" />
				<position x="-29.24" y="-164.97"/>
				<orientation radians="1.59"/>
				<width metres="42.20"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="120" script_name="Rom_17">
				<unit_type type="Rom_Velites" />
				<position x="-30.18" y="-209.16"/>
				<orientation radians="1.59"/>
				<width metres="42.20"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="120" script_name="Rom_18">
				<unit_type type="Rom_Velites" />
				<position x="-31.13" y="-253.35"/>
				<orientation radians="1.59"/>
				<width metres="42.20"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
		</army>
		
		<victory_condition>
		     <kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		
		<rout_position x ="-1300.0" y = "-1300"></rout_position>
	</alliance>
	
	<alliance id="1">
		<!-- <non_playable></non_playable> -->	
		<army>
			<faction>rom_macedon</faction>

			<deployment_area>
				<position x='700' y='-850'/>
				<position x='220' y='-850'/>
				<position x='220' y='500'/>
				<position x='700' y='500'/>
				<orientation radians="0.00"/>
			</deployment_area>
				
			<camera_start_position x="671.2" y="74.5" z="-214.8" /> 
			<camera_target_position x="526.0" y="17.6" z="-210.0" />
			<campaign_ai_battle_hints aggression="1.0"/>
			
			<unit num_soldiers="40" script_name="Mac_01">
				<unit_type type="Gre_Companion_Cav"/>
				<position x="555.21" y="-160.09"/>
				<orientation radians="4.70"/>
				<width metres="20.71"/>
				<unit_capabilities>
					<special_ability>com_inspire_unit</special_ability>
					<special_ability>com_rally</special_ability>
				</unit_capabilities>
				<general>
					<name>2147345150</name>			<!-- <name>King Perseus</name> -->
					<star_rating level="5"/>
					<uniform>Gre_General_15</uniform>
        		</general>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Mac_02">
				<unit_type type="Gre_Thessalian_Cav"/>
				<position x="554.89" y="-137.28"/>
				<orientation radians="4.70"/>
				<width metres="18.91"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			
			
			<!-- main Macedonian army -->
			<unit num_soldiers="160" script_name="Mac_03">
				<unit_type type="Gre_Shield_Bearers"/>
				<position x="528.58" y="-329.39"/>
				<orientation radians="4.69"/>
				<width metres="26.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Mac_04">
				<unit_type type="Gre_Thureos_Spears"/>
				<position x="528.08" y="-300.59"/>
				<orientation radians="4.69"/>
				<width metres="26.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Mac_05">
				<unit_type type="Gre_Thorax_Pike"/>
				<position x="527.53" y="-271.85"/>
				<orientation radians="4.69"/>
				<width metres="26.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Mac_06">
				<unit_type type="Gre_Thorax_Pike"/>
				<position x="527.03" y="-243.15"/>
				<orientation radians="4.69"/>
				<width metres="26.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Mac_07">
				<unit_type type="Gre_Pike"/>
				<position x="526.53" y="-214.45"/>
				<orientation radians="4.69"/>
				<width metres="26.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Mac_08">
				<unit_type type="Gre_Levy_Pike"/>
				<position x="526.07" y="-185.71"/>
				<orientation radians="4.69"/>
				<width metres="26.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Mac_09">
				<unit_type type="Gre_Pike"/>
				<position x="525.52" y="-156.96"/>
				<orientation radians="4.69"/>
				<width metres="26.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Mac_10">
				<unit_type type="Gre_Hoplites"/>
				<position x="525.08" y="-128.72"/>
				<orientation radians="4.69"/>
				<width metres="25.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Mac_11">
				<unit_type type="Gre_Hoplites"/>
				<position x="524.59" y="-100.92"/>
				<orientation radians="4.69"/>
				<width metres="25.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Mac_12">
				<unit_type type="Gre_Levy_Pike"/>
				<position x="524.11" y="-73.12"/>
				<orientation radians="4.69"/>
				<width metres="25.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Mac_13">
				<unit_type type="Gre_Levy_Pike"/>
				<position x="523.62" y="-45.33"/>
				<orientation radians="4.69"/>
				<width metres="25.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Mac_14">
				<unit_type type="Gre_Thorax_Pike"/>
				<position x="523.09" y="-17.58"/>
				<orientation radians="4.69"/>
				<width metres="25.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Mac_15">
				<unit_type type="Gre_Thureos_Spears"/>
				<position x="522.66" y="10.16"/>
				<orientation radians="4.69"/>
				<width metres="25.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Mac_16">
				<unit_type type="Gre_Foot_Companions"/>
				<position x="522.12" y="37.91"/>
				<orientation radians="4.69"/>
				<width metres="25.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="120" script_name="Mac_17">
				<unit_type type="Gre_Agrianian_Axemen"/>
				<position x="480.23" y="-18.12"/>
				<orientation radians="4.71"/>
				<width metres="42.20"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="120" script_name="Mac_18">
				<unit_type type="Gre_Light_Peltasts"/>
				<position x="480.49" y="-109.42"/>
				<orientation radians="4.71"/>
				<width metres="44.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="120" script_name="Mac_19">
				<unit_type type="Gre_Javelinmen"/>
				<position x="480.36" y="-63.32"/>
				<orientation radians="4.71"/>
				<width metres="42.20"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="80" script_name="Mac_20">
				<unit_type type="Mer_Gre_Cretan_Archers"/>
				<position x="480.63" y="-156.42"/>
				<orientation radians="4.71"/>
				<width metres="44.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			
			<!-- Ambush Cavalry #1 -->
			<unit num_soldiers="80" script_name="Mac_21">
				<unit_type type="Gre_Thessalian_Cav"/>
				<position x="469.20" y="-790.87"/>
				<orientation radians="5.25"/>
				<width metres="24.31"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="80" script_name="Mac_22">
				<unit_type type="Gre_Thessalian_Cav"/>
				<position x="482.78" y="-768.33"/>
				<orientation radians="5.25"/>
				<width metres="24.31"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Mac_23">
				<unit_type type="Gre_Sarissa_Cav"/>
				<position x="496.35" y="-745.79"/>
				<orientation radians="5.25"/>
				<width metres="24.31"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Mac_24">
				<unit_type type="Gre_Sarissa_Cav"/>
				<position x="308.24" y="369.54"/>
				<orientation radians="4.10"/>
				<width metres="26.11"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Mac_25">
				<unit_type type="Gre_Sarissa_Cav"/>
				<position x="292.10" y="392.68"/>
				<orientation radians="4.10"/>
				<width metres="24.31"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Mac_26">
				<unit_type type="Gre_Sarissa_Cav"/>
				<position x="276.47" y="415.07"/>
				<orientation radians="4.10"/>
				<width metres="24.31"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			
			
			<!-- Ambush Cavalry #2 -->
			<unit num_soldiers="80" script_name="Mac_27">
				<unit_type type="Gre_Sarissa_Cav"/>
				<position x="469.20" y="-790.87"/>
				<orientation radians="5.25"/>
				<width metres="24.31"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="80" script_name="Mac_28">
				<unit_type type="Gre_Sarissa_Cav"/>
				<position x="482.78" y="-768.33"/>
				<orientation radians="5.25"/>
				<width metres="24.31"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Mac_29">
				<unit_type type="Gre_Sarissa_Cav"/>
				<position x="496.35" y="-745.79"/>
				<orientation radians="5.25"/>
				<width metres="24.31"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="80" script_name="Mac_30">
				<unit_type type="Gre_Sarissa_Cav"/>
				<position x="308.24" y="369.54"/>
				<orientation radians="4.10"/>
				<width metres="26.11"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Mac_31">
				<unit_type type="Gre_Sarissa_Cav"/>
				<position x="292.10" y="392.68"/>
				<orientation radians="4.10"/>
				<width metres="24.31"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Mac_32">
				<unit_type type="Gre_Sarissa_Cav"/>
				<position x="276.47" y="415.07"/>
				<orientation radians="4.10"/>
				<width metres="24.31"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
		</army>

		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		
		<rout_position x ="0" y = "1300"></rout_position>
	</alliance>	
	
	<battle_description>
		<battle_script prepare_for_fade_in="true">PY_Start.lua</battle_script>
		<time_of_day>day</time_of_day>
		<season>Spring</season>
		<precipitation_type>dry</precipitation_type>
		<type>land_normal</type>
		<timeout_winning_alliance_index>1</timeout_winning_alliance_index>
		<duration>2400</duration>
	</battle_description>

	<sea_surface_name>wind_level_2</sea_surface_name>
		
	<weather>
		<environment_key>terrain/battles/pydna/default.environment</environment_key>
		<prevailing_wind x="0" y="9"/>
	</weather>
	
	<battle_map_definition>
		<name>terrain/battles/pydna/</name>
	</battle_map_definition>
	<!-- <use_deployment_radar_on_loading_screen>false</use_deployment_radar_on_loading_screen> -->

	<!-- <skip_deployment></skip_deployment> -->
	<playable_area dimension = "1900"></playable_area>
</battle>






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ra_raphia\ra_battle.xml
<?xml version="1.0" encoding="UTF-8"?>
<battle xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="battle.xsd">

	<alliance id="0">
		<army>
			<faction>rom_ptolemaics</faction>

			<deployment_area>
				<position x='-360' y='-240'/>
				<position x='-240' y='-60'/>
				<position x='140' y='-326'/>
				<position x='10' y='-506'/>
				<orientation radians="0.00"/>
			</deployment_area>
			
			<camera_start_position x="-176.8" y="344.7" z="-382.2" /> 
			<camera_target_position x="-143.5" y="323.8" z="-330.8" />
					
			<unit num_soldiers="40" script_name="Egy_01">
				<unit_type type="Gre_Ptolemaic_Cav"/>
				<position x="-149.89" y="-340.35"/>
				<orientation radians="0.59"/>
				<width metres="19.94"/>
				<unit_capabilities>
					<special_ability>trample</special_ability>
					<special_ability>form_diamond</special_ability>
					<special_ability>com_second_wind</special_ability>
					<special_ability>com_battle_rhythm</special_ability>
				</unit_capabilities>
				<general>
					<name>2147343684</name>		<!-- <name>Ptolemy IV</name> -->
					<star_rating level ="5"/>
					<uniform>Gre_General_07</uniform>
        		</general>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="80" script_name="Egy_02">
				<unit_type type="Egy_Cav" />
				<position x="-214.95" y="-251.10"/>
				<orientation radians="0.59"/>
				<width metres="31.38"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="80" script_name="Egy_03">
				<unit_type type="Egy_Cav"/>
				<position x="-187.89" y="-269.08"/>
				<orientation radians="0.59"/>
				<width metres="29.58"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="80" script_name="Egy_04">
				<unit_type type="Gre_Citizen_Cav" />
				<position x="-161.93" y="-286.34"/>
				<orientation radians="0.59"/>
				<width metres="28.78"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Egy_05">
				<unit_type type="Gre_Citizen_Cav" />
				<position x="-136.30" y="-303.38"/>
				<orientation radians="0.59"/>
				<width metres="28.78"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Egy_06">
				<unit_type type="Gre_Citizen_Cav" />
				<position x="-110.66" y="-320.41"/>
				<orientation radians="0.59"/>
				<width metres="28.78"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Egy_07">
				<unit_type type="Ara_Camel_Archers" />
				<position x="-11.97" y="-386.01"/>
				<orientation radians="0.59"/>
				<width metres="31.72"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="18" script_name="Egy_08">
				<unit_type type="Afr_War_Elephants" />
				<position x="-85.23" y="-339.36"/>
				<orientation radians="0.59"/>
				<width metres="30.56"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="15" script_name="Egy_12">
				<unit_type type="Gre_Scythed_Chariots" />
				<position x="-49.62" y="-360.99"/>
				<orientation radians="0.59"/>
				<width metres="48.69"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Egy_23">
				<unit_type type="Gre_Pike" />
				<position x="-120.80" y="-234.05"/>
				<orientation radians="0.59"/>
				<width metres="29.50"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Egy_24">
				<unit_type type="Gre_Pike" />
				<position x="-67.79" y="-270.44"/>
				<orientation radians="0.59"/>
				<width metres="29.82"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Egy_25">
				<unit_type type="Gre_Pike" />
				<position x="-94.20" y="-250.77"/>
				<orientation radians="0.59"/>
				<width metres="29.79"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Egy_13">
				<unit_type type="Egy_Infantry" />
				<position x="-150.53" y="-238.98"/>
				<orientation radians="0.59"/>
				<width metres="21.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Egy_14">
				<unit_type type="Egy_Infantry" />
				<position x="-131.29" y="-251.77"/>
				<orientation radians="0.59"/>
				<width metres="21.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Egy_15">
				<unit_type type="Egy_Infantry" />
				<position x="-112.55" y="-264.23"/>
				<orientation radians="0.59"/>
				<width metres="19.90"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="60" script_name="Egy_16">
				<unit_type type="Egy_Karian_Axemen" />
				<position x="-94.31" y="-276.35"/>
				<orientation radians="0.59"/>
				<width metres="19.90"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Egy_17">
				<unit_type type="Egy_Galatian_Sword" />
				<position x="-56.00" y="-301.82"/>
				<orientation radians="0.59"/>
				<width metres="20.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Egy_18">
				<unit_type type="Egy_Galatian_Sword" />
				<position x="-75.33" y="-288.97"/>
				<orientation radians="0.59"/>
				<width metres="21.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Egy_19">
				<unit_type type="Mer_Gre_Hoplites" />
				<position x="-173.65" y="-223.61"/>
				<orientation radians="0.59"/>
				<width metres="23.55"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Egy_20">
				<unit_type type="Mer_Gre_Hoplites" />
				<position x="-36.23" y="-315.79"/>
				<orientation radians="0.59"/>
				<width metres="20.12"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Egy_21">
				<unit_type type="Gre_Peltasts" />
				<position x="-175.55" y="-246.71"/>
				<orientation radians="0.59"/>
				<width metres="27.31"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Egy_22">
				<unit_type type="Gre_Peltasts" />
				<position x="-51.46" y="-330.16"/>
				<orientation radians="0.59"/>
				<width metres="30.77"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Egy_10">
				<unit_type type="Egy_Archers" />
				<position x="-115.25" y="-288.25"/>
				<orientation radians="0.59"/>
				<width metres="34.90"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Egy_11">
				<unit_type type="Egy_Archers" />
				<position x="-84.53" y="-308.67"/>
				<orientation radians="0.59"/>
				<width metres="34.90"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Egy_09">
				<unit_type type="Mer_Gre_Cretan_Archers" />
				<position x="-145.98" y="-267.82"/>
				<orientation radians="0.59"/>
				<width metres="34.90"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
		</army>
		
		<victory_condition>
		     <kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		
		<rout_position x ="-800.0" y = "-1300"></rout_position>
	</alliance>
	
	
	<alliance id="1">
		<!-- <non_playable></non_playable> -->	
		<army>
			<faction>rom_seleucid</faction>

			<deployment_area>
				<position x='-30' y='340'/>
				<position x='100' y='520'/>
				<position x='540' y='180'/>
				<position x='410' y='0'/>
				<orientation radians="0.00"/>
			</deployment_area>
				
			<camera_start_position x="0" y="40" z="500" /> 
			<camera_target_position x="0" y="22.5" z="440" />
			<campaign_ai_battle_hints aggression="1.0"/>
			
			<unit num_soldiers="40" script_name="Sel_01">
				<unit_type type="Gre_Royal_Cav"/>
				<position x="257.33" y="263.92"/>
				<orientation radians="3.77"/>
				<width metres="18.87"/>
				<unit_capabilities>
					<special_ability>com_inspire_unit</special_ability>
					<special_ability>com_rally</special_ability>
				</unit_capabilities>
				<general>
					<name>2147343694</name>			<!-- <name>Antiochus III the Great</name> -->
					<star_rating level="5"/>
					<uniform>Gre_General_13</uniform>
        		</general>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Sel_02">
				<unit_type type="Gre_Companion_Cav" />
				<position x="97.74" y="353.14"/>
				<orientation radians="3.77"/>
				<width metres="35.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Sel_03">
				<unit_type type="Gre_Companion_Cav" />
				<position x="67.81" y="374.90"/>
				<orientation radians="3.77"/>
				<width metres="35.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Sel_04">
				<unit_type type="Gre_Companion_Cav" />
				<position x="406.97" y="128.27"/>
				<orientation radians="3.77"/>
				<width metres="35.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Sel_05">
				<unit_type type="Gre_Companion_Cav" />
				<position x="347.12" y="171.79"/>
				<orientation radians="3.77"/>
				<width metres="35.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Sel_06">
				<unit_type type="Gre_Light_Cav" />
				<position x="377.05" y="150.03"/>
				<orientation radians="3.77"/>
				<width metres="35.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Sel_07">
				<unit_type type="Gre_Light_Cav" />
				<position x="127.66" y="331.38"/>
				<orientation radians="3.77"/>
				<width metres="35.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="18" script_name="Sel_16">
				<unit_type type="Ind_War_Elephants" />
				<position x="244.10" y="165.74"/>
				<orientation radians="3.77"/>
				<width metres="27.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="18" script_name="Sel_17">
				<unit_type type="Ind_Armour_Elephants" />
				<position x="168.01" y="221.08"/>
				<orientation radians="3.77"/>
				<width metres="27.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Sel_08">
				<unit_type type="Gre_Silver_Shield_Pike" />
				<position x="152.50" y="312.14"/>
				<orientation radians="3.77"/>
				<width metres="17.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<!--<unit num_soldiers="160" script_name="Sel_09">
				<unit_type type="Gre_Silver_Shield_Pike" />
				<position x="228.12" y="257.15"/>
				<orientation radians="3.77"/>
				<width metres="17.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Sel_10">
				<unit_type type="Gre_Silver_Shield_Pike" />
				<position x="168.51" y="300.50"/>
				<orientation radians="3.77"/>
				<width metres="17.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>-->
			<unit num_soldiers="160" script_name="Sel_11">
				<unit_type type="Gre_Silver_Shield_Pike" />
				<position x="305.05" y="201.21"/>
				<orientation radians="3.77"/>
				<width metres="19.86"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Sel_12">
				<unit_type type="Gre_Bronze_Shield_Pike" />
				<position x="244.37" y="245.33"/>
				<orientation radians="3.77"/>
				<width metres="18.39"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Sel_13">
				<unit_type type="Gre_Bronze_Shield_Pike" />
				<position x="321.53" y="189.22"/>
				<orientation radians="3.77"/>
				<width metres="16.90"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Sel_14">
				<unit_type type="Gre_Pike" />
				<position x="184.16" y="289.12"/>
				<orientation radians="3.77"/>
				<width metres="16.90"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Sel_15">
				<unit_type type="Gre_Pike" />
				<position x="260.26" y="233.78"/>
				<orientation radians="3.77"/>
				<width metres="16.90"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Sel_24">
				<unit_type type="Gre_Pike" />
				<position x="281.77" y="217.45"/>
				<orientation radians="3.86"/>
				<width metres="27.71"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Sel_25">
				<unit_type type="Gre_Pike" />
				<position x="206.57" y="272.89"/>
				<orientation radians="3.82"/>
				<width metres="26.01"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<!--<unit num_soldiers="160" script_name="Sel_26">
				<unit_type type="Gre_Pike" />
				<position x="230.75" y="227.80"/>
				<orientation radians="3.82"/>
				<width metres="24.65"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>-->
			<unit num_soldiers="160" script_name="Sel_18">
				<unit_type type="Gre_Peltasts" />
				<position x="356.43" y="121.68"/>
				<orientation radians="3.77"/>
				<width metres="20.50"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<!--<unit num_soldiers="160" script_name="Sel_20">
				<unit_type type="Gre_Peltasts" />
				<position x="90.19" y="315.29"/>
				<orientation radians="3.77"/>
				<width metres="20.50"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>-->
			<unit num_soldiers="160" script_name="Sel_19">
				<unit_type type="Eas_Javelinmen" />
				<position x="68.02" y="331.41"/>
				<orientation radians="3.77"/>
				<width metres="30.31"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Sel_21">
				<unit_type type="Eas_Slingers" />
				<position x="334.14" y="138.19"/>
				<orientation radians="3.79"/>
				<width metres="24.31"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Sel_22">
				<unit_type type="Eas_Persian_Light_Archers" />
				<position x="115.18" y="300.26"/>
				<orientation radians="3.80"/>
				<width metres="29.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Sel_23">
				<unit_type type="Eas_Persian_Light_Archers" />
				<position x="308.82" y="157.20"/>
				<orientation radians="3.77"/>
				<width metres="26.66"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
		</army>

		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		
		<rout_position x ="0" y = "1300"></rout_position>
	</alliance>

	
	<battle_description>
		<battle_script prepare_for_fade_in="true">RA_Start.lua</battle_script>
		<time_of_day>day</time_of_day>
		<season>Spring</season>
		<precipitation_type>dry</precipitation_type>
		<type>land_normal</type>
		<timeout_winning_alliance_index>0</timeout_winning_alliance_index>
	</battle_description>

	<sea_surface_name>wind_level_0</sea_surface_name>
		
	<weather>
		<environment_key>terrain/battles/syria/default.environment</environment_key>
		<prevailing_wind x="0" y="9"/>
	</weather>
	
	<battle_map_definition>
		<name>terrain/battles/syria/</name>
	</battle_map_definition>
	<!-- <use_deployment_radar_on_loading_screen>false</use_deployment_radar_on_loading_screen> -->

	<!-- <skip_deployment></skip_deployment> -->
	<playable_area dimension = "1900"></playable_area>
</battle>







C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\sc_siege_of_carthage\sc_battle.xml
<?xml version="1.0" encoding="UTF-8"?>
<battle xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="battle.xsd">
	
	<alliance id="0">
		<army>
			<faction>rom_rome</faction>
			
			<deployment_area>
				<orientation radians="0.00"/>		
				<position x='-900' y='-360'/>
				<position x='-530' y='-360'/>
				<position x='-360' y='-175'/>
				<position x='-90' y='-175'/>
				<position x='10' y='-270'/>
				<position x='900' y='-270'/>
				<position x='900' y='-900'/>
				<position x='-900' y='-900'/>
			</deployment_area>
			
			<camera_start_position x="16.7" y="40" z="-898.5" /> 
			<camera_target_position x="11.4" y="24.3" z="-838.2" />
			
			<assault_equipment>
				<assault_equipment_item equipment_name="siege_tower_15m_medium">
					<position x="-240" y="-297"/>
					<orientation radians="0.0"/>
				</assault_equipment_item>
				<assault_equipment_item equipment_name="siege_tower_15m_medium">
					<position x="-730" y="-530"/>
					<orientation radians="0.00"/>
				</assault_equipment_item>
			</assault_equipment>
			
			<!-- naval -->
			<unit num_soldiers="160" script_name="Rom_01">
				<unit_type type="Rom_Triarii_Six" />
				<position x="-61" y="-798.47"/>
				<orientation radians="0.00"/>
				<width metres="10.40"/>
				<unit_capabilities>
				</unit_capabilities>
				<general>
					<name>2147343668</name>			<!-- <name>Scipio</name> -->
					<star_rating level="4"/>
					<uniform>Scipio</uniform>
        		</general>
			</unit>
			<unit num_soldiers="160" script_name="Rom_02">
				<unit_type type="Rom_Triarii_Six" />
				<position x="-21.80" y="-797.82"/>
				<orientation radians="0.02"/>
				<width metres="10.40"/>
				<unit_capabilities>
				</unit_capabilities>
			</unit>
			<unit num_soldiers="160" script_name="Rom_03">
				<unit_type type="Rom_Triarii_Six" />
				<position x="19.40" y="-798.47"/>
				<orientation radians="0.02"/>
				<width metres="10.40"/>
				<unit_capabilities>
				</unit_capabilities>
			</unit>
			<unit num_soldiers="160" script_name="Rom_04">
				<unit_type type="Rom_Triarii_Six" />
				<position x="59.99" y="-799.13"/>
				<orientation radians="0.02"/>
				<width metres="10.40"/>
				<unit_capabilities>
				</unit_capabilities>
			</unit>
			<unit num_soldiers="160" script_name="Rom_05">
				<unit_type type="Rom_Triarii_Six" />
				<position x="99.39" y="-799.78"/>
				<orientation radians="0.02"/>
				<width metres="10.40"/>
				<unit_capabilities>
				</unit_capabilities>
			</unit>
			<unit num_soldiers="160" script_name="Rom_06">
				<unit_type type="Rom_Triarii_Six" />
				<position x="139.08" y="-803.03"/>
				<orientation radians="0.02"/>
				<width metres="10.40"/>
				<unit_capabilities>
				</unit_capabilities>
			</unit>
			<unit num_soldiers="160" script_name="Rom_07">
				<unit_type type="Rom_Triarii_Six" />
				<position x="179.78" y="-800.44"/>
				<orientation radians="0.02"/>
				<width metres="10.40"/>
				<unit_capabilities>
				</unit_capabilities>
			</unit>
			<unit num_soldiers="80" script_name="Rom_08">
				<unit_type type="Rom_Triarii_Six_Lft_Aft" />
				<position x="209.18" y="-801.09"/>
				<orientation radians="0.02"/>
				<width metres="10.40"/>
				<unit_capabilities>
				</unit_capabilities>
			</unit>
			<unit num_soldiers="80" script_name="Rom_09">
				<unit_type type="Rom_Triarii_Six_Lft_Aft" />
				<position x="249.57" y="-801.75"/>
				<orientation radians="0.02"/>
				<width metres="10.40"/>
				<unit_capabilities>
				</unit_capabilities>
			</unit>
			<unit num_soldiers="40" script_name="Rom_10">
				<unit_type type="Rom_Onager_Five" />
				<position x="289.34" y="-801.39"/>
				<orientation radians="0.02"/>
				<width metres="9.12"/>
				<unit_capabilities>
				</unit_capabilities>
			</unit>
			
			<!--
			<unit num_soldiers="40" script_name="Rom_11">
				<unit_type type="Rom_Onager_Shp" />
				<position x="161.67" y="-812.11"/>
				<orientation radians="6.25"/>
				<width metres="11.70"/>
				<unit_capabilities>
				</unit_capabilities>
			</unit>
			<unit num_soldiers="40" script_name="Rom_12">
				<unit_type type="Rom_Onager_Shp" />
				<position x="203.36" y="-810.93"/>
				<orientation radians="6.25"/>
				<width metres="11.70"/>
				<unit_capabilities>
				</unit_capabilities>
			</unit>
			-->
			
			<!-- on beach -->
			<unit num_soldiers="60" script_name="Rom_16">
				<unit_type type="Rom_Hastati"/>
				<position x="-220.4" y="-306.4"/>
				<orientation radians="-0.08"/>
				<width metres="19"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			
			<!-- cavalry -->
			<unit num_soldiers="40" script_name="Rom_21">
				<unit_type type="Rom_General"/>
				<position x="-650.59" y="-583.02"/>
				<orientation radians="6.27"/>
				<width metres="14.23"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="80" script_name="Rom_22">
				<unit_type type="Rom_Equites"/>
				<position x="-562.83" y="-551.51"/>
				<orientation radians="0.02"/>
				<width metres="22.38"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="80" script_name="Rom_23">
				<unit_type type="Rom_Equites"/>
				<position x="-538.36" y="-551.95"/>
				<orientation radians="0.02"/>
				<width metres="20.58"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="80" script_name="Rom_24">
				<unit_type type="Rom_Equites"/>
				<position x="-514.78" y="-552.37"/>
				<orientation radians="0.02"/>
				<width metres="20.58"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="40" script_name="Rom_25">
				<unit_type type="Rom_War_Dogs"/>
				<position x="-603.78" y="-585.74"/>
				<orientation radians="0.01"/>
				<width metres="11.50"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="40" script_name="Rom_26">
				<unit_type type="Rom_War_Dogs"/>
				<position x="-590.28" y="-585.89"/>
				<orientation radians="0.01"/>
				<width metres="11.50"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>

			<!-- infantry -->
			<unit num_soldiers="160" script_name="Rom_31">
				<unit_type type="Rom_Triarii"/>				
				<position x="-668.22" y="-560.83"/>
				<orientation radians="0.00"/>
				<width metres="13.90"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_32">
				<unit_type type="Rom_Triarii"/>
				<position x="-652.52" y="-560.99"/>
				<orientation radians="0.00"/>
				<width metres="13.90"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_33">
				<unit_type type="Rom_Rorarii"/>
				<position x="-636.47" y="-561.05"/>
				<orientation radians="0.00"/>
				<width metres="14.20"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_34">
				<unit_type type="Rom_Hastati"/>
				<position x="-620.72" y="-561.11"/>
				<orientation radians="0.00"/>
				<width metres="13.30"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_35">
				<unit_type type="Rom_Hastati"/>
				<position x="-605.42" y="-561.16"/>
				<orientation radians="0.00"/>
				<width metres="13.30"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_36">
				<unit_type type="Rom_Hastati"/>
				<position x="-590.12" y="-561.22"/>
				<orientation radians="0.00"/>
				<width metres="13.30"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_37">
				<unit_type type="Rom_Hastati"/>
				<position x="-668.42" y="-560.93"/>
				<orientation radians="0.00"/>
				<width metres="13.90"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			
			<!-- unit on beach with siege tower -->
			<unit num_soldiers="80" script_name="Rom_15">
				<unit_type type="Rom_Triarii"/>
				<position x="-264" y="-328"/>
				<orientation radians="-0.06"/>
				<width metres="17.5"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			
			<!-- ranged -->
			<unit num_soldiers="120" script_name="Rom_41">
				<unit_type type="Rom_Velites"/>
				<position x="-680.95" y="-546.10"/>
				<orientation radians="6.28"/>
				<width metres="27.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="120" script_name="Rom_42">
				<unit_type type="Rom_Velites"/>
				<position x="-651.15" y="-546.06"/>
				<orientation radians="6.28"/>
				<width metres="25.90"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="120" script_name="Rom_43">
				<unit_type type="Rom_Velites"/>
				<position x="-622.25" y="-546.02"/>
				<orientation radians="6.28"/>
				<width metres="25.90"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="120" script_name="Rom_44">
				<unit_type type="Rom_Velites"/>
				<position x="-593.35" y="-545.98"/>
				<orientation radians="6.28"/>
				<width metres="25.90"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="20" script_name="Rom_45">
				<unit_type type="Rom_Large_Onager"/>
				<position x="-614.24" y="-616.85"/>
				<orientation radians="0.03"/>
				<width metres="36.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="20" script_name="Rom_46">
				<unit_type type="Rom_Large_Onager"/>
				<position x="-576.26" y="-618.06"/>
				<orientation radians="0.03"/>
				<width metres="36.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
		</army>
		
		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
			<capture_locations></capture_locations>
		</victory_condition>
		
		<rout_position x ="-800.0" y = "-1300"></rout_position>
	</alliance>

	<alliance id="1">
		<army>
			<faction>rom_carthage</faction>

			<deployment_area>
				<orientation radians="0.00"/>
				<position x='320' y='-200'/>
				<position x='250' y='-270'/>
				<position x='10' y='-270'/>
				<position x='-90' y='-175'/>
				<position x='-360' y='-175'/>
				<position x='-530' y='-360'/>
				<position x='-900' y='-360'/>
				<position x='-900' y='900'/>
				<position x='320' y='900'/>
			</deployment_area>
			
			<camera_start_position x="0" y="40" z="500" /> 
			<camera_target_position x="0" y="22.5" z="440" />
			<campaign_ai_battle_hints aggression="1.0"/>
			
			<!-- Cav -->
			<unit num_soldiers="40" script_name="Car_01">
				<unit_type type="Car_General"/>
				<position x="-127.46" y="155.24"/>
				<orientation radians="3.15"/>
				<width metres="15.31"/>
				<unit_capabilities>
				</unit_capabilities>
				<general>
					<name>2147343678</name>			<!-- <name>Hasdrubal the Beotarch</name> -->
					<star_rating level="3"/>
        		</general>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="80" script_name="Car_02">
				<unit_type type="Car_Noble_Cav"/>
				<position x="-144.76" y="155.38"/>
				<orientation radians="3.15"/>
				<width metres="15.31"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="80" script_name="Car_03">
				<unit_type type="Car_Noble_Cav"/>
				<position x="-162.07" y="155.51"/>
				<orientation radians="3.15"/>
				<width metres="15.31"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="80" script_name="Car_04">
				<unit_type type="Car_Cav"/>
				<position x="-179.38" y="155.64"/>
				<orientation radians="3.15"/>
				<width metres="15.31"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="80" script_name="Car_05">
				<unit_type type="Mer_Afr_Cav"/>
				<position x="-196.69" y="155.78"/>
				<orientation radians="3.15"/>
				<width metres="15.31"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="20" script_name="Car_06">
				<unit_type type="Mer_Afr_Cav"/>
				<position x="-214.00" y="155.91"/>
				<orientation radians="3.15"/>
				<width metres="15.31"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<!-- Inf -->
			<unit num_soldiers="160" script_name="Car_11">
				<unit_type type="Car_African_Pike"/>
				<position x="-183.53" y="-126.06"/>
				<orientation radians="3.14"/>
				<width metres="20.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Car_12">
				<unit_type type="Car_African_Pike"/>
				<position x="-206.23" y="-126.03"/>
				<orientation radians="3.14"/>
				<width metres="20.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Car_13">
				<unit_type type="Car_African_Pike"/>
				<position x="-228.43" y="-126.01"/>
				<orientation radians="3.14"/>
				<width metres="19.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Car_14">
				<unit_type type="Car_African_Pike"/>
				<position x="-250.13" y="-125.98"/>
				<orientation radians="3.14"/>
				<width metres="19.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Car_15">
				<unit_type type="Car_African_Pike"/>
				<position x="-271.83" y="-125.96"/>
				<orientation radians="3.14"/>
				<width metres="19.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Car_16">
				<unit_type type="Car_Late_Libyan_Hoplites"/>
				<position x="-293.58" y="-125.89"/>
				<orientation radians="3.14"/>
				<width metres="19.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<!--
			<unit num_soldiers="160" script_name="Car_17">
				<unit_type type="Car_Late_Libyan_Hoplites"/>
				<position x="-568.66" y="-309.47"/>
				<orientation radians="3.13"/>
				<width metres="13.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Car_18">
				<unit_type type="Car_Late_Libyan_Hoplites"/>
				<position x="-584.46" y="-309.66"/>
				<orientation radians="3.13"/>
				<width metres="13.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			-->
			<unit num_soldiers="160" script_name="Car_19">
				<unit_type type="Car_Late_Hoplites"/>
				<position x="-600.26" y="-309.85"/>
				<orientation radians="3.13"/>
				<width metres="13.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Car_20">
				<unit_type type="Car_Late_Hoplites"/>
				<position x="-616.06" y="-310.04"/>
				<orientation radians="3.13"/>
				<width metres="13.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<!--
			<unit num_soldiers="160" script_name="Car_21">
				<unit_type type="Car_Late_Hoplites"/>
				<position x="-631.86" y="-310.24"/>
				<orientation radians="3.13"/>
				<width metres="13.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			-->
			<unit num_soldiers="160" script_name="Car_22">
				<unit_type type="Car_Libyan_Infantry"/>
				<position x="-647.65" y="-310.43"/>
				<orientation radians="3.13"/>
				<width metres="13.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<!--
			<unit num_soldiers="160" script_name="Car_23">
				<unit_type type="Car_Libyan_Infantry"/>
				<position x="-663.45" y="-310.62"/>
				<orientation radians="3.13"/>
				<width metres="13.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Car_24">
				<unit_type type="Car_Libyan_Infantry"/>
				<position x="-679.25" y="-310.81"/>
				<orientation radians="3.13"/>
				<width metres="13.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			-->
			<unit num_soldiers="160" script_name="Car_25">
				<unit_type type="Car_Citizen_Militia"/>
				<position x="-328.94" y="-125.49"/>
				<orientation radians="3.17"/>
				<width metres="18.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Car_26">
				<unit_type type="Car_Citizen_Militia"/>
				<position x="-349.24" y="-124.91"/>
				<orientation radians="3.17"/>
				<width metres="17.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Car_27">
				<unit_type type="Car_Citizen_Militia"/>
				<position x="-369.03" y="-124.34"/>
				<orientation radians="3.17"/>
				<width metres="17.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Car_28">
				<unit_type type="Car_Citizen_Militia"/>
				<position x="-517.46" y="-258.26"/>
				<orientation radians="2.40"/>
				<width metres="14.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Car_29">
				<unit_type type="Car_Citizen_Militia"/>
				<position x="-529.44" y="-269.31"/>
				<orientation radians="2.40"/>
				<width metres="13.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Car_30">
				<unit_type type="Car_Citizen_Militia"/>
				<position x="-541.05" y="-280.03"/>
				<orientation radians="2.40"/>
				<width metres="13.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>

			<!-- ranged -->
			<unit num_soldiers="120" script_name="Car_31">
				<unit_type type="Mer_Afr_Archers"/>
				<position x="-547.93" y="-259.86"/>
				<orientation radians="2.69"/>
				<width metres="18.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="120" script_name="Car_32">
				<unit_type type="Mer_Afr_Archers"/>
				<position x="-274.49" y="-110.15"/>
				<orientation radians="3.15"/>
				<width metres="35.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="120" script_name="Car_33">
				<unit_type type="Car_Libyan_Javelin"/>
				<position x="-567.52" y="-269.43"/>
				<orientation radians="2.69"/>
				<width metres="18.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="120" script_name="Car_34">
				<unit_type type="Car_Libyan_Javelin"/>
				<position x="-312.48" y="-109.66"/>
				<orientation radians="3.15"/>
				<width metres="35.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="120" script_name="Car_35">
				<unit_type type="Car_Libyan_Peltasts"/>
				<position x="-587.11" y="-279.00"/>
				<orientation radians="2.69"/>
				<width metres="18.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="120" script_name="Car_36">
				<unit_type type="Car_Libyan_Peltasts"/>
				<position x="-350.48" y="-109.17"/>
				<orientation radians="3.15"/>
				<width metres="35.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			
			<!-- art -->
			<unit num_soldiers="20" script_name="Car_41">
				<unit_type type="Car_Large_Onager"/>
				<position x="-530.18" y="-145.28"/>
				<orientation radians="3.15"/>
				<width metres="23.54"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="20" script_name="Car_42">
				<unit_type type="Car_Large_Onager"/>
				<position x="-557.72" y="-145.15"/>
				<orientation radians="3.15"/>
				<width metres="23.54"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<!--
			<unit num_soldiers="20" script_name="Car_43">
				<unit_type type="Car_Large_Onager"/>
				<position x="-119.32" y="-7.45"/>
				<orientation radians="3.14"/>
				<width metres="28.32"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="20" script_name="Car_44">
				<unit_type type="Car_Large_Onager"/>
				<position x="-180.97" y="-54.37"/>
				<orientation radians="3.07"/>
				<width metres="23.54"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			-->
			<unit num_soldiers="20" script_name="Car_45">
				<unit_type type="Car_Onager"/>
				<position x="-357.22" y="-56.40"/>
				<orientation radians="3.13"/>
				<width metres="34.20"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="20" script_name="Car_46">
				<unit_type type="Car_Scorpion"/>
				<position x="-598.02" y="-167.52"/>
				<orientation radians="3.22"/>
				<width metres="31.50"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="20" script_name="Car_47">
				<unit_type type="Car_Scorpion"/>
				<position x="-556.34" y="-244.33"/>
				<orientation radians="3.07"/>
				<width metres="31.50"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<!--
			<unit num_soldiers="20" script_name="Car_48">
				<unit_type type="Car_Scorpion"/>
				<position x="-257" y="-87"/>
				<orientation radians="3.07"/>
				<width metres="31.50"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			-->
		</army>

	
		<army hide_results="true">
			<faction>rom_carthage</faction>

			<deployment_area>
				<orientation radians="0.00"/>
				<position x='320' y='-200'/>
				<position x='250' y='-270'/>
				<position x='10' y='-270'/>
				<position x='-90' y='-175'/>
				<position x='-360' y='-175'/>
				<position x='-530' y='-360'/>
				<position x='-900' y='-360'/>
				<position x='-900' y='900'/>
				<position x='320' y='900'/>
			</deployment_area>
			
			<unit num_soldiers="40" script_name="Car_51">
				<unit_type type="Car_General"/>
				<position x="-172.80" y="329.37"/>
				<orientation radians="3.08"/>
				<width metres="18.91"/>
				<unit_capabilities>
				</unit_capabilities>
				<general>
					<name>2147343678</name>			<!-- <name>Hasdrubal the Beotarch</name> -->
					<star_rating level="3"/>
        		</general>
				<unit_experience level="3"/>
			</unit>
			
			<unit num_soldiers="12" script_name="Car_52">
				<unit_type type="Mer_Afr_Elephants"/>
				<position x="-175.52" y="298.81"/>
				<orientation radians="3.12"/>
				<width metres="26.75"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="12" script_name="Car_53">
				<unit_type type="Mer_Afr_Elephants"/>
				<position x="-205.27" y="298.13"/>
				<orientation radians="3.12"/>
				<width metres="26.75"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="80" script_name="Car_54">
				<unit_type type="Mer_Afr_Cav"/>
				<position x="-192.77" y="328.11"/>
				<orientation radians="3.08"/>
				<width metres="17.11"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="80" script_name="Car_55">
				<unit_type type="Mer_Afr_Cav"/>
				<position x="-211.85" y="326.90"/>
				<orientation radians="3.08"/>
				<width metres="17.11"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Car_56">
				<unit_type type="Car_Sacred_Band"/>
				<position x="-154.05" y="278.72"/>
				<orientation radians="3.02"/>
				<width metres="16.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Car_57">
				<unit_type type="Car_Sacred_Band"/>
				<position x="-173.71" y="276.30"/>
				<orientation radians="3.02"/>
				<width metres="16.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>	
		</army>
		
		<starting_tickets>100</starting_tickets>
		
		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		
		<rout_position x ="0" y = "1300"></rout_position>
	</alliance>
	
	
	<battle_description>
		<battle_script prepare_for_fade_in="true">SC_Start.lua</battle_script>
		<time_of_day>day</time_of_day>
		<season>Summer</season>
		<precipitation_type>dry</precipitation_type>
		<subculture>sc_rom_carthaginian</subculture>
		<type>land_normal</type>
		<timeout_winning_alliance_index>1</timeout_winning_alliance_index>
	</battle_description>

	<sea_surface_name>wind_level_2</sea_surface_name>
		
	<weather>
		<environment_key>Weather/ROME_Med/default/Land/day/dry/day_dry_01.environment</environment_key>
		<prevailing_wind x="0" y="9"/>
	</weather>
	
	<sea_surface_name>wind_level_2</sea_surface_name>
	
	<Climate>
		<name>ROME_Med</name>
	</Climate>
	
	<Season>
		<name>season_summer</name>
	</Season>
		
	<battle_map_definition>
		<name>Terrain/battles/carthage/</name>
	</battle_map_definition>

	<!-- <use_deployment_radar_on_loading_screen>false</use_deployment_radar_on_loading_screen> -->

	<!-- <skip_deployment></skip_deployment> -->
	<playable_area dimension = "1940"></playable_area>
</battle>







C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\tb_template_battle\tb_battle.xml
<?xml version="1.0" encoding="UTF-8"?>
<battle xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="battle.xsd">

	<alliance id="0">
		<army>
			<faction>rom_rome</faction>

			<deployment_area>
				<position x='-900' y='-900'/>
				<position x='-900' y='900'/>
				<position x='900' y='900'/>
				<position x='900' y='-900'/>
				<orientation radians="0.00"/>
			</deployment_area>
			
			<camera_start_position x="0" y="40" z="-500" /> 
			<camera_target_position x="0" y="22.5" z="-440" />
					
			<unit unit_category="cavalry" num_soldiers="160" script_name="Rom_01">
				<unit_type type="Rom_Principes"/>
				<position x="-75" y="-400"/>
				<orientation radians="0"/>
				<width metres="35"/>
				<unit_capabilities>
				</unit_capabilities>
				<general>
					<name>Roman General</name>
					<star_rating level ="5"/>
        		</general>
				<unit_experience level="4"/>
			</unit>
			<unit unit_category="cavalry" num_soldiers="160" script_name="Rom_02">
				<unit_type type="Rom_Hastati" />
				<position x="-25" y="-400"/>
				<orientation radians="0"/>
				<width metres="35"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="160" script_name="Rom_03">
				<unit_type type="Rom_Hastati"/>
				<position x="25" y="-400"/>
				<orientation radians="0"/>
				<width metres="35"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit unit_category="infantry_melee" num_soldiers="160" script_name="Rom_04">
				<unit_type type="Rom_Hastati"/>
				<position x="75" y="-400"/>
				<orientation radians="0"/>
				<width metres="35"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
		</army>
		
		<victory_condition>
		     <kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		
		<rout_position x ="-800.0" y = "-1300"></rout_position>
	</alliance>
	
	<alliance id="1">
		<!-- <non_playable></non_playable> -->	
		<army>
			<faction>rom_carthage</faction>

			<deployment_area>
				<position x='-900' y='-900'/>
				<position x='-900' y='900'/>
				<position x='900' y='900'/>
				<position x='900' y='-900'/>
				<orientation radians="0.00"/>
			</deployment_area>
				
			<camera_start_position x="0" y="40" z="500" /> 
			<camera_target_position x="0" y="22.5" z="440" />
			<campaign_ai_battle_hints aggression="1.0"/>
			
			<unit unit_category="cavalry" num_soldiers="160" script_name="Car_01">
				<unit_type type="Ibe_Scutarii"/>
				<position x="75" y="400"/>
				<orientation radians="3.14"/>
				<width metres="35"/>
				<unit_capabilities>
				</unit_capabilities>
				<general>
					<name>Carthaginian General</name>
					<star_rating level ="5"/>
        		</general>
				<unit_experience level="4"/>
			</unit>
			<unit unit_category="cavalry" num_soldiers="160" script_name="Car_02">
				<unit_type type="Ibe_Sword" />
				<position x="25" y="400"/>
				<orientation radians="3.14"/>
				<width metres="35"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="160" script_name="Car_03">
				<unit_type type="Ibe_Sword"/>
				<position x="-25" y="400"/>
				<orientation radians="3.14"/>
				<width metres="35"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit unit_category="infantry_melee" num_soldiers="160" script_name="Car_04">
				<unit_type type="Ibe_Sword"/>
				<position x="-75" y="400"/>
				<orientation radians="3.14"/>
				<width metres="35"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
		</army>

		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		
		<rout_position x ="0" y = "1300"></rout_position>
	</alliance>
	
	<battle_description>
		<battle_script prepare_for_fade_in="true">TB_Start.lua</battle_script>
		<time_of_day>day</time_of_day>
		<season>Summer</season>
		<precipitation_type>dry</precipitation_type>
		<subculture>sc_rom_Carthaginian</subculture>
		<type>land_normal</type>
		<timeout_winning_alliance_index>1</timeout_winning_alliance_index>
	</battle_description>

	<sea_surface_name>wind_level_2</sea_surface_name>
		
	<weather>
		<environment_key>BattleTerrain/presets/HB_Empty/Default.environment</environment_key>
		<prevailing_wind x="0" y="9"/>
	</weather>
	
	<battle_map_definition>
		<name>BattleTerrain/presets/HB_Empty/</name>
	</battle_map_definition>
	<!-- <use_deployment_radar_on_loading_screen>false</use_deployment_radar_on_loading_screen> -->

	<!-- <skip_deployment></skip_deployment> -->
	<playable_area dimension = "2000"></playable_area>
</battle>







C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\tf_teutoburg_forest\tf_battle.xml
<?xml version="1.0" encoding="UTF-8"?>
<battle xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="battle.xsd">
		
	<alliance id="0">
		<army>
			<faction>rom_rome</faction>
			
			<deployment_area>
				<position x='-950' y='-950'/>
				<position x='-950' y='950'/>
				<position x='950' y='950'/>
				<position x='950' y='-950'/>
				<orientation radians="0.00"/>
			</deployment_area>
			
			<camera_start_position x="420.9" y="73.4" z="-154.9" /> 
			<camera_target_position x="371.7" y="42.2" z="-117.1" />
			
			<unit num_soldiers="40" script_name="Rom_01">
				<unit_type type="Rom_Legatus"/>
				<position x="378.59" y="-118.08"/>
				<orientation radians="-0.83"/>
				<width metres="13.13"/>
				<unit_capabilities>
					<special_ability>com_rally</special_ability>
					<special_ability>com_inspire_unit</special_ability>
				</unit_capabilities>
				<general>
					<name>2147343764</name>		<!-- <name>Quinctilius Varus</name> -->
					<star_rating level ="5"/>
					<uniform>Varus</uniform>
        		</general>
				<unit_experience level="8"/>
			</unit>
			<unit num_soldiers="60" script_name="Rom_02">
				<unit_type type="Aux_Cav" />
				<position x="398.5" y="-134.02"/>
				<orientation radians="-1"/>
				<width metres="13.1"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="7"/>
			</unit>
				
			<!-- First Legion -->		
			<unit num_soldiers="160" script_name="Rom_03">
				<unit_type type="Rom_Eagle_Cohort"/>
				<position x="316.56" y="-68.37"/>
				<orientation radians="-0.91"/>
				<width metres="7.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="8"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_04">
				<unit_type type="Rom_Legionary_Cohort"/>
				<position x="336.04" y="-82.95"/>
				<orientation radians="-0.88"/>
				<width metres="7.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="7"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_05">
				<unit_type type="Aux_Infantry"/>
				<position x="355.18" y="-98.06"/>
				<orientation radians="-0.84"/>
				<width metres="7.7"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="6"/>
			</unit>
			
			<!-- Second Legion -->
			<unit num_soldiers="160" script_name="Rom_06">
				<unit_type type="Rom_Eagle_Cohort"/>
				<position x="458.34" y="-168.34"/>
				<orientation radians="-1.33"/>
				<width metres="7"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="8"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_07">
				<unit_type type="Rom_Legionary_Cohort"/>
				<position x="490.53" y="-175.28"/>
				<orientation radians="-1.08"/>
				<width metres="7"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="7"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_08">
				<unit_type type="Aux_Infantry"/>
				<position x="514.19" y="-190.54"/>
				<orientation radians="-0.43"/>
				<width metres="7.79"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="6"/>
			</unit>
			
			<!-- Third Legion -->
			<unit num_soldiers="160" script_name="Rom_09">
				<unit_type type="Rom_Eagle_Cohort"/>
				<position x="530.00" y="-245.60"/>
				<orientation radians="5.57"/>
				<width metres="7.90"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="8"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_10">
				<unit_type type="Rom_Legionary_Cohort"/>
				<position x="547.56" y="-264.49"/>
				<orientation radians="5.40"/>
				<width metres="7.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="7"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_11">
				<unit_type type="Aux_Infantry"/>
				<position x="568.28" y="-279.54"/>
				<orientation radians="4.98"/>
				<width metres="8.40"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="6"/>
			</unit>
			
			<!-- Arminius for cutscene -->
			<unit num_soldiers="40" script_name="Rom_AR">
				<unit_type type="Ger_Noble_Riders"/>
				<position x="275" y="-40"/>
				<orientation radians="5.3"/>
				<width metres="12.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="4"/>
			</unit>
		</army>
		
		<army hide_results="true">
			<faction>rom_rome</faction>
			
			<can_withdraw>true</can_withdraw>
			
			<deployment_area>
				<position x='-950' y='-950'/>
				<position x='-950' y='950'/>
				<position x='950' y='950'/>
				<position x='950' y='-950'/>
				<orientation radians="0.00"/>
			</deployment_area>
			
			<camera_start_position x="420.9" y="73.4" z="-154.9" /> 
			<camera_target_position x="371.7" y="42.2" z="-117.1" />
			
			<unit num_soldiers="40" script_name="Rom_Var">
				<unit_type type="Rom_Legatus"/>
				<position x="880" y="-880"/>
				<orientation radians="0"/>
				<width metres="18"/>
				<unit_capabilities>
				</unit_capabilities>
				<general>
					<name>2147343764</name>		<!-- <name>Quinctilius Varus</name> -->
					<star_rating level="5"/>
					<uniform>Varus</uniform>
        		</general>
				<unit_experience level="8"/>
			</unit>
		</army>

		<victory_condition>
		     <kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		
		<rout_position x ="1300.0" y = "-1300"></rout_position>
	</alliance>	
	
	<alliance id="1">

		<!-- 1st army -->
		<army>
			<faction>rom_cherusci</faction>

			<deployment_area>
				<position x='-950' y='-950'/>
				<position x='-950' y='950'/>
				<position x='950' y='950'/>
				<position x='950' y='-950'/>
				<orientation radians="0.00"/>
			</deployment_area>
			
			<can_withdraw>true</can_withdraw>
				
			<camera_start_position x="0" y="40" z="500" /> 
			<camera_target_position x="0" y="22.5" z="440" />
			
			<unit num_soldiers="60" script_name="Ger_AR_01">
				<unit_type type="Ger_Noble_Riders"/>
				<position x="-299.04" y="165.74"/>
				<orientation radians="1.26"/>
				<width metres="20.78"/>
				<unit_capabilities>
				</unit_capabilities>
				<general>
					<name>2147343766</name>			<!-- <name>Arminius</name> -->
					<star_rating level ="3"/>
                    <!-- <portrait>data/UI/Portraits/custom/cards/Oda_Daimyo.tga</portrait> -->
        		</general>
				<unit_experience level="4"/>
			</unit>
			<unit num_soldiers="60" script_name="Ger_AR_02">
				<unit_type type="Ger_Noble_Riders"/>
				<position x="-305.93" y="187.46"/>
				<orientation radians="1.26"/>
				<width metres="20.78"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="4"/>
			</unit>
			<unit num_soldiers="60" script_name="Ger_AR_03">
				<unit_type type="Ger_Noble_Riders"/>
				<position x="-312.82" y="209.17"/>
				<orientation radians="1.26"/>
				<width metres="20.78"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="4"/>
			</unit>
			<unit num_soldiers="60" script_name="Ger_AR_04">
				<unit_type type="Ger_Noble_Riders"/>
				<position x="-319.70" y="230.89"/>
				<orientation radians="1.26"/>
				<width metres="20.78"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="4"/>
			</unit>
			<unit num_soldiers="60" script_name="Ger_AR_05">
				<unit_type type="Ger_Noble_Riders"/>
				<position x="-326.59" y="252.60"/>
				<orientation radians="1.26"/>
				<width metres="20.78"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="4"/>
			</unit>
			
			<!-- Attack position M1 -->
			<unit num_soldiers="40" script_name="Ger_M1_01">
				<unit_type type="Ger_Longbow_Hunters"/>
				<position x="-16.55" y="-40.31"/>
				<orientation radians="1.30"/>
				<width metres="39.09"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_M1_02">
				<unit_type type="Ger_Spear_Brothers"/>
				<position x="-40.08" y="-42.22"/>
				<orientation radians="1.22"/>
				<width metres="30.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<!-- <unit num_soldiers="160" script_name="Ger_M1_03">
				<unit_type type="Ger_Spear_Brothers"/>
				<position x="-28.54" y="-73.88"/>
				<orientation radians="1.22"/>
				<width metres="30.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>	-->
			<unit num_soldiers="40" script_name="Ger_M1_04">
				<unit_type type="Ger_Spear_Levy"/>
				<position x="41" y="-190"/>
				<orientation radians="0.19"/>
				<width metres="34.52"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_M1_05">
				<unit_type type="Ger_Spear_Levy"/>
				<position x="35" y="-207"/>
				<orientation radians="0.15"/>
				<width metres="36.84"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_M1_06">
				<unit_type type="Ger_Spear_Levy"/>
				<position x="35.24" y="-153.53"/>
				<orientation radians="0.49"/>
				<width metres="24.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_M1_07">
				<unit_type type="Ger_Spear_Levy"/>
				<position x="58.76" y="-166.17"/>
				<orientation radians="0.49"/>
				<width metres="24.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="20" script_name="Ger_M1_08">
				<unit_type type="Ger_Youths"/>
				<position x="-62.3" y="49.17"/>
				<orientation radians="1.7"/>
				<width metres="28.5"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			
			<!-- Attack position M2 -->
			<unit num_soldiers="20" script_name="Ger_M2_01">
				<unit_type type="Cel_Savage_Dogs"/>
				<position x="181.53" y="208.14"/>
				<orientation radians="3.42"/>
				<width metres="29.23"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="20" script_name="Ger_M2_02">
				<unit_type type="Cel_Savage_Dogs"/>
				<position x="122.49" y="201.96"/>
				<orientation radians="3.14"/>
				<width metres="24.92"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="20" script_name="Ger_M2_03">
				<unit_type type="Cel_Savage_Dogs"/>
				<position x="190.06" y="237.30"/>
				<orientation radians="3.38"/>
				<width metres="25.12"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>		
			<unit num_soldiers="20" script_name="Ger_M2_04">
				<unit_type type="Cel_Savage_Dogs"/>
				<position x="145.14" y="239.07"/>
				<orientation radians="3.13"/>
				<width metres="30.41"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_M2_05">
				<unit_type type="Ger_Spear_Levy"/>
				<position x="120" y="208"/>
				<orientation radians="2.91"/>
				<width metres="45.40"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_M2_06">
				<unit_type type="Ger_Longbow_Hunters"/>
				<position x="120" y="208"/>
				<orientation radians="2.91"/>
				<width metres="45.40"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			
			
			<!-- Attack position M3 -->
			<unit num_soldiers="40" script_name="Ger_M3_01">
				<unit_type type="Ger_Spear_Levy"/>
				<position x="-24.10" y="219.97"/>
				<orientation radians="3.24"/>
				<width metres="39.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_M3_02">
				<unit_type type="Ger_Youths"/>
				<position x="18.40" y="215.78"/>
				<orientation radians="3.24"/>
				<width metres="40.30"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_M3_03">
				<unit_type type="Ger_Spear_Levy"/>
				<position x="41" y="220"/>
				<orientation radians="3.24"/>
				<width metres="39.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_M3_04">
				<unit_type type="Ger_Spear_Levy"/>
				<position x="-20" y="230"/>
				<orientation radians="3.24"/>
				<width metres="39.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
		</army>

		<!-- 2nd army -->
		<army hide_results="true">
		
			<faction>rom_cherusci</faction>

			<deployment_area>
				<position x='-950' y='-950'/>
				<position x='-950' y='950'/>
				<position x='950' y='950'/>
				<position x='950' y='-950'/>
				<orientation radians="0.00"/>
			</deployment_area>
			
			<can_withdraw>true</can_withdraw>
				
			<camera_start_position x="0" y="40" z="500" /> 
			<camera_target_position x="0" y="22.5" z="440" />
			
			<!-- Attack position F1 -->
			<unit num_soldiers="40" script_name="Ger_F1_01">
				<unit_type type="Ger_Longbow_Hunters"/>
				<position x="-318.9" y="37.47"/>
				<orientation radians="0.79"/>
				<width metres="41.2"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="60" script_name="Ger_F1_02">
				<unit_type type="Ger_Spear_Levy"/>
				<position x="-388.08" y="119.00"/>
				<orientation radians="1.41"/>
				<width metres="23.50"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="60" script_name="Ger_F1_03">
				<unit_type type="Ger_Spear_Levy"/>
				<position x="-383.97" y="93.42"/>
				<orientation radians="1.41"/>
				<width metres="22.30"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="60" script_name="Ger_F1_04">
				<unit_type type="Ger_Spear_Levy"/>
				<position x="-242.84" y="14.03"/>
				<orientation radians="0.09"/>
				<width metres="43.75"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="60" script_name="Ger_F1_05">
				<unit_type type="Ger_Longbow_Hunters"/>
				<position x="-287.75" y="6.12"/>
				<orientation radians="0.79"/>
				<width metres="41.2"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			
			
			<!-- Attack position F2 -->
			<unit num_soldiers="40" script_name="Ger_F2_01">
				<unit_type type="Ger_Berserkers"/>
				<position x="-78.66" y="283.17"/>
				<orientation radians="4.16"/>
				<width metres="9.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_F2_02">
				<unit_type type="Ger_Berserkers"/>
				<position x="-85.06" y="293.44"/>
				<orientation radians="4.16"/>
				<width metres="9.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_F2_03">
				<unit_type type="Ger_Berserkers"/>
				<position x="-91.45" y="303.72"/>
				<orientation radians="4.16"/>
				<width metres="9.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_F2_04">
				<unit_type type="Ger_Berserkers"/>
				<position x="-144.03" y="382.49"/>
				<orientation radians="3.93"/>
				<width metres="12.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_F2_05">
				<unit_type type="Ger_Berserkers"/>
				<position x="-154.06" y="392.39"/>
				<orientation radians="3.93"/>
				<width metres="11.50"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_F2_06">
				<unit_type type="Ger_Berserkers"/>
				<position x="-163.65" y="401.88"/>
				<orientation radians="3.93"/>
				<width metres="11.50"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="20" script_name="Ger_F2_07">
				<unit_type type="Cel_Savage_Dogs"/>
				<position x="-69.04" y="271.07"/>
				<orientation radians="4.16"/>
				<width metres="17.32"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="60" script_name="Ger_F2_08">
				<unit_type type="Ger_Longbow_Hunters"/>
				<position x="-72.13" y="307.30"/>
				<orientation radians="4.15"/>
				<width metres="54.71"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="60" script_name="Ger_F2_09">
				<unit_type type="Ger_Longbow_Hunters"/>
				<position x="-144.80" y="402.08"/>
				<orientation radians="3.92"/>
				<width metres="49.96"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="60" script_name="Ger_F2_10">
				<unit_type type="Ger_Spear_Levy"/>
				<position x="-101.86" y="321.39"/>
				<orientation radians="4.18"/>
				<width metres="28.40"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="60" script_name="Ger_F2_11">
				<unit_type type="Ger_Spear_Brothers"/>
				<position x="-129.66" y="363.59"/>
				<orientation radians="4.11"/>
				<width metres="30.15"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="60" script_name="Ger_F2_12">
				<unit_type type="Ger_Spear_Brothers"/>
				<position x="-184.58" y="416.44"/>
				<orientation radians="3.72"/>
				<width metres="32.98"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
					
			<!-- Attack position F3 -->
			<unit num_soldiers="40" script_name="Ger_F3_01">
				<unit_type type="Ger_Spear_Levy"/>
				<position x="-499.34" y="-111.64"/>
				<orientation radians="0.57"/>
				<width metres="27.62"/>
				<unit_capabilities>
				</unit_capabilities>
				<general>
					<name>2147343766</name>		<!-- <name>Arminius</name> -->
					<star_rating level="0"/>
        		</general>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="20" script_name="Ger_F3_02">
				<unit_type type="Cel_Savage_Dogs"/>
				<position x="-505.36" y="78.52"/>
				<orientation radians="2.12"/>
				<width metres="35.26"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_F3_03">
				<unit_type type="Ger_Youths"/>
				<position x="-420" y="120"/>
				<orientation radians="2.17"/>
				<width metres="36.07"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="60" script_name="Ger_F3_04">
				<unit_type type="Ger_Longbow_Hunters"/>
				<position x="-450" y="80"/>
				<orientation radians="2.03"/>
				<width metres="38.18"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_F3_05">
				<unit_type type="Ger_Youths"/>
				<position x="-553.68" y="38.26"/>
				<orientation radians="2.52"/>
				<width metres="43.94"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_F3_06">
				<unit_type type="Ger_Youths"/>
				<position x="-516.84" y="122.53"/>
				<orientation radians="2.51"/>
				<width metres="31.59"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="20" script_name="Ger_F3_07">
				<unit_type type="Ger_Berserkers"/>
				<position x="-587.23" y="77.57"/>
				<orientation radians="2.22"/>
				<width metres="29.85"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_F3_08">
				<unit_type type="Ger_Bloodsworn"/>
				<position x="-570" y="-70"/>
				<orientation radians="1.6"/>
				<width metres="29.85"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			
			<!-- Attack position F4 -->
			<unit num_soldiers="40" script_name="Ger_F4_01">
				<unit_type type="Ger_Youths"/>
				<position x="-386.71" y="-144.05"/>
				<orientation radians="6.12"/>
				<width metres="34.97"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_F4_02">
				<unit_type type="Ger_Youths"/>
				<position x="-431.64" y="-150.49"/>
				<orientation radians="0.25"/>
				<width metres="35.81"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_F4_03">
				<unit_type type="Ger_Youths"/>
				<position x="-428.06" y="-256.03"/>
				<orientation radians="0.05"/>
				<width metres="26.85"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_F4_04">
				<unit_type type="Ger_Youths"/>
				<position x="-384" y="-193"/>
				<orientation radians="6.22"/>
				<width metres="21.03"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
		</army>	
		
		<!-- 3rd army -->
		<army hide_results="true">
			<faction>rom_cherusci</faction>

			<deployment_area>
				<position x='-950' y='-950'/>
				<position x='-950' y='950'/>
				<position x='950' y='950'/>
				<position x='950' y='-950'/>
				<orientation radians="0.00"/>
			</deployment_area>
			
			<can_withdraw>true</can_withdraw>
				
			<camera_start_position x="0" y="40" z="500" /> 
			<camera_target_position x="0" y="22.5" z="440" />
						
			<!-- Attack position S1 -->
			<unit num_soldiers="160" script_name="Ger_S1_01">
				<unit_type type="Ger_Spear_Brothers"/>
				<position x="534.91" y="-314.66"/>
				<orientation radians="0.59"/>
				<width metres="23.19"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S1_02">
				<unit_type type="Ger_Bloodsworn"/>
				<position x="561.03" y="-322.29"/>
				<orientation radians="6.28"/>
				<width metres="22.95"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="4"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S1_03">
				<unit_type type="Ger_Spear_Levy"/>
				<position x="587.60" y="-318.41"/>
				<orientation radians="6.03"/>
				<width metres="22.72"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>		
			<unit num_soldiers="120" script_name="Ger_S1_04">
				<unit_type type="Ger_Longbow_Hunters"/>
				<position x="662.53" y="-377.32"/>
				<orientation radians="5.46"/>
				<width metres="49.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="120" script_name="Ger_S1_05">
				<unit_type type="Ger_Youths"/>
				<position x="573.07" y="-339.82"/>
				<orientation radians="0.08"/>
				<width metres="40.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_S1_06">
				<unit_type type="Ger_Tribesmen"/>
				<position x="526.99" y="-358.49"/>
				<orientation radians="0.10"/>
				<width metres="30.27"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_S1_07">
				<unit_type type="Ger_Spear_Levy"/>
				<position x="566.42" y="-368.75"/>
				<orientation radians="0.26"/>
				<width metres="28.22"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S1_08">
				<unit_type type="Ger_Spear_Brothers"/>
				<position x="636.26" y="-318.87"/>
				<orientation radians="5.40"/>
				<width metres="22.01"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_S1_09">
				<unit_type type="Ger_Spear_Brothers"/>
				<position x="509.26" y="-338.46"/>
				<orientation radians="0.39"/>
				<width metres="29.74"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S1_10">
				<unit_type type="Ger_Sword_Masters"/>
				<position x="538.37" y="-341.29"/>
				<orientation radians="0.02"/>
				<width metres="24.06"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
				<general>
					<name>2147343766</name>		<!-- <name>Arminius</name> -->
					<star_rating level="2"/>
        		</general>
			</unit>
			<unit num_soldiers="80" script_name="Ger_S1_11">
				<unit_type type="Ger_Longbow_Hunters"/>
				<position x="515.92" y="-322.36"/>
				<orientation radians="0.55"/>
				<width metres="32.33"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>

			<!-- Attack position S2 -->
			<unit num_soldiers="120" script_name="Ger_S2_01">
				<unit_type type="Ger_Tribesmen"/>
				<position x="572.38" y="-171.42"/>
				<orientation radians="4.38"/>
				<width metres="32.24"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="120" script_name="Ger_S2_02">
				<unit_type type="Ger_Spear_Levy"/>
				<position x="553" y="-146"/>
				<orientation radians="4.03"/>
				<width metres="31.21"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="120" script_name="Ger_S2_03">
				<unit_type type="Ger_Spear_Levy"/>
				<position x="554.3" y="-103.7"/>
				<orientation radians="-2.6"/>
				<width metres="24.6"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="120" script_name="Ger_S2_04">
				<unit_type type="Ger_Tribesmen"/>
				<position x="529.7" y="-89.2"/>
				<orientation radians="-2.6"/>
				<width metres="27.4"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="120" script_name="Ger_S2_05">
				<unit_type type="Ger_Tribesmen"/>
				<position x="499.5" y="-78.9"/>
				<orientation radians="-2.9"/>
				<width metres="29.1"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="120" script_name="Ger_S2_06">
				<unit_type type="Ger_Spear_Levy"/>
				<position x="462.9" y="-75.45"/>
				<orientation radians="3.13"/>
				<width metres="28.7"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>

			<!-- Attack position S3 -->
			<unit num_soldiers="120" script_name="Ger_S3_01">
				<unit_type type="Ger_Spear_Levy"/>
				<position x="252.34" y="22.27"/>
				<orientation radians="3.05"/>
				<width metres="38.54"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="120" script_name="Ger_S3_02">
				<unit_type type="Ger_Spear_Levy"/>
				<position x="233.00" y="-45.00"/>
				<orientation radians="1.60"/>
				<width metres="22.60"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			
			<unit num_soldiers="120" script_name="Ger_S3_03">
				<unit_type type="Ger_Spear_Levy"/>
				<position x="280.56" y="-150.66"/>
				<orientation radians="1.11"/>
				<width metres="39.57"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_S3_04">
				<unit_type type="Ger_Tribesmen"/>
				<position x="307.15" y="-183.84"/>
				<orientation radians="0.70"/>
				<width metres="43.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_S3_05">
				<unit_type type="Ger_Longbow_Hunters"/>
				<position x="343.52" y="-207.22"/>
				<orientation radians="0.39"/>
				<width metres="43.40"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="120" script_name="Ger_S3_16">
				<unit_type type="Ger_Tribesmen"/>
				<position x="217.86" y="54.53"/>
				<orientation radians="2.02"/>
				<width metres="39.30"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_S3_17">
				<unit_type type="Ger_Tribesmen"/>
				<position x="217.86" y="54.53"/>
				<orientation radians="2.02"/>
				<width metres="39.30"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_S3_18">
				<unit_type type="Ger_Youths"/>
				<position x="255" y="37.65"/>
				<orientation radians="3.06"/>
				<width metres="36.08"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_S3_19">
				<unit_type type="Ger_Longbow_Hunters"/>
				<position x="313.3" y="24.23"/>
				<orientation radians="-2.01"/>
				<width metres="20.92"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			
			
			<unit num_soldiers="80" script_name="Ger_S3_07">
				<unit_type type="Ger_Youths"/>
				<position x="290" y="-205"/>
				<orientation radians="0.68"/>
				<width metres="50.02"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_S3_08">
				<unit_type type="Ger_Youths"/>
				<position x="220" y="-110"/>
				<orientation radians="1.13"/>
				<width metres="44.89"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_S3_25">
				<unit_type type="Ger_Longbow_Hunters"/>
				<position x="350" y="-225"/>
				<orientation radians="0.6"/>
				<width metres="50.54"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_S3_26">
				<unit_type type="Ger_Longbow_Hunters"/>
				<position x="300" y="-205"/>
				<orientation radians="0.43"/>
				<width metres="21.8"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_S3_27">
				<unit_type type="Ger_Longbow_Hunters"/>
				<position x="230" y="-90"/>
				<orientation radians="0.66"/>
				<width metres="38.44"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_S3_28">
				<unit_type type="Ger_Longbow_Hunters"/>
				<position x="200" y="-130"/>
				<orientation radians="0.66"/>
				<width metres="38.44"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_S3_11">
				<unit_type type="Ger_Spear_Levy"/>
				<position x="153" y="-210"/>
				<orientation radians="0.6"/>
				<width metres="40"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_S3_12">
				<unit_type type="Ger_Spear_Levy"/>
				<position x="206" y="-250"/>
				<orientation radians="0.6"/>
				<width metres="40"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_S3_13">
				<unit_type type="Ger_Spear_Levy"/>
				<position x="378.99" y="103.30"/>
				<orientation radians="4.03"/>
				<width metres="38.71"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_S3_14">
				<unit_type type="Ger_Bloodsworn"/>
				<position x="326.57" y="143.80"/>
				<orientation radians="3.72"/>
				<width metres="45.94"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
		</army>
		
	
		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		
		<rout_position x ="-1300" y = "1300"></rout_position>
	</alliance>
	
	
	
	<fauna>
		<permissible_type>
			<name>deer</name>
			<spawn_probability>1</spawn_probability>
		</permissible_type>
		<permissible_type>
			<name>wolf</name>
			<spawn_probability>1</spawn_probability>
		</permissible_type>
		<permissible_type>
			<name>boar</name>
			<spawn_probability>1</spawn_probability>
		</permissible_type>
		<permissible_type>
			<name>crow</name>
			<spawn_probability>1</spawn_probability>
		</permissible_type>
	</fauna>

		
	<battle_description>
		<battle_script prepare_for_fade_in="true">TF_Start.lua</battle_script>
		<time_of_day>day</time_of_day>
		<season>Autumn</season>
		<precipitation_type>dry</precipitation_type>
		<subculture>sc_rom_germanic</subculture>
		<type>land_normal</type>
		<timeout_winning_alliance_index>1</timeout_winning_alliance_index>
		<cinematic_display_directory>Cutscene/Live/Teutoburg</cinematic_display_directory> 
	</battle_description>

	<sea_surface_name>wind_level_2</sea_surface_name>
		
	<weather>
		<environment_key>terrain/battles/teutoburg_forest/default.environment</environment_key>
		<prevailing_wind x="0" y="9"/>
	</weather>
	
	<battle_map_definition>
		<name>terrain/battles/teutoburg_forest/</name>
	</battle_map_definition>
	<!-- <use_deployment_radar_on_loading_screen>false</use_deployment_radar_on_loading_screen> -->

	<!-- <skip_deployment></skip_deployment> -->
	<skip_results></skip_results>
	<!--<loading_screen_override>loading_screen_historical</loading_screen_override>-->
	<playable_area dimension = "1940"></playable_area>
</battle>







C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\tf_teutoburg_forest\tf_battle_no_hang.xml
<?xml version="1.0" encoding="UTF-8"?>
<battle xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="battle.xsd">
		
	<alliance id="0">
		<army>
			<faction>rom_rome</faction>
			
			<deployment_area>
				<position x='-950' y='-950'/>
				<position x='-950' y='950'/>
				<position x='950' y='950'/>
				<position x='950' y='-950'/>
				<orientation radians="0.00"/>
			</deployment_area>
			
			<camera_start_position x="420.9" y="73.4" z="-154.9" /> 
			<camera_target_position x="371.7" y="42.2" z="-117.1" />
			
			<unit num_soldiers="40" script_name="Rom_01">
				<unit_type type="Rom_Legatus"/>
				<position x="378.59" y="-118.08"/>
				<orientation radians="-0.83"/>
				<width metres="13.13"/>
				<unit_capabilities>
				</unit_capabilities>
				<general>
					<name>Quinctilius Varus</name>
					<star_rating level ="3"/>
                    <!-- <portrait>data/UI/Portraits/custom/cards/Tokugawa_Daimyo.tga</portrait> -->
        		</general>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="60" script_name="Rom_02">
				<unit_type type="Aux_Cav" />
				<position x="398.5" y="-134.02"/>
				<orientation radians="-1"/>
				<width metres="13.1"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
				
			<!-- First Legion -->		
			<unit num_soldiers="160" script_name="Rom_03">
				<unit_type type="Rom_Eagle_Cohort"/>
				<position x="316.56" y="-68.37"/>
				<orientation radians="-0.91"/>
				<width metres="7.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_04">
				<unit_type type="Rom_Legionary_Cohort"/>
				<position x="336.04" y="-82.95"/>
				<orientation radians="-0.88"/>
				<width metres="7.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_05">
				<unit_type type="Aux_Infantry"/>
				<position x="355.18" y="-98.06"/>
				<orientation radians="-0.84"/>
				<width metres="7.7"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			
			<!-- Second Legion -->
			<unit num_soldiers="160" script_name="Rom_06">
				<unit_type type="Rom_Eagle_Cohort"/>
				<position x="458.34" y="-168.34"/>
				<orientation radians="-1.33"/>
				<width metres="7"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_07">
				<unit_type type="Rom_Legionary_Cohort"/>
				<position x="490.53" y="-175.28"/>
				<orientation radians="-1.08"/>
				<width metres="7"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_08">
				<unit_type type="Aux_Infantry"/>
				<position x="514.19" y="-190.54"/>
				<orientation radians="-0.43"/>
				<width metres="7.79"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			
			<!-- Third Legion -->
			<unit num_soldiers="160" script_name="Rom_09">
				<unit_type type="Rom_Eagle_Cohort"/>
				<position x="530.00" y="-245.60"/>
				<orientation radians="5.57"/>
				<width metres="7.90"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_10">
				<unit_type type="Rom_Legionary_Cohort"/>
				<position x="547.56" y="-264.49"/>
				<orientation radians="5.40"/>
				<width metres="7.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_11">
				<unit_type type="Aux_Infantry"/>
				<position x="568.28" y="-279.54"/>
				<orientation radians="4.98"/>
				<width metres="8.40"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			
			<!-- Arminius for cutscene -->
			<unit num_soldiers="40" script_name="Rom_AR">
				<unit_type type="Ger_Noble_Riders"/>
				<position x="275" y="-40"/>
				<orientation radians="5.3"/>
				<width metres="12.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
		</army>
		
		<army hide_results="true">
			<faction>rom_rome</faction>
			
			<can_withdraw>true</can_withdraw>
			
			<deployment_area>
				<position x='-950' y='-950'/>
				<position x='-950' y='950'/>
				<position x='950' y='950'/>
				<position x='950' y='-950'/>
				<orientation radians="0.00"/>
			</deployment_area>
			
			<camera_start_position x="420.9" y="73.4" z="-154.9" /> 
			<camera_target_position x="371.7" y="42.2" z="-117.1" />
			
			<unit num_soldiers="40" script_name="Rom_Var">
				<unit_type type="Rom_Legatus"/>
				<position x="880" y="-880"/>
				<orientation radians="0"/>
				<width metres="18"/>
				<unit_capabilities>
				</unit_capabilities>
				<general>
					<name>Quinctilius Varus</name>
					<star_rating level ="3"/>
                    <!-- <portrait>data/UI/Portraits/custom/cards/Tokugawa_Daimyo.tga</portrait> -->
        		</general>
				<unit_experience level="2"/>
			</unit>
		</army>

		<victory_condition>
		     <kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		
		<rout_position x ="1300.0" y = "-1300"></rout_position>
	</alliance>	
	
	<alliance id="1">

		<!-- 1st army -->
		<army>
			<faction>rom_cherusci</faction>

			<deployment_area>
				<position x='-950' y='-950'/>
				<position x='-950' y='950'/>
				<position x='950' y='950'/>
				<position x='950' y='-950'/>
				<orientation radians="0.00"/>
			</deployment_area>
			
			<can_withdraw>true</can_withdraw>
				
			<camera_start_position x="0" y="40" z="500" /> 
			<camera_target_position x="0" y="22.5" z="440" />
			
			<unit num_soldiers="60" script_name="Ger_AR_01">
				<unit_type type="Ger_Noble_Riders"/>
				<position x="-299.04" y="165.74"/>
				<orientation radians="1.26"/>
				<width metres="20.78"/>
				<unit_capabilities>
				</unit_capabilities>
				<general>
					<name>Arminius</name>
					<star_rating level ="3"/>
                    <!-- <portrait>data/UI/Portraits/custom/cards/Oda_Daimyo.tga</portrait> -->
        		</general>
				<unit_experience level="4"/>
			</unit>
			<unit num_soldiers="60" script_name="Ger_AR_02">
				<unit_type type="Ger_Noble_Riders"/>
				<position x="-305.93" y="187.46"/>
				<orientation radians="1.26"/>
				<width metres="20.78"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="4"/>
			</unit>
			<unit num_soldiers="60" script_name="Ger_AR_03">
				<unit_type type="Ger_Noble_Riders"/>
				<position x="-312.82" y="209.17"/>
				<orientation radians="1.26"/>
				<width metres="20.78"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="4"/>
			</unit>
			<unit num_soldiers="60" script_name="Ger_AR_04">
				<unit_type type="Ger_Noble_Riders"/>
				<position x="-319.70" y="230.89"/>
				<orientation radians="1.26"/>
				<width metres="20.78"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="4"/>
			</unit>
			<unit num_soldiers="60" script_name="Ger_AR_05">
				<unit_type type="Ger_Noble_Riders"/>
				<position x="-326.59" y="252.60"/>
				<orientation radians="1.26"/>
				<width metres="20.78"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="4"/>
			</unit>
			
			<!-- Attack position M1 -->
			<unit num_soldiers="160" script_name="Ger_M1_01">
				<!-- <unit_type type="Ger_Longbow_Hunters"/> --><unit_type type="Ger_Spear_Brothers"/>
				<position x="-16.55" y="-40.31"/>
				<orientation radians="1.30"/>
				<width metres="39.09"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_M1_02">
				<unit_type type="Ger_Spear_Brothers"/>
				<position x="-40.08" y="-42.22"/>
				<orientation radians="1.22"/>
				<width metres="30.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<!-- <unit num_soldiers="160" script_name="Ger_M1_03">
				<unit_type type="Ger_Spear_Brothers"/>
				<position x="-28.54" y="-73.88"/>
				<orientation radians="1.22"/>
				<width metres="30.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>	-->
			<unit num_soldiers="160" script_name="Ger_M1_04">
				<unit_type type="Ger_Spear_Levy"/>
				<position x="41" y="-190"/>
				<orientation radians="0.19"/>
				<width metres="34.52"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_M1_05">
				<unit_type type="Ger_Spear_Brothers"/>
				<position x="35" y="-207"/>
				<orientation radians="0.15"/>
				<width metres="36.84"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_M1_06">
				<unit_type type="Ger_Spear_Levy"/>
				<position x="35.24" y="-153.53"/>
				<orientation radians="0.49"/>
				<width metres="24.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_M1_07">
				<unit_type type="Ger_Spear_Levy"/>
				<position x="58.76" y="-166.17"/>
				<orientation radians="0.49"/>
				<width metres="24.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="20" script_name="Ger_M1_08">
				<!-- <unit_type type="Ger_Longbow_Hunters"/> --><unit_type type="Ger_Spear_Brothers"/>
				<position x="-62.3" y="49.17"/>
				<orientation radians="1.7"/>
				<width metres="28.5"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			
			<!-- Attack position M2 -->
			<unit num_soldiers="40" script_name="Ger_M2_01">
				<unit_type type="Cel_Savage_Dogs"/>
				<position x="181.53" y="208.14"/>
				<orientation radians="3.42"/>
				<width metres="29.23"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_M2_02">
				<unit_type type="Cel_Savage_Dogs"/>
				<position x="122.49" y="201.96"/>
				<orientation radians="3.14"/>
				<width metres="24.92"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_M2_03">
				<unit_type type="Cel_Savage_Dogs"/>
				<position x="190.06" y="237.30"/>
				<orientation radians="3.38"/>
				<width metres="25.12"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>		
			<unit num_soldiers="40" script_name="Ger_M2_04">
				<unit_type type="Cel_Savage_Dogs"/>
				<position x="145.14" y="239.07"/>
				<orientation radians="3.13"/>
				<width metres="30.41"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_M2_05">
				<unit_type type="Ger_Spear_Brothers"/>
				<position x="120" y="208"/>
				<orientation radians="2.91"/>
				<width metres="45.40"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_M2_06">
				<!-- <unit_type type="Ger_Longbow_Hunters"/> --><unit_type type="Ger_Spear_Brothers"/>
				<position x="120" y="208"/>
				<orientation radians="2.91"/>
				<width metres="45.40"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			
			
			<!-- Attack position M3 -->
			<unit num_soldiers="160" script_name="Ger_M3_01">
				<unit_type type="Ger_Spear_Brothers"/>
				<position x="-24.10" y="219.97"/>
				<orientation radians="3.24"/>
				<width metres="39.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_M3_02">
				<!-- <unit_type type="Ger_Longbow_Hunters"/> --><unit_type type="Ger_Spear_Brothers"/>
				<position x="18.40" y="215.78"/>
				<orientation radians="3.24"/>
				<width metres="40.30"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_M3_03">
				<unit_type type="Ger_Sword_Brothers"/>
				<position x="41" y="220"/>
				<orientation radians="3.24"/>
				<width metres="39.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_M3_04">
				<unit_type type="Ger_Sword_Brothers"/>
				<position x="-20" y="230"/>
				<orientation radians="3.24"/>
				<width metres="39.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
		</army>

		<!-- 2nd army -->
		<army hide_results="true">
		
			<faction>rom_cherusci</faction>

			<deployment_area>
				<position x='-950' y='-950'/>
				<position x='-950' y='950'/>
				<position x='950' y='950'/>
				<position x='950' y='-950'/>
				<orientation radians="0.00"/>
			</deployment_area>
			
			<can_withdraw>true</can_withdraw>
				
			<camera_start_position x="0" y="40" z="500" /> 
			<camera_target_position x="0" y="22.5" z="440" />
			
			<!-- Attack position F1 -->
			<unit num_soldiers="120" script_name="Ger_F1_01">
				<!-- <unit_type type="Ger_Longbow_Hunters"/> --><unit_type type="Ger_Spear_Brothers"/>
				<position x="-318.9" y="37.47"/>
				<orientation radians="0.79"/>
				<width metres="41.2"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_F1_02">
				<unit_type type="Ger_Spear_Brothers"/>
				<position x="-388.08" y="119.00"/>
				<orientation radians="1.41"/>
				<width metres="23.50"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_F1_03">
				<unit_type type="Ger_Spear_Brothers"/>
				<position x="-383.97" y="93.42"/>
				<orientation radians="1.41"/>
				<width metres="22.30"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_F1_04">
				<unit_type type="Ger_Spear_Brothers"/>
				<position x="-242.84" y="14.03"/>
				<orientation radians="0.09"/>
				<width metres="43.75"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="120" script_name="Ger_F1_05">
				<!-- <unit_type type="Ger_Longbow_Hunters"/> --><unit_type type="Ger_Spear_Brothers"/>
				<position x="-287.75" y="6.12"/>
				<orientation radians="0.79"/>
				<width metres="41.2"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			
			
			<!-- Attack position F2 -->
			<unit num_soldiers="40" script_name="Ger_F2_01">
				<unit_type type="Ger_Berserkers"/>
				<position x="-78.66" y="283.17"/>
				<orientation radians="4.16"/>
				<width metres="9.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_F2_02">
				<unit_type type="Ger_Berserkers"/>
				<position x="-85.06" y="293.44"/>
				<orientation radians="4.16"/>
				<width metres="9.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_F2_03">
				<unit_type type="Ger_Berserkers"/>
				<position x="-91.45" y="303.72"/>
				<orientation radians="4.16"/>
				<width metres="9.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_F2_04">
				<unit_type type="Ger_Berserkers"/>
				<position x="-144.03" y="382.49"/>
				<orientation radians="3.93"/>
				<width metres="12.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_F2_05">
				<unit_type type="Ger_Berserkers"/>
				<position x="-154.06" y="392.39"/>
				<orientation radians="3.93"/>
				<width metres="11.50"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_F2_06">
				<unit_type type="Ger_Berserkers"/>
				<position x="-163.65" y="401.88"/>
				<orientation radians="3.93"/>
				<width metres="11.50"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_F2_07">
				<unit_type type="Cel_Savage_Dogs"/>
				<position x="-69.04" y="271.07"/>
				<orientation radians="4.16"/>
				<width metres="17.32"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_F2_08">
				<!-- <unit_type type="Ger_Longbow_Hunters"/> --><unit_type type="Ger_Spear_Brothers"/>
				<position x="-72.13" y="307.30"/>
				<orientation radians="4.15"/>
				<width metres="54.71"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_F2_09">
				<!-- <unit_type type="Ger_Longbow_Hunters"/> --><unit_type type="Ger_Spear_Brothers"/>
				<position x="-144.80" y="402.08"/>
				<orientation radians="3.92"/>
				<width metres="49.96"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_F2_10">
				<unit_type type="Ger_Spear_Levy"/>
				<position x="-101.86" y="321.39"/>
				<orientation radians="4.18"/>
				<width metres="28.40"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_F2_11">
				<unit_type type="Ger_Spear_Brothers"/>
				<position x="-129.66" y="363.59"/>
				<orientation radians="4.11"/>
				<width metres="30.15"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_F2_12">
				<unit_type type="Ger_Spear_Brothers"/>
				<position x="-184.58" y="416.44"/>
				<orientation radians="3.72"/>
				<width metres="32.98"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
					
			<!-- Attack position F3 -->
			<unit num_soldiers="160" script_name="Ger_F3_01">
				<unit_type type="Ger_Sword_Brothers"/>
				<position x="-499.34" y="-111.64"/>
				<orientation radians="0.57"/>
				<width metres="27.62"/>
				<unit_capabilities>
				</unit_capabilities>
				<general>
					<name></name>
					<star_rating level ="1"/>
                    <!-- <portrait>data/UI/Portraits/custom/cards/Oda_Daimyo.tga</portrait> -->
        		</general>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_F3_02">
				<unit_type type="Cel_Savage_Dogs"/>
				<position x="-505.36" y="78.52"/>
				<orientation radians="2.12"/>
				<width metres="35.26"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_F3_03">
				<!-- <unit_type type="Ger_Youths"/> --><unit_type type="Ger_Spear_Brothers"/> --><unit_type type="Ger_Spear_Levy"/>
				<position x="-420" y="120"/>
				<orientation radians="2.17"/>
				<width metres="36.07"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_F3_04">
				<!-- <unit_type type="Ger_Longbow_Hunters"/> --><unit_type type="Ger_Spear_Brothers"/>
				<position x="-450" y="80"/>
				<orientation radians="2.03"/>
				<width metres="38.18"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_F3_05">
				<!-- <unit_type type="Ger_Longbow_Hunters"/> --><unit_type type="Ger_Spear_Brothers"/>
				<position x="-553.68" y="38.26"/>
				<orientation radians="2.52"/>
				<width metres="43.94"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_F3_06">
				<unit_type type="Ger_Berserkers"/>
				<position x="-516.84" y="122.53"/>
				<orientation radians="2.51"/>
				<width metres="31.59"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_F3_07">
				<unit_type type="Ger_Berserkers"/>
				<position x="-587.23" y="77.57"/>
				<orientation radians="2.22"/>
				<width metres="29.85"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_F3_08">
				<unit_type type="Ger_Berserkers"/>
				<position x="-570" y="-70"/>
				<orientation radians="1.6"/>
				<width metres="29.85"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			
			<!-- Attack position F4 -->
			<unit num_soldiers="160" script_name="Ger_F4_01">
				<!-- <unit_type type="Ger_Longbow_Hunters"/> --><unit_type type="Ger_Spear_Brothers"/>
				<position x="-386.71" y="-144.05"/>
				<orientation radians="6.12"/>
				<width metres="34.97"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_F4_02">
				<!-- <unit_type type="Ger_Longbow_Hunters"/> --><unit_type type="Ger_Spear_Brothers"/>
				<position x="-431.64" y="-150.49"/>
				<orientation radians="0.25"/>
				<width metres="35.81"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_F4_03">
				<unit_type type="Ger_Sword_Brothers"/>
				<position x="-428.06" y="-256.03"/>
				<orientation radians="0.05"/>
				<width metres="26.85"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_F4_04">
				<unit_type type="Ger_Spear_Brothers"/>
				<position x="-384" y="-193"/>
				<orientation radians="6.22"/>
				<width metres="21.03"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
		</army>	
		
		<!-- 3rd army -->
		<army hide_results="true">
			<faction>rom_cherusci</faction>

			<deployment_area>
				<position x='-950' y='-950'/>
				<position x='-950' y='950'/>
				<position x='950' y='950'/>
				<position x='950' y='-950'/>
				<orientation radians="0.00"/>
			</deployment_area>
			
			<can_withdraw>true</can_withdraw>
				
			<camera_start_position x="0" y="40" z="500" /> 
			<camera_target_position x="0" y="22.5" z="440" />
						
			<!-- Attack position S1 -->
			<unit num_soldiers="160" script_name="Ger_S1_01">
				<unit_type type="Ger_Spear_Brothers"/>
				<position x="534.91" y="-314.66"/>
				<orientation radians="0.59"/>
				<width metres="23.19"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S1_02">
				<unit_type type="Ger_Sword_Brothers"/>
				<position x="561.03" y="-322.29"/>
				<orientation radians="6.28"/>
				<width metres="22.95"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S1_03">
				<unit_type type="Ger_Sword_Brothers"/>
				<position x="587.60" y="-318.41"/>
				<orientation radians="6.03"/>
				<width metres="22.72"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>		
			<unit num_soldiers="160" script_name="Ger_S1_04">
				<!-- <unit_type type="Ger_Longbow_Hunters"/> --><unit_type type="Ger_Spear_Brothers"/>
				<position x="662.53" y="-377.32"/>
				<orientation radians="5.46"/>
				<width metres="49.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S1_05">
				<!-- <unit_type type="Ger_Longbow_Hunters"/> --><unit_type type="Ger_Spear_Brothers"/>
				<position x="573.07" y="-339.82"/>
				<orientation radians="0.08"/>
				<width metres="40.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S1_06">
				<unit_type type="Ger_Tribesmen"/>
				<position x="526.99" y="-358.49"/>
				<orientation radians="0.10"/>
				<width metres="30.27"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S1_07">
				<unit_type type="Ger_Spear_Brothers"/>
				<position x="566.42" y="-368.75"/>
				<orientation radians="0.26"/>
				<width metres="28.22"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S1_08">
				<unit_type type="Ger_Spear_Brothers"/>
				<position x="636.26" y="-318.87"/>
				<orientation radians="5.40"/>
				<width metres="22.01"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S1_09">
				<unit_type type="Ger_Spear_Brothers"/>
				<position x="509.26" y="-338.46"/>
				<orientation radians="0.39"/>
				<width metres="29.74"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S1_10">
				<unit_type type="Ger_Sword_Masters"/>
				<position x="538.37" y="-341.29"/>
				<orientation radians="0.02"/>
				<width metres="24.06"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
				<general>
					<name></name>
					<star_rating level ="2"/>
                    <!-- <portrait>data/UI/Portraits/custom/cards/Oda_Daimyo.tga</portrait> -->
        		</general>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S1_11">
				<!-- <unit_type type="Ger_Longbow_Hunters"/> --><unit_type type="Ger_Spear_Brothers"/>
				<position x="515.92" y="-322.36"/>
				<orientation radians="0.55"/>
				<width metres="32.33"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>

			<!-- Attack position S2 -->
			<unit num_soldiers="160" script_name="Ger_S2_01">
				<unit_type type="Ger_Tribesmen"/>
				<position x="572.38" y="-171.42"/>
				<orientation radians="4.38"/>
				<width metres="32.24"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S2_02">
				<unit_type type="Ger_Spear_Brothers"/>
				<position x="553" y="-146"/>
				<orientation radians="4.03"/>
				<width metres="31.21"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S2_03">
				<unit_type type="Ger_Sword_Brothers"/>
				<position x="554.3" y="-103.7"/>
				<orientation radians="-2.6"/>
				<width metres="24.6"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S2_04">
				<unit_type type="Ger_Tribesmen"/>
				<position x="529.7" y="-89.2"/>
				<orientation radians="-2.6"/>
				<width metres="27.4"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S2_05">
				<unit_type type="Ger_Tribesmen"/>
				<position x="499.5" y="-78.9"/>
				<orientation radians="-2.9"/>
				<width metres="29.1"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S2_06">
				<unit_type type="Ger_Spear_Levy"/>
				<position x="462.9" y="-75.45"/>
				<orientation radians="3.13"/>
				<width metres="28.7"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>

			<!-- Attack position S3 -->
			<unit num_soldiers="160" script_name="Ger_S3_01">
				<unit_type type="Ger_Spear_Levy"/>
				<position x="252.34" y="22.27"/>
				<orientation radians="3.05"/>
				<width metres="38.54"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S3_02">
				<unit_type type="Ger_Spear_Levy"/>
				<position x="233.00" y="-45.00"/>
				<orientation radians="1.60"/>
				<width metres="22.60"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			
			<unit num_soldiers="160" script_name="Ger_S3_03">
				<unit_type type="Ger_Spear_Brothers"/>
				<position x="280.56" y="-150.66"/>
				<orientation radians="1.11"/>
				<width metres="39.57"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S3_04">
				<unit_type type="Ger_Sword_Brothers"/>
				<position x="307.15" y="-183.84"/>
				<orientation radians="0.70"/>
				<width metres="43.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S3_05">
				<!-- <unit_type type="Ger_Longbow_Hunters"/> --><unit_type type="Ger_Spear_Brothers"/>
				<position x="343.52" y="-207.22"/>
				<orientation radians="0.39"/>
				<width metres="43.40"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S3_16">
				<unit_type type="Ger_Tribesmen"/>
				<position x="217.86" y="54.53"/>
				<orientation radians="2.02"/>
				<width metres="39.30"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S3_17">
				<unit_type type="Ger_Tribesmen"/>
				<position x="217.86" y="54.53"/>
				<orientation radians="2.02"/>
				<width metres="39.30"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_S3_18">
				<!-- <unit_type type="Ger_Youths"/> --><unit_type type="Ger_Spear_Brothers"/>
				<position x="255" y="37.65"/>
				<orientation radians="3.06"/>
				<width metres="36.08"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_S3_19">
				<!-- <unit_type type="Ger_Longbow_Hunters"/> --><unit_type type="Ger_Spear_Brothers"/>
				<position x="313.3" y="24.23"/>
				<orientation radians="-2.01"/>
				<width metres="20.92"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			
			
			<unit num_soldiers="80" script_name="Ger_S3_07">
				<!-- <unit_type type="Ger_Youths"/> --><unit_type type="Ger_Spear_Brothers"/>
				<position x="290" y="-205"/>
				<orientation radians="0.68"/>
				<width metres="50.02"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_S3_08">
				<!-- <unit_type type="Ger_Youths"/> --><unit_type type="Ger_Spear_Brothers"/>
				<position x="220" y="-110"/>
				<orientation radians="1.13"/>
				<width metres="44.89"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_S3_25">
				<!-- <unit_type type="Ger_Longbow_Hunters"/> --><unit_type type="Ger_Spear_Brothers"/>
				<position x="350" y="-225"/>
				<orientation radians="0.6"/>
				<width metres="50.54"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_S3_26">
				<!-- <unit_type type="Ger_Longbow_Hunters"/> --><unit_type type="Ger_Spear_Brothers"/>
				<position x="300" y="-205"/>
				<orientation radians="0.43"/>
				<width metres="21.8"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_S3_27">
				<!-- <unit_type type="Ger_Longbow_Hunters"/> --><unit_type type="Ger_Spear_Brothers"/>
				<position x="230" y="-90"/>
				<orientation radians="0.66"/>
				<width metres="38.44"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_S3_28">
				<!-- <unit_type type="Ger_Longbow_Hunters"/> --><unit_type type="Ger_Spear_Brothers"/>
				<position x="200" y="-130"/>
				<orientation radians="0.66"/>
				<width metres="38.44"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S3_11">
				<unit_type type="Ger_Sword_Brothers"/>
				<position x="153" y="-210"/>
				<orientation radians="0.6"/>
				<width metres="40"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S3_12">
				<unit_type type="Ger_Sword_Brothers"/>
				<position x="206" y="-250"/>
				<orientation radians="0.6"/>
				<width metres="40"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S3_13">
				<unit_type type="Ger_Sword_Brothers"/>
				<position x="378.99" y="103.30"/>
				<orientation radians="4.03"/>
				<width metres="38.71"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S3_14">
				<unit_type type="Ger_Sword_Brothers"/>
				<position x="326.57" y="143.80"/>
				<orientation radians="3.72"/>
				<width metres="45.94"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
		</army>
		
	
		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		
		<rout_position x ="-1300" y = "1300"></rout_position>
	</alliance>
	
	
	
	<fauna>
		<permissible_type>
			<name>deer</name>
			<spawn_probability>1</spawn_probability>
		</permissible_type>
		<permissible_type>
			<name>wolf</name>
			<spawn_probability>1</spawn_probability>
		</permissible_type>
		<permissible_type>
			<name>boar</name>
			<spawn_probability>1</spawn_probability>
		</permissible_type>
		<permissible_type>
			<name>crow</name>
			<spawn_probability>1</spawn_probability>
		</permissible_type>
	</fauna>

		
	<battle_description>
		<battle_script prepare_for_fade_in="true">TF_Start.lua</battle_script>
		<time_of_day>day</time_of_day>
		<season>Autumn</season>
		<precipitation_type>dry</precipitation_type>
		<subculture>sc_rom_germanic</subculture>
		<type>land_normal</type>
		<timeout_winning_alliance_index>1</timeout_winning_alliance_index>
		<cinematic_display_directory>Cutscene/Live/Teutoburg</cinematic_display_directory> 
	</battle_description>

	<sea_surface_name>wind_level_2</sea_surface_name>
		
	<weather>
		<environment_key>terrain/battles/teutoburg_forest/default.environment</environment_key>
		<prevailing_wind x="0" y="9"/>
	</weather>
	
	<battle_map_definition>
		<name>terrain/battles/teutoburg_forest/</name>
	</battle_map_definition>
	<!-- <use_deployment_radar_on_loading_screen>false</use_deployment_radar_on_loading_screen> -->

	<!-- <skip_deployment></skip_deployment> -->
	<skip_results></skip_results>
	<!-- <loading_screen_override>loading_screen_historical</loading_screen_override>-->
	<playable_area dimension = "2000"></playable_area>
</battle>







C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\tf_teutoburg_forest\tf_battle_short.xml
<?xml version="1.0" encoding="UTF-8"?>
<battle xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="battle.xsd">
		
	<alliance id="0">
		<army>
			<faction>rom_rome</faction>
			
			<deployment_area>
				<position x='-950' y='-950'/>
				<position x='-950' y='950'/>
				<position x='950' y='950'/>
				<position x='950' y='-950'/>
				<orientation radians="0.00"/>
			</deployment_area>
			
			<camera_start_position x="420.9" y="73.4" z="-154.9" /> 
			<camera_target_position x="371.7" y="42.2" z="-117.1" />
			
			<unit num_soldiers="40" script_name="Rom_01">
				<unit_type type="Rom_Legatus"/>
				<position x="378.59" y="-118.08"/>
				<orientation radians="-0.83"/>
				<width metres="13.13"/>
				<unit_capabilities>
				</unit_capabilities>
				<general>
					<name>Quinctilius Varus</name>
					<star_rating level ="3"/>
                    <!-- <portrait>data/UI/Portraits/custom/cards/Tokugawa_Daimyo.tga</portrait> -->
        		</general>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="60" script_name="Rom_02">
				<unit_type type="Aux_Cav" />
				<position x="398.5" y="-134.02"/>
				<orientation radians="-1"/>
				<width metres="13.1"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
				
			<!-- First Legion -->		
			<unit num_soldiers="160" script_name="Rom_03">
				<unit_type type="Rom_Eagle_Cohort"/>
				<position x="316.56" y="-68.37"/>
				<orientation radians="-0.91"/>
				<width metres="7.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_04">
				<unit_type type="Rom_Legionary_Cohort"/>
				<position x="336.04" y="-82.95"/>
				<orientation radians="-0.88"/>
				<width metres="7.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_05">
				<unit_type type="Aux_Infantry"/>
				<position x="355.18" y="-98.06"/>
				<orientation radians="-0.84"/>
				<width metres="7.7"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			
			<!-- Second Legion -->
			<unit num_soldiers="160" script_name="Rom_06">
				<unit_type type="Rom_Eagle_Cohort"/>
				<position x="458.34" y="-168.34"/>
				<orientation radians="-1.33"/>
				<width metres="7"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_07">
				<unit_type type="Rom_Legionary_Cohort"/>
				<position x="490.53" y="-175.28"/>
				<orientation radians="-1.08"/>
				<width metres="7"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_08">
				<unit_type type="Aux_Infantry"/>
				<position x="514.19" y="-190.54"/>
				<orientation radians="-0.43"/>
				<width metres="7.79"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			
			<!-- Third Legion -->
			<unit num_soldiers="160" script_name="Rom_09">
				<unit_type type="Rom_Eagle_Cohort"/>
				<position x="530.00" y="-245.60"/>
				<orientation radians="5.57"/>
				<width metres="7.90"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_10">
				<unit_type type="Rom_Legionary_Cohort"/>
				<position x="547.56" y="-264.49"/>
				<orientation radians="5.40"/>
				<width metres="7.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_11">
				<unit_type type="Aux_Infantry"/>
				<position x="568.28" y="-279.54"/>
				<orientation radians="4.98"/>
				<width metres="8.40"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			
			<!-- Arminius for cutscene -->
			<unit num_soldiers="40" script_name="Rom_AR">
				<unit_type type="Ger_Noble_Riders"/>
				<position x="275" y="-40"/>
				<orientation radians="5.3"/>
				<width metres="12.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
		</army>
		
		<army hide_results="true">
			<faction>rom_rome</faction>
			
			<can_withdraw>true</can_withdraw>
			
			<deployment_area>
				<position x='-950' y='-950'/>
				<position x='-950' y='950'/>
				<position x='950' y='950'/>
				<position x='950' y='-950'/>
				<orientation radians="0.00"/>
			</deployment_area>
			
			<camera_start_position x="420.9" y="73.4" z="-154.9" /> 
			<camera_target_position x="371.7" y="42.2" z="-117.1" />
			
			<unit num_soldiers="40" script_name="Rom_Var">
				<unit_type type="Rom_Legatus"/>
				<position x="880" y="-880"/>
				<orientation radians="0"/>
				<width metres="18"/>
				<unit_capabilities>
				</unit_capabilities>
				<general>
					<name>Quinctilius Varus</name>
					<star_rating level ="3"/>
                    <!-- <portrait>data/UI/Portraits/custom/cards/Tokugawa_Daimyo.tga</portrait> -->
        		</general>
				<unit_experience level="2"/>
			</unit>
		</army>

		<victory_condition>
		     <kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		
		<rout_position x ="1300.0" y = "-1300"></rout_position>
	</alliance>	
	
	<alliance id="1">

		<!-- 1st army -->
		<army>
			<faction>rom_cherusci</faction>

			<deployment_area>
				<position x='-950' y='-950'/>
				<position x='-950' y='950'/>
				<position x='950' y='950'/>
				<position x='950' y='-950'/>
				<orientation radians="0.00"/>
			</deployment_area>
			
			<can_withdraw>true</can_withdraw>
				
			<camera_start_position x="0" y="40" z="500" /> 
			<camera_target_position x="0" y="22.5" z="440" />
			
			<unit num_soldiers="60" script_name="Ger_AR_01">
				<unit_type type="Ger_Noble_Riders"/>
				<position x="-299.04" y="165.74"/>
				<orientation radians="1.26"/>
				<width metres="20.78"/>
				<unit_capabilities>
				</unit_capabilities>
				<general>
					<name>Arminius</name>
					<star_rating level ="3"/>
                    <!-- <portrait>data/UI/Portraits/custom/cards/Oda_Daimyo.tga</portrait> -->
        		</general>
				<unit_experience level="4"/>
			</unit>
			<unit num_soldiers="60" script_name="Ger_AR_02">
				<unit_type type="Ger_Noble_Riders"/>
				<position x="-305.93" y="187.46"/>
				<orientation radians="1.26"/>
				<width metres="20.78"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="4"/>
			</unit>
			<unit num_soldiers="60" script_name="Ger_AR_03">
				<unit_type type="Ger_Noble_Riders"/>
				<position x="-312.82" y="209.17"/>
				<orientation radians="1.26"/>
				<width metres="20.78"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="4"/>
			</unit>
			<unit num_soldiers="60" script_name="Ger_AR_04">
				<unit_type type="Ger_Noble_Riders"/>
				<position x="-319.70" y="230.89"/>
				<orientation radians="1.26"/>
				<width metres="20.78"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="4"/>
			</unit>
			<unit num_soldiers="60" script_name="Ger_AR_05">
				<unit_type type="Ger_Noble_Riders"/>
				<position x="-326.59" y="252.60"/>
				<orientation radians="1.26"/>
				<width metres="20.78"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="4"/>
			</unit>
			
			<!-- Attack position M1 -->
			<unit num_soldiers="160" script_name="Ger_M1_01">
				<unit_type type="Ger_Longbow_Hunters"/>
				<position x="-16.55" y="-40.31"/>
				<orientation radians="1.30"/>
				<width metres="39.09"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_M1_02">
				<unit_type type="Ger_Spear_Brothers"/>
				<position x="-40.08" y="-42.22"/>
				<orientation radians="1.22"/>
				<width metres="30.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<!-- <unit num_soldiers="160" script_name="Ger_M1_03">
				<unit_type type="Ger_Spear_Brothers"/>
				<position x="-28.54" y="-73.88"/>
				<orientation radians="1.22"/>
				<width metres="30.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>	-->
			<unit num_soldiers="160" script_name="Ger_M1_04">
				<unit_type type="Ger_Sword_Masters"/>
				<position x="41" y="-190"/>
				<orientation radians="0.19"/>
				<width metres="34.52"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_M1_05">
				<unit_type type="Ger_Spear_Brothers"/>
				<position x="35" y="-207"/>
				<orientation radians="0.15"/>
				<width metres="36.84"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_M1_06">
				<unit_type type="Ger_Sword_Masters"/>
				<position x="35.24" y="-153.53"/>
				<orientation radians="0.49"/>
				<width metres="24.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_M1_07">
				<unit_type type="Ger_Sword_Masters"/>
				<position x="58.76" y="-166.17"/>
				<orientation radians="0.49"/>
				<width metres="24.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_M1_08">
				<unit_type type="Ger_Longbow_Hunters"/>
				<position x="-62.3" y="49.17"/>
				<orientation radians="1.7"/>
				<width metres="28.5"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			
			<!-- Attack position M2 -->
			<unit num_soldiers="60" script_name="Ger_M2_01">
				<unit_type type="Cel_Savage_Dogs"/>
				<position x="181.53" y="208.14"/>
				<orientation radians="3.42"/>
				<width metres="29.23"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="60" script_name="Ger_M2_02">
				<unit_type type="Cel_Savage_Dogs"/>
				<position x="122.49" y="201.96"/>
				<orientation radians="3.14"/>
				<width metres="24.92"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="60" script_name="Ger_M2_03">
				<unit_type type="Cel_Savage_Dogs"/>
				<position x="190.06" y="237.30"/>
				<orientation radians="3.38"/>
				<width metres="25.12"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>		
			<unit num_soldiers="60" script_name="Ger_M2_04">
				<unit_type type="Cel_Savage_Dogs"/>
				<position x="145.14" y="239.07"/>
				<orientation radians="3.13"/>
				<width metres="30.41"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_M2_05">
				<unit_type type="Ger_Spear_Brothers"/>
				<position x="120" y="208"/>
				<orientation radians="2.91"/>
				<width metres="45.40"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_M2_06">
				<unit_type type="Ger_Longbow_Hunters"/>
				<position x="120" y="208"/>
				<orientation radians="2.91"/>
				<width metres="45.40"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			
			
			<!-- Attack position M3 -->
			<unit num_soldiers="160" script_name="Ger_M3_01">
				<unit_type type="Ger_Spear_Brothers"/>
				<position x="-24.10" y="219.97"/>
				<orientation radians="3.24"/>
				<width metres="39.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_M3_02">
				<unit_type type="Ger_Longbow_Hunters"/>
				<position x="18.40" y="215.78"/>
				<orientation radians="3.24"/>
				<width metres="40.30"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_M3_03">
				<unit_type type="Ger_Sword_Brothers"/>
				<position x="41" y="220"/>
				<orientation radians="3.24"/>
				<width metres="39.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_M3_04">
				<unit_type type="Ger_Sword_Brothers"/>
				<position x="-20" y="230"/>
				<orientation radians="3.24"/>
				<width metres="39.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
		</army>

		<!-- 2nd army -->
		<army hide_results="true">
		
			<faction>rom_cherusci</faction>

			<deployment_area>
				<position x='-950' y='-950'/>
				<position x='-950' y='950'/>
				<position x='950' y='950'/>
				<position x='950' y='-950'/>
				<orientation radians="0.00"/>
			</deployment_area>
			
			<can_withdraw>true</can_withdraw>
				
			<camera_start_position x="0" y="40" z="500" /> 
			<camera_target_position x="0" y="22.5" z="440" />
			
			<!-- Attack position F1 -->
			<unit num_soldiers="120" script_name="Ger_F1_01">
				<unit_type type="Ger_Longbow_Hunters"/>
				<position x="-318.9" y="37.47"/>
				<orientation radians="0.79"/>
				<width metres="41.2"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_F1_02">
				<unit_type type="Ger_Spear_Brothers"/>
				<position x="-388.08" y="119.00"/>
				<orientation radians="1.41"/>
				<width metres="23.50"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_F1_03">
				<unit_type type="Ger_Spear_Brothers"/>
				<position x="-383.97" y="93.42"/>
				<orientation radians="1.41"/>
				<width metres="22.30"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_F1_04">
				<unit_type type="Ger_Spear_Brothers"/>
				<position x="-242.84" y="14.03"/>
				<orientation radians="0.09"/>
				<width metres="43.75"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="120" script_name="Ger_F1_05">
				<unit_type type="Ger_Longbow_Hunters"/>
				<position x="-287.75" y="6.12"/>
				<orientation radians="0.79"/>
				<width metres="41.2"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			
			
			<!-- Attack position F2 -->
			<unit num_soldiers="40" script_name="Ger_F2_01">
				<unit_type type="Ger_Berserkers"/>
				<position x="-78.66" y="283.17"/>
				<orientation radians="4.16"/>
				<width metres="9.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_F2_02">
				<unit_type type="Ger_Berserkers"/>
				<position x="-85.06" y="293.44"/>
				<orientation radians="4.16"/>
				<width metres="9.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_F2_03">
				<unit_type type="Ger_Berserkers"/>
				<position x="-91.45" y="303.72"/>
				<orientation radians="4.16"/>
				<width metres="9.10"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_F2_04">
				<unit_type type="Ger_Berserkers"/>
				<position x="-144.03" y="382.49"/>
				<orientation radians="3.93"/>
				<width metres="12.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_F2_05">
				<unit_type type="Ger_Berserkers"/>
				<position x="-154.06" y="392.39"/>
				<orientation radians="3.93"/>
				<width metres="11.50"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_F2_06">
				<unit_type type="Ger_Berserkers"/>
				<position x="-163.65" y="401.88"/>
				<orientation radians="3.93"/>
				<width metres="11.50"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_F2_07">
				<unit_type type="Cel_Savage_Dogs"/>
				<position x="-69.04" y="271.07"/>
				<orientation radians="4.16"/>
				<width metres="17.32"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_F2_08">
				<unit_type type="Ger_Longbow_Hunters"/>
				<position x="-72.13" y="307.30"/>
				<orientation radians="4.15"/>
				<width metres="54.71"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_F2_09">
				<unit_type type="Ger_Longbow_Hunters"/>
				<position x="-144.80" y="402.08"/>
				<orientation radians="3.92"/>
				<width metres="49.96"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_F2_10">
				<unit_type type="Ger_Spear_Levy"/>
				<position x="-101.86" y="321.39"/>
				<orientation radians="4.18"/>
				<width metres="28.40"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_F2_11">
				<unit_type type="Ger_Spear_Brothers"/>
				<position x="-129.66" y="363.59"/>
				<orientation radians="4.11"/>
				<width metres="30.15"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_F2_12">
				<unit_type type="Ger_Spear_Brothers"/>
				<position x="-184.58" y="416.44"/>
				<orientation radians="3.72"/>
				<width metres="32.98"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
					
			<!-- Attack position F3 -->
			<unit num_soldiers="160" script_name="Ger_F3_01">
				<unit_type type="Ger_Sword_Brothers"/>
				<position x="-499.34" y="-111.64"/>
				<orientation radians="0.57"/>
				<width metres="27.62"/>
				<unit_capabilities>
				</unit_capabilities>
				<general>
					<name></name>
					<star_rating level ="1"/>
                    <!-- <portrait>data/UI/Portraits/custom/cards/Oda_Daimyo.tga</portrait> -->
        		</general>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_F3_02">
				<unit_type type="Cel_Savage_Dogs"/>
				<position x="-505.36" y="78.52"/>
				<orientation radians="2.12"/>
				<width metres="35.26"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_F3_03">
				<!-- <unit_type type="Ger_Youths"/> --><unit_type type="Ger_Spear_Levy"/>
				<position x="-420" y="120"/>
				<orientation radians="2.17"/>
				<width metres="36.07"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_F3_04">
				<unit_type type="Ger_Longbow_Hunters"/>
				<position x="-450" y="80"/>
				<orientation radians="2.03"/>
				<width metres="38.18"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_F3_05">
				<unit_type type="Ger_Longbow_Hunters"/>
				<position x="-553.68" y="38.26"/>
				<orientation radians="2.52"/>
				<width metres="43.94"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_F3_06">
				<unit_type type="Ger_Berserkers"/>
				<position x="-516.84" y="122.53"/>
				<orientation radians="2.51"/>
				<width metres="31.59"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_F3_07">
				<unit_type type="Ger_Berserkers"/>
				<position x="-587.23" y="77.57"/>
				<orientation radians="2.22"/>
				<width metres="29.85"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="40" script_name="Ger_F3_08">
				<unit_type type="Ger_Berserkers"/>
				<position x="-570" y="-70"/>
				<orientation radians="1.6"/>
				<width metres="29.85"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			
			<!-- Attack position F4 -->
			<unit num_soldiers="160" script_name="Ger_F4_01">
				<unit_type type="Ger_Longbow_Hunters"/>
				<position x="-386.71" y="-144.05"/>
				<orientation radians="6.12"/>
				<width metres="34.97"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_F4_02">
				<unit_type type="Ger_Longbow_Hunters"/>
				<position x="-431.64" y="-150.49"/>
				<orientation radians="0.25"/>
				<width metres="35.81"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_F4_03">
				<unit_type type="Ger_Sword_Brothers"/>
				<position x="-428.06" y="-256.03"/>
				<orientation radians="0.05"/>
				<width metres="26.85"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_F4_04">
				<unit_type type="Ger_Spear_Brothers"/>
				<position x="-384" y="-193"/>
				<orientation radians="6.22"/>
				<width metres="21.03"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
		</army>	
		
		<!-- 3rd army -->
		<army hide_results="true">
			<faction>rom_cherusci</faction>

			<deployment_area>
				<position x='-950' y='-950'/>
				<position x='-950' y='950'/>
				<position x='950' y='950'/>
				<position x='950' y='-950'/>
				<orientation radians="0.00"/>
			</deployment_area>
			
			<can_withdraw>true</can_withdraw>
				
			<camera_start_position x="0" y="40" z="500" /> 
			<camera_target_position x="0" y="22.5" z="440" />
						
			<!-- Attack position S1 -->
			<unit num_soldiers="160" script_name="Ger_S1_01">
				<unit_type type="Ger_Spear_Brothers"/>
				<position x="534.91" y="-314.66"/>
				<orientation radians="0.59"/>
				<width metres="23.19"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S1_02">
				<unit_type type="Ger_Sword_Brothers"/>
				<position x="561.03" y="-322.29"/>
				<orientation radians="6.28"/>
				<width metres="22.95"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S1_03">
				<unit_type type="Ger_Sword_Brothers"/>
				<position x="587.60" y="-318.41"/>
				<orientation radians="6.03"/>
				<width metres="22.72"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>		
			<unit num_soldiers="160" script_name="Ger_S1_04">
				<unit_type type="Ger_Longbow_Hunters"/>
				<position x="662.53" y="-377.32"/>
				<orientation radians="5.46"/>
				<width metres="49.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S1_05">
				<unit_type type="Ger_Longbow_Hunters"/>
				<position x="573.07" y="-339.82"/>
				<orientation radians="0.08"/>
				<width metres="40.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S1_06">
				<unit_type type="Ger_Tribesmen"/>
				<position x="526.99" y="-358.49"/>
				<orientation radians="0.10"/>
				<width metres="30.27"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S1_07">
				<unit_type type="Ger_Spear_Brothers"/>
				<position x="566.42" y="-368.75"/>
				<orientation radians="0.26"/>
				<width metres="28.22"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S1_08">
				<unit_type type="Ger_Spear_Brothers"/>
				<position x="636.26" y="-318.87"/>
				<orientation radians="5.40"/>
				<width metres="22.01"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S1_09">
				<unit_type type="Ger_Spear_Brothers"/>
				<position x="509.26" y="-338.46"/>
				<orientation radians="0.39"/>
				<width metres="29.74"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S1_10">
				<unit_type type="Ger_Sword_Masters"/>
				<position x="538.37" y="-341.29"/>
				<orientation radians="0.02"/>
				<width metres="24.06"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
				<general>
					<name></name>
					<star_rating level ="2"/>
                    <!-- <portrait>data/UI/Portraits/custom/cards/Oda_Daimyo.tga</portrait> -->
        		</general>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S1_11">
				<unit_type type="Ger_Longbow_Hunters"/>
				<position x="515.92" y="-322.36"/>
				<orientation radians="0.55"/>
				<width metres="32.33"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>

			<!-- Attack position S2 -->
			<unit num_soldiers="160" script_name="Ger_S2_01">
				<unit_type type="Ger_Tribesmen"/>
				<position x="572.38" y="-171.42"/>
				<orientation radians="4.38"/>
				<width metres="32.24"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S2_02">
				<unit_type type="Ger_Spear_Brothers"/>
				<position x="553" y="-146"/>
				<orientation radians="4.03"/>
				<width metres="31.21"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S2_03">
				<unit_type type="Ger_Sword_Brothers"/>
				<position x="554.3" y="-103.7"/>
				<orientation radians="-2.6"/>
				<width metres="24.6"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S2_04">
				<unit_type type="Ger_Tribesmen"/>
				<position x="529.7" y="-89.2"/>
				<orientation radians="-2.6"/>
				<width metres="27.4"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S2_05">
				<unit_type type="Ger_Tribesmen"/>
				<position x="499.5" y="-78.9"/>
				<orientation radians="-2.9"/>
				<width metres="29.1"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S2_06">
				<unit_type type="Ger_Spear_Levy"/>
				<position x="462.9" y="-75.45"/>
				<orientation radians="3.13"/>
				<width metres="28.7"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>

			<!-- Attack position S3 -->
			<unit num_soldiers="160" script_name="Ger_S3_01">
				<unit_type type="Ger_Spear_Levy"/>
				<position x="252.34" y="22.27"/>
				<orientation radians="3.05"/>
				<width metres="38.54"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S3_02">
				<unit_type type="Ger_Spear_Levy"/>
				<position x="233.00" y="-45.00"/>
				<orientation radians="1.60"/>
				<width metres="22.60"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			
			<unit num_soldiers="160" script_name="Ger_S3_03">
				<unit_type type="Ger_Spear_Brothers"/>
				<position x="280.56" y="-150.66"/>
				<orientation radians="1.11"/>
				<width metres="39.57"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S3_04">
				<unit_type type="Ger_Sword_Brothers"/>
				<position x="307.15" y="-183.84"/>
				<orientation radians="0.70"/>
				<width metres="43.70"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S3_05">
				<unit_type type="Ger_Longbow_Hunters"/>
				<position x="343.52" y="-207.22"/>
				<orientation radians="0.39"/>
				<width metres="43.40"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S3_16">
				<unit_type type="Ger_Tribesmen"/>
				<position x="217.86" y="54.53"/>
				<orientation radians="2.02"/>
				<width metres="39.30"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S3_17">
				<unit_type type="Ger_Tribesmen"/>
				<position x="217.86" y="54.53"/>
				<orientation radians="2.02"/>
				<width metres="39.30"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_S3_18">
				<unit_type type="Ger_Youths"/>
				<position x="255" y="37.65"/>
				<orientation radians="3.06"/>
				<width metres="36.08"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_S3_19">
				<unit_type type="Ger_Longbow_Hunters"/>
				<position x="313.3" y="24.23"/>
				<orientation radians="-2.01"/>
				<width metres="20.92"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			
			
			<unit num_soldiers="80" script_name="Ger_S3_07">
				<unit_type type="Ger_Youths"/>
				<position x="290" y="-205"/>
				<orientation radians="0.68"/>
				<width metres="50.02"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_S3_08">
				<unit_type type="Ger_Youths"/>
				<position x="220" y="-110"/>
				<orientation radians="1.13"/>
				<width metres="44.89"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_S3_25">
				<unit_type type="Ger_Longbow_Hunters"/>
				<position x="350" y="-225"/>
				<orientation radians="0.6"/>
				<width metres="50.54"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_S3_26">
				<unit_type type="Ger_Longbow_Hunters"/>
				<position x="300" y="-205"/>
				<orientation radians="0.43"/>
				<width metres="21.8"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_S3_27">
				<unit_type type="Ger_Longbow_Hunters"/>
				<position x="230" y="-90"/>
				<orientation radians="0.66"/>
				<width metres="38.44"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="80" script_name="Ger_S3_28">
				<unit_type type="Ger_Longbow_Hunters"/>
				<position x="200" y="-130"/>
				<orientation radians="0.66"/>
				<width metres="38.44"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S3_11">
				<unit_type type="Ger_Sword_Brothers"/>
				<position x="153" y="-210"/>
				<orientation radians="0.6"/>
				<width metres="40"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S3_12">
				<unit_type type="Ger_Sword_Brothers"/>
				<position x="206" y="-250"/>
				<orientation radians="0.6"/>
				<width metres="40"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S3_13">
				<unit_type type="Ger_Sword_Brothers"/>
				<position x="378.99" y="103.30"/>
				<orientation radians="4.03"/>
				<width metres="38.71"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Ger_S3_14">
				<unit_type type="Ger_Sword_Brothers"/>
				<position x="326.57" y="143.80"/>
				<orientation radians="3.72"/>
				<width metres="45.94"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
		</army>
		
	
		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		
		<rout_position x ="-1300" y = "1300"></rout_position>
	</alliance>
	
	
	
	<fauna>
		<permissible_type>
			<name>deer</name>
			<spawn_probability>1</spawn_probability>
		</permissible_type>
		<permissible_type>
			<name>wolf</name>
			<spawn_probability>1</spawn_probability>
		</permissible_type>
		<permissible_type>
			<name>boar</name>
			<spawn_probability>1</spawn_probability>
		</permissible_type>
		<permissible_type>
			<name>crow</name>
			<spawn_probability>1</spawn_probability>
		</permissible_type>
	</fauna>

		
	<battle_description>
		<battle_script prepare_for_fade_in="true">TF_Start_Short.lua</battle_script>
		<time_of_day>day</time_of_day>
		<season>Autumn</season>
		<precipitation_type>dry</precipitation_type>
		<subculture>sc_rom_germanic</subculture>
		<type>land_normal</type>
		<timeout_winning_alliance_index>1</timeout_winning_alliance_index>
		<cinematic_display_directory>Cutscene/Live/Teutoburg</cinematic_display_directory> 
	</battle_description>

	<sea_surface_name>wind_level_2</sea_surface_name>
		
	<weather>
		<environment_key>terrain/battles/teutoburg_forest/default.environment</environment_key>
		<prevailing_wind x="0" y="9"/>
	</weather>
	
	<battle_map_definition>
		<name>terrain/battles/teutoburg_forest/</name>
	</battle_map_definition>
	<!-- <use_deployment_radar_on_loading_screen>false</use_deployment_radar_on_loading_screen> -->

	<!-- <skip_deployment></skip_deployment> -->
	<skip_results></skip_results>
	<loading_screen_override>loading_screen_historical</loading_screen_override>
	<playable_area dimension = "2000"></playable_area>
</battle>







C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ti_tigranocerta\ti_battle.xml
<?xml version="1.0" encoding="UTF-8"?>
<battle xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="battle.xsd">

	<alliance id="0">
		<army>
			<faction>rom_rome</faction>

			<deployment_area>
				<position x='-900' y='-900'/>
				<position x='-900' y='900'/>
				<position x='900' y='900'/>
				<position x='900' y='-900'/>
				<orientation radians="0.00"/>
			</deployment_area>
			
			<camera_start_position x="0" y="40" z="-500" /> 
			<camera_target_position x="0" y="22.5" z="-440" />
					
			<unit unit_category="cavalry" num_soldiers="160" script_name="Rom_01">
				<unit_type type="Rom_Principes"/>
				<position x="-75" y="-400"/>
				<orientation radians="0"/>
				<width metres="35"/>
				<unit_capabilities>
				</unit_capabilities>
				<general>
					<name>Roman General</name>
					<star_rating level ="5"/>
        		</general>
				<unit_experience level="4"/>
			</unit>
			<unit unit_category="cavalry" num_soldiers="160" script_name="Rom_02">
				<unit_type type="Rom_Hastati" />
				<position x="-25" y="-400"/>
				<orientation radians="0"/>
				<width metres="35"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="160" script_name="Rom_03">
				<unit_type type="Rom_Hastati"/>
				<position x="25" y="-400"/>
				<orientation radians="0"/>
				<width metres="35"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit unit_category="infantry_melee" num_soldiers="160" script_name="Rom_04">
				<unit_type type="Rom_Hastati"/>
				<position x="75" y="-400"/>
				<orientation radians="0"/>
				<width metres="35"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
		</army>
		
		<victory_condition>
		     <kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		
		<rout_position x ="-800.0" y = "-1300"></rout_position>
	</alliance>
	
	<alliance id="1">
		<!-- <non_playable></non_playable> -->	
		<army>
			<faction>rom_carthage</faction>

			<deployment_area>
				<position x='-900' y='-900'/>
				<position x='-900' y='900'/>
				<position x='900' y='900'/>
				<position x='900' y='-900'/>
				<orientation radians="0.00"/>
			</deployment_area>
				
			<camera_start_position x="0" y="40" z="500" /> 
			<camera_target_position x="0" y="22.5" z="440" />
			<campaign_ai_battle_hints aggression="1.0"/>
			
			<unit unit_category="cavalry" num_soldiers="160" script_name="Car_01">
				<unit_type type="Ibe_Scutarii"/>
				<position x="75" y="400"/>
				<orientation radians="3.14"/>
				<width metres="35"/>
				<unit_capabilities>
				</unit_capabilities>
				<general>
					<name>Carthaginian General</name>
					<star_rating level ="5"/>
        		</general>
				<unit_experience level="4"/>
			</unit>
			<unit unit_category="cavalry" num_soldiers="160" script_name="Car_02">
				<unit_type type="Ibe_Sword" />
				<position x="25" y="400"/>
				<orientation radians="3.14"/>
				<width metres="35"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit unit_category="infantry_ranged" num_soldiers="160" script_name="Car_03">
				<unit_type type="Ibe_Sword"/>
				<position x="-25" y="400"/>
				<orientation radians="3.14"/>
				<width metres="35"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit unit_category="infantry_melee" num_soldiers="160" script_name="Car_04">
				<unit_type type="Ibe_Sword"/>
				<position x="-75" y="400"/>
				<orientation radians="3.14"/>
				<width metres="35"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
		</army>

		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		
		<rout_position x ="0" y = "1300"></rout_position>
	</alliance>
	
	<battle_description>
		<battle_script prepare_for_fade_in="true">TI_Start.lua</battle_script>
		<time_of_day>day</time_of_day>
		<season>Summer</season>
		<precipitation_type>dry</precipitation_type>
		<subculture>sc_rom_Carthaginian</subculture>
		<type>land_normal</type>
		<timeout_winning_alliance_index>1</timeout_winning_alliance_index>
	</battle_description>

	<sea_surface_name>wind_level_2</sea_surface_name>
		
	<weather>
		<environment_key>terrain/battles/tigranocerta/tigranocerta.environment</environment_key>
		<prevailing_wind x="0" y="9"/>
	</weather>
	
	<battle_map_definition>
		<name>terrain/battles/tigranocerta/</name>
	</battle_map_definition>
	<!-- <use_deployment_radar_on_loading_screen>false</use_deployment_radar_on_loading_screen> -->

	<!-- <skip_deployment></skip_deployment> -->
	<playable_area dimension = "2000"></playable_area>
</battle>







C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\al_alesia\al_battle.xml
<?xml version="1.0" encoding="UTF-8"?>
<battle xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="battle.xsd">
	

	
	<alliance id="0">
		<!-- <non_playable></non_playable> -->	
		<army>
			<faction>rom_rome</faction>

			<deployment_area>
				<position x='-700' y='200'/>
				<position x='-360' y='200'/>
				<position x='-360' y='-190'/>
				<position x='-700' y='-190'/>
				<orientation radians="0.00"/>
			</deployment_area>
			
			<camera_start_position x="-421.7" y="71.5" z="-26.3"/>
			<camera_target_position x="-482.1" y="23.4" z="-127.4"/>
			<campaign_ai_battle_hints aggression="0.50"/>
			
			<!-- CAVALRY -->
			<unit num_soldiers="40" script_name="Rom_Cav_01">
				<unit_type type="Rom_Legatus"/>
				<position x="-445.62" y="-103.77"/>
				<orientation radians="3.73"/>
				<width metres="20.71"/>
				<unit_capabilities>
					<special_ability>com_loyalty</special_ability>
					<special_ability>com_presence</special_ability>
				</unit_capabilities>
				<general>
					<name>2147343696</name>			<!-- <name>Julius Caesar</name> -->
					<star_rating level ="6"/>
					<uniform>Caesar</uniform>
				</general>
				<unit_experience level="5"/>
			</unit>
			<unit num_soldiers="80" script_name="Rom_Cav_02">
				<unit_type type="Aux_Cav"/>
				<position x="-465.31" y="-90.57"/>
				<orientation radians="3.72"/>
				<width metres="20.71"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="80" script_name="Rom_Cav_03">
				<unit_type type="Aux_Cav"/>
				<position x="-484.25" y="-77.85"/>
				<orientation radians="3.74"/>
				<width metres="18.91"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="80" script_name="Rom_Cav_04">
				<unit_type type="Aux_Cav"/>
				<position x="-502.44" y="-65.66"/>
				<orientation radians="3.71"/>
				<width metres="18.91"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			
			<!-- INFANTRY -->
			<unit num_soldiers="160" script_name="Rom_Inf_01">
				<unit_type type="Rom_Eagle_Cohort"/>
				<position x="-412.66" y="-147.77"/>
				<orientation radians="3.70"/>
				<width metres="17.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="4"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_Inf_02">
				<unit_type type="Rom_Vet_Legionaries"/>
				<position x="-430.35" y="-136.82"/>
				<orientation radians="3.70"/>
				<width metres="17.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_Inf_03">
				<unit_type type="Rom_Legionaries"/>
				<position x="-448.03" y="-125.87"/>
				<orientation radians="3.70"/>
				<width metres="17.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_Inf_04">
				<unit_type type="Rom_Legionaries"/>
				<position x="-465.72" y="-114.93"/>
				<orientation radians="3.70"/>
				<width metres="17.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_Inf_05">
				<unit_type type="Rom_Legionaries"/>
				<position x="-483.41" y="-103.98"/>
				<orientation radians="3.70"/>
				<width metres="17.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_Inf_06">
				<unit_type type="Rom_Legionaries"/>
				<position x="-502.25" y="-91.58"/>
				<orientation radians="3.74"/>
				<width metres="18.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_Inf_07">
				<unit_type type="Rom_Vet_Legionaries"/>
				<position x="-519.42" y="-79.84"/>
				<orientation radians="3.74"/>
				<width metres="18.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_Inf_08">
				<unit_type type="Rom_Vet_Legionaries"/>
				<position x="-536.18" y="-68.38"/>
				<orientation radians="3.74"/>
				<width metres="17.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Rom_Inf_09">
				<unit_type type="Rom_Vet_Legionaries"/>
				<position x="-552.52" y="-57.21"/>
				<orientation radians="3.74"/>
				<width metres="17.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			
			<!-- RANGED INF -->
			<unit num_soldiers="120" script_name="Rom_Rng_01">
				<unit_type type="Aux_Gre_Cretan_Archers"/>
				<position x="-432.00" y="-154.32"/>
				<orientation radians="3.73"/>
				<width metres="45.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="120" script_name="Rom_Rng_02">
				<unit_type type="Aux_Gre_Cretan_Archers"/>
				<position x="-471.81" y="-127.69"/>
				<orientation radians="3.73"/>
				<width metres="44.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="120" script_name="Rom_Rng_03">
				<unit_type type="Aux_Cel_Skirm"/>
				<position x="-510.87" y="-101.55"/>
				<orientation radians="3.73"/>
				<width metres="44.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			<unit num_soldiers="120" script_name="Rom_Rng_04">
				<unit_type type="Aux_Cel_Skirm"/>
				<position x="-549.94" y="-75.42"/>
				<orientation radians="3.73"/>
				<width metres="44.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
			
			<!-- ARTILLERY -->
			<unit num_soldiers="20" script_name="Rom_Art_01">
				<unit_type type="Rom_Ballista"/>
				<position x="-398.15" y="-168.78"/>
				<orientation radians="3.66"/>
				<width metres="15.40"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="20" script_name="Rom_Art_02">
				<unit_type type="Rom_Ballista"/>
				<position x="-579.97" y="-46.15"/>
				<orientation radians="3.78"/>
				<width metres="20.95"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="2"/>
			</unit>
		</army>
		
		<starting_tickets>200</starting_tickets>
		
		<victory_condition>
		     <kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
				
		<rout_position x ="-800.0" y = "-1300"></rout_position>
	</alliance>

	
	<alliance id="1">
		<army>
			<faction>rom_arverni</faction>
					
			<deployment_area>
				<boundary type="standard additive">
					<position x="-900.0" y="-900.0"/>
					<position x="-900.0" y="900.0"/>
					<position x="900.0" y="900.0"/>
					<position x="900.0" y="-900.0"/>
				</boundary>
				<boundary type="standard subtractive">
					<position x="-800" y="300"/>
					<position x="-260" y="300"/>
					<position x="-260" y="-290"/>
					<position x="-800" y="-290"/>
				</boundary>
			</deployment_area>
			
			<camera_start_position x="-749.98" y="46.07" z="415.28"/>
			<camera_target_position x="-714.75" y="26.62" z="358.67"/>
			<campaign_ai_battle_hints aggression="1.00"/>
			
			
			<!-- FIRST WAVE -->
			
			<unit num_soldiers="160" script_name="Arv_First_01">
				<unit_type type="Cel_Spear_Nobles"/>
				<position x="-724.49" y="-507.25"/>
				<orientation radians="0.27"/>
				<width metres="28.40"/>
				<unit_capabilities>
				</unit_capabilities>
				<general>
					<name>2147343836</name>			<!-- <name>Commius</name> -->
					<star_rating level ="3"/>
				</general>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Arv_First_02">
				<unit_type type="Cel_Warriors"/>
				<position x="-694.78" y="-515.36"/>
				<orientation radians="0.27"/>
				<width metres="27.20"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Arv_First_03">
				<unit_type type="Cel_Warriors"/>
				<position x="-665.64" y="-523.31"/>
				<orientation radians="0.27"/>
				<width metres="27.20"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Arv_First_04">
				<unit_type type="Cel_Chosen_Sword"/>
				<position x="-636.51" y="-531.26"/>
				<orientation radians="0.27"/>
				<width metres="27.20"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Arv_First_05">
				<unit_type type="Cel_Warriors"/>
				<position x="-607.37" y="-539.21"/>
				<orientation radians="0.27"/>
				<width metres="27.20"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Arv_First_06">
				<unit_type type="Cel_Chosen_Sword"/>
				<position x="-727.54" y="-522.03"/>
				<orientation radians="0.28"/>
				<width metres="28.40"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Arv_First_07">
				<unit_type type="Cel_Warriors"/>
				<position x="-698.31" y="-530.39"/>
				<orientation radians="0.28"/>
				<width metres="28.40"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Arv_First_08">
				<unit_type type="Cel_Levy_Freemen"/>
				<position x="-669.66" y="-538.58"/>
				<orientation radians="0.28"/>
				<width metres="27.20"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Arv_First_09">
				<unit_type type="Cel_Levy_Freemen"/>
				<position x="-641.59" y="-546.60"/>
				<orientation radians="0.28"/>
				<width metres="27.20"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Arv_First_10">
				<unit_type type="Cel_Levy_Freemen"/>
				<position x="-613.51" y="-554.63"/>
				<orientation radians="0.28"/>
				<width metres="27.20"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Arv_First_11">
				<unit_type type="Cel_Warriors"/>
				<position x="-688.62" y="-549.45"/>
				<orientation radians="0.28"/>
				<width metres="27.2"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Arv_First_12">
				<unit_type type="Cel_Warriors"/>
				<position x="-659.64" y="-557.94"/>
				<orientation radians="0.28"/>
				<width metres="27.2"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="120" script_name="Arv_First_13">
				<unit_type type="Cel_Slingers"/>
				<position x="-737.19" y="-479.49"/>
				<orientation radians="0.23"/>
				<width metres="31.40"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="120" script_name="Arv_First_14">
				<unit_type type="Cel_Gallic_Hunters"/>
				<position x="-704.70" y="-487.25"/>
				<orientation radians="0.23"/>
				<width metres="31.40"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="120" script_name="Arv_First_15">
				<unit_type type="Cel_Slingers"/>
				<position x="-672.22" y="-495.01"/>
				<orientation radians="0.23"/>
				<width metres="31.40"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="120" script_name="Arv_First_16">
				<unit_type type="Cel_Youths"/>
				<position x="-639.73" y="-502.77"/>
				<orientation radians="0.23"/>
				<width metres="31.40"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="120" script_name="Arv_First_17">
				<unit_type type="Cel_Youths"/>
				<position x="-607.25" y="-510.53"/>
				<orientation radians="0.23"/>
				<width metres="31.40"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="120" script_name="Arv_First_18">
				<unit_type type="Cel_Youths"/>
				<position x="-574.76" y="-518.29"/>
				<orientation radians="0.23"/>
				<width metres="31.40"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			
			
			<!-- SECOND WAVE -->
			
			<unit num_soldiers="120" script_name="Arv_Second_01">
				<unit_type type="Cel_Youths"/>
				<position x="-383.39" y="-572.26"/>
				<orientation radians="5.95"/>
				<width metres="47.99"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Arv_Second_02">
				<unit_type type="Cel_Warriors"/>
				<position x="-402.48" y="-600.43"/>
				<orientation radians="5.98"/>
				<width metres="24.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Arv_Second_03">
				<unit_type type="Cel_Warriors"/>
				<position x="-377.49" y="-592.55"/>
				<orientation radians="5.98"/>
				<width metres="23.60"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Arv_Second_04">
				<unit_type type="Cel_Levy_Freemen"/>
				<position x="-353.08" y="-584.86"/>
				<orientation radians="5.98"/>
				<width metres="23.60"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			
			
			
			<!-- THIRD WAVE -->
			
			<unit num_soldiers="160" script_name="Arv_Third_01">
				<unit_type type="Cel_Levy_Freemen"/>
				<position x="-836.47" y="-393.31"/>
				<orientation radians="0.49"/>
				<width metres="24.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="60" script_name="Arv_Third_02">
				<unit_type type="Cel_Light_Horse"/>
				<position x="-813.41" y="-406.51"/>
				<orientation radians="0.49"/>
				<width metres="24.31"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Arv_Third_03">
				<unit_type type="Cel_Warriors"/>
				<position x="-789.51" y="-418.12"/>
				<orientation radians="0.49"/>
				<width metres="24.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
		</army>
		

		<army>
			<faction>rom_arverni</faction>
			<deployment_area>
				<centre x="0.00" y="0.00"/>
				<width metres="1800.00"/>
				<height metres="1800.00"/>
				<orientation radians="0.00"/>
			</deployment_area>
			<camera_start_position x="-749.98" y="46.07" z="415.28"/>
			<camera_target_position x="-714.75" y="26.62" z="358.67"/>
			<campaign_ai_battle_hints aggression="1.00"/>
			
			
			<!-- FOURTH WAVE -->
			
			<unit num_soldiers="160" script_name="Arv_Fourth_01">
				<unit_type type="Cel_Spear_Nobles"/>
				<position x="-728.93" y="642.86"/>
				<orientation radians="2.63"/>
				<width metres="17.60"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Arv_Fourth_02">
				<unit_type type="Cel_Chosen_Sword"/>
				<position x="-745.96" y="633.16"/>
				<orientation radians="2.63"/>
				<width metres="17.60"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Arv_Fourth_03">
				<unit_type type="Cel_Short_Swords"/>
				<position x="-763.00" y="623.46"/>
				<orientation radians="2.63"/>
				<width metres="17.60"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Arv_Fourth_04">
				<unit_type type="Cel_Short_Swords"/>
				<position x="-780.03" y="613.77"/>
				<orientation radians="2.63"/>
				<width metres="17.60"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Arv_Fourth_05">
				<unit_type type="Cel_Short_Swords"/>
				<position x="-796.55" y="604.37"/>
				<orientation radians="2.63"/>
				<width metres="16.40"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Arv_Fourth_06">
				<unit_type type="Cel_Warriors"/>
				<position x="-812.54" y="595.27"/>
				<orientation radians="2.63"/>
				<width metres="16.40"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Arv_Fourth_07">
				<unit_type type="Cel_Warriors"/>
				<position x="-828.53" y="586.17"/>
				<orientation radians="2.63"/>
				<width metres="16.40"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Arv_Fourth_08">
				<unit_type type="Cel_Warriors"/>
				<position x="-844.52" y="577.07"/>
				<orientation radians="2.63"/>
				<width metres="16.40"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Arv_Fourth_09">
				<unit_type type="Cel_Levy_Freemen"/>
				<position x="-860.51" y="567.97"/>
				<orientation radians="2.63"/>
				<width metres="16.40"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Arv_Fourth_10">
				<unit_type type="Cel_Levy_Freemen"/>
				<position x="-876.50" y="558.87"/>
				<orientation radians="2.63"/>
				<width metres="16.40"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="120" script_name="Arv_Fourth_11">
				<unit_type type="Cel_Gallic_Hunters"/>
				<position x="-730.37" y="617.14"/>
				<orientation radians="2.62"/>
				<width metres="33.20"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="120" script_name="Arv_Fourth_12">
				<unit_type type="Cel_Gallic_Hunters"/>
				<position x="-761.78" y="599.16"/>
				<orientation radians="2.62"/>
				<width metres="33.20"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="120" script_name="Arv_Fourth_13">
				<unit_type type="Cel_Slingers"/>
				<position x="-793.20" y="581.18"/>
				<orientation radians="2.62"/>
				<width metres="33.20"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="120" script_name="Arv_Fourth_14">
				<unit_type type="Cel_Youths"/>
				<position x="-824.62" y="563.19"/>
				<orientation radians="2.62"/>
				<width metres="33.20"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="120" script_name="Arv_Fourth_15">
				<unit_type type="Cel_Youths"/>
				<position x="-856.04" y="545.21"/>
				<orientation radians="2.62"/>
				<width metres="33.20"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			
			
			
			<!-- FIFTH WAVE -->
			
			<unit num_soldiers="120" script_name="Arv_Fifth_01">
				<unit_type type="Cel_Gallic_Hunters"/>
				<position x="-104.05" y="208.98"/>
				<orientation radians="4.51"/>
				<width metres="50.60"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="120" script_name="Arv_Fifth_02">
				<unit_type type="Cel_Youths"/>
				<position x="-145.99" y="162.07"/>
				<orientation radians="4.50"/>
				<width metres="12.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Arv_Fifth_03">
				<unit_type type="Cel_Chosen_Sword"/>
				<position x="-149.12" y="176.94"/>
				<orientation radians="4.50"/>
				<width metres="11.60"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Arv_Fifth_04">
				<unit_type type="Cel_Short_Swords"/>
				<position x="-152.13" y="191.23"/>
				<orientation radians="4.50"/>
				<width metres="11.60"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Arv_Fifth_05">
				<unit_type type="Cel_Warriors"/>
				<position x="-155.14" y="205.51"/>
				<orientation radians="4.50"/>
				<width metres="11.60"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Arv_Fifth_06">
				<unit_type type="Cel_Warriors"/>
				<position x="-158.14" y="219.80"/>
				<orientation radians="4.50"/>
				<width metres="11.60"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Arv_Fifth_07">
				<unit_type type="Cel_Warriors"/>
				<position x="-161.15" y="234.09"/>
				<orientation radians="4.50"/>
				<width metres="11.60"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Arv_Fifth_08">
				<unit_type type="Cel_Warriors"/>
				<position x="-116.60" y="171.18"/>
				<orientation radians="4.49"/>
				<width metres="16.40"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Arv_Fifth_09">
				<unit_type type="Cel_Warriors"/>
				<position x="-120.50" y="188.55"/>
				<orientation radians="4.49"/>
				<width metres="15.20"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Arv_Fifth_10">
				<unit_type type="Cel_Levy_Freemen"/>
				<position x="-124.26" y="205.34"/>
				<orientation radians="4.49"/>
				<width metres="15.20"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Arv_Fifth_11">
				<unit_type type="Cel_Levy_Freemen"/>
				<position x="-128.03" y="222.12"/>
				<orientation radians="4.49"/>
				<width metres="15.20"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Arv_Fifth_12">
				<unit_type type="Cel_Levy_Freemen"/>
				<position x="-131.79" y="238.90"/>
				<orientation radians="4.49"/>
				<width metres="15.20"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="40" script_name="Arv_Fifth_13">
				<unit_type type="Cel_Noble_Horse"/>
				<position x="-83.18" y="191.42"/>
				<orientation radians="4.49"/>
				<width metres="15.11"/>
				<unit_capabilities>
				</unit_capabilities>
				<general>
					<name>2147343827</name>			<!-- <name>Vercingetorix</name> -->
					<star_rating level ="4"/>
					<uniform>Vercingetorix</uniform>
				</general>
				<unit_experience level="3"/>
			</unit>
			<unit num_soldiers="160" script_name="Arv_Fifth_14">
				<unit_type type="Cel_Spear_Nobles"/>
				<position x="-91.93" y="215.54"/>
				<orientation radians="4.52"/>
				<width metres="27.26"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			
			
			
			<!-- SIXTH WAVE -->
			
			<unit num_soldiers="80" script_name="Arv_Sixth_01">
				<unit_type type="Cel_Light_Horse"/>
				<position x="-406.59" y="-620.56"/>
				<orientation radians="5.98"/>
				<width metres="24.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="80" script_name="Arv_Sixth_02">
				<unit_type type="Cel_Light_Horse"/>
				<position x="-380.65" y="-612.36"/>
				<orientation radians="5.98"/>
				<width metres="23.60"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="20" script_name="Arv_Sixth_03">
				<unit_type type="Cel_Savage_Dogs"/>
				<position x="-355.29" y="-604.34"/>
				<orientation radians="5.98"/>
				<width metres="23.60"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Arv_Sixth_04">
				<unit_type type="Cel_Levy_Freemen"/>
				<position x="-329.93" y="-596.33"/>
				<orientation radians="5.98"/>
				<width metres="23.60"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
		</army>

		
		<army>
			<faction>rom_arverni</faction>
			<deployment_area>
				<centre x="0.00" y="0.00"/>
				<width metres="1800.00"/>
				<height metres="1800.00"/>
				<orientation radians="0.00"/>
			</deployment_area>
			<camera_start_position x="-749.98" y="46.07" z="415.28"/>
			<camera_target_position x="-714.75" y="26.62" z="358.67"/>
			<campaign_ai_battle_hints aggression="1.00"/>
			
			
			<!-- SEVENTH WAVE -->
			
			<unit num_soldiers="160" script_name="Arv_Seventh_01">
				<unit_type type="Cel_Spear_Nobles"/>
				<position x="-584.59" y="-552.42"/>
				<orientation radians="0.25"/>
				<width metres="23.60"/>
				<unit_capabilities>
				</unit_capabilities>
				<general>
					<name>2147343839</name>			<!-- <name>Vercassivellaunus</name> -->
					<star_rating level ="1"/>
				</general>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Arv_Seventh_02">
				<unit_type type="Cel_Chosen_Sword"/>
				<position x="-559.78" y="-558.72"/>
				<orientation radians="0.25"/>
				<width metres="23.60"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="1"/>
			</unit>
			<unit num_soldiers="160" script_name="Arv_Seventh_03">
				<unit_type type="Cel_Warriors"/>
				<position x="-534.97" y="-565.03"/>
				<orientation radians="0.25"/>
				<width metres="23.60"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="20" script_name="Arv_Seventh_04">
				<unit_type type="Cel_Savage_Dogs"/>
				<position x="-549.54" y="-518.23"/>
				<orientation radians="0.22"/>
				<width metres="19.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Arv_Seventh_05">
				<unit_type type="Cel_Levy_Freemen"/>
				<position x="-510.15" y="-571.33"/>
				<orientation radians="0.25"/>
				<width metres="23.60"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="120" script_name="Arv_Seventh_06">
				<unit_type type="Cel_Youths"/>
				<position x="-564.77" y="-536.60"/>
				<orientation radians="0.24"/>
				<width metres="35.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="120" script_name="Arv_Seventh_07">
				<unit_type type="Cel_Youths"/>
				<position x="-526.92" y="-545.99"/>
				<orientation radians="0.24"/>
				<width metres="35.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
						
			
			
			<!-- EIGHTH WAVE -->
			
			<unit num_soldiers="20" script_name="Arv_Eighth_01">
				<unit_type type="Cel_Savage_Dogs"/>
				<position x="-779.42" y="608.28"/>
				<orientation radians="2.51"/>
				<width metres="25.71"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Arv_Eighth_02">
				<unit_type type="Cel_Chosen_Sword"/>
				<position x="-804.91" y="596.97"/>
				<orientation radians="2.51"/>
				<width metres="20.00"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Arv_Eighth_03">
				<unit_type type="Cel_Levy_Freemen"/>
				<position x="-823.04" y="583.82"/>
				<orientation radians="2.51"/>
				<width metres="18.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Arv_Eighth_04">
				<unit_type type="Cel_Warriors"/>
				<position x="-840.69" y="571.02"/>
				<orientation radians="2.51"/>
				<width metres="18.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Arv_Eighth_05">
				<unit_type type="Cel_Levy_Freemen"/>
				<position x="-858.34" y="558.23"/>
				<orientation radians="2.51"/>
				<width metres="18.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="160" script_name="Arv_Eighth_06">
				<unit_type type="Cel_Levy_Freemen"/>
				<position x="-875.99" y="545.43"/>
				<orientation radians="2.51"/>
				<width metres="18.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="120" script_name="Arv_Eighth_07">
				<unit_type type="Cel_Youths"/>
				<position x="-807.23" y="575.78"/>
				<orientation radians="2.55"/>
				<width metres="45.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
			<unit num_soldiers="120" script_name="Arv_Eighth_08">
				<unit_type type="Cel_Youths"/>
				<position x="-846.80" y="548.95"/>
				<orientation radians="2.55"/>
				<width metres="45.80"/>
				<unit_capabilities>
				</unit_capabilities>
				<unit_experience level="0"/>
			</unit>
		</army>
		
		
		<victory_condition>
			<kill_or_rout_enemy></kill_or_rout_enemy>
		</victory_condition>
		<victory_condition>
			<capture_settlement></capture_settlement>
		</victory_condition>
		
		<rout_position x ="-1200" y = "-1200"></rout_position>
	</alliance>
	
	
	<battle_description>
		<battle_script prepare_for_fade_in="true">AL_Start.lua</battle_script>
		<time_of_day>day</time_of_day>
		<season>Summer</season>
		<precipitation_type>dry</precipitation_type>
		<subculture>sc_rom_gaul</subculture>
		<type>land_normal</type>
		<timeout_winning_alliance_index>0</timeout_winning_alliance_index>
	</battle_description>

	<sea_surface_name>wind_level_2</sea_surface_name>
		
	<weather>
		<environment_key>terrain/battles/alesia/alesia.environment</environment_key>
		<prevailing_wind x="0" y="3"/>
	</weather>
	
	<battle_map_definition>
		<name>terrain/battles/alesia/</name>
	</battle_map_definition>
	<!-- <use_deployment_radar_on_loading_screen>false</use_deployment_radar_on_loading_screen> -->

	<!-- <skip_deployment></skip_deployment> -->
	<playable_area dimension = "1940"></playable_area>
</battle>
 






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ba_battle_of_bastards\ba_cutscenes.lua

function Play_Cutscene_Intro()

	bm:out("Play_Cutscene_Intro() called");

	POS_Cam_Cutscene_Intro_Final = v(162.39752197266, 100.83078765869, -350.0671081543);
	Targ_Cam_Cutscene_Intro_Final = v(162.69026184082, 50.807270050049, -210.04867553711);

	local Cutscene_Intro = cutscene:new(
		"Cutscene_Intro", 							-- unique string name for cutscene
		ga_franks_01:get_unitcontroller(),			-- unitcontroller over player's army
		112000,										-- duration of cutscene in ms
		function() Start_Battle() end 				-- what to call when cutscene is finished
	);

	

	Cutscene_Intro:set_skippable(true, function() Skip_Cutscene_Intro() end);
	Cutscene_Intro:set_skip_camera(POS_Cam_Cutscene_Intro_Final, Targ_Cam_Cutscene_Intro_Final);
	--Cutscene_Intro:set_debug();



	cam = Cutscene_Intro:camera();
	local subtitles = Cutscene_Intro:subtitles();
	subtitles:set_alignment("bottom_centre");
	subtitles:clear();
	
	
	
	Cutscene_Intro:action(function() cam:fade(false, 0.5) end, 0);	
	
	Cutscene_Intro:action(function() ga_franks_01:teleport_to_start_location_offset(0, -50); end, 0);	
	Cutscene_Intro:action(function() ga_soissons_01:teleport_to_start_location_offset(0, -50); end, 0);	
	Cutscene_Intro:action(function() ga_soissons_01:set_visible_to_all(true); end, 0);	
	
	Cutscene_Intro:action(function() ga_franks_01:goto_start_location(false); end, 0);
	Cutscene_Intro:action(function() ga_soissons_01:goto_start_location(false); end, 0);

	-- Created by DETrooper

	Cutscene_Intro:action(function() cam:move_to(v(382.98458862305, 76.802185058594, 217.19041442871), v(486.54763793945, 96.300788879395, 582.60491943359), 0, true, 45) end, 0);
	Cutscene_Intro:action(function() cam:move_to(v(382.98458862305, 72.802185058594, 185.19041442871), v(486.54763793945, 96.300788879395, 582.60491943359), 22, true, 43) end, 0);

	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.BoB.Intro_01") end, 3000);
	Cutscene_Intro:action(function() subtitles:clear() end, 12000);
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.BoB.Intro_02") end, 14000);
	Cutscene_Intro:action(function() subtitles:clear() end, 20000);
	
	Cutscene_Intro:action(function() cam:move_to(v(150.32066345215, 52.721851348877, 39.587230682373), v(167.30659484863, 7.4344825744629, 416.80572509766), 0, true, 45) end, 22000);
	Cutscene_Intro:action(function() cam:move_to(v(150.32066345215, 52.721851348877, 23.587230682373), v(167.30659484863, 7.4344825744629, 416.80572509766), 20, true, 43) end, 22000);

	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.BoB.Intro_03") end, 23000);
	Cutscene_Intro:action(function() subtitles:clear() end, 31000);
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.BoB.Intro_04") end, 33000);
	Cutscene_Intro:action(function() subtitles:clear() end, 40000);

	Cutscene_Intro:action(function() cam:move_to(v(217.93951416016, 48.229484558105, 210.2826385498), v(-539.14801025391, -163.77908325195, 1082.095703125), 0, true, 45) end, 42000);
	Cutscene_Intro:action(function() cam:move_to(v(217.93951416016, 48.229484558105, 209.2826385498), v(-525.14801025391, -163.77908325195, 1082.095703125), 10, true, 43) end, 42000);

	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.BoB.Intro_05") end, 43000);
	Cutscene_Intro:action(function() subtitles:clear() end, 51000);

	Cutscene_Intro:action(function() cam:move_to(v(52.211483001709, 44.08922958374, 134.27648925781), v(929.30895996094, -140.13891601563, 887.67352294922), 0, true, 45) end, 52000);
	Cutscene_Intro:action(function() cam:move_to(v(52.211483001709, 44.08922958374, 134.27648925781), v(929.30895996094, -140.13891601563, 887.67352294922), 10, true, 43) end, 52000);

	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.BoB.Intro_06") end, 53000);
	Cutscene_Intro:action(function() subtitles:clear() end, 60000);


	Cutscene_Intro:action(function() cam:move_to(v(273.81878662109, 45.653736114502, -110.65602874756), v(204.34918212891, 8.2237968444824, -140.80180358887), 0, true, 45) end, 61000);
	Cutscene_Intro:action(function() cam:move_to(v(284.34008789063, 40.94030380249, -147.17102050781), v(185.41609191895, 8.924028396606, -115.87228393555), 15, true, 43) end, 61000);

	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.BoB.Intro_07") end, 62000);
	Cutscene_Intro:action(function() subtitles:clear() end, 73000);

	Cutscene_Intro:action(function() cam:move_to(v(216.01831054688, 48.146617889404, -163.20291137695), v(195.82769775391, 20.109575271606, -25.434608459473), 0, true, 45) end, 74000);
	Cutscene_Intro:action(function() cam:move_to(v(215.51831054688, 48.146617889404, -145.20291137695), v(195.82769775391, 20.109575271606, 180.434608459473), 21, true, 43) end, 74000);

	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.BoB.Intro_08") end, 75000);
	Cutscene_Intro:action(function() subtitles:clear() end, 84000);
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.BoB.Intro_09") end, 86000);
	Cutscene_Intro:action(function() subtitles:clear() end, 94000);

	Cutscene_Intro:action(function() cam:move_to(v(160.5745300293, 49.884605407715, 147.38269042969), v(160.16046142578, 4.5972480773926, 524.6015625), 0, true, 45) end, 95000);
	Cutscene_Intro:action(function() cam:move_to(v(160.5745300293, 47.844605407715, 190.38269042969), v(160.16046142578, 4.5972480773926, 524.6015625), 14, true, 43) end, 95000);

	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.BoB.Intro_10") end, 99000);
	Cutscene_Intro:action(function() subtitles:clear() end, 106000);
	
	Cutscene_Intro:action(function() cam:move_to(POS_Cam_Cutscene_Intro_Final, Targ_Cam_Cutscene_Intro_Final, 3, false, 0) end, 109000);

	Cutscene_Intro:start();
end;


function Skip_Cutscene_Intro()
	
	cam:fade(true, 0);
	
	ga_franks_01:teleport_to_start_location_offset();
	ga_soissons_01:teleport_to_start_location_offset();
	ga_soissons_01:set_visible_to_all(false);
		
	bm:callback(function() cam:fade(false, 0.5) end, 1000);
end;

-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------
--
--	Vale Reinforcement Cutscene
--
-----------------------------------------------------------------------------------
-----------------------------------------------------------------------------------

function Play_Vale_Reinforcement_Cutscene()
	Cutscene_Vale_Reinforcement = cutscene:new(
		"Cutscene_Vale_Reinforcement", 							-- unique string name for cutscene
		ga_franks_01:get_unitcontroller(),									-- unitcontroller over player's army
		8500														-- duration of cutscene in ms
	);
	local subtitles = Cutscene_Vale_Reinforcement:subtitles();
	subtitles:set_alignment("bottom_centre");
	subtitles:clear();

	Cutscene_Vale_Reinforcement:set_skippable(true, function() Skip_Cutscene_Vale_Reinforcement() end);
	Cutscene_Vale_Reinforcement:action(function() cam:fade(false, 0.5) end, 0);
	
	Cutscene_Vale_Reinforcement:action(function() cam:move_to(v(-331.37811279297, 46.378787994385, -25.946153640747), v(-246.62127685547, 31.422008514404, -114.31401062012), 0, true, 42) end, 0);
	Cutscene_Vale_Reinforcement:action(function() cam:move_to(v(-262.79183959961, 55.191692352295, -28.704071044922), v(-263.19848632813, 20.841014862061, -147.1787109375), 16,  true, 45) end, 0);

	Cutscene_Vale_Reinforcement:action(function() cam:move_to(v(162.39752197266, 100.83078765869, -350.0671081543), v(162.69026184082, 50.807270050049, -210.04867553711), 0,  true, 0) end, 8000);
			
	Cutscene_Vale_Reinforcement:start();
end;


function Skip_Cutscene_Vale_Reinforcement()
	cam:fade(true, 0);
		
	bm:callback(function() cam:fade(false, 0.5) end, 1000);
end;







C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ba_battle_of_bastards\ba_start.lua

system.ClearRequiredFiles();
require "lua_scripts.Battle_Script_Header";

-- declare battlemanager object
bm = battle_manager:new(empire_battle:new());

-- get battle name from folder, and print header
battle_name, battle_shortform = get_folder_name_and_shortform();

-- load in other script files associated with this battle
package.path = package.path .. ";data/Script/" .. battle_name .. "/?.lua";

require (battle_shortform .. "_Cutscenes");

gb = generated_battle:new(
	true,                                      -- screen starts black. Should match the prepare_for_fade_in flag in the battle xml
	true,                                      -- prevents deployment. Set to false if you want the player to be able to deploy.
	function() Play_Cutscene_Intro() end,      -- intro cutscene callback. Supply a function that runs your intro cutscene here
	false                                      -- debug mode
);

Vale_Reinforcements_Countdown = 270000

ga_franks_01 = gb:get_army(1, 1);
ga_vale = gb:get_army(1, 2);
ga_soissons_01 = gb:get_army(2, 1);

-- fade camera in from black on battle start
gb:fade_in_on_message("cutscene_ended", 0.5);


-- advice on battle start
gb:advice_on_message("cutscene_ended", "SK.HB.BA.001", 5000);


-- make army attack on battle start
ga_soissons_01:attack_on_message("cutscene_ended");


-- advice on player's general dying
ga_franks_01:message_on_commander_death("player_general_dies");
gb:advice_on_message("player_general_dies", "SK.HB.BA.002", 2500);


-- advice on enemy general dying
ga_soissons_01:message_on_commander_death("enemy_general_dies");
gb:advice_on_message("enemy_general_dies", "SK.HB.BA.003", 2500);


-- advice on player winning
ga_franks_01:message_on_victory("player_wins");
gb:advice_on_message("player_wins", "SK.HB.BA.004");


-- advice on player losing
ga_franks_01:message_on_defeat("player_loses");
gb:advice_on_message("player_loses", "SK.HB.BA.005");

Alliances = bm:alliances();

Alliance_Stark = Alliances:item(1);
Alliance_Bolton = Alliances:item(2);
Stark = Alliance_Stark:armies():item(1);
Vale = Alliance_Stark:armies():item(2);
Bolton = Alliance_Bolton:armies():item(1);

BOOL_Vale_Triggered = false;

SUnit_Vale_01 = script_unit:new(Vale, "valereinforcements1");
SUnit_Vale_02 = script_unit:new(Vale, "valereinforcements2");
SUnit_Vale_03 = script_unit:new(Vale, "valereinforcements3");
SUnit_Vale_04 = script_unit:new(Vale, "valereinforcements4");
SUnit_Vale_05 = script_unit:new(Vale, "valereinforcements5");
SUnit_Vale_06 = script_unit:new(Vale, "valereinforcements6");
SUnit_Vale_07 = script_unit:new(Vale, "valegeneral");

SUnits_Vale_Cav = {
	SUnit_Vale_01,
	SUnit_Vale_02,
	SUnit_Vale_03,
	SUnit_Vale_04,
	SUnit_Vale_05,
	SUnit_Vale_06,
	SUnit_Vale_07
};

SUnit_Stark_01 = script_unit:new(Stark, "stark1");
SUnit_Stark_03 = script_unit:new(Stark, "stark3");
SUnit_Stark_04 = script_unit:new(Stark, "stark4");
SUnit_Stark_05 = script_unit:new(Stark, "stark5");
SUnit_Stark_06 = script_unit:new(Stark, "stark6");
SUnit_Stark_07 = script_unit:new(Stark, "stark7");
SUnit_Stark_08 = script_unit:new(Stark, "stark8");
SUnit_Stark_09 = script_unit:new(Stark, "stark9");
SUnit_Stark_10 = script_unit:new(Stark, "stark10");
SUnit_Stark_11 = script_unit:new(Stark, "stark11");
SUnit_Stark_12 = script_unit:new(Stark, "stark12");
SUnit_Stark_03 = script_unit:new(Stark, "stark13");

SUnits_Stark = {
	SUnit_Stark_01,
	SUnit_Stark_03,
	SUnit_Stark_04,
	SUnit_Stark_05,
	SUnit_Stark_06,
	SUnit_Stark_07,
	SUnit_Stark_08,
	SUnit_Stark_09,
	SUnit_Stark_10,
	SUnit_Stark_11,
	SUnit_Stark_12,
	SUnit_Stark_13
};

SUnit_Bolt_01 = script_unit:new(Bolton, "bolt1");
SUnit_Bolt_02 = script_unit:new(Bolton, "bolt2");
SUnit_Bolt_03 = script_unit:new(Bolton, "bolt3");
SUnit_Bolt_04 = script_unit:new(Bolton, "bolt4");
SUnit_Bolt_05 = script_unit:new(Bolton, "bolt5");
SUnit_Bolt_06 = script_unit:new(Bolton, "bolt6");
SUnit_Bolt_07 = script_unit:new(Bolton, "bolt7");
SUnit_Bolt_08 = script_unit:new(Bolton, "bolt8");
SUnit_Bolt_09 = script_unit:new(Bolton, "bolt9");
SUnit_Bolt_10 = script_unit:new(Bolton, "bolt10");
SUnit_Bolt_11 = script_unit:new(Bolton, "bolt11");
SUnit_Bolt_12 = script_unit:new(Bolton, "bolt12");
SUnit_Bolt_13 = script_unit:new(Bolton, "bolt13");
SUnit_Bolt_14 = script_unit:new(Bolton, "bolt14");
SUnit_Bolt_15 = script_unit:new(Bolton, "bolt15");
SUnit_Bolt_16 = script_unit:new(Bolton, "bolt16");
SUnit_Bolt_17 = script_unit:new(Bolton, "bolt17");
SUnit_Bolt_18 = script_unit:new(Bolton, "bolt18");
SUnit_Bolt_19 = script_unit:new(Bolton, "bolt19");
SUnit_Bolt_20 = script_unit:new(Bolton, "bolt20");

SUnits_Bolton = {
	SUnit_Bolt_01,
	SUnit_Bolt_02,
	SUnit_Bolt_03,
	SUnit_Bolt_04,
	SUnit_Bolt_05,
	SUnit_Bolt_06,
	SUnit_Bolt_07,
	SUnit_Bolt_08,
	SUnit_Bolt_09,
	SUnit_Bolt_10,
	SUnit_Bolt_11,
	SUnit_Bolt_12,
	SUnit_Bolt_13,
	SUnit_Bolt_14,
	SUnit_Bolt_15,
	SUnit_Bolt_16,
	SUnit_Bolt_17,
	SUnit_Bolt_18,
	SUnit_Bolt_19,
	SUnit_Bolt_20
};

enable(SUnits_Vale_Cav, false);

function Start_Battle()
	bm:callback(
		function()
			Trigger_Vale_Reinforcements()
		end,
	Vale_Reinforcements_Countdown
	);
end;

function Trigger_Vale_Reinforcements()
	if BOOL_Vale_Triggered then
		return;
	end;
	
	BOOL_Vale_Triggered = true;
	
	cam:fade(true, 0.5);

	bm:callback(function() Spawn_Vale_Reinforcements() end, 500);
end;


function Spawn_Vale_Reinforcements()
	enable(SUnits_Vale_Cav, true, true);

	SAI_Vale_Main = script_ai_planner:new("SAI_Vale_Main", SUnits_Vale_Cav);
	SAI_Vale_Main:defend_position(v(940, 691), 50);

	Play_Vale_Reinforcement_Cutscene();

	bm:callback(
		function() MakeValeAttack() end,					-- function block to call
		25000,													-- time in ms to wait before calling it
		"ValeReinforcements"												-- optional string name for the callback. Doesn't need to be unique. Used to cancel the callback
	);

end;

function MakeValeAttack()
	SAI_Vale_Main:attack_force(SUnits_Bolton);
end;






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\fi_fist_of_first_men\fi_cutscenes.lua

function Play_Cutscene_Intro()

	local Cutscene_Intro = cutscene:new(
		"Cutscene_Intro", 							-- unique string name for cutscene
		ga_franks_01:get_unitcontroller(),			-- unitcontroller over player's army
		24000										-- duration of cutscene in ms
	);

	

	Cutscene_Intro:set_skippable(true, function() Skip_Cutscene_Intro() end);
	Cutscene_Intro:set_skip_camera(POS_Cam_Cutscene_Intro_Final, Targ_Cam_Cutscene_Intro_Final);
	--Cutscene_Intro:set_debug();



	cam = Cutscene_Intro:camera();
	local subtitles = Cutscene_Intro:subtitles();
	subtitles:set_alignment("bottom_centre");
	subtitles:clear();
	
	
	
	Cutscene_Intro:action(function() cam:fade(false, 0.5) end, 0);	
	
	Cutscene_Intro:action(function() ga_franks_01:teleport_to_start_location_offset(0, -50); end, 0);	
	Cutscene_Intro:action(function() ga_soissons_01:teleport_to_start_location_offset(0, -50); end, 0);	
	Cutscene_Intro:action(function() ga_soissons_01:set_visible_to_all(true); end, 0);	
	
	Cutscene_Intro:action(function() ga_franks_01:goto_start_location(false); end, 0);
	Cutscene_Intro:action(function() ga_soissons_01:goto_start_location(false); end, 0);

	-- Created by DETrooper

	Cutscene_Intro:action(function() cam:move_to(v(15.917105674744, 520.60919189453, -94.257316589355), v(-61.842399597168, 456.75811767578, 1077.9689941406), 0, true, 45) end, 0);
	Cutscene_Intro:action(function() cam:move_to(v(-15.671255111694, 633.00567626953, 367.88940429688), v(-93.430648803711, 569.15460205078, 1540.1159667969), 22, true, 43) end, 0);

	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.Fist.Intro_01") end, 4000);
	Cutscene_Intro:action(function() subtitles:clear() end, 12000);
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.Fist.Intro_02") end, 16000);
	Cutscene_Intro:action(function() subtitles:clear() end, 24000);
	
	Cutscene_Intro:action(function() cam:move_to(v(-23.77074432373, 714.05047607422, 633.66857910156), v(8.7356414794922, 38.210571289063, -328.83978271484), 0, true, 45) end, 24000);
	Cutscene_Intro:action(function() cam:move_to(v(-18.212579727173, 662.19512939453, 469.09265136719), v(14.293802261353, -13.644592285156, -493.41564941406), 20, true, 43) end, 24000);

	Cutscene_Intro:start();
end;


function Skip_Cutscene_Intro()
	
	cam:fade(true, 0);
	
	ga_franks_01:teleport_to_start_location_offset();
	ga_soissons_01:teleport_to_start_location_offset();
	ga_soissons_01:set_visible_to_all(false);
		
	bm:callback(function() cam:fade(false, 0.5) end, 1000);
end;







C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\fi_fist_of_first_men\fi_start.lua

system.ClearRequiredFiles();
require "lua_scripts.Battle_Script_Header";

-- declare battlemanager object
bm = battle_manager:new(empire_battle:new());

-- get battle name from folder, and print header
battle_name, battle_shortform = get_folder_name_and_shortform();

-- load in other script files associated with this battle
package.path = package.path .. ";data/Script/" .. battle_name .. "/?.lua";

require (battle_shortform .. "_Cutscenes");

gb = generated_battle:new(
	true,                                      -- screen starts black. Should match the prepare_for_fade_in flag in the battle xml
	true,                                      -- prevents deployment. Set to false if you want the player to be able to deploy.
	function() Play_Cutscene_Intro() end,      -- intro cutscene callback. Supply a function that runs your intro cutscene here
	false                                      -- debug mode
);

ga_franks_01 = gb:get_army(1, 1);

ga_soissons_01 = gb:get_army(2, 1);


-- fade camera in from black on battle start
gb:fade_in_on_message("cutscene_ended", 0.5);


-- advice on battle start
gb:advice_on_message("cutscene_ended", "SK.HB.FI.001", 5000);


-- make army attack on battle start
ga_soissons_01:attack_on_message("cutscene_ended");


-- advice on player's general dying
ga_franks_01:message_on_commander_death("player_general_dies");
gb:advice_on_message("player_general_dies", "SK.HB.FI.002", 2500);


-- advice on enemy general dying
ga_soissons_01:message_on_commander_death("enemy_general_dies");
gb:advice_on_message("enemy_general_dies", "SK.HB.FI.003", 2500);


-- advice on player winning
ga_franks_01:message_on_victory("player_wins");
gb:advice_on_message("player_wins", "SK.HB.FI.004");


-- advice on player losing
ga_franks_01:message_on_defeat("player_loses");
gb:advice_on_message("player_loses", "SK.HB.FI.005");






C:\Users\User\Desktop\All HBs\Rome 2 and Attila HB Scripts\ad_ad_decimum\ad_cutscenes.lua

function Play_Cutscene_Intro()

	bm:out("Play_Cutscene_Intro() called");

	POS_Cam_Cutscene_Intro_Final = v(0, 142.7, -354.6);
	Targ_Cam_Cutscene_Intro_Final = v(0, 108.1, -289.8);

	
	
	SFX_Att_HB_AD_Intro_02 = new_sfx("Play_Att_HB_AD_Intro_02_1");
	SFX_Att_HB_AD_Intro_03 = new_sfx("Play_Att_HB_AD_Intro_03_1");
	SFX_Att_HB_AD_Intro_04 = new_sfx("Play_Att_HB_AD_Intro_04_1");


	
	local Cutscene_Intro = cutscene:new(
		"Cutscene_Intro", 							-- unique string name for cutscene
		ga_eastrome_01:get_unitcontroller(),		-- unitcontroller over player's army
		30000 										-- duration of cutscene in ms
	);

	

	Cutscene_Intro:set_skippable(true, function() Skip_Cutscene_Intro() end);
	Cutscene_Intro:set_skip_camera(POS_Cam_Cutscene_Intro_Final, Targ_Cam_Cutscene_Intro_Final);
	--Cutscene_Intro:set_debug();



	cam = Cutscene_Intro:camera();
	local subtitles = Cutscene_Intro:subtitles();
	subtitles:set_alignment("bottom_centre");
	subtitles:clear();
	
	
	
	Cutscene_Intro:action(function() cam:fade(false, 0.5) end, 0);	
	
	Cutscene_Intro:action(function() ga_eastrome_01:teleport_to_start_location_offset(0, -50); end, 0);	
	Cutscene_Intro:action(function() ga_vandals_01:teleport_to_start_location_offset(0, -50); end, 0);	
	Cutscene_Intro:action(function() ga_vandals_01:set_visible_to_all(true); end, 0);	
	
	Cutscene_Intro:action(function() ga_eastrome_01:goto_start_location(false); end, 0);
	Cutscene_Intro:action(function() ga_vandals_01:goto_start_location(false); end, 0);
	
	
	
	Cutscene_Intro:action(function() cam:move_to(v(272.1, 61.7, 119.3), v(258.8, 57.8, 165.2), 0, true, 35) end, 0);
	Cutscene_Intro:action(function() cam:move_to(v(272.1, 61.7, 119.3), v(258.8, 57.8, 165.2), 7, true, 33) end, 0);
	
	-- 13 September, AD533
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.AD.Intro_01") end, 3000);
	
	

	Cutscene_Intro:action(function() subtitles:clear() end, 6000);	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 6000);	
	
	Cutscene_Intro:action(function() cam:move_to(v(-0.9, 88.5, -227.0), v(5.5, 82.7, -274.3), 0, true, 35) end, 6000);
	Cutscene_Intro:action(function() cam:move_to(v(-0.9, 88.5, -227.0), v(5.5, 82.7, -274.3), 7, true, 33) end, 6000);
	
	-- General Belisarius of the Eastern Roman Empire has invaded North Africa in the hope of reconquering the province.
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.AD.Intro_02") end, 7000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Att_HB_AD_Intro_02) end, 7000);
	
	Cutscene_Intro:action(function() cam:move_to(v(-37.6, 97.7, -289.5), v(5.1, 86.4, -270.5), 0, true, 35) end, 10000);
	Cutscene_Intro:action(function() cam:move_to(v(-37.6, 97.7, -289.5), v(5.1, 86.4, -270.5), 7, true, 33) end, 10000);
	
	

	Cutscene_Intro:action(function() subtitles:clear() end, 15000);	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 15000);
	
	Cutscene_Intro:action(function() cam:move_to(v(-10.8, 76.1, 214.5), v(24.6, 65.4, 245.2), 0, true, 35) end, 15000);
	Cutscene_Intro:action(function() cam:move_to(v(-8.9, 76.1, 210.0), v(18.2, 65.9, 248.4), 12, true, 33) end, 15000);
	
	-- Warned of an imminent attack, King Gelimer of the Vandal Kingdom has set up his forces at Ad Decimum.
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.AD.Intro_03") end, 16000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Att_HB_AD_Intro_03) end, 16000);
	
	Cutscene_Intro:action(function() cam:move_to(v(-20.9, 80.8, 253.5), v(1.2, 66.6, 293.8), 0, true, 35) end, 20000);
	Cutscene_Intro:action(function() cam:move_to(v(-20.9, 80.8, 253.5), v(1.2, 66.6, 293.8), 7, true, 33) end, 20000);
	

	Cutscene_Intro:action(function() subtitles:clear() end, 24000);	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 24000);
	
	Cutscene_Intro:action(function() ga_eastrome_01:teleport_to_start_location_offset(); end, 24000);	
	Cutscene_Intro:action(function() ga_vandals_01:teleport_to_start_location_offset(); end, 24000);
	Cutscene_Intro:action(function() ga_vandals_01:set_visible_to_all(false); end, 24000);
		
	Cutscene_Intro:action(function() cam:move_to(v(-73.9, 119.2, -172.2), v(-16.7, 96.2, -212.3), 0, true, 0) end, 24000);	
	Cutscene_Intro:action(function() cam:move_to(POS_Cam_Cutscene_Intro_Final, Targ_Cam_Cutscene_Intro_Final, 2, false, 0) end, 28000);
	
	-- [PH] The two forces now clash on the Mediterranean coast.
	Cutscene_Intro:action(function() subtitles:set_text("Att.HB.AD.Intro_04") end, 26000);
	Cutscene_Intro:action(function() Cutscene_Intro:play_sound(SFX_Att_HB_AD_Intro_04) end, 26000);
	
	

	Cutscene_Intro:action(function() subtitles:clear() end, 30000);	
	Cutscene_Intro:action(function() Cutscene_Intro:wait_for_vo() end, 30000);
	
	
	
	Cutscene_Intro:start();
end;


function Skip_Cutscene_Intro()
	
	cam:fade(true, 0);
	
	ga_eastrome_01:teleport_to_start_location_offset();
	ga_vandals_01:teleport_to_start_location_offset();
	ga_vandals_01:set_visible_to_all(false);
	
	stop_sound(SFX_Att_HB_AD_Intro_02);
	stop_sound(SFX_Att_HB_AD_Intro_03);
	stop_sound(SFX_Att_HB_AD_Intro_04);
		
	bm:callback(function() cam:fade(false, 0.5) end, 1000);
end;